{"version":3,"file":"default-src_app_dialogs_notifications-component_notifications_notifications_component_ts-es2017.js","mappings":"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","sources":["./src/app/dialogs/notifications-component/add-event/add-event.component.ts","./src/app/dialogs/notifications-component/add-event/add-event.component.html","./src/app/dialogs/notifications-component/alert-destination/alert-destination.component.ts","./src/app/dialogs/notifications-component/alert-destination/alert-destination.component.html","./src/app/dialogs/notifications-component/arrhythmia-alerts/arrhythmia-alerts.component.ts","./src/app/dialogs/notifications-component/arrhythmia-alerts/arrhythmia-alerts.component.html","./src/app/dialogs/notifications-component/destination-setting/destination-setting.component.ts","./src/app/dialogs/notifications-component/destination-setting/destination-setting.component.html","./src/app/dialogs/notifications-component/event-list/event-list.component.ts","./src/app/dialogs/notifications-component/event-list/event-list.component.html","./src/app/dialogs/notifications-component/notification-list/notification-list.component.ts","./src/app/dialogs/notifications-component/notification-list/notification-list.component.html","./src/app/dialogs/notifications-component/notifications/notifications.component.ts","./src/app/dialogs/notifications-component/notifications/notifications.component.html","./src/app/dialogs/notifications-component/parameter-alerts/parameter-alerts.component.ts","./src/app/dialogs/notifications-component/parameter-alerts/parameter-alerts.component.html","./src/app/dialogs/notifications-component/patient-details/patient-details.component.ts","./src/app/dialogs/notifications-component/patient-details/patient-details.component.html","./src/app/dialogs/notifications-component/services/alert-configuration.service.ts","./src/app/dialogs/notifications-component/store/alert-configuration.actions.ts","./src/app/dialogs/notifications-component/store/alert-configuration.models.ts","./src/app/dialogs/notifications-component/store/alert-configuration.reducer.ts","./src/app/dialogs/notifications-component/store/alert-configuration.selector.ts","./src/app/dialogs/notifications-component/store/alert-configuration.types.ts","./src/app/dialogs/notifications-component/store/index.ts","./src/app/dialogs/notifications-component/technical-alerts/technical-alerts.component.ts","./src/app/dialogs/notifications-component/technical-alerts/technical-alerts.component.html","./src/app/services/common.service.ts","./src/app/validators/custom-validator-at-least-once.validator.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport {atLeastOne} from \"../../../validators/custom-validator-at-least-once.validator\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {AlertConfigurationsService} from \"../services/alert-configuration.service\";\nimport {UserPreferenceService} from \"@services/user-preference.service\";\nimport {SnackbarService} from \"@services/snackbar.service\";\n\n@Component({\n  selector: 'app-add-event',\n  templateUrl: './add-event.component.html',\n  styleUrls: ['./add-event.component.scss']\n})\nexport class AddEventComponent implements OnInit {\n  addEventForm: FormGroup;\n  submitted = false;\n  selectedTab = \"event\";\n  recordedNote = false;\n  notes=\"\";\n  recordedTime;\n  currentTime;\n  patientId;\n  timeZone;\n  timeZoneOffset;\n  patchStarted = null;\n  editEvent = false;\n  addNote = false;\n  note='';\n  Events = ['Lightheadedness / Dizziness', 'Passed out', 'Chest Pain / Tightness', 'Palpitation / High Heart Rate', 'Fluttering in chest',\n  'No Symptom', 'Other'];\n  symptoms = [\n    \"Heart Racing\",\n    \"Anxious\",\n    \"Chest Discomfort / Pain\",\n    \"Heart Fluttering\",\n    \"Palpitation\",\n    \"Feeling Weak/Faint\",\n    \"Dizziness\",\n    \"Short of Breath\",\n    \"Tired / Fatigued\",\n    \"None / Accidental Push\",\n    \"Other\"]\n  activity = [\n    \"Normal routine\",\n    \"Walking\",\n    \"Sitting\",\n    \"Lying down\",\n    \"Exercising\",\n    \"Jogging or running\",\n    \"Sleeping\",\n    \"Smoking\",\n    \"Stair Climbing\",\n    \"Eating\",\n    \"Fast Walking\",\n    \"Other\"\n  ];\n  constructor(private formBuilder: FormBuilder, private dialogRef: MatDialogRef<MatDialogRef<any>>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public service: AlertConfigurationsService,\n    private userPreference: UserPreferenceService, private snackbar: SnackbarService) { }\n\n  ngOnInit(): void {\n    this.recordedNote = this.data?.recordedNote;\n    this.addNote = this.data?.addNote;\n    this.editEvent = this.data?.editEvent;\n    this.patientId = this.data?.patientId;\n    this.patchStarted = this.data?.patchStarted;\n    this.timeZoneOffset = this.userPreference.getUserTimeZone();\n    this.timeZone = sessionStorage.getItem('timezone');\n    this.currentTime = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\n    if(this.recordedNote) {\n      this.selectedTab = \"recordedNote\";\n      this.notes = this.data?.event?.notes;\n      this.recordedTime = new Date(new Date(this.data?.event.alertTime*1000).toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n    }\n    if(this.addNote) {\n      this.selectedTab = 'note';\n    }\n    this.addEventForm = this.formBuilder.group(\n        {\n          symptoms: this.formBuilder.array([]),\n          activity: this.formBuilder.array([]),\n          time: [\n            \"\",\n            [Validators.required],\n          ],\n          note: [\n            \"\",\n            [Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ',-:\\n]*$\")],\n          ],\n          manualSymptom: [\"\", [Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]],\n          manualActivity: [\"\", [Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]],\n        },\n        { validator: atLeastOne(Validators.required, [\"symptoms\", \"note\"]) });\n    if(this.data?.event) {\n      this.currentTime = new Date(new Date(this.data?.event.alertTime*1000).toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n      this.note = this.data?.event?.notes\n    }\n  }\n  onSymptomChange(e) {\n    const symptomsArray: FormArray = this.addEventForm.get('symptoms') as FormArray;\n    if (e?.checked) {\n      symptomsArray.push(new FormControl(e.source.value));\n    } else {\n      let i: number = 0;\n      symptomsArray.controls.forEach((item: FormControl) => {\n        if (item.value == e.source.value) {\n          symptomsArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n  onActivityChange(e) {\n    const activityArray: FormArray = this.addEventForm.get('activity') as FormArray;\n    if (e?.checked) {\n      activityArray.push(new FormControl(e.source.value));\n    } else {\n      let i: number = 0;\n      activityArray.controls.forEach((item: FormControl) => {\n        if (item.value == e.source.value) {\n          activityArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n  charsOnly(event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  get f() {\n      return this.addEventForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.addEventForm?.value?.symptoms?.indexOf('Other') !== -1) {\n      this.addEventForm.controls['manualSymptom'].setValidators([Validators.required, Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]);\n    } else {\n      this.addEventForm.controls['manualSymptom'].clearValidators();\n    }\n    if (this.addEventForm?.value?.activity?.indexOf('Other') !== -1) {\n      this.addEventForm.controls['manualActivity'].setValidators([Validators.required, Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]);\n    } else {\n      this.addEventForm.controls['manualActivity'].clearValidators();\n    }\n    this.addEventForm.controls['manualActivity'].updateValueAndValidity();\n    this.addEventForm.controls['manualSymptom'].updateValueAndValidity();\n      if (this.addEventForm.invalid || (!this.addEventForm?.get('activity')?.value?.length && this.addEventForm?.get('symptoms')?.value?.length)) {\n        this.addEventForm.markAllAsTouched();\n        return;\n      } else {\n        let formData = this.addEventForm.value;\n        let date = formData.time.toDateString()  + ' ' + formData.time.getHours() + ':'\n            + formData.time.getMinutes() + ':'\n            + formData.time.getSeconds()  + \" \" + this.timeZoneOffset;\n        let event;\n        let  manualSymptomIndex = formData.symptoms.indexOf('Other');\n        if(manualSymptomIndex > -1) {\n          formData.symptoms[manualSymptomIndex] = formData.manualSymptom;\n        }\n        let  manualActivityIndex = formData.activity.indexOf('Other');\n        if(manualActivityIndex > -1) {\n          formData.activity[manualActivityIndex] = formData.manualActivity;\n        }\n        if (this.editEvent) {\n          event = {\n            ...this.data?.event,\n            symptoms: formData.symptoms,\n            activity: formData.activity,\n            notes: formData?.note || this.data?.event?.notes,\n          };\n          console.log(event);\n        } else if (this.addNote) {\n          event = {\n            ...this.data?.event,\n            notes: formData.note\n          }\n        }else {\n          event = {\n            symptoms: formData.symptoms,\n            activity: formData.activity,\n            notes: formData.note,\n            alertTime: Date.parse(date) / 1000,\n            patientId: this.patientId\n          };\n        }\n        this.service.addEvent(event).subscribe(res => {\n          console.log('res', res);\n          if (res.status === 'OK') {\n            //this.snackbar.openSnackBar(\"alert_config_module.messages.add_event_success\", 'bottom', 'center', true);\n            this.dialogRef.close(true);\n          }\n        }, error => {\n          console.log(error);\n          if (error) {\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n          }\n        })\n      }\n  }\n  getCurrentDate() {\n    return new Date(new Date().toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n  }\n  patchStartedTime() {\n    return new Date(new Date(this.patchStarted).toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n  }\n  selectTab(tab) {\n    this.submitted = false;\n    this.selectedTab = tab;\n  }\n\n}\n","<div class=\"dialog-header patientalert-dialog-header\" xmlns=\"http://www.w3.org/1999/html\">\n    <h1 mat-dialog-title *ngIf=\"recordedNote || addNote\" class=\"mx-2 pb-2\">\n        {{ \"alert_config_module.note\" | translate }}\n    </h1>\n    <button mat-icon-button mat-dialog-close *ngIf=\"recordedNote\">\n        <mat-icon>close</mat-icon>\n    </button>\n    <div class=\"btn-group-area button-card-area d-flex\" *ngIf=\"!recordedNote && !addNote\">\n        <button mat-button [ngClass]=\"\n        selectedTab === 'event' ? 'select-btn-active' : 'select-btn'\n      \" (click)=\"selectTab('event')\">\n            {{ \"alert_config_module.add_event.event\" | translate }}\n        </button>\n        <button mat-button [ngClass]=\"\n        selectedTab === 'note' ? 'select-btn-active' : 'select-btn'\n      \" (click)=\"selectTab('note')\">\n            {{ \"alert_config_module.note\" | translate }}\n        </button>\n    </div>\n</div>\n\n<mat-dialog-content class=\"py-2 mat-dialog-popup\">\n    <div class=\"scroll-assist\">\n        <div *ngIf=\"selectedTab === 'event' || selectedTab === 'note'\">\n            <form [formGroup]=\"addEventForm\" class=\"dialog-form\">\n                <div *ngIf=\"selectedTab === 'event'\" class=\"row form-row\">\n                    <div class=\"px-3\">\n                        <mat-label class=\"matlabel fw-bold my-2\">{{ \"alert_config_module.add_event.record_symptoms\" |\n                            translate }}\n                        </mat-label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6 my-1\" *ngFor=\"let symptom of symptoms\">\n                                <mat-checkbox [value]=\"symptom\" (change)=\"onSymptomChange($event)\"\n                                    [checked]=\"addEventForm?.value?.symptoms?.indexOf(symptom) !== -1\">{{symptom}}\n                                </mat-checkbox>\n                            </div>\n                        </div>\n                        <mat-error *ngIf=\"!f.symptoms?.errors?.required && !f.symptoms?.valid\">\n                            {{ \"alert_config_module.add_event.symptoms_invalid\" | translate }}\n                        </mat-error>\n                    </div>\n                    <div class=\"px-3\" *ngIf=\"addEventForm?.value?.symptoms?.indexOf('Other') !== -1\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 my-1\">\n                                <input class=\"py-1 text-input\" type=\"text\" formControlName=\"manualSymptom\"\n                                    placeholder=\"Enter Symptom\" maxlength=\"128\">\n                            </div>\n                        </div>\n                        <mat-error *ngIf=\"!f.manualSymptom?.errors?.required && !f.manualSymptom?.valid\">\n                            {{ \"alert_config_module.add_event.symptoms_invalid\" | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"submitted && f.manualSymptom?.errors?.required\">\n                            {{ \"alert_config_module.add_event.symptoms_required\" | translate }}\n                        </mat-error>\n                    </div>\n                </div>\n                <div *ngIf=\"selectedTab === 'event'\" class=\"row form-row\">\n                    <div class=\"px-3\">\n                        <mat-label class=\"matlabel fw-bold my-2\">{{ \"alert_config_module.add_event.select_activity\" |\n                            translate }}\n                        </mat-label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6 my-1\" *ngFor=\"let act of activity\">\n                                <mat-checkbox [value]=\"act\" (change)=\"onActivityChange($event)\"\n                                    [checked]=\"addEventForm?.value?.activity?.indexOf(act) !== -1\">{{act}}\n                                </mat-checkbox>\n                            </div>\n                        </div>\n                        <mat-error class=\"my-1\"\n                            *ngIf=\"submitted && !addEventForm?.get('activity')?.value?.length && addEventForm?.get('symptoms')?.value?.length\">\n                            {{ \"alert_config_module.add_event.activity_required\" | translate }}\n                        </mat-error>\n                    </div>\n                    <div class=\"px-3\" *ngIf=\"addEventForm?.value?.activity?.indexOf('Other') !== -1\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 my-1\">\n                                <input class=\"py-1 text-input\" type=\"text\" formControlName=\"manualActivity\"\n                                    placeholder=\"Enter Activity\" maxlength=\"128\">\n                            </div>\n                        </div>\n                        <mat-error *ngIf=\"!f.manualActivity?.errors?.required && !f.manualActivity?.valid\">\n                            {{ \"alert_config_module.add_event.activity_invalid\" | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"submitted && f.manualActivity?.errors?.required\">\n                            {{ \"alert_config_module.add_event.enter_activity\" | translate }}\n                        </mat-error>\n                    </div>\n                </div>\n                <div *ngIf=\"selectedTab === 'note'\" class=\"row form-row\">\n                    <div class=\"px-3 pb-2\">\n                        <mat-label class=\"matlabel\">{{ \"alert_config_module.add_event.record_note\" | translate }}\n                        </mat-label>\n                        <mat-form-field class=\"notification-textarea\">\n                            <textarea matInput cdkTextareaAutosize class=\"p-2 text-area\" formControlName=\"note\"\n                                maxlength=\"300\" [(ngModel)]=\"note\">\n                            </textarea>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"submitted && f.note?.errors?.required\" class=\"required-text py-1\">\n                            {{ \"alert_config_module.add_event.note_required\" | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"!f.note?.errors?.required && f.note?.errors?.pattern\" class=\"text-wrap\">\n                            {{ \"alert_config_module.add_event.note_pattern\" | translate }}\n                        </mat-error>\n                    </div>\n                </div>\n                <div class=\"row form-row\">\n                    <div class=\"col-3 align-items-center\">\n                        <mat-label class=\"matlabel pt-2\">{{ \"alert_config_module.add_event.time\" | translate }}\n                        </mat-label>\n                    </div>\n                    <div class=\"col-9 text-end\">\n                        <mat-form-field appearance=\"fill\" class=\"time-input formfield-control\">\n                            <input matInput type=\"text\" formControlName=\"time\" autocomplete=\"off\" class=\"form-control\"\n                                [min]=\"patchStartedTime()\" [max]=\"getCurrentDate()\" [owlDateTime]=\"dt\"\n                                [owlDateTimeTrigger]=\"dt\" readonly [(ngModel)]=\"currentTime\" [disabled]=\"editEvent\" />\n                            <mat-icon matSuffix [owlDateTimeTrigger]=\"dt\"\n                                class=\"cursor-pointer material-icons-outlined\">access_time_filled</mat-icon>\n                            <owl-date-time #dt [hour12Timer]=\"false\" [pickerType]=\"'timer'\"\n                                [disabled]=\"editEvent || addNote\"></owl-date-time>\n                            <mat-error *ngIf=\"f.time?.errors?.required\">\n                                {{ \"alert_config_module.add_event.time_required\" | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div *ngIf=\"selectedTab === 'recordedNote'\">\n            <form class=\"dialog-form\">\n                <div class=\"row form-row\">\n                    <div class=\"px-3 pb-2\">\n                        <mat-label class=\"matlabel\">{{ \"alert_config_module.recorded_note\" | translate }}\n                        </mat-label>\n                        <mat-form-field class=\"notification-textarea textarea-note \">\n                            <textarea matInput cdkTextareaAutosize class=\"p-2 text-area\" [readonly]=\"true\"\n                                [value]=\"notes\">\n                            </textarea>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row form-row\">\n                    <div class=\"col-md-3 align-items-center\">\n                        <mat-label class=\"matlabel pt-3\">{{ \"alert_config_module.add_event.time\" | translate }}\n                        </mat-label>\n                    </div>\n                    <div class=\"col-md-9 text-end\">\n                        <mat-form-field appearance=\"fill\" class=\"time-input formfield-control\">\n                            <input matInput type=\"text\" autocomplete=\"off\" class=\"form-control\" [max]=\"getCurrentDate()\"\n                                [owlDateTime]=\"dt\" [owlDateTimeTrigger]=\"dt\" readonly [(ngModel)]=\"recordedTime\" />\n                            <mat-icon matSuffix [owlDateTimeTrigger]=\"dt\">schedule</mat-icon>\n                            <owl-date-time #dt [hour12Timer]=\"false\" [disabled]=\"true\"></owl-date-time>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"error-message\">\n        <mat-error class=\"mt-2\"\n            *ngIf=\"submitted && !addEventForm?.get('symptoms')?.value?.length && !addEventForm?.get('note')?.value\">\n            <span *ngIf=\"!addNote\">{{ \"alert_config_module.add_event.event_note_required\" | translate }}</span>\n            <span *ngIf=\"addNote\">{{ \"alert_config_module.add_event.note_required\" | translate }}</span>\n        </mat-error>\n    </div>\n</mat-dialog-content>\n<div matDialogActions align=\"right\" class=\"me-4 pe-2\">\n    <button mat-flat-button mat-dialog-close class=\"fill-btn\" color=\"warn\" *ngIf=\"!recordedNote\">\n        {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\n    </button>\n    <button mat-flat-button class=\"fill-btn\" color=\"primary\" (click)=\"onSubmit()\" *ngIf=\"!recordedNote\">\n        {{ \"manage_users_module.adduser.savebutton\" | translate }}\n    </button>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from \"@angular/core\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { CommonService } from \"@services/common.service\";\nimport { Subscription } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport { Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { isAllowedRole, uiAccessRoles } from \"@utils/helpers\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from \"@angular/forms\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-alert-destination\",\n  templateUrl: \"./alert-destination.component.html\",\n  styleUrls: [\"./alert-destination.component.scss\"],\n})\nexport class AlertDestinationComponent implements OnInit, OnChanges {\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() alertDestinationSettings;\n  @Input() alertDestinationSettingsCopy;\n  @Input() alertType;\n  @Input() userData;\n  @Output() updateDestination = new EventEmitter<string>();\n  private subscriptions: Subscription[] = [];\n  selectedTab = \"parameter\";\n  error: string;\n  cfId: string = \"\";\n  GroupId: string = \"\";\n  patientId: string = \"PATALDRT1\";\n  alertId: any = null;\n  roles: string[];\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  alertDestId: string = null;\n  AlertDestId: string = \"\";\n\n  destinationAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_DESTINATIONS;\n  isEditAccess: boolean = false;\n  isPHYGCUser: boolean = false;\n  contactLists: any = [];\n  activeContactLists: any = [];\n  activePhoneNoLists: any = [];\n  activeEmailLists: any = [];\n  contactLists$: Observable<AlertConfigurationModels.ClinicalFacilityContactListData>;\n\n  alertDestinationForm: FormGroup;\n  contactListsSMS: any = [];\n  contactListsWhatsApp: any = [];\n  contactListsEMAIL: any = [];\n  contactListsCaregiverApp: any = [];\n  selectedSmsContact;\n  selectedEmailContact;\n  selectedWhatsappContact;\n  selectedCaregiverContact;\n\n  constructor(\n    private commonService: CommonService,\n    private router: Router,\n    public dialog: MatDialog,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.alertDestinationForm = this.formBuilder.group({\n      smsContactList: this.formBuilder.array([]),\n      whatsAppContactList: this.formBuilder.array([]),\n      emailContactList: this.formBuilder.array([]),\n      caregiverAppContactList: this.formBuilder.array([]),\n    });\n\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.setDefaultData();\n\n\n    this.contactLists$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getClinicalFacilityContacts\n    );\n    if (\n      isAllowedRole(this.destinationAlertAccess[\"PATIENT\"][\"EDIT\"], this.roles)\n    ) {\n      this.isEditAccess = true;\n    }\n\n    this.contactLists$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getClinicalFacilityContacts\n    );\n\n    this.subscriptions.push(\n      this.commonService.destinationAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.alertDestinationSettings = JSON.parse(\n            JSON.stringify(this.alertDestinationSettingsCopy)\n          );\n          this.setDefaultContactListData(this.alertDestinationSettings);\n          this.updateDestination.emit(JSON.stringify(this.alertDestinationSettings));\n        }\n      })\n    );\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    ).subscribe(data => {\n      this.setDefaultContactListData(this.alertDestinationSettings);\n    });\n\n    this.contactLists$.subscribe((data: any) => {\n      this.contactLists = data.map((x) => {\n        return {\n          ...x,\n          displayName: `${x.firstName} ${x.lastName}`,\n        };\n      });\n      this.activeContactLists = this.contactLists.filter(user => user?.isActive === true);\n      this.activePhoneNoLists = this.activeContactLists.filter(user => user?.phoneNo);\n      this.activeEmailLists = this.activeContactLists.filter(user => user?.email);\n    });\n    this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n  ngOnChanges(changes: SimpleChanges){\n    //this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n\n  getUrserIds(type: any) {\n    const ids = [];\n    let list = [];\n    switch (type) {\n      case \"sms\":\n        list = this.contactListsSMS;\n        break;\n      case \"whatsapp\":\n        list = this.contactListsWhatsApp;\n        break;\n      case \"email\":\n        list = this.contactListsEMAIL;\n        break;\n      case \"caregiver\":\n        list = this.contactListsCaregiverApp;\n        break;\n      default:\n        break;\n    }\n    for (let index = 0; index < list.length; index++) {\n      const element: any = list[index];\n      ids.push(element.userId);\n    }\n    return ids;\n  }\n\n  get smsContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"smsContactList\");\n  }\n\n  get whatsAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"whatsAppContactList\");\n  }\n\n  get emailContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"emailContactList\");\n  }\n\n  get caregiverAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"caregiverAppContactList\");\n  }\n\n  addContactDropdownList(type: string, isDefault: boolean = false) {\n    switch (type) {\n      case \"sms\":\n        const smsContactList = this.alertDestinationForm.controls\n          .smsContactList as FormArray;\n        if (isDefault) {\n          smsContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (this.selectedSmsContact) {\n            if (\n              !this.contactListsSMS?.find((e: any) => {\n                return (\n                  e.userId === this.selectedSmsContact.userId\n                );\n              })\n            ) {\n              this.contactListsSMS.push(\n                this.selectedSmsContact\n              );\n              smsContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              smsContactList.removeAt(0);\n              this.selectedSmsContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      case \"email\":\n        const emailContactList = this.alertDestinationForm.controls\n          .emailContactList as FormArray;\n        if (isDefault) {\n          emailContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (\n            this.selectedEmailContact\n          ) {\n            if (\n              !this.contactListsEMAIL?.find((e: any) => {\n                return (\n                  e.userId === this.selectedEmailContact.userId\n                );\n              })\n            ) {\n              this.contactListsEMAIL.push(this.selectedEmailContact);\n              emailContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              emailContactList.removeAt(0);\n              this.selectedEmailContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      case \"whatsapp\":\n        const whatsAppContactList = this.alertDestinationForm.controls\n          .whatsAppContactList as FormArray;\n        if (isDefault) {\n          whatsAppContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (this.selectedWhatsappContact) {\n            if (\n              !this.contactListsWhatsApp?.find((e: any) => {\n                return (\n                  e.userId === this.selectedWhatsappContact.userId);\n              })\n            ) {\n              this.contactListsWhatsApp.push(this.selectedWhatsappContact);\n              whatsAppContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              whatsAppContactList.removeAt(0);\n              this.selectedWhatsappContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      case \"caregiver\":\n        const caregiverAppContactList = this.alertDestinationForm.controls\n          .caregiverAppContactList as FormArray;\n        if (isDefault) {\n          caregiverAppContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (this.selectedCaregiverContact) {\n            if (\n              !this.contactListsCaregiverApp?.find((e: any) => {\n                return (\n                  e.userId === this.selectedCaregiverContact.userId);\n              })\n            ) {\n              this.contactListsCaregiverApp.push(this.selectedCaregiverContact);\n              caregiverAppContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              caregiverAppContactList.removeAt(0);\n              this.selectedCaregiverContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  userSelected(type, value) {\n    switch(type) {\n      case 'sms' : {\n        this.selectedSmsContact = value;\n        break;\n      }\n      case 'whatsapp' : {\n        this.selectedWhatsappContact = value;\n        break;\n      }\n      case 'email': {\n        this.selectedEmailContact = value;\n        break;\n      }\n      case \"caregiver\": {\n        this.selectedCaregiverContact = value;\n        break\n      }\n      default: break;\n    }\n\n  }\n\n  setDefaultData() {\n    this.addContactDropdownList(\"sms\", true);\n    this.addContactDropdownList(\"email\", true);\n    this.addContactDropdownList(\"whatsapp\", true);\n    this.addContactDropdownList(\"caregiver\", true);\n  }\n  openDialog(type: string, index: number) {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_delete\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.removeContactSelected(type, index);\n      }\n    });\n  }\n  removeContactSelected(type: string, index: number) {\n    switch (type) {\n      case \"sms\":\n        this.contactListsSMS.splice(index, 1);\n        break;\n      case \"whatsapp\":\n        this.contactListsWhatsApp.splice(index, 1);\n        break;\n      case \"email\":\n        this.contactListsEMAIL.splice(index, 1);\n        break;\n      case \"caregiver\":\n        this.contactListsCaregiverApp.splice(index, 1);\n        break;\n      default:\n        break;\n    }\n    this.updated();\n  }\n\n  setDefaultContactListData(setting: any) {\n    if (setting && Array.isArray(setting.AlertSMS)) {\n      this.contactListsSMS = [];\n      setting.AlertSMS?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsSMS.push(contact);\n        }\n      });\n    } else {\n      this.contactListsSMS = [];\n    }\n    if (setting && Array.isArray(setting.AlertWhatsApp)) {\n      this.contactListsWhatsApp = [];\n      setting.AlertWhatsApp?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsWhatsApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsWhatsApp = [];\n    }\n    if (setting && Array.isArray(setting.AlertEmail)) {\n      this.contactListsEMAIL = [];\n      setting.AlertEmail?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsEMAIL.push(contact);\n        }\n      });\n    } else {\n      this.contactListsEMAIL = [];\n    }\n    if (setting && Array.isArray(setting.AlertCaregiverApp)) {\n      this.contactListsCaregiverApp = [];\n      setting.AlertCaregiverApp?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsCaregiverApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsCaregiverApp = [];\n    }\n  }\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.selectedTab = value;\n  }\n\n  toggle(event: MatSlideToggleChange) {\n    this.updated();\n  }\n  updated() {\n    let destinationSettings = JSON.parse(\n      JSON.stringify(this.alertDestinationSettings));\n    destinationSettings.AlertCaregiverApp =\n      this.getUrserIds(\"caregiver\");\n    destinationSettings.AlertEmail =\n      this.getUrserIds(\"email\");\n    destinationSettings.AlertSMS = this.getUrserIds(\"sms\");\n    destinationSettings.AlertWhatsApp =\n      this.getUrserIds(\"whatsapp\");\n    this.updateDestination.emit(JSON.stringify(destinationSettings));\n  }\n  reloadContactList(searchString) {\n    let url = `clinical-facilities/contacts?size=1000&page=1&searchText=${searchString}`;\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            {url}\n        )\n    );\n  }\n}\n","\n<table mat-table *ngIf=\"alertDestinationSettings\" class=\"table destination-table\" aria-label=\"Table\">\n        <thead>\n        <tr><th colspan=\"3\" class=\"ps-4\">{{alertType}}</th></tr>\n        </thead>\n      <tbody>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n              [(ngModel)]=\"alertDestinationSettings.AlertSMSEnabled\">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.sms\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsSMS; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertSMSEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('sms',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline</mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"smsContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of smsContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertSMSEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('sms', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('sms')\"  [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n              [(ngModel)]=\"alertDestinationSettings.AlertWhatsAppEnabled\">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.whatsapp\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsWhatsApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertWhatsAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('whatsapp', i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"whatsAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of whatsAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"me-3 msg-select\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertWhatsAppEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('whatsapp', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('whatsapp')\"  [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n              [(ngModel)]=\"alertDestinationSettings.AlertEmailEnabled\">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.email\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsEMAIL; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertEmailEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('email', i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline</mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"emailContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of emailContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertEmailEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activeEmailLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('email', $event)\" [items]=\"activeEmailLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('email')\"  [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\" [(ngModel)]=\"\n              alertDestinationSettings.AlertCaregiverAppEnabled\n            \">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.capp\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsCaregiverApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertCaregiverAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('caregiver', i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"caregiverAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of caregiverAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertCaregiverAppEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activeContactLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('caregiver', $event)\" [items]=\"activeContactLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('caregiver')\"  [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n","import { Component, OnInit, EventEmitter, Output, Input, OnDestroy } from \"@angular/core\";\nimport { CommonService } from \"@services/common.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  priorityColorCode,\n  arrhythmiaAlertPriorityOptions,\n  uiAccessRoles,\n  ArrhythmiaParameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { settings } from \"cluster\";\n\n@Component({\n  selector: \"app-arrhythmia-alerts\",\n  templateUrl: \"./arrhythmia-alerts.component.html\",\n  styleUrls: [\"./arrhythmia-alerts.component.scss\"],\n})\nexport class ArrhythmiaAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  loading: boolean = false;\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = arrhythmiaAlertPriorityOptions;\n  parameterAlert = ArrhythmiaParameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ARRHYTHMIA_ALERT;\n  alertSettings$: Observable<AlertConfigurationModels.ArrhythmiaAlertConfigurationData>;\n  isEditAccess: boolean = false;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  selectedTab = \"parameter\";\n  error: string;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  cfId: string = \"\";\n  alertId: any = null;\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  GroupId: string = \"\";\n  patientId: string = \"PATALDRT1\";\n  userPreferenceUnit;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  lastUpdated;\n  loaderSubscription\n  loader = true;\n  postures;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 70px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 200px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n  ];\n  constructor(\n    public dialog: MatDialog,\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private snackbar: SnackbarService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    public alertService: AlertConfigurationsService\n  ) { }\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.parameterMinMax = this.alertService.getParameterMinMax();\n    this.cfId = this.autheticationService.getCfId();\n    this.patientId = this.patientData.patientId;\n\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getArrhythmiaAlertConfigurations\n    );\n\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data: any) => {\n\n        this.error = data;\n        if (data?.error?.errorMessage === 'ACCESS_DENIED') {\n          this.snackbar.openCustomSnackBar('alert_config_module.messages.access_denied', 'bottom', 'center', true);\n        }\n      });\n    this.loaderSubscription = this.store$\n      .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        this.loader = !loaded;\n      });\n\n    this.getSettings();\n    this.alertSettings$.subscribe((data) => { \n      //this.loader = false;\n      this.lastUpdated = new Date().toUTCString();\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      this.masterData.GroupId = \"\";\n      this.masterData.PatientId = this.patientId;\n      this.masterData.FacilityId = this.cfId;\n      this.masterData.AlertId = \"\";\n      const alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if (data?.Setting[element.key]) {\n            const settings = data.Setting[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n      this.loading = false;\n    }, (err) => {\n      this.loading = false;\n    });\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n    this.alertSettings$.subscribe((data) => {\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.ArrhythmiaId;\n      this.isShowResetButton = this.alertSettings?.IsForPatient;\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n            this.updateParameterSettings();\n        }\n      })\n    );\n  }\n\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n  // Fetch alert settings - API Call\n  getSettings = () => {\n    this.loading = true;\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `arrhythmia-alert-settings/patient/${this.cfId}/${patientId}`;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadArrhythmiaAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };////\n  showEdit(index) {\n    this.editThreshold[index] = true;\n  }\n  hideEdit(index) {\n    this.editThreshold[index] = false;\n  }\n\n  showEditPrior(index) {\n    this.editPrior[index] = true;\n  }\n  hideEditPrior(index) {\n    this.editPrior[index] = false;\n  }\n\n  showEditDelay(index) {\n    this.editDelay[index] = true;\n  }\n  hideEditDelay(index) {\n    this.editDelay[index] = false;\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  async updateParameterSettings() {\n    const parameterAlert: any = {};\n    let settings = [...this.parameterAlertSettings];\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        Thr:element.Thr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `arrhythmia-alert-settings/patient-edit/${this.cfId}/${patientId}`;\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar('Settings has been updated successfully', 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n        this.getSettings();\n      }\n    } catch (error) {\n      this.error = error;\n    }\n  }\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.parameterAlertSettings = JSON.parse(\n      JSON.stringify(this.parameterAlertSettingsCopy)\n    );\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n    this.hideParameterEdit();\n\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n\n     this.updateParameterSettings();\n  }\n  // Handle alert setting factory reset action\n  async handleFactoryReset() {\n    const patientId = encodeURIComponent(this.patientId);\n    const url = `arrhythmia-alert-settings/patient-reset/${this.cfId}/${patientId}/${this.alertId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center',true);\n        this.getSettings();\n      }\n    } catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n    }\n\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.selectedTab = value;\n  }\n  checkRole(allowedRoles: any, userRoles: any) {\n    if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n      Thr: \"invalid_threshold\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      let translate_txt = \"alert_config_module.messages.\" + keyMapping[key];\n      this.snackbar.openCustomSnackBar(translate_txt, 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  limitdelay(event) {\n    if (event.key === '.') {\n      event.preventDefault();\n    }\n    if (event.target.value.toString().length > 5) {\n      event.target.value = event.target.value.substr(0, 5);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n}\n","<div class=\"container-fuild\">\n  <app-patient-details [patientData]=\"patientData\" [updated]=\"lastUpdated\"></app-patient-details>\n  <div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n  <div *ngIf=\"!loader\" class=\"inside-div head-border comman-table-users bg-thead-color\">\n    <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"parameterAlertSettings\">\n      <ng-template lsWidgetName=\"enabled\" let-config>\n        <span class=\"d-flex align-items-center\">\n          <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n            [disabled]=\"!isEditAccess\">\n          </mat-slide-toggle>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"alerts\" let-config>\n        {{ config.alert }}\n        <span class=\"fw-normal\"\n          *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n          ({{ config.unit }})</span>\n      </ng-template>\n      <ng-template lsWidgetName=\"threshold\" let-config>\n        <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n          <span *ngIf=\"!editThreshold[config?.index]\">\n            {{ config.LowThr }}\n          </span>\n          <span *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n            <input (keypress)=\"numericsOnly(config.key, $event)\" matInput digitOnly\n              class=\"text-input-box py-1 me-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              [(ngModel)]=\"config.LowThr\" autocomplete=\"off\"\n              (change)=\"parameterThresholdChanged(config.index,'LowThr',parameterMinMax[config.key])\" type=\"number\"\n              [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\" [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\" />\n          </span>\n        </span>\n        <span *ngIf=\"!['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">-</span>\n      </ng-template>\n\n      <ng-template lsWidgetName=\"editThreshold\" let-config>\n        <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n          <span *ngIf=\"!editThreshold[config?.index]\">\n            <button *ngIf=\"!editThreshold[config?.index] && isEditAccess\" mat-mini-fab color=\"primary\"\n              class=\"btn-boxed btn-no-shadow\" [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config?.index, 'threshold')\">\n              <mat-icon>edit</mat-icon>\n            </button>\n          </span>\n          <span *ngIf=\"editThreshold[config?.index]\">\n            <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n              (click)=\"showHideEdit(config?.index, 'threshold')\">\n              <mat-icon>done</mat-icon>\n            </button>\n          </span>\n        </span>\n      </ng-template>\n\n      <ng-template lsWidgetName=\"priority\" let-config>\n        <span class=\"me-2\">\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\" />\n            <circle *ngIf=\"config.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n              [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\" />\n          </svg>\n          &nbsp; <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n          <span *ngIf=\"editPrior[config.index]\">\n            <mat-select placeholder=\"Select\" class=\"priority-drop-down\" [(ngModel)]=\"config.Priority\"\n              (selectionChange)=\"updated()\">\n              <mat-option *ngFor=\"let priority of alertPriority\" [value]=\"priority.value\">\n                {{ priority.label }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"editPriority\" let-config>\n        <ng-container>\n          <span>\n            <span *ngIf=\"!editPrior[config.index]\">\n              <button *ngIf=\"isEditAccess\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\" [disabled]=\"!config.Enabled\">\n                <mat-icon>edit</mat-icon>\n              </button>\n            </span>\n            <span *ngIf=\"editPrior[config.index]\">\n              <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </span>\n        </ng-container>\n      </ng-template>\n      <!--Delay time column-->\n      <ng-template lsWidgetName=\"delayTime\" let-config>\n        <div class=\"d-flex justify-content-around align-items-center\">\n          <div class=\"d-flex ack-column justify-content-center align-items-center\">\n            <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n              <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n                {{ config.CondDelay }} <span>{{'alert_config_module.secs' |\n                  translate}}</span>\n              </div>\n              <div *ngIf=\"editDelay[config.index]\">\n                <input (keypress)=\"numericsOnly(config.key, $event)\"\n                  (paste)=\"alertService.checkForSpecialCharacters($event)\" matInput autocomplete=\"off\" type=\"number\"\n                  digitOnly class=\"text-input-box py-1\" size=\"4\" (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'CondDelay',\n                  parameterMinMax[config.key]\n                )\" [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n                  [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\" [(ngModel)]=\"config.CondDelay\" />\n              </div>\n              <ng-container *ngIf=\"isEditAccess\">\n                <div class=\"ms-2 edit\">\n                  <button *ngIf=\"!editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                    [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config.index, 'delay')\">\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                  <button *ngIf=\"editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config.index, 'delay')\">\n                    <mat-icon>done</mat-icon>\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n      <!--Modified column-->\n      <ng-template lsWidgetName=\"modified\" let-config>\n        <span *ngIf=\"masterData?.modifiedDateTime\">\n          {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n        </span>\n        <br />\n        <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n      </ng-template>\n    </ls-table>\n  </div>\n</div>\n<mat-dialog-actions class=\"row px-1\" *ngIf=\"!loader && isEditAccess\">\n  <div class=\"col-lg-6\">\n    <button mat-flat-button class=\"reset_btn_bg px-2\" (click)=\"openDialog()\" *ngIf=\"isShowResetButton\">\n      <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n      <span class=\"ps-1\">{{\n        \"alert_config_module.reset_to_default\" | translate\n        }}</span>\n    </button>\n  </div>\n  <div class=\"col-lg-6 text-end\">\n    <ng-template [ngIf]=\"showActionButtons\">\n      <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n        <span>{{ \"alert_config_module.cancel\" | translate }}</span></button>&nbsp;\n      <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n        <span>{{ \"alert_config_module.save\" | translate }}</span>\n      </button>\n    </ng-template>\n  </div>\n</mat-dialog-actions>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Observable, Subscription} from \"rxjs\";\nimport {AlertConfigurationModels} from \"../../../settings/alert-configuration/store\";\nimport {CommonService} from \"@services/common.service\";\nimport {Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {SnackbarService} from \"@services/snackbar.service\";\nimport {BackendApiService} from \"@services/backendapi.service\";\nimport {AuthenticationService} from \"@services/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AlertConfigurationStoreActions, AlertConfigurationStoreSelectors, AlertConfigurationStoreState} from \"../store\";\nimport { environment } from 'src/environments/environment';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-destination-setting',\n  templateUrl: './destination-setting.component.html',\n  styleUrls: ['./destination-setting.component.scss']\n})\nexport class DestinationSettingComponent implements OnInit {\n\n  constructor(\n      private commonService: CommonService,\n      private router: Router,\n      public dialog: MatDialog,\n      private snackbar: SnackbarService,\n      private backendApiService: BackendApiService,\n      private autheticationService: AuthenticationService,\n      private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n  ) { }\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  alertDestinationSettings;\n  alertDestinationSettingsCopy;\n  cfId: string = \"\";\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  roles: string[];\n  patientId;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  loaderSubscription;\n  loader = true;\n  isPHYGCUser: boolean = false;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  alertId;\n  error;\n  loading: boolean = false;\n  ngOnInit(): void {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.patientId = this.patientData.patientId;\n    this.fetchContactList();\n    this.alertDestinationSettings$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertSettingsStatus$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n\n    this.alertSettingsMessage$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n        .subscribe((loaded) => {\n          this.loader = !loaded;\n        });\n\n    this.getAlertDestinationSettings();\n\n    if ([\"PHY\", \"GC\"].some((ai) => this.roles.includes(ai))) {\n      this.isPHYGCUser = true;\n      // this.isShowResetButton = false;\n    }\n    if ([\"PHY\", \"SC\"].some((ai) => this.roles.includes(ai))) {\n      // this.isPHYGCUser = true;\n      this.isShowResetButton = false;\n    }\n    this.alertDestinationSettings$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertDestinationSettings$.subscribe((data) => {\n      console.log(data);\n      this.alertDestinationSettings = { ...data };\n      this.alertDestinationSettings.UserData = this.alertDestinationSettings?.UserData?.map(user => {\n        return {\n          ...user,\n          displayName: `${user?.firstName} ${user?.lastName}`,\n          userId: user.id\n        }\n      });\n      if(this.alertDestinationSettings.PatientId !== this.patientId) {\n        this.alertDestinationSettings.AlertDestId = '';\n      }\n      this.alertDestinationSettings.PatientId = this.patientId;\n      this.alertDestinationSettings.FacilityId = this.cfId;\n      this.alertDestinationSettings.GroupId = \"\";\n      //this.alertDestinationSettings.AlertDestId = \"\";\n      this.alertDestinationSettingsCopy = JSON.parse(\n          JSON.stringify(this.alertDestinationSettings)\n      );\n      this.isShowResetButton = this.alertDestinationSettings?.IsForPatient;\n    });\n    this.subscriptions.push(\n        this.commonService.destinationAlertEditSubmit.subscribe((isSubmit) => {\n          if (isSubmit) {\n            this.handleAlertSettingsSave();\n          }\n        })\n    );\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n  }\n\n  async handleFactoryReset() {\n    const patientId = encodeURIComponent(this.patientId);\n    const url = `alert-settings/patient-reset/alert-destination-settings/${this.cfId}/${patientId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center', true);\n        this.getAlertDestinationSettings();\n      }\n    } \n    catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n      console.log(this.error)\n    }\n  }\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n\n  fetchContactList() {\n    let url = \"clinical-facilities/contacts?page=1&size=1000\";\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            { url }\n        )\n    );\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data: any) => {\n          if (data?.error?.errorMessage === 'ACCESS_DENIED') {\n            this.snackbar.openCustomSnackBar(\"alert_config_module.messages.access_denied\", 'bottom', 'center', true);\n          }\n        });\n  }\n  getAlertDestinationSettings() {\n    this.loading = true;\n    let patientId = encodeURIComponent(this.patientId);\n    const url =\n        `alert-settings/patient/${this.cfId}/${patientId}/alert-destination-settings`;\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadDestinationAlertConfigurationRequestAction(\n            { url }\n        )\n    );\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data) => {\n          this.error = data;\n        });\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  async handleAlertSettingsSave() {\n    try {\n      const url = `alert-settings/patient-edit/alert-destination-settings`;\n      const resp: any = await this.backendApiService\n          .post(\n              environment.dataApiUrl + url,\n              this.alertDestinationSettings\n          )\n          .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.getAlertDestinationSettings();\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setDestinationAlertEditSubmit(false);\n      }\n    } catch (error) { }\n  }\n  valueUpdated(event, type) {\n    if(type=== 'clinical') {\n      this.alertDestinationSettings.Setting = JSON.parse(event);\n    } else {\n      this.alertDestinationSettings.SettingTech = JSON.parse(event);\n    }\n    if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setDestinationAlertEditHide(true);\n  }\n  // root Alert Destination Settings\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n}\n","<mat-dialog-content class=\"alert-dialog-content\">\n    <app-patient-details [patientData]=\"patientData\"></app-patient-details>\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n        <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <div class=\"inside-div head-border alert-destination-table comman-table-users bg-thead-color\" *ngIf=\"!loader\">\n        <app-alert-destination [alertType]=\"'Clinical'\" [alertDestinationSettings]=\"alertDestinationSettings.Setting\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.Setting\" (updateDestination)=\"valueUpdated($event, 'clinical')\"\n        [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n        <app-alert-destination [alertType]=\"'Technical'\" [alertDestinationSettings]=\"alertDestinationSettings.SettingTech\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.SettingTech\" (updateDestination)=\"valueUpdated($event, 'tech')\"\n                               [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n    </div>\n    </mat-dialog-content>\n<mat-dialog-actions class=\"row px-1\" >\n    <div class=\"col-lg-6\">\n        <button mat-flat-button class=\"reset_btn_bg mb-2 mb-md-0 px-2\" (click)=\"openDialog()\" *ngIf=\"!loader && isShowResetButton\" >\n          <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n          <span class=\"ps-1\">{{\n            \"alert_config_module.reset_to_default\" | translate\n            }}</span>\n        </button>\n      </div>\n    <div class=\"col-lg-6 text-end\">\n        <ng-template [ngIf]=\"showActionButtons\">\n            <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n                <span>{{ \"alert_config_module.cancel\" | translate }}</span>\n            </button>\n            <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n                <span>{{ \"alert_config_module.save\" | translate }}</span>\n            </button>\n        </ng-template>\n    </div>\n</mat-dialog-actions>","import {Component, Input, OnDestroy, OnInit} from \"@angular/core\";\nimport {AddEventComponent} from \"../add-event/add-event.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ConfirmDialogComponent} from \"../../../shared/confirm-dialog/confirm-dialog.component\";\nimport {AlertConfigurationsService} from \"../services/alert-configuration.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AlertConfigurationStoreActions, AlertConfigurationStoreSelectors, AlertConfigurationStoreState} from \"../store\";\nimport {UserPreferenceService} from \"@services/user-preference.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {SnackbarService} from \"@services/snackbar.service\";\nimport {AuthenticationService} from \"@services/authentication.service\";\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\n@Component({\n  selector: \"app-event-list\",\n  templateUrl: \"./event-list.component.html\",\n  styleUrls: [\"./event-list.component.scss\"],\n})\nexport class EventListComponent implements OnInit, OnDestroy{\n  @Input() patientData: any;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  loader = true;\n  timeZone;\n  editlabel = [false];\n  eventList$;\n  eventListCount;\n  patientId;\n  loaderSubscription;\n  patientEventList;\n  selectedEvents = [];\n  unAcknowledged = 0;\n  editAccess = false;\n  roles;\n  lastUpdated;\n  reloadInterval;\n  config = {\n    page: {\n      pageSize: 10,\n      pageIndex: 0,\n      length: null\n    },\n    tableState: TableState.DEFAULT\n  }\n  constructor(\n    private dialog: MatDialog, public alertService: AlertConfigurationsService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private userPreference: UserPreferenceService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService\n  ) { }\n  ngOnInit() {\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.roles = this.autheticationService.getRoles() || [];\n    if (this.roles?.indexOf(\"GC\") > -1 || this.roles?.indexOf(\"PHY\") > -1) {\n      this.editAccess = true;\n    }\n    this.patientId = this.patientData.patientId;\n    this.eventList$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getEventList\n    );\n    this.getEventList();\n    // this.reloadInterval = setInterval(() => {\n    //   this.getEventList();\n    // }, 30000);\n    this.eventList$.subscribe(res => {\n      this.lastUpdated = new Date().toUTCString();\n      this.unAcknowledged = 0;\n      this.selectedEvents = [];\n      console.log(res);\n      this.patientEventList = res.map(event => {\n        if(!event.ack && (event?.notes || event?.symptoms?.length || event?.activity?.length)) {\n          this.unAcknowledged++;\n        }\n        return {\n          ...event,\n          checked: false,\n          mandatoryNote: (!event?.notes && !event?.symptoms?.length && !event?.activity?.length) || false\n        }\n      });\n      console.log(this.patientEventList);\n    });\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getEventListCount\n    ).subscribe(count => {\n      this.eventListCount = count;\n      this.config.page.length = count;\n    });\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getTableState\n    ).subscribe(state => {\n      this.config.tableState = state;\n    });\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getEventListLoader)\n        .subscribe((loaded) => {\n          if (loaded) {\n            this.loader = false;\n          }\n        });\n  }\n  getEventList() {\n    let param: any = {\n      patientId: this.patientId,\n      page: this.config.page.pageIndex,\n      pageSize: this.config.page.pageSize\n    };\n    this.store$.dispatch(new AlertConfigurationStoreActions.LoadEventListRequestAction({ params: param }))\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getEventListLoader)\n        .subscribe((loaded) => {\n          if (loaded) {\n            this.loader = false;\n          }\n        });\n  }\n  showEdit(index) {\n    this.editlabel[index] = true;\n  }\n  addNewEvent() {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      maxWidth: \"98vw\",\n      height: \"100%\",\n      maxHeight:\"100vh\",\n      panelClass: \"add-event-container\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n     // height: \"auto\",\n      //minHeight: \"100px\",\n      //maxHeight: \"90vh\",\n      data: {patientId: this.patientId, patchStarted: this.patientData?.started},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      console.log(data);\n      if(data) {\n        this.getEventList();\n      }\n    });\n  }\n  editEvent(event) {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      //maxWidth: \"98vw\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n      maxWidth: \"96vw\",\n      height: \"100%\",\n      maxHeight:\"100vh\",\n      panelClass: \"add-event-container\",\n      data: {editEvent: true, event: event},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      if(data) {\n        this.getEventList();\n      }\n    });\n  }\n  getRelativeTime(timestamp) {\n    let date = new Date();\n    const currentTimestamp = (date.getTime())/1000;\n    const difference = currentTimestamp - timestamp;\n    let output = ``;\n    if ( difference > 0 && difference < 60) {\n      // Less than a minute has passed:\n      output = `${Math.round(difference)} secs ago`;\n    } else if (difference < 3600) {\n      // Less than an hour has passed:\n      output = `${Math.floor(difference / 60)} mins ago`;\n    } else if (difference < 86400) {\n      // Less than a day has passed:\n      output = `${Math.floor(difference / 3600)} hrs ago`;\n    } else if (difference < 2620800) {\n      // Less than a month has passed:\n      let relativeTime = Math.floor(difference / 86400);\n      if (relativeTime === 1) {\n        output = `${Math.floor(difference / 86400)} day ago`;\n      } else {\n        output = `${Math.floor(difference / 86400)} days ago`;\n      }\n    }\n    return output\n  }\n  openConfirmDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"alert_config_module.messages.acknowledge_events\",\n          text: \"alert_config_module.add_event.confirm_acknowledge\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        let body = {\n          patientId: this.patientId,\n          ids: this.selectedEvents\n        };\n        this.alertService.acknowledgeEvent(body)\n            .subscribe(res => {\n              console.log(res);\n              if(res.status === 'OK') {\n                this.loader = true;\n                this.getEventList()\n              }\n            }, error => {\n              if(error) {\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n              }\n            });\n      }\n    });\n  }\n  recordedNote(event) {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      //maxWidth: \"98vw\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n      maxWidth: \"96vw\",\n      height: \"400px\",\n      //maxHeight:\"100vh\",\n      //panelClass: \"add-event-container\",\n      data: {recordedNote: true, event: event},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      console.log(data);\n    });\n  }\n  addNote(event) {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      //maxWidth: \"98vw\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n      maxWidth: \"96vw\",\n      height: \"100%\",\n      maxHeight:\"100vh\",\n      panelClass: \"add-event-container\",\n      data: {addNote: true, event: event},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      if(data) {\n        this.getEventList();\n      }\n    });\n  }\n  acknowledge(event) {\n    console.log(event);\n    let body = {\n      patientId: this.patientId,\n      ids: [event.id]\n    };\n    if(event?.mandatoryNote) {\n      this.addNote(event);\n    } else {\n      this.alertService.acknowledgeEvent(body)\n          .subscribe(res => {\n            console.log(res);\n            if (res.status === 'OK') {\n              this.loader = true;\n              this.getEventList()\n            }\n          }, error => {\n            if (error) {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n            }\n          });\n    }\n  }\n  onCheckboxChange(event, id) {\n    if(event.checked) {\n      this.selectedEvents = [...this.selectedEvents, id];\n    } else {\n      let i = this.selectedEvents.indexOf(id);\n      this.selectedEvents.splice(i, 1);\n    }\n  }\n  checkAll(event) {\n    this.selectedEvents = []\n    this.patientEventList.forEach(eve => {\n      if(event.checked) {\n        if(!eve.ack && !eve.mandatoryNote) {\n          eve.checked = true;\n          this.selectedEvents = [...this.selectedEvents, eve.id];\n        }\n      } else {\n        eve.checked = false;\n      }\n    });\n    console.log(this.selectedEvents);\n  }\n  addEventName(index, event) {\n    this.editlabel[index] = false\n    event.alertType = event.alertName;\n    this.alertService.addEvent(event)\n        .subscribe(res => {\n          if(res.status === 'OK') {\n            this.loader = true;\n            this.getEventList();\n          }\n        }, error => {\n          if(error) {\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n          }\n        });\n  }\n  onPaste(event: ClipboardEvent) {\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[a-zA-Z0-9 ]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n  eventLabelValid(eventLabel) {\n    let pattern = /^[a-zA-Z0-9]{1}[a-zA-Z0-9 ]*$/;\n    return pattern.test(eventLabel);\n  }\n  cancelEdit(index) {\n    this.editlabel[index] = false;\n    this.getEventList();\n  }\n  onPage(event) {\n    this.config = {\n      ...this.config,\n      page: {\n        ...this.config.page,\n        pageIndex: event.pageIndex,\n        pageSize: event.pageSize\n      }\n    }\n    this.getEventList();\n  }\n\n  downloadLog() {\n    this.alertService.downloadEventLog(this.patientId).subscribe(data => {\n      var blobUrl = URL.createObjectURL(data);\n      var link = document.createElement(\"a\");\n      link.href = blobUrl;\n      link.download = \"EventLog-\" + this.patientId + \".pdf\";\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    })\n  }\n  ngOnDestroy() {\n    clearInterval(this.reloadInterval);\n  }\n}\n","<div class=\"container-fluid\">\n    <app-patient-details [patientData]=\"patientData\" [tab]=\"'eventList'\" (addEvent)=\"addNewEvent()\" (acknowledgeAllEvents)=\"openConfirmDialog()\" [activeEvents]=\"selectedEvents.length\" [eventEditAccess]=\"editAccess\" [updated]=\"lastUpdated\"></app-patient-details>\n    <!--  <div class=\"loading-indicator\" *ngIf=\"loader\">-->\n    <!--    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>-->\n    <!--  </div>-->\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n        <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <ls-paginator (page)=\"onPage($event)\" class=\"sticky-paginator\"\n                  [length]=\"config?.page?.length\" [pageSize]=\"config?.page?.pageSize\" [pageLength]=\"patientEventList?.length\" [pageIndex]=\"config?.page?.pageIndex\"\n                  showFirstLastButtons [tableState] = config?.tableState >\n    </ls-paginator>\n    <div class=\"inside-div table-responsive-md head-border comman-table-users bg-thead-color\" *ngIf=\"!loader\">\n        <div class=\"event-scroll-assist\">\n        <table class=\"mat-table\" aria-label=\"Table\">\n            <thead>\n                <tr class=\"thead-row\">\n                    <th class=\"text-start event-col text-uppercase\">\n                         <mat-checkbox [disabled]=\"!unAcknowledged\" (change)=\"checkAll($event)\" [checked]=\"(selectedEvents.length !==0) && (selectedEvents.length === unAcknowledged)\" [indeterminate]=\"(selectedEvents.length !==0) && (selectedEvents.length < unAcknowledged)\"></mat-checkbox>\n                        <span class=\"ps-4\">\n                          {{ \"alert_config_module.symptoms_title\" | translate}}\n                        </span>\n                        <img src=\"../../../../assets/icons/sort-icon.svg\" alt=\"sort-icon\" width=\"20\" height=\"17\" />\n                    </th>\n                    <th class=\"text-start\">{{ \"alert_config_module.activity_title\" | translate}}</th>\n                    <th class=\"text-start\">{{ \"alert_config_module.note\" | translate}}</th>\n                    <th class=\"text-start\">{{ \"alert_config_module.event_time\" | translate}}</th>\n                    <th class=\"text-start\">{{ \"alert_config_module.log\" | translate}}</th>\n                    <th class=\"d-flex justify-content-center\">\n                        {{ \"alert_config_module.status\" | translate}}\n                        <div style=\"display: contents\">\n                            <img src=\"../../assets/icons/sort-icon.svg\" alt=\"sort-icon\" width=\"24\" height=\"20\" />\n                        </div>\n                        <!--          <button mat-flat-button type=\"button\" color=\"primary\" class=\"my-1\" (click)=\"openConfirmDialog()\">-->\n                        <!--            {{ \"alert_config_module.acknowledge_all\" | translate}}-->\n                        <!--          </button>-->\n                    </th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr class=\"tbody-row tbody-row-lower\" *ngFor=\"let event of patientEventList; let i = index\">\n                    <td class=\"event-col\">\n                        <div class=\"d-flex align-items-center\">\n                            <mat-checkbox class=\"pe-4\" [disabled]=\"event?.ack || event?.mandatoryNote\" [(ngModel)]=\"event.checked\" [checked]=\"event.checked\" (change)=\"onCheckboxChange($event, event.id)\"></mat-checkbox>\n                            <span *ngIf=\"event?.alertType\" class=\"event-label\">{{ event.alertType }}</span>\n                            <span *ngIf=\"!event?.alertType && event?.symptoms?.length\" class=\"event-label\">\n                                <span *ngFor=\"let symptom of event?.symptoms;let i=index\">\n                                    <span *ngIf=\"i!==0\">, </span><span>{{symptom}}</span>\n                                </span>\n                            </span>\n                            <span *ngIf=\"!event?.alertType && !event?.symptoms?.length && editAccess\">\n                            <button  mat-flat-button type=\"button\" color=\"primary\" (click)=\"editEvent(event)\">\n                               {{ \"alert_config_module.add_event.add_label\" | translate}}\n                            </button>\n                            </span>\n                            <span *ngIf=\"!event?.alertType && !event?.symptoms?.length && !editAccess\" class=\"ps-2\">\n                                  -\n                            </span>\n                        </div>\n                    </td>\n                    <td>\n                        <span *ngIf=\"event?.activity?.length\"  class=\"event-label\">\n                            <span *ngFor=\"let activity of event?.activity;let i=index\">\n                                <span *ngIf=\"i!==0\">, </span><span *ngIf=\"activity\">{{activity}}</span>\n                            </span>\n                        </span>\n                        <span *ngIf=\"!event?.activity?.length\">\n                            -\n                        </span>\n                    </td>\n                    <td class=\"px-2\">\n                        <img class=\"cursor-pointer note-icon\" *ngIf=\"event?.notes\" src=\"../../../../assets/icons/note.png\" (click)=\"recordedNote(event)\">\n                        <mat-icon class=\"cursor-pointer\" *ngIf=\"!event?.notes && !event?.ack\" fontSet=\"material-icons-outlined\" (click)=\"addNote(event)\">note_add</mat-icon>\n                        <span *ngIf=\"!event?.notes && event?.ack\" class=\"ps-2\"> -</span>\n                    </td>\n                    <td>\n                        <span>\n                            {{ event.alertTime*1000  | date: \"MMM dd, \" + timeFmt :timeZone }}\n                        </span>\n                    </td>\n                    <td class=\"px-2\">\n                        <span *ngIf=\"!event?.acknowledgedOn\" class=\"ps-2\"> - </span>\n                        <span class=\"ackdata\" *ngIf=\"event?.acknowledgedOn\"> {{ event?.acknowledgedOn*1000 | date: \"MMM dd, \" + timeFmt :timeZone }}</span> \n                        <span class=\"ackdata\" *ngIf=\"event?.acknowledgedBy\">by {{ event?.acknowledgedBy}}</span>\n                    </td>\n                    <td class=\"text-center px-2\">\n                        <button *ngIf=\"event?.ack === false\" mat-flat-button type=\"button\" color=\"primary\" (click)=\"acknowledge(event)\">\n            {{ \"alert_config_module.alertfreq_acknowledge\" | translate}}\n          </button>\n                        <button *ngIf=\"event?.ack === true\" [disabled]=\"true\" mat-flat-button type=\"button\" color=\"primary\">\n            {{ \"alert_config_module.acknowledge\" | translate}}\n          </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"text-center my-3\" *ngIf=\"eventListCount === 0\">\n            <strong>{{ \"alert_config_module.messages.no_data\" | translate}}</strong>\n        </div>\n        <button (click)=\"downloadLog()\" mat-flat-button type=\"button\" color=\"primary\" class=\"my-2 text-uppercase\">\n             <mat-icon>save_alt</mat-icon>\n             {{ \"alert_config_module.download_log\" | translate}}\n        </button>\n    </div>\n</div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { Store } from \"@ngrx/store\";\nimport { AlertConfigurationStoreActions, AlertConfigurationStoreSelectors, AlertConfigurationStoreState } from \"../store\";\nimport {\n  AlertHistoryItems, priorityColorCode, postures\n} from \"@utils/helpers\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-notification-list\",\n  templateUrl: \"./notification-list.component.html\",\n  styleUrls: [\"./notification-list.component.scss\"],\n})\nexport class NotificationListComponent implements OnInit, OnDestroy{\n  @Input() patientData: any;\n  priorityHexCode: any = priorityColorCode;\n  patientId;\n  tab = 'alerts';\n  alertHistory$;\n  alerts;\n  alertHistory = [];\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  loader = true;\n  loaderSubscription;\n  current = 0;\n  unAcknowledged = 0;\n  count;\n  allActiveAlerts = [];\n  totalAlerts = 0;\n  sortBy = 'alertTime';\n  sortDirection = 'desc';\n  userPreferenceUnit = \"SI\";\n  reloadInterval;\n  autorefresh = false;\n  lastUpdated;\n  postures;\n  constructor(\n    private alertService: AlertConfigurationsService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private userPreference: UserPreferenceService,\n    private translate: TranslateService,\n    private snackbar: SnackbarService,\n    public dialog: MatDialog\n  ) { }\n  ngOnInit() {\n    this.postures = postures;\n    this.patientId = this.patientData.patientId;\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    this.alerts = AlertHistoryItems;\n    this.getAlerts();\n    this.reloadInterval = setInterval(() => {\n      this.getAlerts();\n    }, 30000);\n    this.alertHistory$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertHistory\n    );\n    this.alertHistory$.subscribe(res => {\n      console.log(res);\n      this.lastUpdated = new Date().toUTCString();\n      this.current = 0;\n      this.totalAlerts = 0;\n      this.unAcknowledged = 0;\n      this.allActiveAlerts = [];\n      this.alertHistory = [];\n      let alertHistory = res.topAlerts;\n      this.alerts.forEach((element:any) => {\n        this.alertHistory.push({\n          key: element.key,\n          alert: element.alerts,\n          items: res?.topAlerts ? alertHistory?.find(alertType =>  alertType.alertKey === element.key)?.topN || [] : [],\n          selected: [],\n          activeSelected: false,\n          unAck: 0\n        } );\n      });\n      this.alertHistory.forEach(alert => {\n        alert.items = this.alertService.sortAlerts(alert.items);\n        alert?.items?.forEach(ele => {\n          this.totalAlerts++;\n          ele = {...ele, checked: false};\n          if(ele.active) {\n            this.current++;\n          }\n          if(!ele.ack) {\n            this.unAcknowledged++;\n            alert.unAck++;\n          }\n          if(!ele.ack) {\n            this.allActiveAlerts.push(ele);\n          }\n\n        })\n      });\n      this.count = {\n        current: this.current,\n        unAcknowledged: this.unAcknowledged\n      }\n    });\n  }\n  getAlerts() {\n    let param: any = {\n      patientId: this.patientId\n    };\n    this.store$.dispatch(new AlertConfigurationStoreActions.LoadAlertHistoryRequestAction({ params: param }))\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertHistoryLoader)\n        .subscribe((loaded) => {\n          if (loaded) {\n            this.loader = false;\n          }\n        });\n  }\n  getRelativeTime(timestamp) {\n    let date = new Date();\n    const currentTimestamp = (date.getTime())/1000;\n    const difference = currentTimestamp - timestamp;\n    let output = ``;\n    if ( difference > 0 && difference < 60) {\n      // Less than a minute has passed:\n      output = `${Math.round(difference)} secs ago`;\n    } else if (difference < 3600) {\n      // Less than an hour has passed:\n      output = `${Math.floor(difference / 60)} mins ago`;\n    } else if (difference < 86400) {\n      // Less than a day has passed:\n      output = `${Math.floor(difference / 3600)} hrs ago`;\n    } else if (difference < 2620800) {\n      // Less than a month has passed:\n      let relativeTime = Math.floor(difference / 86400);\n      if (relativeTime === 1) {\n        output = `${Math.floor(difference / 86400)} day ago`;\n      } else {\n        output = `${Math.floor(difference / 86400)} days ago`;\n      }\n    }\n    return output\n  }\n  onCheckboxChange(key, event, alertRow) {\n    this.alertHistory.forEach(alert => {\n      if(alert.key === key) {\n        if(event.checked) {\n          if(alertRow.active) {\n            alert.activeSelected = true;\n          }\n          alert.selected = [...alert.selected, alertRow];\n        } else {\n          if(alertRow.active) {\n            alert.activeSelected = false;\n          }\n          let i = alert.selected.indexOf(alertRow);\n          alert.selected.splice(i, 1);\n        }\n      }\n    });\n  }\n  checkAll(key, event) {\n    this.alertHistory.forEach(alert => {\n      if(alert.key === key) {\n        alert.selected = [];\n        alert.items.forEach(item => {\n          if(!item.ack) {\n            item.checked = event.checked;\n            if(event.checked) {\n              if(item.active) {\n                alert.activeSelected = true;\n              }\n              alert.selected = [...alert.selected, item];\n            } else {\n              alert.selected = [];\n              alert.activeSelected = false;\n            }\n          }\n        })\n      }\n    });\n  }\n  acknowledgeAll(key) {\n    this.alertHistory.forEach(alert => {\n      if (alert.key === key) {\n        let body = {\n          \"alertAckInfo\": alert.selected,\n          \"forActive\": alert.activeSelected\n        };\n        this.alertService.acknowledgeAlert(body)\n          .subscribe((res: any) => {\n            if (res.status === 'OK') {\n              this.loader = true;\n              this.getAlerts();\n              this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + res.message, 'bottom', 'center', true);\n            }\n          });\n      }\n    })\n  }\n  acknwoledge(alert) {\n    let body = {\n      \"alertAckInfo\": [alert],\n      \"forActive\": alert.active\n    }\n    this.alertService.acknowledgeAlert(body)\n      .subscribe((res: any) => {\n        console.log(res);\n        if (res.status === 'OK') {\n          this.loader = true;\n          this.getAlerts();\n          this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + res.message, 'bottom', 'center', true);\n        }\n      });\n  }\n  getAlertType(alertKey, type, highThr, lowThr) {\n    let alertType = '';\n    let alertValue = '';\n    if(alertKey === 'SKINTEMP' || alertKey === 'BODYTEMP') {\n      highThr = (highThr/100)/10;\n      lowThr = (lowThr/100)/10;\n      if(this.userPreferenceUnit === 'IS') {\n        highThr = this.userPreference.convertCtoF(highThr);\n        lowThr = this.userPreference.convertCtoF(lowThr);\n      }\n    }\n    if(/low/i.test(type)) {\n      alertType = \"below\";\n      alertValue = lowThr;\n    } else if (/high/i.test(type)) {\n      alertType = \"above\";\n      alertValue = highThr;\n    }\n    this.translate.get('alert_config_module.'+alertType).subscribe((tran) => {\n      alertType = tran + \" \" + alertValue;\n    });\n    return alertType;\n  }\n  acknowledgeAllType() {\n    let body = {\n      \"alertAckInfo\": this.allActiveAlerts,\n      \"forActive\": true\n    }\n    this.alertService.acknowledgeAlert(body)\n      .subscribe((res: any) => {\n        console.log(res);\n        if (res.status === 'OK') {\n          this.loader = true;\n          this.getAlerts();\n          this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + res.message, 'bottom', 'center', true);\n        }\n      });\n  }\n\n  downloadLog() {\n    this.alertService.downloadAlertLog(this.patientId).subscribe(data => {\n      var blobUrl = URL.createObjectURL(data);\n      var link = document.createElement(\"a\"); // Or maybe get it from the current document\n      link.href = blobUrl;\n      // link.innerHTML = \"Download Log\";\n      link.download = \"AlertLog-\" +this.patientId+ \".pdf\";\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    })\n  }\n\n  anyActive() {\n    return this.allActiveAlerts.length > 0;\n  }\n  sort(active, dir) {\n    this.sortBy = active;\n    this.sortDirection = dir;\n    this.getAlerts();\n  }\n  openConfirmDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"alert_config_module.messages.acknowledge_alerts\",\n          text: \"alert_config_module.messages.confirm_acknowledge\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.acknowledgeAllType();\n      }\n    });\n  }\n  ngOnDestroy() {\n    clearInterval(this.reloadInterval);\n  }\n}\n\n","<!--<app-patient-details [patientData]=\"patientData\" [tab]=\"tab\" [count]=\"count\" [activeAlert]=\"anyActive()\"-->\n<!--                     (acknowledgeAllType)=\"openConfirmDialog()\"></app-patient-details>-->\n<div class=\"container-fluid p-3\">\n    <div class=\"row\">\n        <div class=\"col-md-8 col-lg-8 col-xl-7\">\n            <div class=\"d-flex flex-wrap align-items-center patient-details\">\n\n                <div class=\"patient-id px-2\">\n                    <strong> <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon me-2\"\n                            width=\"28\" height=\"31\" /> {{patientData?.patchId}}</strong>\n                    <span class=\"d-block pid\">{{ \"dashboard-module.pid\" | translate }} {{ patientData?.patientId\n                        }}</span>\n                    <!--<span>{{ patientData?.doctorId }}</span>-->\n                </div>\n                <div class=\"px-2 me-auto w-max-20\">\n                    <strong class=\"d-block pb-2 text-truncate\">\n                        <span class=\"patient-name\" *ngIf=\"patientData?.firstName\"> {{ patientData?.firstName + \"\n                            \"}}</span>\n                        <span class=\"patient-name\" *ngIf=\"patientData?.lastName\">{{ patientData?.lastName }}</span>\n                    </strong>\n                    <!--<span class=\"time-group\" *ngIf=\"patientData?.admitted\">{{patientData?.admitted | date: \"MMM dd, yyyy\" }}</span>-->\n                    <span *ngIf=\"patientData?.pGroup\" class=\"small-tag remote-tag\">\n                        {{patientData.pGroup?.name}}<span *ngIf=\"patientData?.pGroup && patientData?.cGroup\">,</span>\n                    </span>\n                    <span *ngIf=\"patientData?.cGroup\" class=\"small-tag sepsis-tag\">\n                        {{patientData.cGroup?.name}}\n                    </span>\n                </div>\n                <div class=\"justify-content-end py-1\">\n                    <span class=\"mx-2\">Current</span>\n                    <span class=\"alert-count\"><strong>{{count.current}}</strong></span>\n                    <span class=\"mx-2 ms-3\">Unacknowledged</span>\n                    <span class=\"alert-count\"><strong>{{count.unAcknowledged}}</strong></span>\n                </div>\n            </div>\n        </div>\n        <div class=\"text-center  text-md-end col-md-4 col-lg-4 col-xl-5\">\n            <label class=\"mx-2 py-1 time-stamp\" *ngIf=\"lastUpdated\">Last updated\n                {{ lastUpdated+ '+0000' | date: \"MMM dd, yyyy / \" + timeFmt : timeZone }}\n            </label>\n            <button (click)=\"openConfirmDialog()\" [disabled]=\"!anyActive()\" mat-flat-button type=\"button\"\n                color=\"primary\" class=\"mx-2 py-1 text-uppercase alert-acknowledged-btn \">\n                {{ \"alert_config_module.acknowledge_all\" | translate}}\n            </button>\n        </div>\n    </div>\n</div>\n<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"inside-div head-border comman-table-users bg-thead-color\" *ngIf=\"!loader\">\n        <div class=\"table-responsive-sm alert-scroll-assist\">\n            <table class=\"mat-table\" aria-label=\"Table\">\n                <thead>\n                    <tr>\n                        <th class=\"text-center\">\n                            {{ \"alert_config_module.alerts\" | translate}}\n                            <div style=\"display: contents\" (click)=\"sort('alertTime','desc')\">\n                                <mat-icon [ngClass]=\"sortBy==='alertTime'? '': 'disabled'\">filter_list</mat-icon>\n                            </div>\n                        </th>\n                        <th class=\"text-start\">{{ \"alert_config_module.time_duration\" | translate}}</th>\n                        <th style=\"text-align: initial !important\">\n                            {{ \"alert_config_module.priority\" | translate}}\n                        </th>\n                        <th class=\"text-start\">\n                            {{ \"alert_config_module.acknowledged_by\" | translate}}\n                        </th>\n                        <th scope=\"\" class=\"d-flex justify-content-center\">\n                            {{ \"alert_config_module.status\" | translate}}\n                            <div style=\"display: contents\">\n                                <img [ngClass]=\"sortBy==='status'? '': 'disabled'\"\n                                    src=\"../../assets/icons/sort-icon.svg\" alt=\"sort-icon\" width=\"24\" height=\"20\" />\n                            </div>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody *ngFor=\"let alert of alertHistory; let i = index\">\n                    <tr *ngIf=\"alert?.items?.length\" class=\"tbody-row-head py-1\" [ngStyle]=\"{\n            background:\n              alert.key === 'HR'\n                ? 'rgba(116, 255, 172, 0.4)'\n                : 'rgba(60, 209, 255, 0.2)'\n          }\">\n                        <td class=\"tbody-head-text\" [ngStyle]=\"{\n              color:\n                alert.key === 'HR'\n                  ? '#4FFF96'\n                  : '#32CFFF'\n            }\">\n                             <mat-checkbox class=\"mx-2\" (change)=\"checkAll(alert.key, $event)\"\n                                [checked]=\"(alert.selected.length !==0) && (alert.selected.length === alert.unAck)\"\n                                [indeterminate]=\"(alert.selected.length !==0) && (alert.selected.length < alert.unAck)\"\n                                [disabled]=\"!alert?.unAck\">\n                                <span class=\"mx-2 text-uppercase\">{{\n                                    alert.alert\n                                    }}</span>\n                                <span style=\"font-size: 12px\">( {{alert.selected.length}} {{\n                                    \"alert_config_module.selected\" | translate}} )</span>\n                            </mat-checkbox>\n                        </td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td class=\"d-flex justify-content-center btn-class\">\n                            <button class=\"text-uppercase\" [disabled]=\"!alert?.selected?.length\" mat-flat-button\n                                type=\"button\" color=\"primary\" (click)=\"acknowledgeAll(alert.key)\">\n                                {{ \"alert_config_module.acknowledge_all\" | translate}}\n                            </button>\n                        </td>\n                    </tr>\n                    <tr class=\"tbody-row-inner\" *ngFor=\"let rowItem of alert.items;let i = index\">\n                        <td class=\"mx-2\">\n                            <mat-checkbox class=\"mx-4\" [disabled]=\"(rowItem.ack === true)\" [(ngModel)]=\"rowItem.checked\"\n                                [checked]=\"rowItem.checked\"\n                                (change)=\"onCheckboxChange(rowItem.alertKey, $event, rowItem)\">\n                                <div class=\"alert-level\"\n                                    *ngIf=\"rowItem?.setting?.length && alert.key !== 'POSTURE_ALERT'\">\n                                    <span class=\"mx-2\">{{\n                                        getAlertType(rowItem.alertKey, rowItem.alertType, rowItem.setting[1],\n                                        rowItem.setting[2])\n                                        }}</span>\n                                </div>\n                                <div *ngIf=\"alert.key === 'POSTURE_ALERT'\" class=\"px-3\">\n                                    {{postures[rowItem.alertVal]}}\n                                </div>\n                            </mat-checkbox>\n                        </td>\n                        <td>\n                            <span class=\"d-flex align-items-center justify-content-start time-interval-text\">\n                                <span *ngIf=\"rowItem?.active === true\">\n                                    <button type=\"button\" mat-flat-button color=\"accent\" class=\"text-uppercase\">\n                                        {{ \"alert_config_module.active\" | translate}}\n                                    </button>\n                                    <span class=\"ms-3 time-duration\">\n                                        <span>{{rowItem?.alertTimeFrom/1000000 | date: \"MMM dd, yyyy \" + timeFmt\n                                            :timeZone }} to</span>\n                                        <span class=\"fw-bold hourtxt text-uppercase\">\n                                            {{ \"alert_config_module.now\" | translate}}\n                                        </span>\n                                    </span>\n                                </span>\n                                <span *ngIf=\"rowItem?.active === false\">\n                                    <span class=\"time-duration\"><span class=\"fw-bold hourtxt\">{{\n                                            getRelativeTime(rowItem?.alertTime/1000000000) }} |\n                                        </span> {{rowItem?.alertTimeFrom/1000000| date: \"MMM dd, \" + timeFmt : timeZone\n                                        }} to {{rowItem?.alertTime/1000000 | date: \"MMM dd, \" + timeFmt : timeZone\n                                        }}</span>\n                                </span>\n                            </span>\n                        </td>\n                        <td class=\"priority-text\">\n                            <div style=\"display: contents\" *ngIf=\"rowItem?.setting?.length\">\n                                <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\">\n                                    <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[rowItem?.setting[0]]\" />\n                                    <circle *ngIf=\"rowItem?.setting[0].toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n                                        [attr.stroke]=\"priorityHexCode[rowItem?.setting[0]]\" stroke-width=\"2\"\n                                        stroke-dasharray=\"4 4\" />\n                                </svg>\n                            </div>\n                            <span class=\"mx-3 mt-1\" *ngIf=\"rowItem?.setting?.length\">{{ rowItem?.setting[0] }}</span>\n                        </td>\n                        <td class=\"text-start\">\n                            <span class=\"px-2\" *ngIf=\"rowItem?.ack && rowItem?.acknowledgedOn\">\n                                {{ rowItem?.acknowledgedOn*1000 | date: \"MMM dd, \" + timeFmt : timeZone || \"-\" }}</span>\n                            <br />\n                            <span class=\"px-2\" *ngIf=\"rowItem?.ack && rowItem?.acknowledgedBy\">by {{\n                                rowItem.acknowledgedBy }}</span>\n                            <span *ngIf=\"!rowItem?.ack || !rowItem?.acknowledgedOn\">\n                                -\n                            </span>\n                        </td>\n                        <td>\n                            <span class=\"d-flex justify-content-center btn-class\">\n                                <button *ngIf=\"rowItem?.ack === false\" mat-flat-button type=\"button\" color=\"primary\"\n                                    (click)=\"acknwoledge(rowItem)\">\n                                    {{ \"alert_config_module.alertfreq_acknowledge\" | translate}}\n                                </button>\n                                <button *ngIf=\"rowItem?.ack === true\" [disabled]=\"true\" mat-flat-button type=\"button\"\n                                    color=\"primary\">\n                                    {{ \"alert_config_module.acknowledge\" | translate}}\n                                </button>\n                            </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\"text-center my-3\" *ngIf=\"totalAlerts === 0\">\n                <strong>{{ \"alert_config_module.messages.no_data\" | translate}}</strong>\n            </div>\n        </div>\n        <button mat-flat-button type=\"button\" color=\"primary\" (click)=\"downloadLog()\" class=\"my-2 text-uppercase\">\n            <mat-icon>save_alt</mat-icon>\n            {{ \"alert_config_module.download_log\" | translate}}\n        </button>\n    </div>\n</div>\n","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-notifications\",\n  templateUrl: \"./notifications.component.html\",\n  styleUrls: [\"./notifications.component.scss\"],\n})\nexport class NotificationsComponent implements OnInit{\n  selectedTab = \"notificationsList\";\n  patientData;\n  openEventTab : boolean = true;\n  constructor(private dialogRef: MatDialogRef<NotificationsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {}\n  ngOnInit() {\n    this.patientData = this.data.patientData;\n    this.openEventTab = this.data.add_event;\n    this.selectedTab = this.data?.selectedTab;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n  selectTab(value) {\n    this.selectedTab = value;\n  }\n}\n","<div id=\"patientAlertSettings\">\n  <div class=\"dialog-header patientalert-dialog-header\">\n    <div class=\"mx-3 d-lg-flex d-md-flex d-sm-none d-none flex-wrap btn-group-area\">\n      <button mat-button [ngClass]=\"selectedTab === 'notificationsList'? 'select-btn-active select-btn-active-notif': 'select-btn select-btn-notif'\" (click)=\"selectTab('notificationsList')\">\n        <img src=\"assets/icons/notification-icon-red.svg\" alt=\"notification-icon-red\" class=\"header-tab-icon\" width=\"24\" height=\"24\" />\n        Alerts\n      </button>\n      <button mat-button [ngClass]=\"selectedTab === 'eventList' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('eventList')\">\n        <mat-icon class=\"header-tab-icon\">person</mat-icon>\n        <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon\" width=\"18\" height=\"16\" />\n        Event List\n      </button>\n      <button mat-button [ngClass]=\"selectedTab === 'parameterAlerts' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('parameterAlerts')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_parameter\" | translate }}\n      </button>\n      <!-- <button mat-button [ngClass]=\"selectedTab === 'arrhythmiaAlerts' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('arrhythmiaAlerts')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_arrhythmia\" | translate }}\n      </button> -->\n      <button mat-button [ngClass]=\"selectedTab === 'technicalAlerts' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('technicalAlerts')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_technical\" | translate }}\n      </button>\n      <button mat-button [ngClass]=\"selectedTab === 'alertDestination' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('alertDestination')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_destination\" | translate }}\n      </button>\n      <!--<button mat-button class=\"btn\" [ngClass]=\"\n        selectedTab === 'others' ? 'select-btn-active' : 'select-btn'\n      \" (click)=\"selectTab('others')\">\n      {{ \"alert_config_module.configure_others\" | translate }}\n    </button>-->\n    </div>\n    <div class=\"d-block d-lg-none d-md-none \">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border mb-2\">\n        <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\" class=\"mobile-menu alert-configuration-menu overflow-hidden d-block d-lg-none\">\n        <button mat-menu-item (click)=\"selectTab('notificationsList')\">\n          <img src=\"assets/icons/notification-icon-red.svg\" alt=\"notification-icon-red\" class=\"header-tab-icon\"\n            width=\"24\" height=\"24\" />\n          Alerts\n        </button>\n        <button mat-menu-item (click)=\"selectTab('eventList')\">\n          <mat-icon class=\"menu-tab-icon\">person</mat-icon>\n          <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon\" width=\"18\" height=\"16\" />\n          Event List\n        </button>\n        <button mat-menu-item (click)=\"selectTab('parameterAlerts')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_parameter\" | translate }}\n        </button>\n        <!-- <button mat-menu-item (click)=\"selectTab('arrhythmiaAlerts')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_arrhythmia\" | translate }}\n        </button> -->\n        <button mat-menu-item (click)=\"selectTab('technicalAlerts')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_technical\" | translate }}\n        </button>\n        <button mat-menu-item (click)=\"selectTab('alertDestination')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_destination\" | translate }}\n        </button>\n        <!--<button mat-menu-item (click)=\"selectTab('others')\">\n          {{ \"alert_config_module.configure_others\" | translate }}\n        </button>-->\n      </mat-menu>\n    </div>\n    <span class=\"close-icon mt-2 mt-md-0 me-2 me-md-0\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"close icon\" class=\"cursor-pointer\" (click)=\"closeDialog()\">close\n      </mat-icon>\n    </span>\n  </div>\n  <div>\n    <div *ngIf=\"selectedTab === 'notificationsList'\">\n      <app-notification-list [patientData]=\"patientData\"></app-notification-list>\n    </div>\n    <div *ngIf=\"selectedTab === 'eventList'\">\n      <app-event-list [patientData]=\"patientData\"></app-event-list>\n    </div>\n    <div *ngIf=\"selectedTab === 'parameterAlerts'\">\n      <app-parameter-alerts [patientData]=\"patientData\"></app-parameter-alerts>\n    </div>\n    <div *ngIf=\"selectedTab === 'arrhythmiaAlerts'\">\n      <app-arrhythmia-alerts [patientData]=\"patientData\"></app-arrhythmia-alerts>\n    </div>\n    <div *ngIf=\"selectedTab === 'technicalAlerts'\">\n      <app-technical-alerts [patientData]=\"patientData\"></app-technical-alerts>\n    </div>\n    <div *ngIf=\"selectedTab === 'alertDestination'\">\n      <app-destination-setting [patientData]=\"patientData\"></app-destination-setting>\n    </div>\n    <!--<div *ngIf=\"selectedTab === 'others'\">\n    <app-others [patientData]=\"patientData\"></app-others>\n  </div>-->\n  </div>\n</div>","import { Component, OnInit, EventEmitter, Output, Input, OnDestroy } from \"@angular/core\";\nimport { CommonService } from \"@services/common.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  priorityColorCode,\n  alertPriorityOptions,\n  uiAccessRoles,\n  parameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-parameter-alerts\",\n  templateUrl: \"./parameter-alerts.component.html\",\n  styleUrls: [\"./parameter-alerts.component.scss\"],\n})\nexport class ParameterAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  loading: boolean = false;\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = alertPriorityOptions;\n  parameterAlert = parameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.PARAMETER_ALERT;\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  isEditAccess: boolean = false;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  selectedTab = \"parameter\";\n  error: string;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  cfId: string = \"\";\n  alertId: any = null;\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  GroupId: string = \"\";\n  patientId: string = \"PATALDRT1\";\n  userPreferenceUnit;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  lastUpdated;\n  loaderSubscription\n  loader = true;\n  postures;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 70px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 200px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      style: \"width: 134px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n  ];\n  constructor(\n    public dialog: MatDialog,\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private snackbar: SnackbarService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    public alertService: AlertConfigurationsService\n  ) { }\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.parameterMinMax = this.alertService.getParameterMinMax();\n    this.cfId = this.autheticationService.getCfId();\n    this.patientId = this.patientData.patientId;\n\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data: any) => {\n\n        this.error = data;\n        if (data?.error?.errorMessage === 'ACCESS_DENIED') {\n          this.snackbar.openCustomSnackBar('alert_config_module.messages.access_denied', 'bottom', 'center', true);\n        }\n      });\n    this.loaderSubscription = this.store$\n      .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        this.loader = !loaded;\n      });\n\n    this.getSettings();\n    this.alertSettings$.subscribe((data) => {\n      //this.loader = false;\n      this.lastUpdated = new Date().toUTCString();\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      this.masterData.GroupId = \"\";\n      this.masterData.PatientId = this.patientId;\n      this.masterData.FacilityId = this.cfId;\n      this.masterData.AlertId = \"\";\n      const alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if (data?.Setting?.Param?.PhyParam[element.key]) {\n            const settings = data.Setting.Param.PhyParam[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      if (this.userPreferenceUnit === 'SI') {\n        alerts.forEach(setting => {\n          if ((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = Math.round(setting.LowThr / 100) / 10;\n            setting.HighThr = Math.round(setting.HighThr / 100) / 10;\n            setting.unit = \"°C\";\n          }\n        });\n      } else {\n        alerts.forEach(setting => {\n          if ((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = this.userPreference.convertCtoF(setting.LowThr / 1000);\n            setting.HighThr = this.userPreference.convertCtoF(setting.HighThr / 1000);\n            setting.unit = \"°F\";\n          }\n        });\n      }\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n      this.loading = false;\n    }, (err) => {\n      this.loading = false;\n    });\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n    this.alertSettings$.subscribe((data) => {\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.AlertId;\n      this.isShowResetButton = this.alertSettings?.IsForPatient;\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateParameterSettings();\n        }\n      })\n    );\n  }\n\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n  // Fetch alert settings - API Call\n  getSettings = () => {\n    this.loading = true;\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient/${this.cfId}/${patientId}`;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };\n  showEdit(index) {\n    this.editThreshold[index] = true;\n  }\n  hideEdit(index) {\n    this.editThreshold[index] = false;\n  }\n\n  showEditPrior(index) {\n    this.editPrior[index] = true;\n  }\n  hideEditPrior(index) {\n    this.editPrior[index] = false;\n  }\n\n  showEditDelay(index) {\n    this.editDelay[index] = true;\n  }\n  hideEditDelay(index) {\n    this.editDelay[index] = false;\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  async updateParameterSettings() {\n    const parameterAlert: any = {};\n    let settings = [...this.parameterAlertSettings];\n    settings = settings.map(setting =>\n      setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP'\n        ? {\n          ...setting, LowThr: Math.floor(this.tempConvFunction(setting.LowThr) * 1000),\n          HighThr: Math.floor(this.tempConvFunction(setting.HighThr) * 1000),\n        }\n        : setting\n    );\n    // settings = settings.map(setting =>\n    //     setting.key === 'POSTURE_ALERT' ? { ...setting, LowThr: setting.HighThr,\n    //       } : setting\n    // );\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"PhyParam\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient-edit/${this.cfId}/${patientId}`;\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar('Settings has been updated successfully', 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n        this.getSettings();\n      }\n    } catch (error) {\n      this.error = error;\n    }\n  }\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.parameterAlertSettings = JSON.parse(\n      JSON.stringify(this.parameterAlertSettingsCopy)\n    );\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setParameterAlertEditSubmit(false);\n    this.hideParameterEdit();\n\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n\n    this.updateParameterSettings();\n  }\n  // Handle alert setting factory reset action\n  async handleFactoryReset() {\n    const patientId = encodeURIComponent(this.patientId);\n    const url = `alert-settings/patient-reset/${this.cfId}/${patientId}/${this.alertId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center', true);\n        this.getSettings();\n      }\n    } catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n    }\n\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.selectedTab = value;\n  }\n  checkRole(allowedRoles: any, userRoles: any) {\n    if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      let translate_txt = \"alert_config_module.messages.\" + keyMapping[key];\n      this.snackbar.openCustomSnackBar(translate_txt, 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n\n    if (key === \"LowThr\") {\n      if (\n        this.parameterAlertSettings[index][key] >=\n        this.parameterAlertSettings[index][\"HighThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar('alert_config_module.messages.incorrect_low_threshold', 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"HighThr\") {\n      if (\n        this.parameterAlertSettings[index][key] <=\n        this.parameterAlertSettings[index][\"LowThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar('alert_config_module.messages.incorrect_high_threshold', 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  limitChar(control, event) {\n    if (control === 'BODYTEMP' || control === 'SKINTEMP') {\n      if (event.target.value.toString().length > 5) {\n        event.target.value = event.target.value.substr(0, 5);\n      }\n    } else {\n      if (event.key === '.') {\n        event.preventDefault();\n      }\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  limitdelay(event) {\n    if (event.key === '.') {\n      event.preventDefault();\n    }\n    if (event.target.value.toString().length > 5) {\n      event.target.value = event.target.value.substr(0, 5);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    if (control === 'BODYTEMP' || control === 'SKINTEMP') {\n      return true\n    } else {\n      if (numericsOnlyPattern.test(key)) {\n        return true;\n      } else {\n        event.preventDefault();\n        return false;\n      }\n    }\n  }\n}\n","<div class=\"container-fuild\">\n  <app-patient-details [patientData]=\"patientData\" [updated]=\"lastUpdated\"></app-patient-details>\n  <div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n  <div *ngIf=\"!loader\" class=\"inside-div head-border comman-table-users bg-thead-color\">\n    <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"parameterAlertSettings\">\n      <ng-template lsWidgetName=\"enabled\" let-config>\n        <span class=\"d-flex align-items-center\">\n        <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n          [disabled]=\"!isEditAccess\">\n        </mat-slide-toggle>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"alerts\" let-config>\n        {{ config.alert }} <span class=\"fw-normal\" *ngIf=\"config.key !== 'POSTURE_ALERT'\">({{ config.unit }})</span>\n      </ng-template>\n      <ng-template lsWidgetName=\"threshold\" let-config>\n        <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\">\n          {{ config.LowThr }} &lt;\n          <span *ngIf=\"config.key !== 'SPO2'\">\n          <span class=\"fw-700\">\n            {{ \"alert_config_module.or\" | translate }} </span>&gt; {{ config.HighThr }}\n          </span>\n        </span>\n        <span *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n          <input (keypress)=\"numericsOnly(config.key, $event)\"  (keydown)=\"limitChar(config.key,$event)\"  matInput digitOnly class=\"text-input-box py-1 me-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            [(ngModel)]=\"config.LowThr\" autocomplete=\"off\" (change)=\"parameterThresholdChanged(config.index,'LowThr',parameterMinMax[config.key])\" type=\"number\" [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\"\n            [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\" [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"/>\n          &lt;\n          <span *ngIf=\"config.key !== 'SPO2'\">\n          <span class=\"ms-1\">{{ \"alert_config_module.or\" | translate }}</span>\n          &gt;\n          </span>\n          <input *ngIf=\"config.key !== 'SPO2'\" (keypress)=\"numericsOnly(config.key, $event)\" (keydown)=\"limitChar(config.key,$event)\" autocomplete=\"off\" matInput digitOnly class=\"text-input-box py-1 ms-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            [(ngModel)]=\"config.HighThr\" type=\"number\" [min]=\"parameterMinMax[config.key]['MIN']['HighThr']\"\n            [max]=\"parameterMinMax[config.key]['MAX']['HighThr']\" (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'HighThr',\n                  parameterMinMax[config.key]\n                )\n              \" [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"/>\n          </span>\n        </span>\n        <span  *ngIf=\"config.key === 'POSTURE_ALERT'\">\n<!--          <mat-select [(ngModel)]=\"config.HighThr\" class=\"mat-sel py-1\" [disabled]=\"!isEditAccess || !config.Enabled\" (selectionChange)=\"updated()\">-->\n<!--              <mat-option *ngFor=\"let posture of postures;let i=index\" [value]=\"i\"> {{posture}}</mat-option>-->\n<!--          </mat-select>-->\n          -\n      </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"editThreshold\" let-config>\n        <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\">\n          <button *ngIf=\"!editThreshold[config?.index] && isEditAccess\" mat-mini-fab color=\"primary\"\n            class=\"btn-boxed btn-no-shadow\" [disabled]=\"!config.Enabled\"\n            (click)=\"showHideEdit(config?.index, 'threshold')\">\n            <mat-icon>edit</mat-icon>\n          </button>\n        </span>\n        <span *ngIf=\"editThreshold[config?.index]\">\n          <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n            (click)=\"showHideEdit(config?.index, 'threshold')\">\n            <mat-icon>done</mat-icon>\n          </button>\n        </span>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"priority\" let-config>\n        <span class=\"me-2\">\n              <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\"/>\n                <circle *ngIf=\"config.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\" [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\"/>\n              </svg>\n          &nbsp; <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n          <span *ngIf=\"editPrior[config.index]\">\n            <mat-select placeholder=\"Select\" class=\"priority-drop-down\" [(ngModel)]=\"config.Priority\"\n                        (selectionChange)=\"updated()\">\n              <mat-option *ngFor=\"let priority of alertPriority\" [value]=\"priority.value\">\n                {{ priority.label }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"editPriority\" let-config>\n        <ng-container>\n          <span>\n            <span *ngIf=\"!editPrior[config.index]\">\n              <button *ngIf=\"isEditAccess\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\" [disabled]=\"!config.Enabled\">\n                <mat-icon>edit</mat-icon>\n              </button>\n            </span>\n            <span *ngIf=\"editPrior[config.index]\">\n              <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </span>\n        </ng-container>\n      </ng-template>\n      <ng-template lsWidgetName=\"delayTime\" let-config>\n        <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key !== 'BPSYS' && config.key !== 'BPDIA' && config.key !=='BP'\">\n          <div class=\"d-flex ack-column justify-content-center align-items-center\">\n            <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n              <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n                {{ config.CondDelay }} <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">{{'alert_config_module.secs' | translate}}</span>\n                <span *ngIf=\"config.key === 'POSTURE_ALERT'\">{{'alert_config_module.hrs' | translate}}</span>\n              </div>\n              <div *ngIf=\"editDelay[config.index]\">\n                <input (keypress)=\"numericsOnly(config.key, $event)\"\n                (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                  matInput autocomplete=\"off\" type=\"number\" digitOnly class=\"text-input-box py-1\" size=\"4\" (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'CondDelay',\n                  parameterMinMax[config.key]\n                )\n              \" [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n                  [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\" [(ngModel)]=\"config.CondDelay\" />\n              </div>\n              <ng-container *ngIf=\"isEditAccess\">\n                <div class=\"ms-2 edit\">\n                  <button\n                          *ngIf=\"!editDelay[config.index]\"\n                          mat-mini-fab\n                          color=\"primary\"\n                          class=\"btn-boxed btn-no-shadow\"\n                          [disabled]=\"!config.Enabled\"\n                          (click)=\"showHideEdit(config.index, 'delay')\"\n                  >\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                  <button\n                          *ngIf=\"editDelay[config.index]\"\n                          mat-mini-fab\n                          color=\"primary\"\n                          class=\"btn-boxed btn-no-shadow\"\n                          (click)=\"showHideEdit(config.index, 'delay')\"\n                  >\n                    <mat-icon>done</mat-icon>\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key === 'BPSYS' || config.key === 'BPDIA' || config.key ==='BP'\">\n          -\n        </div>\n      </ng-template>\n      <ng-template lsWidgetName=\"modified\" let-config>\n        <span *ngIf=\"masterData?.modifiedDateTime\">\n          {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n        </span>\n        <br/>\n        <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n      </ng-template>\n    </ls-table>\n  </div>\n</div>\n<mat-dialog-actions class=\"row px-1\" *ngIf=\"!loader && isEditAccess\">\n  <div class=\"col-lg-6\">\n    <button mat-flat-button class=\"reset_btn_bg mb-2 mb-md-0 px-2\" (click)=\"openDialog()\" *ngIf=\"isShowResetButton\">\n      <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n      <span class=\"ps-1\">{{\n        \"alert_config_module.reset_to_default\" | translate\n        }}</span>\n    </button>\n  </div>\n  <div class=\"col-lg-6 text-end\">\n    <ng-template [ngIf]=\"showActionButtons\">\n      <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n        <span>{{ \"alert_config_module.cancel\" | translate }}</span></button>&nbsp;\n      <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n        <span>{{ \"alert_config_module.save\" | translate }}</span>\n      </button>\n    </ng-template>\n  </div>\n</mat-dialog-actions>","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-patient-details\",\n  templateUrl: \"./patient-details.component.html\",\n  styleUrls: [\"./patient-details.component.scss\"],\n})\nexport class PatientDetailsComponent implements OnInit {\n  constructor(private userPreference: UserPreferenceService) { }\n  @Input() patientData: any;\n  @Output() acknowledgeAllType = new EventEmitter<string>();\n  @Output() acknowledgeAllEvents = new EventEmitter<string>();\n  @Output() addEvent = new EventEmitter<string>();\n  @Input() updated: any;\n  @Input() activeEvents;\n  @Input() eventEditAccess = false;\n  @Input() count = {\n    current: 0,\n    unAcknowledged: 0\n  };\n  @Input() tab: any;\n  @Input() activeAlert = false;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n\n  ngOnInit(): void {\n    this.timeZone = this.userPreference.getUserTimeZone();\n  }\n  acknowledgeAll() {\n    this.acknowledgeAllType.emit();\n  }\n  addNewEvent() {\n    this.addEvent.emit();\n  }\n  acknowledgeAllEvent() {\n    this.acknowledgeAllEvents.emit();\n  }\n}\n","<div class=\"container-fluid py-3 pb-1\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"row\">\n        <div class=\"d-flex flex-wrap align-items-center patient-details\">\n          <div class=\"patient-id px-2\">\n            <strong> <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon me-2\" width=\"28\" height=\"31\" /> {{patientData?.patchId}}</strong>\n            <span class=\"d-block pid\">{{ \"dashboard-module.pid\" | translate }} {{ patientData?.patientId }}</span>\n          </div>\n          <div class=\"px-2 me-auto w-max-20\">\n            <strong  class=\"d-block pb-2 text-truncate\">\n              <span class=\"patient-name\" *ngIf=\"patientData?.firstName\"> {{ patientData?.firstName + \" \"}}</span>\n              <span class=\"patient-name\" *ngIf=\"patientData?.lastName\">{{ patientData?.lastName }}</span>\n            </strong>\n            <!--<span class=\"time-group\" *ngIf=\"patientData?.admitted\">\n              {{ patientData?.admitted | date: 'MMM dd, yyyy' }}\n            </span>-->\n            <span *ngIf=\"patientData?.pGroup\" class=\"small-tag remote-tag\">\n              {{patientData.pGroup?.name}}<span *ngIf=\"patientData?.pGroup && patientData?.cGroup\">,</span>\n          </span>\n          <span *ngIf=\"patientData?.cGroup\" class=\"small-tag sepsis-tag\">\n              {{patientData.cGroup?.name}}\n          </span>\n        </div>\n          <div class=\"justify-content-end py-1\" *ngIf=\"tab === 'alerts'\">\n            <span class=\"mx-2\">Current</span>\n            <span class=\"alert-count\"><strong>{{count.current}}</strong></span>\n            <span class=\"mx-2 ms-3\">Unacknowledged</span>\n            <span class=\"alert-count\"><strong>{{count.unAcknowledged}}</strong></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"text-center  text-md-end col-md-6 patient-right-detail\">\n      <label *ngIf=\"updated?.toString()\" class=\"mx-1 time-stamp fw-normal  py-1\">Last updated\n        {{ updated+ '+0000' | date: \"MMM dd, yyyy / \" + timeFmt : timeZone }}\n      </label>\n      <button *ngIf=\"tab === 'alerts'\" (click)=\"acknowledgeAll()\" [disabled]=\"!activeAlert\"\n              mat-flat-button type=\"button\" color=\"primary\" class=\"mx-1 py-1 text-uppercase\">\n        {{ \"alert_config_module.acknowledge_all\" | translate}}\n      </button>\n      <button *ngIf=\"(tab === 'eventList') && eventEditAccess && patientData?.addEvent\" mat-flat-button type=\"button\" color=\"accent\" class=\"mx-2 my-1 text-uppercase\"\n      (click)=\"addNewEvent()\">\n        {{ \"alert_config_module.add_event.new_event\" | translate}}\n      </button>\n      <button *ngIf=\"tab === 'eventList'\" (click)=\"acknowledgeAllEvent()\" [disabled]=\"!activeEvents\"\n              mat-flat-button type=\"button\" color=\"primary\" class=\"me-1 my-1 text-uppercase\">\n        {{ \"alert_config_module.alertfreq_acknowledge\" | translate}}\n      </button>\n    </div>\n  </div>\n</div>\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { delay, catchError } from \"rxjs/operators\";\nimport {\n    AlertConfiguration,\n    AlertDestinationConfiguration,\n    MiscellaneousData,\n    MiscSettings,\n    ClinicalFacilityContactList,\n    AlertHistory,\n    ArrhythmiaAlertConfiguration,\n} from \"../store/alert-configuration.models\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable()\nexport class AlertConfigurationsService {\n\n    constructor(\n        private http: HttpClient,\n        private backendApiService: BackendApiService\n    ) { }\n    getAlertSettings(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<AlertConfiguration>(environment.dataApiUrl + url, { headers: authHeaders });\n    }\n    getArrhythmiaAlertSettings(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<ArrhythmiaAlertConfiguration>(environment.dataApiUrl + url, { headers: authHeaders });\n    }\n    getSettings(url) {\n        const authHeaders = new HttpHeaders({\n          \"X-Skip-Interceptor\": \"\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        });\n        return this.http.get<MiscSettings>(environment.dataApiUrl + url, {\n          headers: authHeaders,\n        });\n      }\n      getGroups(cfId) {\n        const authHeaders = new HttpHeaders({\n          \"X-Skip-Interceptor\": \"\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        });\n        const url = \"clinical-facilities/\" + cfId + \"/groups\";\n        return this.http\n          .get<any>(environment.dataApiUrl + url, { headers: authHeaders })\n          .pipe(delay(100), catchError(this.handleError));\n      }\n      updateSettings(body: MiscellaneousData) {\n        const url = \"patients/misc-settings\";\n        console.log(\"update\", body);\n        return this.http\n          .post<any>(environment.dataApiUrl + url, body)\n          .pipe(delay(100), catchError(this.handleError));\n      }\n\n      downloadAlertLog(patientId){\n        const url = environment.dataApiUrl + \"patients/\" + patientId + \"/alert-log\"\n        return this.backendApiService\n        .downloadBlob(url);\n      }\n\n      downloadEventLog(patientId){\n        const url = environment.dataApiUrl + \"patients/\" + patientId + \"/event-log\"\n        return this.backendApiService.downloadBlob(url);\n      }\n\n      resetSettings(url) {\n        console.log(url);\n        return this.http\n          .post<any>(environment.dataApiUrl + url, \"\")\n          .pipe(delay(100), catchError(this.handleError));\n      }\n      \n     // Root destination alert fetch api\n      getAlertDestinationSettings(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<AlertDestinationConfiguration>(environment.dataApiUrl + url, { headers: authHeaders });\n    }\n\n    getClinicalFacilityContacts(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<ClinicalFacilityContactList>(environment.dataApiUrl + url, { headers: authHeaders }).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error: any) {\n        let errorMessage = '';\n        // Client-side error.\n        if (error.error instanceof ErrorEvent) {\n            errorMessage = `Error: ${error.error.message}`;\n            // Server-side error.\n        } else {\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        return throwError(errorMessage);\n    }\n    getParameterMinMax() {\n        let userPreferenceUnit = JSON.parse(sessionStorage.getItem('userPreference'))?.units;\n        return {\n            HR: {\n                MIN: {\n                    HighThr: 60,\n                    CondDelay: 5,\n                    LowThr: 30,\n                },\n                MAX: {\n                    HighThr: 250,\n                    CondDelay: 300,\n                    LowThr: 160,\n                },\n            },\n            RR: {\n                MIN: {\n                    HighThr: 10,\n                    CondDelay: 30,\n                    LowThr: 6,\n                },\n                MAX: {\n                    HighThr: 60,\n                    CondDelay: 300,\n                    LowThr: 55,\n                },\n            },\n            SPO2: {\n                MIN: {\n                    HighThr: 95,\n                    CondDelay: 60,\n                    LowThr: 70,\n                },\n                MAX: {\n                    HighThr: 100,\n                    CondDelay: 300,\n                    LowThr: 95,\n                },\n            },\n            BODYTEMP: {\n                MIN: {\n                    HighThr: userPreferenceUnit === 'SI'? 37 : 98.6,\n                    CondDelay: 20,\n                    LowThr: userPreferenceUnit === 'SI'? 32: 89.6,\n                },\n                MAX: {\n                    HighThr: userPreferenceUnit === 'SI'? 43 : 109.4,\n                    CondDelay: 300,\n                    LowThr: userPreferenceUnit === 'SI'? 36 : 96.8,\n                },\n            },\n            BPSYS: {\n                MIN: {\n                    HighThr: 75,\n                    CondDelay: 1,\n                    LowThr: 35,\n                },\n                MAX: {\n                    HighThr: 240,\n                    LowThr: 150,\n                    CondDelay: 300,\n                },\n            },\n            BPDIA: {\n                MIN: {\n                    HighThr: 50,\n                    LowThr: 15,\n                    CondDelay: 1,\n                },\n                MAX: {\n                    HighThr: 180,\n                    LowThr: 50,\n                    CondDelay: 300,\n                },\n            },\n            BP: {\n                MIN: {\n                    HighThr: 70,\n                    LowThr: 25,\n                    CondDelay: 1,\n                },\n                MAX: {\n                    HighThr: 200,\n                    LowThr: 125,\n                    CondDelay: 300,\n                },\n            },\n            PR: {\n                MIN: {\n                    HighThr: 60,\n                    CondDelay: 20,\n                    LowThr: 30,\n                },\n                MAX: {\n                    HighThr: 250,\n                    CondDelay: 300,\n                    LowThr: 120,\n                },\n            },\n            SKINTEMP: {\n                MIN: {\n                    HighThr: userPreferenceUnit === 'SI'? 20: 68,\n                    CondDelay: 20,\n                    LowThr: userPreferenceUnit === 'SI'? 15: 59,\n                },\n                MAX: {\n                    HighThr: userPreferenceUnit=== 'SI'? 45: 113,\n                    CondDelay: 300,\n                    LowThr: userPreferenceUnit === 'SI'? 34.4: 94,\n                },\n            },\n            POSTURE_ALERT: {\n                MIN: {\n                    HighThr: '',\n                    CondDelay: 2,\n                    LowThr: '',\n                },\n                MAX: {\n                    HighThr: '',\n                    CondDelay: 168,\n                    LowThr: '',\n                },\n            },\n            //------------------------\n            SINUS_BRADYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 30,\n                },\n                MAX: {\n                  HighThr: 50,\n                  CondDelay: 168,\n                  LowThr: 60,\n                },\n              },\n              SINUS_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 100,\n                },\n                MAX: {\n                  HighThr: 100,\n                  CondDelay: 168,\n                  LowThr: 250,\n                },\n              },\n              VENTRICULAR_FLUTTER: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              VENTRICULAR_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              IDIOVENTRICULAR_RYTHM: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              SUPRAVENTRICULAR_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              AFIB_FLUTTER: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              JUNCTIONAL_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              FIRST_DEGREE_AV_BLOCK: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              PAUSE: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              V_COUPLET: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              V_TRIGEMINY: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              V_BIGEMINY: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              PVC_RATE: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 1,\n                },\n                MAX: {\n                  HighThr: 10,\n                  CondDelay: 168,\n                  LowThr: 99,\n                },\n              },\n              PAC_RATE: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 1,\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: 99,\n                },\n              },\n              PVC: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              PAC: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr:20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n        }\n    }\n    alertHistory(param) {\n        let params = new HttpParams();\n\n        // Begin assigning parameters\n        let patientId = encodeURIComponent(param.patientId);\n        const url = `alerts/param/${patientId}`;\n        return this.http\n            .get<AlertHistory>(environment.dataApiUrl + url, { params })\n            .pipe(delay(100), catchError(this.handleError));\n\n    }\n    acknowledgeAlert(body) {\n        const url = \"alerts/acknowledge\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, body)\n            .pipe(delay(100), catchError(this.handleError));\n\n    }\n    eventList(param) {\n        let params = new HttpParams();\n        let patientId = encodeURIComponent(param.patientId);\n        let page = param.page + 1;\n        let pageSize = param.pageSize;\n        const url = `patients/${patientId}/events?page=${page}&size=${pageSize}`;\n        return this.http\n            .get(environment.dataApiUrl + url, { params })\n            .pipe(delay(100), catchError(this.handleError));\n\n    }\n    addEvent(event) {\n        const url = \"patients/patient-events\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, event)\n            .pipe(delay(100), catchError(this.handleError));\n    }\n    acknowledgeEvent(id){\n        const url = \"patients/ack-event\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, id)\n            .pipe(delay(100), catchError(this.handleError));\n    }\n    alphaNumericsOnly(event: KeyboardEvent) {\n        let charsOnlyPattern = /^[a-zA-Z0-9_ ]+$/;\n        let key = event.key;\n        if (charsOnlyPattern.test(key)) {\n            return true;\n        } else {\n            event.preventDefault();\n            return false;\n        }\n    }\n    \n    alphaNumericsOnlySpecialCases(event: KeyboardEvent) {\n        let charsOnlyPattern = /^[a-zA-Z0-9 ]+$/;\n        let key = event.key;\n        if (charsOnlyPattern.test(key)) {\n            return true;\n        } else {\n            event.preventDefault();\n            return false;\n        }\n    }\n\n\n\n    checkForSpecialCharacters(event: ClipboardEvent){\n        let clipboardData = event.clipboardData;\n        let key = clipboardData.getData('text');\n        let charsOnlyPattern = /^[0-9]+$/;\n        if (charsOnlyPattern.test(key)) {\n            return true;\n        } else {\n            event.preventDefault();\n            return false;\n        }\n    }\n    sortAlerts(alerts) {\n         return alerts.sort((a,b) =>\n         {\n             if(a['alertTimeFrom'] > b['alertTimeFrom']) return -1;\n             else if (a['alertTimeFrom'] < b['alertTimeFrom']) return 1;\n             else return 0;\n         });\n    }\n    forwardAlert(payload) {\n        const url = \"alerts/forward\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, payload)\n            .pipe(delay(100), catchError(this.handleError));\n    }\n  }\n\n","import { Action } from '@ngrx/store';\nimport { AlertConfigurationActionTypes } from './alert-configuration.types';\nimport {\n  AlertConfiguration, AlertConfigurationData, AlertDestinationConfiguration, AlertHistory,\n  ArrhythmiaAlertConfiguration, ClinicalFacilityContactList, EventList, MiscellaneousData, MiscSettings,\n} from './alert-configuration.models';\n\nexport class loadArrhythmiaAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadArrhythmiaAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadArrhythmiaAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: ArrhythmiaAlertConfiguration }) {}\n}\n\nexport class loadAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class updateAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { data: AlertConfigurationData }) {}\n}\n\nexport class updateAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class resetAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class resetAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class resetAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class loadDestinationAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertDestinationConfiguration }) {}\n}\n\nexport class loadDestinationAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadDestinationAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadClinicalFacilityContactsRequestAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadClinicalFacilityContactsFailureAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadClinicalFacilityContactsSuccessAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS;\n  constructor(public payload: { data: ClinicalFacilityContactList }) {}\n}\n//miscellaneoous actions\nexport class loadMiscellaneousSettingsRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST;\n    constructor(public payload: { url: string }) {}\n}\n\nexport class loadMiscellaneousSettingsFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class loadMiscellaneousSettingsSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS;\n    constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class updateMiscellaneousSettingsRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST;\n    constructor(public payload: { data: MiscellaneousData }) {}\n}\n\nexport class updateMiscellaneousSettingsFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class updateMiscellaneousSettingsSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS;\n    constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class resetMiscellaneousSettingsRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST;\n    constructor(public payload: { url: string }) {}\n}\n\nexport class resetMiscellaneousSettingsFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class resetMiscellaneousSettingsSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS;\n    constructor(public payload: { data: MiscSettings }) {}\n}\nexport class LoadAlertHistoryRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.ALERT_HISTORY_REQUEST;\n    constructor(public payload: { params: any }) {}\n}\n\nexport class LoadAlertHistoryFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.ALERT_HISTORY_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class LoadAlertHistorySuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.ALERT_HISTORY_SUCCESS;\n    constructor(public payload: { data: AlertHistory }) {}\n}\nexport class LoadEventListRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.EVENT_LIST_REQUEST;\n    constructor(public payload: { params: any }) {}\n}\n\nexport class LoadEventListFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.EVENT_LIST_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class LoadEventListSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.EVENT_LIST_SUCCESS;\n    constructor(public payload: { data: EventList }) {}\n}\n\nexport type AlertConfigurationActions = loadAlertConfigurationFailureAction | loadAlertConfigurationSuccessAction\n    | loadAlertConfigurationRequestAction | updateAlertConfigurationFailureAction | updateAlertConfigurationSuccessAction\n    | updateAlertConfigurationRequestAction | resetAlertConfigurationFailureAction | resetAlertConfigurationSuccessAction\n    | resetAlertConfigurationRequestAction | loadDestinationAlertConfigurationSuccessAction | loadDestinationAlertConfigurationFailureAction\n    | loadDestinationAlertConfigurationRequestAction | loadClinicalFacilityContactsRequestAction \n    | loadClinicalFacilityContactsFailureAction | loadClinicalFacilityContactsSuccessAction | loadMiscellaneousSettingsFailureAction | loadMiscellaneousSettingsSuccessAction\n    | loadMiscellaneousSettingsRequestAction | updateMiscellaneousSettingsFailureAction | updateMiscellaneousSettingsSuccessAction\n    | updateMiscellaneousSettingsRequestAction | resetMiscellaneousSettingsFailureAction | resetMiscellaneousSettingsSuccessAction\n    | resetMiscellaneousSettingsRequestAction | LoadAlertHistoryRequestAction | LoadAlertHistoryFailureAction | LoadAlertHistorySuccessAction\n    | LoadEventListRequestAction | LoadEventListFailureAction | LoadEventListSuccessAction\n    | loadArrhythmiaAlertConfigurationFailureAction | loadArrhythmiaAlertConfigurationSuccessAction | loadArrhythmiaAlertConfigurationRequestAction;\n\n\n\n\n","export interface AlertConfiguration {\n  status: string;\n  message: string;\n  data: AlertConfigurationData;\n}\nexport interface ArrhythmiaAlertConfiguration {\n  status: string;\n  message: string;\n  data: ArrhythmiaAlertConfigurationData;\n}\n\nexport interface AlertDestinationConfiguration {\n  status: string;\n  message: string;\n  data: AlertDestinationConfigData;\n}\n\nexport interface AlertConfigurationData {\n  AlertId: string;\n  FacilityId: string;\n  FacilityName: string;\n  GroupId: string;\n  modifiedDateTime: string;\n  IsForPatient: boolean;\n  PatientId: string;\n  Setting: Settings;\n  auditloginfotype: AuditLogInfoType;\n}\nexport interface ArrhythmiaAlertConfigurationData {\n  ArrhythmiaId: string;\n  Setting:ArrhythmiaSettings;\n  FacilityId: string;\n  FacilityName: string;\n  PatientId: string;\n  GroupId: string;\n  IsForPatient: boolean;\n  createdDateTime: string;\n  modifiedDateTime: string;\n}\nexport interface ArrhythmiaParameter {\n  Enabled: boolean;\n  Priority: string;\n  LowThr: number;\n  HighThr: number;\n  CondDelay: number;\n  HighUnit: string;\n  LowUnit: string;\n  Thr: number;\n}\nexport interface ArrhythmiaSettings {\n  SINUS_BRADYCARDIA:ArrhythmiaParameter;\n  SINUS_TACHYCARDIA:ArrhythmiaParameter;\n  VENTRICULAR_FLUTTER:ArrhythmiaParameter;\n  VENTRICULAR_TACHYCARDIA:ArrhythmiaParameter;\n  IDIOVENTRICULAR_RYTHM:ArrhythmiaParameter;\n  SUPRAVENTRICULAR_TACHYCARDIA:ArrhythmiaParameter;\n  AFIB_FLUTTER:ArrhythmiaParameter;\n  JUNCTIONAL_TACHYCARDIA:ArrhythmiaParameter;\n  FIRST_DEGREE_AV_BLOCK:ArrhythmiaParameter;\n  SECOND_DEGREE_AV_BLOCK_TYPE_I:ArrhythmiaParameter;\n  SECOND_DEGREE_AV_BLOCK_TYPE_II:ArrhythmiaParameter;\n  PAUSE:ArrhythmiaParameter;\n  V_COUPLET:ArrhythmiaParameter;\n  V_BIGEMINY:ArrhythmiaParameter;\n  V_TRIGEMINY:ArrhythmiaParameter;\n  PVC_RATE:ArrhythmiaParameter;\n  PAC_RATE:ArrhythmiaParameter;\n  PVC:ArrhythmiaParameter;\n  PAC:ArrhythmiaParameter;\n}\n\nexport interface AuditLogInfoType {\n  CreatedBy: string;\n  CreatedById: string;\n  ModifiedBy: string;\n  ModifiedById: string;\n  CreatedDateTime: string;\n  ModifiedDateTime: string;\n}\n\nexport interface Settings {\n  Param: ParameterSettings;\n  Common: CommonSettings;\n}\n\nexport interface ParameterSettings {\n  PhyParam: PhyParameterSettings;\n  TechParam: TechnicalParameterSettings;\n}\n\nexport interface CommonSettings {\n  PhyCommon: PhyCommonSettings;\n  TechCommon: TechnicalCommonSettings;\n}\n\nexport interface PhyParameterSettings {\n  HR: PhyParameter;\n  RR: PhyParameter;\n  PR: PhyParameter;\n  SPO2: PhyParameter;\n  BPSYS: PhyParameter;\n  BPDIA: PhyParameter;\n  BP: PhyParameter;\n  SKINTEMP: PhyParameter;\n  BODYTEMP: PhyParameter;\n  CardiacStandStill: PhyParameter;\n}\n\nexport interface TechnicalParameterSettings {\n  LEAD_OFF: TechnicalParameter;\n  BIOSENSOR_DISCONNECTED: TechnicalParameter;\n  RELAY_DISCONNECTED: TechnicalParameter;\n  LOW_BATTERY: TechnicalParameter;\n  COMPUTE_HR_ERROR: TechnicalParameter;\n  COMPUTE_RR_ERROR: TechnicalParameter;\n  COMPUTE_SPO2_ERROR: TechnicalParameter;\n  COMPUTE_BODY_TEMP_ERROR: TechnicalParameter;\n}\n\nexport interface PhyCommonSettings {\n  HIGH: PhyCommon;\n  MEDIUM: PhyCommon;\n  LOW: PhyCommon;\n}\n\nexport interface TechnicalCommonSettings {\n  LEAD_OFF: TechnicalCommon;\n  BIOSENSOR_DISCONNECTED: TechnicalCommon;\n  RELAY_DISCONNECTED: TechnicalCommon;\n  LOW_BATTERY: TechnicalCommon;\n  COMPUTE_HR_ERROR: TechnicalCommon;\n  COMPUTE_RR_ERROR: TechnicalCommon;\n  COMPUTE_SPO2_ERROR: TechnicalCommon;\n  COMPUTE_BODY_TEMP_ERROR: TechnicalCommon;\n}\n\nexport interface PhyParameter {\n  Enabled: boolean;\n  Priority: string;\n  LowThr: number;\n  HighThr: number;\n  CondDelay: number;\n}\n\nexport interface TechnicalParameter {\n  Enabled: boolean;\n}\n\nexport interface PhyCommon {\n  Frequency_UnAck: number;\n  Frequency_Ack: number;\n  Percentage_UnAck: number;\n  Percentage_Ack: number;\n}\n\nexport interface TechnicalCommon {\n  CondDelay: number;\n  Frequency_UnAck: number;\n  Frequency_Ack: number;\n}\n\nexport interface ClinicalFacilityContactList {\n  status: string;\n  message: string;\n  data: ClinicalFacilityContactListData;\n}\n\n// Root Alert Destination Settings Model\nexport interface AlertDestinationConfigData {\n  AlertDestId?: string;\n  FacilityId?: string;\n  GroupId?: string;\n  PatientId?: string;\n  Setting?: AlertDestSettingType;\n  SettingTech?: AlertDestSettingType;\n  auditloginfotype?: AuditLogInfoType;\n  NotificationMessage?: string;\n  UserData;\n}\n\nexport interface AlertDestSettingType {\n  AlertSMS: string;\n  AlertWhatsApp: string;\n  AlertEmail: string;\n  AlertCaregiverApp: string;\n  AlertSMSEnabled: boolean;\n  AlertWhatsAppEnabled: boolean;\n  AlertEmailEnabled: boolean;\n  AlertCaregiverAppEnabled: boolean;\n}\nexport interface ClinicalFacilityContactListData\n  extends Array<ClinicalFacilityContactListItem> {}\n\ninterface ClinicalFacilityContactListItem {\n  displayName: string;\n  userId: string;\n}\n\n//misc\n\nexport interface MiscSettings {\n  status: string;\n  message: string;\n  data: MiscellaneousData;\n}\nexport interface MiscellaneousData {\n  thirdPartyDeviceSettings: DeviceSettings[];\n  ecgFilterSettings: EcgFilterSetting;\n  bioSensorConfigSettings: BiosensorSetting[];\n  otherSettings: OtherMiscSettings;\n  facilityId: string;\n  groupId: string;\n  patientId: string;\n  miscSettingsId: string;\n  modifiedDateTime: string;\n  alertId: string;\n}\nexport interface EcgFilterSetting {\n  ecgFilterSetting: string;\n  isActive: boolean;\n}\nexport interface DeviceSettings {\n  type: string;\n  isActive: boolean;\n  defaultDevice: string;\n  onTime: number;\n  offTime: number;\n  dutyCycle: number;\n}\nexport interface BiosensorSetting {\n  isActive: boolean;\n  ssid1: string;\n  ssid2: string;\n  password1: string;\n  password2: string;\n}\nexport interface OtherMiscSettings {\n  autoGeneratePatientId: boolean;\n  enableAccessToSPPHY: boolean;\n  facilityName: string;\n  facilityLogo: string;\n  emr: string;\n}\nexport interface AlertHistory {\n  status: string;\n  message: string;\n  data: AlertHistoryData;\n}\nexport interface AlertHistoryData {\n  patientId: string;\n  topAlerts: alertType[];\n}\nexport interface alertType {\n  alertKey: string;\n  topN : alert[];\n}\nexport interface alert {\n  patientId: string;\n  firstName: string;\n  lastName: string;\n  activePatch: string;\n  alertTime: number;\n  alertTimeFrom: number;\n  alertType: string;\n  alertKey: string;\n  id: string;\n  alertValue: number;\n  ewsScore: number;\n  ack: boolean;\n  active: boolean;\n  setting: any[];\n}\nexport interface EventList {\n  status: string;\n  message: string;\n  data: {\n    items: EventListData[],\n    total: number\n  };\n}\nexport interface EventListData {\n  alertType: string;\n  alertTime: number;\n  notes: string;\n  ack: boolean;\n  notify: boolean;\n  acknowledgedBy: string;\n  acknowledgedOn: number;\n}\n\n","import {AlertConfigurationActions} from \"./alert-configuration.actions\";\nimport {\n    AlertConfigurationData,\n    AlertDestinationConfigData,\n    ArrhythmiaAlertConfigurationData,\n    AlertHistoryData,\n    ClinicalFacilityContactListData,\n    EventListData,\n    MiscellaneousData\n} from \"./alert-configuration.models\";\nimport {AlertConfigurationActionTypes} from './alert-configuration.types';\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\n\nexport interface patientAlertConfigurationState {\n    alert_configurations: AlertConfigurationData;\n    arrhythmiaConfigurations: ArrhythmiaAlertConfigurationData;\n    error: string;\n    status: string;\n    message: string;\n    alert_destinations: AlertDestinationConfigData,\n    groupIdSelected: string,\n    contacts: ClinicalFacilityContactListData,\n    MISCELLANEOUS_SETTINGS_DATA: MiscellaneousData;\n    loaded: boolean;\n    alert_history: AlertHistoryData;\n    historyLoaded: boolean;\n    event_list: EventListData[];\n    eventListLoaded: boolean;\n    eventListCount: number;\n    tableState: TableState;\n}\n\nconst initialAlertConfigurationState: patientAlertConfigurationState = {\n  arrhythmiaConfigurations: {\n    ArrhythmiaId: \"\",\n    Setting: {\n      SINUS_BRADYCARDIA: {\n        Enabled: true,\n        Priority: \"HIGH\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SINUS_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    IDIOVENTRICULAR_RYTHM: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SUPRAVENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    AFIB_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    JUNCTIONAL_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    FIRST_DEGREE_AV_BLOCK: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n      Enabled: true,\n      Priority: \"\",\n      LowThr: 0,\n      HighThr: 0,\n      CondDelay: 0,\n      HighUnit: \"\",\n      LowUnit: \"\",\n      Thr: 0,\n  },\n    PAUSE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_COUPLET: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_BIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_TRIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    },\n    FacilityId: \"\",\n    FacilityName: \"\",\n    PatientId: \"\",\n    GroupId: \"\",\n    IsForPatient: true,\n    createdDateTime: \"\",\n    modifiedDateTime: \"\",\n  },\n  alert_configurations: {\n    AlertId: \"\",\n    FacilityId: \"\",\n    FacilityName: \"\",\n    GroupId: \"\",\n    IsForPatient: false,\n    PatientId: \"\",\n    modifiedDateTime: \"\",\n    Setting: {\n      Param: {\n        PhyParam: {\n          HR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          RR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          PR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SPO2: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPSYS: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPDIA: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SKINTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BODYTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          CardiacStandStill: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n        },\n        TechParam: {\n          LEAD_OFF: {\n            Enabled: false,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            Enabled: false,\n          },\n          RELAY_DISCONNECTED: {\n            Enabled: false,\n          },\n          LOW_BATTERY: {\n            Enabled: false,\n          },\n          COMPUTE_HR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_RR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_SPO2_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            Enabled: false,\n          },\n        },\n      },\n      Common: {\n        PhyCommon: {\n          HIGH: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          MEDIUM: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          LOW: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n        },\n        TechCommon: {\n          LEAD_OFF: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          RELAY_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          LOW_BATTERY: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_HR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_RR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_SPO2_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n        },\n      },\n    },\n    auditloginfotype: {\n      CreatedBy: \"\",\n      CreatedById: \"\",\n      ModifiedBy: \"\",\n      ModifiedById: \"\",\n      CreatedDateTime: \"\",\n      ModifiedDateTime: \"\",\n\n    },\n  },\n    error: '',\n    status: '',\n    message: '',\n    loaded: false,\n    historyLoaded: false,\n    tableState: TableState.DEFAULT,\n    \n    MISCELLANEOUS_SETTINGS_DATA: {\n        thirdPartyDeviceSettings: [],\n        ecgFilterSettings: {\n            ecgFilterSetting: '',\n            isActive: false\n        },\n        bioSensorConfigSettings: [],\n        otherSettings: {\n            autoGeneratePatientId: false,\n            enableAccessToSPPHY: false,\n            facilityName: '',\n            facilityLogo: '',\n            emr: ''\n        },\n        facilityId: '0',\n        groupId: '0',\n        patientId: '0',\n        alertId: '0',\n        miscSettingsId: \"\",\n        modifiedDateTime: \"\"\n\n\n    },\n    alert_destinations: {\n        AlertDestId: '',\n        FacilityId: '',\n        GroupId: '',\n        PatientId: '',\n        Setting: {\n            AlertSMS: '',\n            AlertWhatsApp: '',\n            AlertEmail: '',\n            AlertCaregiverApp: '',\n            AlertSMSEnabled:false,\n            AlertWhatsAppEnabled: false,\n            AlertEmailEnabled: false,\n            AlertCaregiverAppEnabled: false,\n        },\n        SettingTech: {\n            AlertSMS: '',\n            AlertWhatsApp: '',\n            AlertEmail: '',\n            AlertCaregiverApp: '',\n            AlertSMSEnabled:false,\n            AlertWhatsAppEnabled: false,\n            AlertEmailEnabled: false,\n            AlertCaregiverAppEnabled: false,\n        },\n        UserData: [],\n        auditloginfotype: {\n            CreatedBy: '',\n            CreatedById: '',\n            ModifiedBy: '',\n            ModifiedById: '',\n            CreatedDateTime: '',\n            ModifiedDateTime: ''\n        },\n        NotificationMessage: ''\n      },\n   \n  groupIdSelected: null,\n  contacts: [],\n  alert_history: {\n    patientId: \"\",\n    topAlerts: []\n  },\n  event_list: [],\n  eventListLoaded: false,\n  eventListCount: 0\n};\n\nexport const patientAlertConfigurationKey = \"patientAlertConfiguration\";\n\nexport function AlertConfigurationReducer(state: patientAlertConfigurationState = initialAlertConfigurationState,\n    action: AlertConfigurationActions) {\n\n    switch (action.type) {\n      case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST: {\n        return {\n            ...state, error: null, loaded: false\n        };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE: {\n        return {\n            ...state, error: action.payload\n        };\n    }\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS: {\n        return {\n            ...state,\n            arrhythmiaConfigurations: action.payload.data.data,\n            message: action.payload.data.message,\n            status: action.payload.data.status,\n            loaded: true\n        };\n    }\n        case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST: {\n            return {\n                ...state, error: null, loaded: false\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS: {\n            return {\n                ...state,\n                alert_configurations: action.payload.data.data,\n                message: action.payload.data.message,\n                status: action.payload.data.status,\n                loaded: true\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST: {\n            return {\n                ...state, error: null, loaded: false\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS: {\n            return {\n                ...state,\n                alert_destinations: action.payload.data.data,\n                message: action.payload.data.message,\n                status: action.payload.data.status,\n                loaded: true\n            };\n        }\n       \n        case AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS: {\n            return {\n                ...state,\n                contacts: action.payload.data.data\n            };\n        }\n        case AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST: {\n            return {\n                ...state, error: null\n            };\n        }\n        case AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST: {\n            return {\n                ...state, error: null,\n                loaded: false,\n\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS: {\n            return {\n                ...state, MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n                message: action.payload.data.message, status: action.payload.data.status,\n                loaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST: {\n            return {\n                ...state, error: null,\n                loaded: false,\n            };\n        }\n\n        case AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS: {\n            return {\n                ...state, MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n                message: action.payload.data.message, status: action.payload.data.status,\n                loaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST: {\n            return {\n                ...state, error: null,\n                loaded: false,\n            };\n        }\n\n        case AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS: {\n            return {\n                ...state, MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n                message: action.payload.data.message, status: action.payload.data.status,\n                loaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.ALERT_HISTORY_REQUEST: {\n            return {\n                ...state, error: null,\n                historyLoaded: false,\n            };\n        }\n\n        case AlertConfigurationActionTypes.ALERT_HISTORY_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.ALERT_HISTORY_SUCCESS: {\n            return {\n                ...state,\n                alert_history: action.payload.data.data,\n                historyLoaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.EVENT_LIST_REQUEST: {\n            return {\n                ...state, error: null,\n                eventListLoaded: false,\n                tableState: TableState.LOADING\n            };\n        }\n\n        case AlertConfigurationActionTypes.EVENT_LIST_FAILURE: {\n            return {\n                ...state, error: action.payload,\n                tableState: TableState.FAILURE\n            };\n        }\n\n        case AlertConfigurationActionTypes.EVENT_LIST_SUCCESS: {\n            return {\n                ...state,\n                event_list: action.payload.data.data.items,\n                eventListLoaded: true,\n                eventListCount: action.payload.data.data.total,\n                tableState: TableState.SUCCESS\n            };\n        }\n        default:\n            return state;\n    }\n      \n\n}\n\n\n\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\n\nimport { patientAlertConfigurationState, patientAlertConfigurationKey } from './alert-configuration.reducer';\n\nconst getAlertConfigurationsState =\n  createFeatureSelector<patientAlertConfigurationState>(patientAlertConfigurationKey);\n\nexport const getAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_configurations\n);\n\nexport const getArrhythmiaAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.arrhythmiaConfigurations\n);\n\nexport const getDestinationAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_destinations\n);\n\nexport const getAlertConfigurationError = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.error\n);\nexport const getAlertConfigurationStatus = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.status\n);\nexport const getAlertConfigurationMessage = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.message\n);\nexport const getAlertGroupId = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.groupIdSelected\n);\n\nexport const getClinicalFacilityContacts = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.contacts\n);\n\nexport const getMiscellaneousSettings = createSelector(\n    getAlertConfigurationsState,\n    state => state?.MISCELLANEOUS_SETTINGS_DATA\n);\n\nexport const getMiscellaneousError = createSelector(\n    getAlertConfigurationsState,\n    state => state.error\n);\nexport const getMiscellaneousStatus = createSelector(\n    getAlertConfigurationsState,\n    state => state.status\n);\nexport const getMiscellaneousMessage = createSelector(\n    getAlertConfigurationsState,\n    state => state.message\n);\nexport const getLoaderStatus = createSelector(\n    getAlertConfigurationsState,\n    (state) => state?.loaded\n  );\nexport const getAlertHistory = createSelector(\n    getAlertConfigurationsState,\n    state => state?.alert_history\n);\nexport const getAlertHistoryLoader = createSelector(\n    getAlertConfigurationsState,\n    state => state?.historyLoaded\n);\nexport const getEventList = createSelector(\n    getAlertConfigurationsState,\n    state => state?.event_list\n);\nexport const getEventListLoader = createSelector(\n    getAlertConfigurationsState,\n    state => state?.eventListLoaded\n);\nexport const getEventListCount = createSelector(\n    getAlertConfigurationsState,\n    state => state?.eventListCount\n);\nexport const getTableState = createSelector(\n    getAlertConfigurationsState,\n    state => state?.tableState\n);\n","export enum AlertConfigurationActionTypes {\n  LOAD_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load alert configuration request\",\n  LOAD_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load alert configuration Failure\",\n  LOAD_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load alert configuration Success\",\n\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST = \"[ARRHYTHMIAALERTSCONFIGURATION] Arrhythmia load alert configuration request\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE = \"[ARRHYTHMIAALERTSCONFIGURATION] Arrhythmia load alert configuration Failure\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS = \"[ARRHYTHMIAALERTSCONFIGURATION] Arrhythmia load alert configuration Success\",\n\n  UPDATE_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Update alert configuration request\",\n  UPDATE_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Update alert configuration Failure\",\n  UPDATE_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Update alert configuration Success\",\n\n  RESET_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Reset alert configuration request\",\n  RESET_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Reset alert configuration Failure\",\n  RESET_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Reset alert configuration Success\",\n\n  LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Success\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Request\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Failure\",\n\n    CF_CONATCT_LIST_REQUEST = '[ALERTSCONFIGURATION] CF Contact list Request',\n    CF_CONATCT_LIST_FAILURE = '[ALERTSCONFIGURATION] CF Contact list Failure',\n    CF_CONATCT_LIST_SUCCESS = '[ALERTSCONFIGURATION] CF Contact list Success',\n\n    LOAD_MISCELLANEOUS_SETTINGS_REQUEST = '[MISCELLANEOUSSETTINGS] Load miscellaneous settings request',\n    LOAD_MISCELLANEOUS_SETTINGS_FAILURE = '[MISCELLANEOUSSETTINGS] Load miscellaneous settings Failure',\n    LOAD_MISCELLANEOUS_SETTINGS_SUCCESS = '[MISCELLANEOUSSETTINGS] Load miscellaneous settings Success',\n\n  UPDATE_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings request\",\n  UPDATE_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Failure\",\n  UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Success\",\n\n  RESET_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings request\",\n  RESET_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Failure\",\n  RESET_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Success\",\n\n  ALERT_HISTORY_REQUEST = \"[ALERT HISTORY] Alert History Request\",\n  ALERT_HISTORY_SUCCESS = \"[ALERT HISTORY] Alert History Success\",\n  ALERT_HISTORY_FAILURE = \"[ALERT HISTORY] Alert History Failure\",\n\n  EVENT_LIST_REQUEST = \"[EVENT LIST] Event List Request\",\n  EVENT_LIST_SUCCESS = \"[EVENT LIST] Event List Success\",\n  EVENT_LIST_FAILURE = \"[EVENT LIST] Event List Failure\",\n\n}\n","import * as AlertConfigurationStoreActions from './alert-configuration.actions';\nimport * as AlertConfigurationStoreSelectors from './alert-configuration.selector';\nimport * as AlertConfigurationStoreState from './alert-configuration.reducer';\nimport * as AlertConfigurationModels from './alert-configuration.models';\nimport * as AlertConfigurationActionTypes from './alert-configuration.types';\nexport {\n    AlertConfigurationStoreActions,\n    AlertConfigurationStoreSelectors,\n    AlertConfigurationStoreState,\n    AlertConfigurationModels,\n    AlertConfigurationActionTypes,\n};\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Subscription, Observable } from \"rxjs\";\nimport {\n  uiAccessRoles,\n  technicalAlertItems,\n  isAllowedRole,\n  alertConfigMinMaxValues,\n} from \"src/app/utils/helpers\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-technical-alerts\",\n  templateUrl: \"./technical-alerts.component.html\",\n  styleUrls: [\"./technical-alerts.component.scss\"],\n})\nexport class TechnicalAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n    showExtraHeader: true,\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 70px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 250px\"\n    },\n    {\n      id: \"alert_freq\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-start\"],\n      //style: \"width: 360px;\",\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n  ];\n  constructor(\n    private userPreference: UserPreferenceService,\n    private commonService: CommonService,\n    public dialog: MatDialog,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private snackbar: SnackbarService,\n    public alertService : AlertConfigurationsService\n  ) {}\n\n  editAlertFrequency = [false];\n  editAlertFrequencyUnAck = [false];\n  editDelaytime = [false];\n\n  roles: string[];\n  technicalAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.TECHNICAL_ALERT;\n  isEditAccess: boolean = false;\n  selectedTab = \"parameter\";\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  technicalAlert = technicalAlertItems;\n  masterData: any = {};\n  technicalAlertSettings: any = [];\n  technicalAlertSettingsCopy: any = [];\n  cfId: string = \"\";\n  alertId: any = null;\n  GroupId: string = \"\";\n  error: string;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  patientId: string = \"PATALDRT1\";\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  technicalAlertMinMax = alertConfigMinMaxValues.technicalAlert;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  lastUpdated;\n  loaderSubscription;\n  loader = true;\n\n  ngOnInit() {\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.cfId = this.autheticationService.getCfId();\n    this.patientId = this.patientData.patientId;\n\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n        .subscribe((loaded) => {\n          this.loader = !loaded;\n        });\n    this.getSettings();\n    \n    this.alertSettings$.subscribe((data) => {\n      //this.loader = false;\n      this.lastUpdated = new Date().toUTCString();\n      this.masterData = { ...data };\n      this.masterData.GroupId = \"\";\n      this.masterData.PatientId = this.patientId;\n      this.masterData.FacilityId = this.cfId;\n      this.masterData.AlertId = \"\";\n      const alerts = [];\n      this.technicalAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any; units: any }, i) => {\n          const settings = data.Setting.Param.TechParam[element.key];\n          if(settings) {\n            alerts.push({\n              ...settings,\n              ...this.masterData.Setting.Common.TechCommon[element.key],\n              alert: element.alerts,\n              unit: element.unit,\n              units: element.units,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      this.technicalAlertSettings = alerts;\n      this.technicalAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setTechnicalAlertEditSubmit(false);\n      this.hideTechnicalAlertEdit();\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.AlertId;\n      this.isShowResetButton = this.alertSettings?.IsForPatient;\n    });\n    if (isAllowedRole(this.technicalAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.technicalAlertSettings = JSON.parse(\n            JSON.stringify(this.technicalAlertSettingsCopy)\n          );\n          this.hideTechnicalAlertEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateTechnicalSettings();\n        }\n      })\n    );\n  }\n\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n\n  getSettings = () => {\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient/${this.cfId}/${patientId}`;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data: any) => {\n        this.error = data;\n        if(data?.error?.errorMessage === 'ACCESS_DENIED') {\n          this.snackbar.openCustomSnackBar(\"alert_config_module.messages.access_denied\", 'bottom', 'center', true);\n        }\n      });\n  };\n\n  \n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  showEditAlertFrequency(index: string | number) {\n    this.editAlertFrequency[index] = true;\n  }\n  hideEditAlertFrequency(index: string | number) {\n    this.editAlertFrequency[index] = false;\n  }\n\n  showEditAlertFrequencyUnAck(index: string | number) {\n    this.editAlertFrequencyUnAck[index] = true;\n  }\n  hideEditAlertFrequencyUnAck(index: string | number) {\n    this.editAlertFrequencyUnAck[index] = false;\n  }\n\n  showEditDelaytime(index: string | number) {\n    this.editDelaytime[index] = true;\n  }\n  hideEditDelaytime(index: string | number) {\n    this.editDelaytime[index] = false;\n  }\n\n  // Hide all active edit buttons\n  hideTechnicalAlertEdit() {\n    this.editAlertFrequency = [false];\n    this.editDelaytime = [false];\n    this.editAlertFrequencyUnAck = [false];\n  }\n  async updateTechnicalSettings() {\n    const technicalParameter: any = {};\n    const technicalCommonParameter: any = {};\n    this.technicalAlertSettings.forEach(\n      (element: {\n        key: string | number;\n        Enabled: any;\n        CondDelay: string;\n        Frequency_Ack: any;\n        Frequency_UnAck: any;\n      }) => {\n        technicalParameter[element.key] = {\n          Enabled: element.Enabled,\n        };\n        technicalCommonParameter[element.key] = {\n          CondDelay: parseInt(element.CondDelay),\n          Frequency_UnAck: parseInt(element.Frequency_UnAck),\n          Frequency_Ack: parseInt(element.Frequency_Ack),\n        };\n      }\n    );\n\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"TechParam\"] = technicalParameter;\n    payload.Setting = payload?.Setting || {};\n    payload.Setting.Common = payload.Setting?.Common || {};\n    payload.Setting.Common.TechCommon = technicalCommonParameter;\n    delete payload[\"auditloginfotype\"];\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient-edit/${this.cfId}/${patientId}`;\n   \n    try {\n      \n      const resp = await this.backendApiService\n      .post(environment.dataApiUrl + url, payload)\n      .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setTechnicalAlertEditSubmit(false);\n        this.hideTechnicalAlertEdit();\n        this.getSettings();\n      }\n    } catch (error) {}\n  }\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"alertFrequencyACK\":\n        this.editAlertFrequency[index] = !this.editAlertFrequency[index];\n        break;\n      case \"alertFrequencyNACK\":\n        this.editAlertFrequencyUnAck[index] =\n          !this.editAlertFrequencyUnAck[index];\n        break;\n      case \"delay\":\n        this.editDelaytime[index] = !this.editDelaytime[index];\n        break;\n      default:\n        break;\n    }\n  }\n\n  toggle(i: number) {\n    this.editAlertFrequency[i] = false;\n    this.editDelaytime[i] = false;\n    this.editAlertFrequencyUnAck[i] = false;\n    this.updated();\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setTechnicalAlertEditSubmit(false);\n    this.hideTechnicalAlertEdit();\n    this.technicalAlertSettings = JSON.parse(\n      JSON.stringify(this.technicalAlertSettingsCopy)\n    );\n    \n  }\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n   this.updateTechnicalSettings();\n  }\n  \n   // Handle alert setting factory reset action\n   async handleFactoryReset() {\n     const patientId = encodeURIComponent(this.patientId);\n    const url = `alert-settings/patient-reset/${this.cfId}/${patientId}/${this.alertId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center',true);\n        this.getSettings();\n      } \n    } catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n    }\n  }\n\n\n  // input filed validation\n  technicalParamInputChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      Frequency_Ack: \"invalid_alertfreq_ack\",\n      Frequency_UnAck: \"invalid_alertfreq_unack\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n        this.technicalAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n        this.technicalAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.technicalAlertSettings[index][key] =\n          this.technicalAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    if (key === \"Frequency_Ack\") {\n      if (\n          this.technicalAlertSettings[index][key] <=\n          this.technicalAlertSettings[index][\"Frequency_UnAck\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n            this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Frequency_UnAck\") {\n      if (\n          this.technicalAlertSettings[index][key] >=\n          this.technicalAlertSettings[index][\"Frequency_Ack\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n            this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n        !str ||\n        0 === str.length ||\n        str === \" \" ||\n        str === \"null\" ||\n        str === \"undefined\"\n    );\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.technicalAlertSettings) !== JSON.stringify(this.technicalAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","<div class=\"container-fuild\">\n    <app-patient-details [patientData]=\"patientData\" [updated]=\"lastUpdated\"></app-patient-details>\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n        <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <div *ngIf=\"!loader\" class=\"inside-div head-border  comman-table-users bg-thead-color\">\n        <ls-table class=\"fixed-header-relative\" [(config)]=\"config\" [columns]=\"columns\" [data]=\"technicalAlertSettings\">\n            <ng-template lsWidgetName=\"enabled\" let-config>\n                <span class=\"d-flex align-items-center\">\n                <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n                                  [disabled]=\"!isEditAccess\">\n                </mat-slide-toggle>\n                </span>\n            </ng-template>\n            <ng-template lsWidgetName=\"alerts\" let-config>\n                {{ config.alert }}\n            </ng-template>\n            <ng-template lsWidgetName=\"alert_freqExtraHeader\" let-technicalAlertConfig>\n                <div class=\"d-flex  align-items-center justify-content-center\">\n                    <div class=\"d-flex ack-column align-items-center justify-content-center\">\n                        {{ \"alert_config_module.acknowledge\" | translate }}\n                    </div>\n                    <div class=\"d-flex ack-column align-items-center justify-content-center\">\n                        {{ \"alert_config_module.unacknowledge\" | translate }}\n                    </div>\n                </div>\n            </ng-template>                                           \n            <ng-template lsWidgetName=\"alert_freq\" let-technicalAlertConfig>\n                <div class=\"d-flex  align-items-center justify-content-center\">\n                    <div class=\"d-flex ack-column justify-content-center align-items-center\">\n                        <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n                            <div *ngIf=\"!editAlertFrequency[technicalAlertConfig?.index]\" class=\"text-value align-items-center justify-content-start\">\n                                {{ technicalAlertConfig.Frequency_Ack }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins'|translate) : technicalAlertConfig.units }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"d-flex ack-column justify-content-center align-items-center\">\n                        <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n                            <div *ngIf=\"!editAlertFrequencyUnAck[technicalAlertConfig?.index]\" class=\"text-value align-items-center justify-content-start\">\n                                {{ technicalAlertConfig.Frequency_UnAck }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins'|translate) : technicalAlertConfig.units }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template lsWidgetName=\"modified\" let-config>\n                <span *ngIf=\"masterData?.modifiedDateTime\">\n                    {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n                </span><br/>\n                <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n            </ng-template>\n        </ls-table>\n\n</div>\n</div>\n<mat-dialog-actions class=\"row px-1\" *ngIf=\"!loader && isEditAccess\">\n    <div class=\"col-lg-6\">\n        <button\n                mat-flat-button\n                class=\"btn reset_btn_bg mb-2 mb-md-0 px-2\"\n                (click)=\"openDialog()\"\n                *ngIf=\"isShowResetButton\"\n        >\n            <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n            <span class=\"btn-clr ps-1\">{{\n                \"alert_config_module.reset_to_default\" | translate\n                }}</span>\n        </button>\n    </div>\n    <div class=\"col-lg-6 text-end\">\n        <ng-template [ngIf]=\"showActionButtons\">\n            <button\n                    mat-flat-button\n                    color=\"warn\"\n                    class=\"fill-btn\"\n                    (click)=\"handleAlertSettingsEditCancel()\"\n            >\n                <span>{{ \"alert_config_module.cancel\" | translate }}</span></button\n            >&nbsp;\n            <button\n                    mat-flat-button\n                    color=\"primary\"\n                    class=\"fill-btn\"\n                    (click)=\"handleAlertSettingsSave()\"\n            >\n                <span>{{ \"alert_config_module.save\" | translate }}</span>\n            </button>\n        </ng-template>\n    </div>\n</mat-dialog-actions>","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommonService {\n  private hidePrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  parameterAlertEditHide = this.hidePrameterAlertEdit.asObservable();\n\n  private hideArrhythmiaPrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  arrhythmiaParameterAlertEditHide = this.hideArrhythmiaPrameterAlertEdit.asObservable();\n\n  private hideTechnicalAlertEdit = new BehaviorSubject<boolean>(false);\n  technicalAlertEditHide = this.hideTechnicalAlertEdit.asObservable();\n\n  private hidePriorityAlertEdit = new BehaviorSubject<boolean>(false);\n  priorityAlertEditHide = this.hidePriorityAlertEdit.asObservable();\n\n  private showSettingsAlertActionButtons = new BehaviorSubject<boolean>(false);\n  settingsAlertActionButtonsShow =this.showSettingsAlertActionButtons.asObservable(); \n\n  private savePrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  parameterAlertEditSubmit = this.savePrameterAlertEdit.asObservable();\n\n  private saveArrhythmiaPrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  arrhythmiaParameterAlertEditSubmit = this.saveArrhythmiaPrameterAlertEdit.asObservable();\n  private saveTechnicalAlertEdit = new BehaviorSubject<boolean>(false);\n  technicalAlertEditSubmit = this.saveTechnicalAlertEdit.asObservable();\n\n  private savePriorityAlertEdit = new BehaviorSubject<boolean>(false);\n  priorityAlertEditSubmit = this.savePriorityAlertEdit.asObservable();\n\n  private hideDestinationAlertEdit = new BehaviorSubject<boolean>(false);\n  destinationAlertEditHide = this.hideDestinationAlertEdit.asObservable();\n\n  private hideNotificationAlertEdit = new BehaviorSubject<boolean>(false);\n  notificationAlertEditHide = this.hideNotificationAlertEdit.asObservable();\n\n  private saveNotificationAlertEdit = new BehaviorSubject<boolean>(false);\n  notificationAlertEditSubmit = this.saveNotificationAlertEdit.asObservable();\n\n  private saveDestinationAlertEdit = new BehaviorSubject<boolean>(false);\n  destinationAlertEditSubmit = this.saveDestinationAlertEdit.asObservable();\n\n  constructor() {}\n\n  setParameterAlertEditHide(isHide: boolean) {\n    this.hidePrameterAlertEdit.next(isHide);\n  }\n\n  setArrhythmiaParameterAlertEditHide(isHide: boolean) {\n    this.hidePrameterAlertEdit.next(isHide);\n  }\n\n  setTechnicalAlertEditHide(isHide: boolean) {\n    this.hideTechnicalAlertEdit.next(isHide);\n  }\n\n  setPriorityAlertEditHide(isHide: boolean) {\n    this.hidePriorityAlertEdit.next(isHide);\n  }\n\n  setSettingsAlertActionButtons(isShow: boolean) {\n    this.showSettingsAlertActionButtons.next(isShow);\n  }\n\n  setParameterAlertEditSubmit(isSubmit: boolean) {\n    this.savePrameterAlertEdit.next(isSubmit);\n  }\n\n  setArrhythmiaParameterAlertEditSubmit(isSubmit: boolean) {\n    this.saveArrhythmiaPrameterAlertEdit.next(isSubmit);\n  }\n\n  setTechnicalAlertEditSubmit(isSubmit: boolean) {\n    this.saveTechnicalAlertEdit.next(isSubmit);\n  }\n  setPriorityAlertEditSubmit(isSubmit: boolean) {\n    this.savePriorityAlertEdit.next(isSubmit);\n  }\n\n  setDestinationAlertEditHide(isHide: boolean) {\n    this.hideDestinationAlertEdit.next(isHide);\n  }\n\n  setNotificationAlertEditHide(isHide: boolean) {\n    this.hideNotificationAlertEdit.next(isHide);\n  }\n\n  setNotificationAlertEditSubmit(isSubmit: boolean) {\n    this.saveNotificationAlertEdit.next(isSubmit);\n  }\n\n  setDestinationAlertEditSubmit(isSubmit: boolean) {\n    this.saveDestinationAlertEdit.next(isSubmit);\n  }\n  convertSecToHrs(seconds) {\n    return seconds/3600;\n  }\n  convertHrtoSecs(hours) {\n    return hours*3600;\n  }\n}\n","import { FormGroup, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport const atLeastOne =\n  (validator: ValidatorFn, controls: string[] = null) =>\n  (group: FormGroup): ValidationErrors | null => {\n    if (!controls) {\n      controls = Object.keys(group.controls);\n    }\n\n    const hasAtLeastOne =\n      group &&\n      group.controls &&\n      controls.some((k) => !validator(group.controls[k]));\n\n    return hasAtLeastOne\n      ? null\n      : {\n          atLeastOne: true,\n        };\n  };\n"],"names":["EventEmitter","priorityColorCode","arrhythmiaAlertPriorityOptions","uiAccessRoles","ArrhythmiaParameterAlertItems","isAllowedRole","postures","AlertConfigurationStoreActions","AlertConfigurationStoreSelectors","ConfirmDialogComponent","environment","i0","ctx_r27","ctx_r30","ctx_r22","ctx_r80","ctx_r81","ctx_r74","config_r72","ctx_r1","ArrhythmiaAlertsComponent","constructor","dialog","commonService","userPreference","snackbar","backendApiService","autheticationService","store$","alertService","ALERT_CONFIGURATIONS","ARRHYTHMIA_ALERT","customization","timeFormat","id","rowSelectEnabled","translate","translateKey","label","sortable","style","headerClass","cellClass","loading","patientId","encodeURIComponent","url","cfId","dispatch","loadArrhythmiaAlertConfigurationRequestAction","select","getAlertConfigurationError","subscribe","data","error","ngOnInit","roles","getRoles","timeZone","getUserTimeZone","userPreferenceUnit","getUserUnitSystem","tempConvFunction","convertFtoC","temp","parameterMinMax","getParameterMinMax","getCfId","patientData","alertSettings$","getArrhythmiaAlertConfigurations","alertSettingsStatus$","getAlertConfigurationStatus","alertSettingsMessage$","getAlertConfigurationMessage","_a","errorMessage","openCustomSnackBar","loaderSubscription","getLoaderStatus","loaded","loader","getSettings","lastUpdated","Date","toUTCString","setSettingsAlertActionButtons","setArrhythmiaParameterAlertEditSubmit","hideParameterEdit","masterData","Object","GroupId","PatientId","FacilityId","AlertId","alerts","parameterAlert","forEach","element","i","Setting","key","settings","push","alert","unit","index","parameterAlertSettings","parameterAlertSettingsCopy","JSON","parse","stringify","err","settingsAlertActionButtonsShow","isShow","showActionButtons","alertSettings","alertId","ArrhythmiaId","isShowResetButton","IsForPatient","parameterAlertAccess","isEditAccess","subscriptions","arrhythmiaParameterAlertEditHide","isHide","arrhythmiaParameterAlertEditSubmit","isSubmit","updateParameterSettings","openDialog","SaveChanges","open","maxWidth","maxHeight","body","title","text","disableClose","afterClosed","handleFactoryReset","showEdit","editThreshold","hideEdit","showEditPrior","editPrior","hideEditPrior","showEditDelay","editDelay","hideEditDelay","toggle","updated","showHideEdit","type","ngOnDestroy","unsubscribe","Enabled","Priority","LowThr","HighThr","Thr","CondDelay","parseInt","payload","resp","post","dataApiUrl","toPromise","status","reloadData","emit","handleAlertSettingsEditCancel","handleAlertSettingsSave","selectTab","value","selectedTab","checkRole","allowedRoles","userRoles","some","ai","includes","parameterThresholdChanged","minMax","keyMapping","range","translate_txt","isBlank","str","length","limitdelay","event","preventDefault","target","toString","substr","numericsOnly","control","numericsOnlyPattern","test","selectors","inputs","outputs","decls","vars","consts","template","ctx","DestinationSettingComponent","router","fetchContactList","alertDestinationSettings$","getDestinationAlertConfigurations","getAlertDestinationSettings","isPHYGCUser","console","log","alertDestinationSettings","UserData","_b","map","user","displayName","firstName","lastName","userId","AlertDestId","alertDestinationSettingsCopy","_c","destinationAlertEditSubmit","loadClinicalFacilityContactsRequestAction","loadDestinationAlertConfigurationRequestAction","setDestinationAlertEditSubmit","valueUpdated","SettingTech","setDestinationAlertEditHide","alertPriorityOptions","parameterAlertItems","ctx_r33","ctx_r36","config_r18","ctx_r44","ctx_r47","ctx_r101","ctx_r102","ctx_r93","config_r89","ParameterAlertsComponent","PARAMETER_ALERT","loadAlertConfigurationRequestAction","getAlertConfigurations","setParameterAlertEditSubmit","Param","PhyParam","setting","Math","round","convertCtoF","parameterAlertEditHide","parameterAlertEditSubmit","floor","limitChar","technicalAlertItems","alertConfigMinMaxValues","TechnicalAlertsComponent","showExtraHeader","extraHeaderClass","TECHNICAL_ALERT","technicalAlert","TechParam","Common","TechCommon","units","technicalAlertSettings","technicalAlertSettingsCopy","setTechnicalAlertEditSubmit","hideTechnicalAlertEdit","technicalAlertAccess","technicalAlertEditHide","technicalAlertEditSubmit","updateTechnicalSettings","showEditAlertFrequency","editAlertFrequency","hideEditAlertFrequency","showEditAlertFrequencyUnAck","editAlertFrequencyUnAck","hideEditAlertFrequencyUnAck","showEditDelaytime","editDelaytime","hideEditDelaytime","technicalParameter","technicalCommonParameter","Frequency_UnAck","Frequency_Ack","technicalParamInputChanged"],"sourceRoot":"webpack:///"}