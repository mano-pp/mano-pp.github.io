{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_5__","ctx_r3","_r14","ctx_r4","_r38","AddEventComponent","formBuilder","dialogRef","data","service","userPreference","snackbar","recordedNote","_a","addNote","_b","editEvent","_c","patientId","_d","patchStarted","_e","timeZoneOffset","getUserTimeZone","timeZone","sessionStorage","getItem","currentTime","Date","toLocaleString","selectedTab","notes","_f","event","_g","recordedTime","_h","alertTime","addEventForm","group","symptoms","array","activity","time","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","note","manualSymptom","manualActivity","validator","_j","_k","_l","_m","e","symptomsArray","get","checked","push","source","value","i","controls","forEach","item","removeAt","activityArray","charsOnlyPattern","key","test","preventDefault","submitted","indexOf","setValidators","clearValidators","updateValueAndValidity","invalid","length","markAllAsTouched","formData","date","toDateString","getHours","getMinutes","getSeconds","manualSymptomIndex","manualActivityIndex","_o","_p","_q","console","log","_r","parse","addEvent","subscribe","res","status","close","error","openSnackBar","tab","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__","selectors","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i_r10","$event","ctx_r16","i_r25","ctx_r31","i_r40","ctx_r46","i_r55","ctx_r61","ctx_r0","AlertDestinationComponent","commonService","router","dialog","autheticationService","store$","_utils_helpers__WEBPACK_IMPORTED_MODULE_1__","alertDestinationForm","smsContactList","whatsAppContactList","emailContactList","caregiverAppContactList","cfId","getCfId","roles","getRoles","setDefaultData","contactLists$","select","_store__WEBPACK_IMPORTED_MODULE_0__","destinationAlertAccess","isEditAccess","subscriptions","destinationAlertEditHide","isHide","alertDestinationSettings","JSON","stringify","alertDestinationSettingsCopy","setDefaultContactListData","updateDestination","emit","contactLists","map","x","displayName","firstName","lastName","activeContactLists","filter","isActive","activePhoneNoLists","user","phoneNo","activeEmailLists","email","changes","type","ids","list","contactListsSMS","contactListsWhatsApp","contactListsEMAIL","contactListsCaregiverApp","index","element","userId","isDefault","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","selectedSmsContact","find","updated","openCustomSnackBar","selectedEmailContact","selectedWhatsappContact","selectedCaregiverContact","addContactDropdownList","SaveChanges","open","src_app_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_2__","maxWidth","maxHeight","body","title","text","disableClose","afterClosed","removeContactSelected","splice","setting","Array","isArray","AlertSMS","contact","userData","AlertWhatsApp","AlertEmail","AlertCaregiverApp","url","navigate","then","setSettingsAlertActionButtons","destinationSettings","getUrserIds","searchString","dispatch","inputs","alertType","outputs","reloadData","features","i0","ctx_r27","ctx_r30","ctx_r22","ctx_r80","ctx_r81","ctx_r74","config_r72","ctx_r1","ArrhythmiaAlertsComponent","constructor","backendApiService","alertService","EventEmitter","priorityColorCode","arrhythmiaAlertPriorityOptions","ArrhythmiaParameterAlertItems","uiAccessRoles","environment","id","rowSelectEnabled","translate","translateKey","label","sortable","style","headerClass","cellClass","loading","encodeURIComponent","AlertConfigurationStoreActions","AlertConfigurationStoreSelectors","ngOnInit","postures","userPreferenceUnit","getUserUnitSystem","tempConvFunction","convertFtoC","temp","parameterMinMax","getParameterMinMax","patientData","alertSettings$","alertSettingsStatus$","alertSettingsMessage$","errorMessage","loaderSubscription","loaded","loader","getSettings","lastUpdated","toUTCString","setArrhythmiaParameterAlertEditSubmit","hideParameterEdit","masterData","Object","GroupId","PatientId","FacilityId","AlertId","alerts","parameterAlert","Setting","settings","alert","unit","parameterAlertSettings","parameterAlertSettingsCopy","err","settingsAlertActionButtonsShow","isShow","showActionButtons","alertSettings","alertId","ArrhythmiaId","isShowResetButton","IsForPatient","isAllowedRole","parameterAlertAccess","arrhythmiaParameterAlertEditHide","arrhythmiaParameterAlertEditSubmit","isSubmit","updateParameterSettings","openDialog","ConfirmDialogComponent","handleFactoryReset","showEdit","editThreshold","hideEdit","showEditPrior","editPrior","hideEditPrior","showEditDelay","editDelay","hideEditDelay","toggle","showHideEdit","ngOnDestroy","unsubscribe","_this","Enabled","Priority","LowThr","HighThr","Thr","CondDelay","parseInt","payload","post","toPromise","resp","handleAlertSettingsEditCancel","handleAlertSettingsSave","_this2","selectTab","checkRole","allowedRoles","userRoles","some","ai","includes","parameterThresholdChanged","minMax","keyMapping","range","translate_txt","isBlank","str","limitdelay","target","toString","substr","numericsOnly","control","numericsOnlyPattern","ctx","DestinationSettingComponent","fetchContactList","alertDestinationSettings$","getAlertDestinationSettings","isPHYGCUser","UserData","AlertDestId","destinationAlertEditSubmit","setDestinationAlertEditSubmit","valueUpdated","SettingTech","setDestinationAlertEditHide","_angular_core__WEBPACK_IMPORTED_MODULE_11__","event_r4","EventListComponent","_environments_environment__WEBPACK_IMPORTED_MODULE_3__","page","pageSize","pageIndex","tableState","_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_4__","editAccess","eventList$","_store__WEBPACK_IMPORTED_MODULE_2__","getEventList","unAcknowledged","selectedEvents","patientEventList","ack","mandatoryNote","eventListCount","count","config","state","param","params","editlabel","_add_event_add_event_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","started","timestamp","currentTimestamp","getTime","difference","output","Math","round","floor","relativeTime","_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_1__","acknowledgeEvent","eve","alertName","clipboardData","getData","eventLabel","pattern","downloadEventLog","blobUrl","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","remove","clearInterval","reloadInterval","alert_r10","rowItem_r20","NotificationListComponent","src_environments_environment__WEBPACK_IMPORTED_MODULE_3__","getAlerts","setInterval","alertHistory$","current","totalAlerts","allActiveAlerts","alertHistory","topAlerts","items","alertKey","topN","selected","activeSelected","unAck","sortAlerts","ele","active","alertRow","acknowledgeAlert","message","highThr","lowThr","alertValue","convertCtoF","tran","downloadAlertLog","dir","sortBy","sortDirection","_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_2__","acknowledgeAllType","_angular_core__WEBPACK_IMPORTED_MODULE_6__","NotificationsComponent","openEventTab","add_event","ctx_r33","ctx_r36","config_r18","ctx_r44","ctx_r47","ctx_r101","ctx_r102","ctx_r93","config_r89","ParameterAlertsComponent","alertPriorityOptions","parameterAlertItems","setParameterAlertEditSubmit","Param","PhyParam","parameterAlertEditHide","parameterAlertEditSubmit","limitChar","_angular_core__WEBPACK_IMPORTED_MODULE_2__","PatientDetailsComponent","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","acknowledgeAllEvents","activeEvents","eventEditAccess","activeAlert","AlertConfigurationsService","http","authHeaders","_angular_common_http__WEBPACK_IMPORTED_MODULE_2__","headers","pipe","handleError","downloadBlob","ErrorEvent","units","HR","MIN","MAX","RR","SPO2","BODYTEMP","BPSYS","BPDIA","BP","PR","SKINTEMP","POSTURE_ALERT","SINUS_BRADYCARDIA","SINUS_TACHYCARDIA","VENTRICULAR_FLUTTER","VENTRICULAR_TACHYCARDIA","IDIOVENTRICULAR_RYTHM","SUPRAVENTRICULAR_TACHYCARDIA","AFIB_FLUTTER","JUNCTIONAL_TACHYCARDIA","FIRST_DEGREE_AV_BLOCK","SECOND_DEGREE_AV_BLOCK_TYPE_I","SECOND_DEGREE_AV_BLOCK_TYPE_II","PAUSE","V_COUPLET","V_TRIGEMINY","V_BIGEMINY","PVC_RATE","PAC_RATE","PVC","PAC","sort","a","b","factory","loadArrhythmiaAlertConfigurationRequestAction","_alert_configuration_types__WEBPACK_IMPORTED_MODULE_0__","loadArrhythmiaAlertConfigurationFailureAction","loadArrhythmiaAlertConfigurationSuccessAction","loadAlertConfigurationRequestAction","loadAlertConfigurationFailureAction","loadAlertConfigurationSuccessAction","updateAlertConfigurationRequestAction","updateAlertConfigurationFailureAction","updateAlertConfigurationSuccessAction","resetAlertConfigurationRequestAction","resetAlertConfigurationFailureAction","resetAlertConfigurationSuccessAction","loadDestinationAlertConfigurationSuccessAction","loadDestinationAlertConfigurationFailureAction","loadDestinationAlertConfigurationRequestAction","loadClinicalFacilityContactsRequestAction","loadClinicalFacilityContactsFailureAction","loadClinicalFacilityContactsSuccessAction","loadMiscellaneousSettingsRequestAction","loadMiscellaneousSettingsFailureAction","loadMiscellaneousSettingsSuccessAction","updateMiscellaneousSettingsRequestAction","updateMiscellaneousSettingsFailureAction","updateMiscellaneousSettingsSuccessAction","resetMiscellaneousSettingsRequestAction","resetMiscellaneousSettingsFailureAction","resetMiscellaneousSettingsSuccessAction","LoadAlertHistoryRequestAction","LoadAlertHistoryFailureAction","LoadAlertHistorySuccessAction","LoadEventListRequestAction","LoadEventListFailureAction","LoadEventListSuccessAction","initialAlertConfigurationState","arrhythmiaConfigurations","HighUnit","LowUnit","FacilityName","createdDateTime","modifiedDateTime","alert_configurations","CardiacStandStill","TechParam","LEAD_OFF","BIOSENSOR_DISCONNECTED","RELAY_DISCONNECTED","LOW_BATTERY","COMPUTE_HR_ERROR","COMPUTE_RR_ERROR","COMPUTE_SPO2_ERROR","COMPUTE_BODY_TEMP_ERROR","Common","PhyCommon","HIGH","Frequency_UnAck","Frequency_Ack","Percentage_UnAck","Percentage_Ack","MEDIUM","LOW","TechCommon","auditloginfotype","CreatedBy","CreatedById","ModifiedBy","ModifiedById","CreatedDateTime","ModifiedDateTime","historyLoaded","_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_1__","MISCELLANEOUS_SETTINGS_DATA","thirdPartyDeviceSettings","ecgFilterSettings","ecgFilterSetting","bioSensorConfigSettings","otherSettings","autoGeneratePatientId","enableAccessToSPPHY","facilityName","facilityLogo","emr","facilityId","groupId","miscSettingsId","alert_destinations","AlertSMSEnabled","AlertWhatsAppEnabled","AlertEmailEnabled","AlertCaregiverAppEnabled","NotificationMessage","groupIdSelected","contacts","alert_history","event_list","eventListLoaded","patientAlertConfigurationKey","AlertConfigurationReducer","action","total","getAlertConfigurationsState","_alert_configuration_reducer__WEBPACK_IMPORTED_MODULE_0__","getAlertConfigurations","getArrhythmiaAlertConfigurations","getDestinationAlertConfigurations","getAlertConfigurationError","getAlertConfigurationStatus","getAlertConfigurationMessage","getAlertGroupId","getClinicalFacilityContacts","getMiscellaneousSettings","getMiscellaneousError","getMiscellaneousStatus","getMiscellaneousMessage","getLoaderStatus","getAlertHistory","getAlertHistoryLoader","getEventListLoader","getEventListCount","getTableState","AlertConfigurationActionTypes","TechnicalAlertsComponent","showExtraHeader","extraHeaderClass","technicalAlertItems","alertConfigMinMaxValues","technicalAlert","technicalAlertSettings","technicalAlertSettingsCopy","setTechnicalAlertEditSubmit","hideTechnicalAlertEdit","technicalAlertAccess","technicalAlertEditHide","technicalAlertEditSubmit","updateTechnicalSettings","showEditAlertFrequency","editAlertFrequency","hideEditAlertFrequency","showEditAlertFrequencyUnAck","editAlertFrequencyUnAck","hideEditAlertFrequencyUnAck","showEditDelaytime","editDelaytime","hideEditDelaytime","technicalParameter","technicalCommonParameter","technicalParamInputChanged","CommonService","rxjs__WEBPACK_IMPORTED_MODULE_0__","hidePrameterAlertEdit","asObservable","hideArrhythmiaPrameterAlertEdit","hidePriorityAlertEdit","showSettingsAlertActionButtons","savePrameterAlertEdit","saveArrhythmiaPrameterAlertEdit","saveTechnicalAlertEdit","savePriorityAlertEdit","hideDestinationAlertEdit","hideNotificationAlertEdit","saveNotificationAlertEdit","saveDestinationAlertEdit","next","seconds","hours","providedIn","atLeastOne","keys","hasAtLeastOne","k"],"sources":["webpack:///src/app/dialogs/notifications-component/add-event/add-event.component.html","webpack:///src/app/dialogs/notifications-component/add-event/add-event.component.ts","webpack:///src/app/dialogs/notifications-component/alert-destination/alert-destination.component.html","webpack:///src/app/dialogs/notifications-component/alert-destination/alert-destination.component.ts","webpack:///src/app/dialogs/notifications-component/arrhythmia-alerts/arrhythmia-alerts.component.html","webpack:///src/app/dialogs/notifications-component/arrhythmia-alerts/arrhythmia-alerts.component.ts","webpack:///src/app/dialogs/notifications-component/destination-setting/destination-setting.component.html","webpack:///src/app/dialogs/notifications-component/destination-setting/destination-setting.component.ts","webpack:///src/app/dialogs/notifications-component/event-list/event-list.component.html","webpack:///src/app/dialogs/notifications-component/event-list/event-list.component.ts","webpack:///src/app/dialogs/notifications-component/notification-list/notification-list.component.html","webpack:///src/app/dialogs/notifications-component/notification-list/notification-list.component.ts","webpack:///src/app/dialogs/notifications-component/notifications/notifications.component.html","webpack:///src/app/dialogs/notifications-component/notifications/notifications.component.ts","webpack:///src/app/dialogs/notifications-component/parameter-alerts/parameter-alerts.component.html","webpack:///src/app/dialogs/notifications-component/parameter-alerts/parameter-alerts.component.ts","webpack:///src/app/dialogs/notifications-component/patient-details/patient-details.component.html","webpack:///src/app/dialogs/notifications-component/patient-details/patient-details.component.ts","webpack:///src/app/dialogs/notifications-component/services/alert-configuration.service.ts","webpack:///src/app/dialogs/notifications-component/store/alert-configuration.actions.ts","webpack:///src/app/dialogs/notifications-component/store/alert-configuration.reducer.ts","webpack:///src/app/dialogs/notifications-component/store/alert-configuration.selector.ts","webpack:///src/app/dialogs/notifications-component/store/alert-configuration.types.ts","webpack:///src/app/dialogs/notifications-component/technical-alerts/technical-alerts.component.html","webpack:///src/app/dialogs/notifications-component/technical-alerts/technical-alerts.component.ts","webpack:///src/app/services/common.service.ts","webpack:///src/app/validators/custom-validator-at-least-once.validator.ts"],"sourcesContent":["<div class=\"dialog-header patientalert-dialog-header\" xmlns=\"http://www.w3.org/1999/html\">\n    <h1 mat-dialog-title *ngIf=\"recordedNote || addNote\" class=\"mx-2 pb-2\">\n        {{ \"alert_config_module.note\" | translate }}\n    </h1>\n    <button mat-icon-button mat-dialog-close *ngIf=\"recordedNote\">\n        <mat-icon>close</mat-icon>\n    </button>\n    <div class=\"btn-group-area button-card-area d-flex\" *ngIf=\"!recordedNote && !addNote\">\n        <button mat-button [ngClass]=\"\n        selectedTab === 'event' ? 'select-btn-active' : 'select-btn'\n      \" (click)=\"selectTab('event')\">\n            {{ \"alert_config_module.add_event.event\" | translate }}\n        </button>\n        <button mat-button [ngClass]=\"\n        selectedTab === 'note' ? 'select-btn-active' : 'select-btn'\n      \" (click)=\"selectTab('note')\">\n            {{ \"alert_config_module.note\" | translate }}\n        </button>\n    </div>\n</div>\n\n<mat-dialog-content class=\"py-2 mat-dialog-popup\">\n    <div class=\"scroll-assist\">\n        <div *ngIf=\"selectedTab === 'event' || selectedTab === 'note'\">\n            <form [formGroup]=\"addEventForm\" class=\"dialog-form\">\n                <div *ngIf=\"selectedTab === 'event'\" class=\"row form-row\">\n                    <div class=\"px-3\">\n                        <mat-label class=\"matlabel fw-bold my-2\">{{ \"alert_config_module.add_event.record_symptoms\" |\n                            translate }}\n                        </mat-label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6 my-1\" *ngFor=\"let symptom of symptoms\">\n                                <mat-checkbox [value]=\"symptom\" (change)=\"onSymptomChange($event)\"\n                                    [checked]=\"addEventForm?.value?.symptoms?.indexOf(symptom) !== -1\">{{symptom}}\n                                </mat-checkbox>\n                            </div>\n                        </div>\n                        <mat-error *ngIf=\"!f.symptoms?.errors?.required && !f.symptoms?.valid\">\n                            {{ \"alert_config_module.add_event.symptoms_invalid\" | translate }}\n                        </mat-error>\n                    </div>\n                    <div class=\"px-3\" *ngIf=\"addEventForm?.value?.symptoms?.indexOf('Other') !== -1\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 my-1\">\n                                <input class=\"py-1 text-input\" type=\"text\" formControlName=\"manualSymptom\"\n                                    placeholder=\"Enter Symptom\" maxlength=\"128\">\n                            </div>\n                        </div>\n                        <mat-error *ngIf=\"!f.manualSymptom?.errors?.required && !f.manualSymptom?.valid\">\n                            {{ \"alert_config_module.add_event.symptoms_invalid\" | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"submitted && f.manualSymptom?.errors?.required\">\n                            {{ \"alert_config_module.add_event.symptoms_required\" | translate }}\n                        </mat-error>\n                    </div>\n                </div>\n                <div *ngIf=\"selectedTab === 'event'\" class=\"row form-row\">\n                    <div class=\"px-3\">\n                        <mat-label class=\"matlabel fw-bold my-2\">{{ \"alert_config_module.add_event.select_activity\" |\n                            translate }}\n                        </mat-label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6 my-1\" *ngFor=\"let act of activity\">\n                                <mat-checkbox [value]=\"act\" (change)=\"onActivityChange($event)\"\n                                    [checked]=\"addEventForm?.value?.activity?.indexOf(act) !== -1\">{{act}}\n                                </mat-checkbox>\n                            </div>\n                        </div>\n                        <mat-error class=\"my-1\"\n                            *ngIf=\"submitted && !addEventForm?.get('activity')?.value?.length && addEventForm?.get('symptoms')?.value?.length\">\n                            {{ \"alert_config_module.add_event.activity_required\" | translate }}\n                        </mat-error>\n                    </div>\n                    <div class=\"px-3\" *ngIf=\"addEventForm?.value?.activity?.indexOf('Other') !== -1\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 my-1\">\n                                <input class=\"py-1 text-input\" type=\"text\" formControlName=\"manualActivity\"\n                                    placeholder=\"Enter Activity\" maxlength=\"128\">\n                            </div>\n                        </div>\n                        <mat-error *ngIf=\"!f.manualActivity?.errors?.required && !f.manualActivity?.valid\">\n                            {{ \"alert_config_module.add_event.activity_invalid\" | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"submitted && f.manualActivity?.errors?.required\">\n                            {{ \"alert_config_module.add_event.enter_activity\" | translate }}\n                        </mat-error>\n                    </div>\n                </div>\n                <div *ngIf=\"selectedTab === 'note'\" class=\"row form-row\">\n                    <div class=\"px-3 pb-2\">\n                        <mat-label class=\"matlabel\">{{ \"alert_config_module.add_event.record_note\" | translate }}\n                        </mat-label>\n                        <mat-form-field class=\"notification-textarea\">\n                            <textarea matInput cdkTextareaAutosize class=\"p-2 text-area\" formControlName=\"note\"\n                                maxlength=\"300\" [(ngModel)]=\"note\">\n                            </textarea>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"submitted && f.note?.errors?.required\" class=\"required-text py-1\">\n                            {{ \"alert_config_module.add_event.note_required\" | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"!f.note?.errors?.required && f.note?.errors?.pattern\" class=\"text-wrap\">\n                            {{ \"alert_config_module.add_event.note_pattern\" | translate }}\n                        </mat-error>\n                    </div>\n                </div>\n                <div class=\"row form-row\">\n                    <div class=\"col-3 align-items-center\">\n                        <mat-label class=\"matlabel pt-2\">{{ \"alert_config_module.add_event.time\" | translate }}\n                        </mat-label>\n                    </div>\n                    <div class=\"col-9 text-end\">\n                        <mat-form-field appearance=\"fill\" class=\"time-input formfield-control\">\n                            <input matInput type=\"text\" formControlName=\"time\" autocomplete=\"off\" class=\"form-control\"\n                                [min]=\"patchStartedTime()\" [max]=\"getCurrentDate()\" [owlDateTime]=\"dt\"\n                                [owlDateTimeTrigger]=\"dt\" readonly [(ngModel)]=\"currentTime\" [disabled]=\"editEvent\" />\n                            <mat-icon matSuffix [owlDateTimeTrigger]=\"dt\"\n                                class=\"cursor-pointer material-icons-outlined\">access_time_filled</mat-icon>\n                            <owl-date-time #dt [hour12Timer]=\"false\" [pickerType]=\"'timer'\"\n                                [disabled]=\"editEvent || addNote\"></owl-date-time>\n                            <mat-error *ngIf=\"f.time?.errors?.required\">\n                                {{ \"alert_config_module.add_event.time_required\" | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div *ngIf=\"selectedTab === 'recordedNote'\">\n            <form class=\"dialog-form\">\n                <div class=\"row form-row\">\n                    <div class=\"px-3 pb-2\">\n                        <mat-label class=\"matlabel\">{{ \"alert_config_module.recorded_note\" | translate }}\n                        </mat-label>\n                        <mat-form-field class=\"notification-textarea textarea-note \">\n                            <textarea matInput cdkTextareaAutosize class=\"p-2 text-area\" [readonly]=\"true\"\n                                [value]=\"notes\">\n                            </textarea>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row form-row\">\n                    <div class=\"col-md-3 align-items-center\">\n                        <mat-label class=\"matlabel pt-3\">{{ \"alert_config_module.add_event.time\" | translate }}\n                        </mat-label>\n                    </div>\n                    <div class=\"col-md-9 text-end\">\n                        <mat-form-field appearance=\"fill\" class=\"time-input formfield-control\">\n                            <input matInput type=\"text\" autocomplete=\"off\" class=\"form-control\" [max]=\"getCurrentDate()\"\n                                [owlDateTime]=\"dt\" [owlDateTimeTrigger]=\"dt\" readonly [(ngModel)]=\"recordedTime\" />\n                            <mat-icon matSuffix [owlDateTimeTrigger]=\"dt\">schedule</mat-icon>\n                            <owl-date-time #dt [hour12Timer]=\"false\" [disabled]=\"true\"></owl-date-time>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"error-message\">\n        <mat-error class=\"mt-2\"\n            *ngIf=\"submitted && !addEventForm?.get('symptoms')?.value?.length && !addEventForm?.get('note')?.value\">\n            <span *ngIf=\"!addNote\">{{ \"alert_config_module.add_event.event_note_required\" | translate }}</span>\n            <span *ngIf=\"addNote\">{{ \"alert_config_module.add_event.note_required\" | translate }}</span>\n        </mat-error>\n    </div>\n</mat-dialog-content>\n<div matDialogActions align=\"right\" class=\"me-4 pe-2\">\n    <button mat-flat-button mat-dialog-close class=\"fill-btn\" color=\"warn\" *ngIf=\"!recordedNote\">\n        {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\n    </button>\n    <button mat-flat-button class=\"fill-btn\" color=\"primary\" (click)=\"onSubmit()\" *ngIf=\"!recordedNote\">\n        {{ \"manage_users_module.adduser.savebutton\" | translate }}\n    </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport {atLeastOne} from \"../../../validators/custom-validator-at-least-once.validator\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {AlertConfigurationsService} from \"../services/alert-configuration.service\";\nimport {UserPreferenceService} from \"@services/user-preference.service\";\nimport {SnackbarService} from \"@services/snackbar.service\";\n\n@Component({\n  selector: 'app-add-event',\n  templateUrl: './add-event.component.html',\n  styleUrls: ['./add-event.component.scss']\n})\nexport class AddEventComponent implements OnInit {\n  addEventForm: FormGroup;\n  submitted = false;\n  selectedTab = \"event\";\n  recordedNote = false;\n  notes=\"\";\n  recordedTime;\n  currentTime;\n  patientId;\n  timeZone;\n  timeZoneOffset;\n  patchStarted = null;\n  editEvent = false;\n  addNote = false;\n  note='';\n  Events = ['Lightheadedness / Dizziness', 'Passed out', 'Chest Pain / Tightness', 'Palpitation / High Heart Rate', 'Fluttering in chest',\n  'No Symptom', 'Other'];\n  symptoms = [\n    \"Heart Racing\",\n    \"Anxious\",\n    \"Chest Discomfort / Pain\",\n    \"Heart Fluttering\",\n    \"Palpitation\",\n    \"Feeling Weak/Faint\",\n    \"Dizziness\",\n    \"Short of Breath\",\n    \"Tired / Fatigued\",\n    \"None / Accidental Push\",\n    \"Other\"]\n  activity = [\n    \"Normal routine\",\n    \"Walking\",\n    \"Sitting\",\n    \"Lying down\",\n    \"Exercising\",\n    \"Jogging or running\",\n    \"Sleeping\",\n    \"Smoking\",\n    \"Stair Climbing\",\n    \"Eating\",\n    \"Fast Walking\",\n    \"Other\"\n  ];\n  constructor(private formBuilder: FormBuilder, private dialogRef: MatDialogRef<MatDialogRef<any>>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public service: AlertConfigurationsService,\n    private userPreference: UserPreferenceService, private snackbar: SnackbarService) { }\n\n  ngOnInit(): void {\n    this.recordedNote = this.data?.recordedNote;\n    this.addNote = this.data?.addNote;\n    this.editEvent = this.data?.editEvent;\n    this.patientId = this.data?.patientId;\n    this.patchStarted = this.data?.patchStarted;\n    this.timeZoneOffset = this.userPreference.getUserTimeZone();\n    this.timeZone = sessionStorage.getItem('timezone');\n    this.currentTime = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\n    if(this.recordedNote) {\n      this.selectedTab = \"recordedNote\";\n      this.notes = this.data?.event?.notes;\n      this.recordedTime = new Date(new Date(this.data?.event.alertTime*1000).toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n    }\n    if(this.addNote) {\n      this.selectedTab = 'note';\n    }\n    this.addEventForm = this.formBuilder.group(\n        {\n          symptoms: this.formBuilder.array([]),\n          activity: this.formBuilder.array([]),\n          time: [\n            \"\",\n            [Validators.required],\n          ],\n          note: [\n            \"\",\n            [Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ',-:\\n]*$\")],\n          ],\n          manualSymptom: [\"\", [Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]],\n          manualActivity: [\"\", [Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]],\n        },\n        { validator: atLeastOne(Validators.required, [\"symptoms\", \"note\"]) });\n    if(this.data?.event) {\n      this.currentTime = new Date(new Date(this.data?.event.alertTime*1000).toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n      this.note = this.data?.event?.notes\n    }\n  }\n  onSymptomChange(e) {\n    const symptomsArray: FormArray = this.addEventForm.get('symptoms') as FormArray;\n    if (e?.checked) {\n      symptomsArray.push(new FormControl(e.source.value));\n    } else {\n      let i: number = 0;\n      symptomsArray.controls.forEach((item: FormControl) => {\n        if (item.value == e.source.value) {\n          symptomsArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n  onActivityChange(e) {\n    const activityArray: FormArray = this.addEventForm.get('activity') as FormArray;\n    if (e?.checked) {\n      activityArray.push(new FormControl(e.source.value));\n    } else {\n      let i: number = 0;\n      activityArray.controls.forEach((item: FormControl) => {\n        if (item.value == e.source.value) {\n          activityArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n  charsOnly(event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  get f() {\n      return this.addEventForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.addEventForm?.value?.symptoms?.indexOf('Other') !== -1) {\n      this.addEventForm.controls['manualSymptom'].setValidators([Validators.required, Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]);\n    } else {\n      this.addEventForm.controls['manualSymptom'].clearValidators();\n    }\n    if (this.addEventForm?.value?.activity?.indexOf('Other') !== -1) {\n      this.addEventForm.controls['manualActivity'].setValidators([Validators.required, Validators.pattern(\"^[a-zA-Z0-9]{1}[°%&.()/a-zA-Z0-9 ,-:]*$\")]);\n    } else {\n      this.addEventForm.controls['manualActivity'].clearValidators();\n    }\n    this.addEventForm.controls['manualActivity'].updateValueAndValidity();\n    this.addEventForm.controls['manualSymptom'].updateValueAndValidity();\n      if (this.addEventForm.invalid || (!this.addEventForm?.get('activity')?.value?.length && this.addEventForm?.get('symptoms')?.value?.length)) {\n        this.addEventForm.markAllAsTouched();\n        return;\n      } else {\n        let formData = this.addEventForm.value;\n        let date = formData.time.toDateString()  + ' ' + formData.time.getHours() + ':'\n            + formData.time.getMinutes() + ':'\n            + formData.time.getSeconds()  + \" \" + this.timeZoneOffset;\n        let event;\n        let  manualSymptomIndex = formData.symptoms.indexOf('Other');\n        if(manualSymptomIndex > -1) {\n          formData.symptoms[manualSymptomIndex] = formData.manualSymptom;\n        }\n        let  manualActivityIndex = formData.activity.indexOf('Other');\n        if(manualActivityIndex > -1) {\n          formData.activity[manualActivityIndex] = formData.manualActivity;\n        }\n        if (this.editEvent) {\n          event = {\n            ...this.data?.event,\n            symptoms: formData.symptoms,\n            activity: formData.activity,\n            notes: formData?.note || this.data?.event?.notes,\n          };\n          console.log(event);\n        } else if (this.addNote) {\n          event = {\n            ...this.data?.event,\n            notes: formData.note\n          }\n        }else {\n          event = {\n            symptoms: formData.symptoms,\n            activity: formData.activity,\n            notes: formData.note,\n            alertTime: Date.parse(date) / 1000,\n            patientId: this.patientId\n          };\n        }\n        this.service.addEvent(event).subscribe(res => {\n          console.log('res', res);\n          if (res.status === 'OK') {\n            //this.snackbar.openSnackBar(\"alert_config_module.messages.add_event_success\", 'bottom', 'center', true);\n            this.dialogRef.close(true);\n          }\n        }, error => {\n          console.log(error);\n          if (error) {\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n          }\n        })\n      }\n  }\n  getCurrentDate() {\n    return new Date(new Date().toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n  }\n  patchStartedTime() {\n    return new Date(new Date(this.patchStarted).toLocaleString(\"en-US\", {timeZone: this.timeZone}));\n  }\n  selectTab(tab) {\n    this.submitted = false;\n    this.selectedTab = tab;\n  }\n\n}\n","\n<table mat-table *ngIf=\"alertDestinationSettings\" class=\"table destination-table\" aria-label=\"Table\">\n        <thead>\n        <tr><th colspan=\"3\" class=\"ps-4\">{{alertType}}</th></tr>\n        </thead>\n      <tbody>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n              [(ngModel)]=\"alertDestinationSettings.AlertSMSEnabled\">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.sms\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsSMS; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertSMSEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('sms',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline</mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"smsContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of smsContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertSMSEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('sms', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('sms')\"  [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n              [(ngModel)]=\"alertDestinationSettings.AlertWhatsAppEnabled\">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.whatsapp\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsWhatsApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertWhatsAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('whatsapp', i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"whatsAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of whatsAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"me-3 msg-select\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertWhatsAppEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('whatsapp', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('whatsapp')\"  [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n              [(ngModel)]=\"alertDestinationSettings.AlertEmailEnabled\">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.email\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsEMAIL; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertEmailEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('email', i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline</mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"emailContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of emailContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertEmailEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activeEmailLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('email', $event)\" [items]=\"activeEmailLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('email')\"  [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span class=\"d-flex align-items-center\">\n            <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\" [(ngModel)]=\"\n              alertDestinationSettings.AlertCaregiverAppEnabled\n            \">\n              <span class=\"ms-3 fw-700\">{{ \"alert-destination.capp\" | translate }}</span>\n            </mat-slide-toggle>\n            </span>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsCaregiverApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                              [ngClass]=\"!alertDestinationSettings.AlertCaregiverAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('caregiver', i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"caregiverAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of caregiverAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                    [disabled]=\"!alertDestinationSettings.Setting.AlertCaregiverAppEnabled\">-->\n<!--                    <mat-option *ngFor=\"let contact of activeContactLists\" [value]=\"contact\">-->\n<!--                      {{ contact.displayName }}-->\n<!--                    </mat-option>-->\n<!--                  </mat-select>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('caregiver', $event)\" [items]=\"activeContactLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed me-3 btn-no-shadow\"\n                  (click)=\"addContactDropdownList('caregiver')\"  [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from \"@angular/core\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { CommonService } from \"@services/common.service\";\nimport { Subscription } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport { Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { isAllowedRole, uiAccessRoles } from \"@utils/helpers\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from \"@angular/forms\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-alert-destination\",\n  templateUrl: \"./alert-destination.component.html\",\n  styleUrls: [\"./alert-destination.component.scss\"],\n})\nexport class AlertDestinationComponent implements OnInit, OnChanges {\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() alertDestinationSettings;\n  @Input() alertDestinationSettingsCopy;\n  @Input() alertType;\n  @Input() userData;\n  @Output() updateDestination = new EventEmitter<string>();\n  private subscriptions: Subscription[] = [];\n  selectedTab = \"parameter\";\n  error: string;\n  cfId: string = \"\";\n  GroupId: string = \"\";\n  patientId: string = \"PATALDRT1\";\n  alertId: any = null;\n  roles: string[];\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  alertDestId: string = null;\n  AlertDestId: string = \"\";\n\n  destinationAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_DESTINATIONS;\n  isEditAccess: boolean = false;\n  isPHYGCUser: boolean = false;\n  contactLists: any = [];\n  activeContactLists: any = [];\n  activePhoneNoLists: any = [];\n  activeEmailLists: any = [];\n  contactLists$: Observable<AlertConfigurationModels.ClinicalFacilityContactListData>;\n\n  alertDestinationForm: FormGroup;\n  contactListsSMS: any = [];\n  contactListsWhatsApp: any = [];\n  contactListsEMAIL: any = [];\n  contactListsCaregiverApp: any = [];\n  selectedSmsContact;\n  selectedEmailContact;\n  selectedWhatsappContact;\n  selectedCaregiverContact;\n\n  constructor(\n    private commonService: CommonService,\n    private router: Router,\n    public dialog: MatDialog,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.alertDestinationForm = this.formBuilder.group({\n      smsContactList: this.formBuilder.array([]),\n      whatsAppContactList: this.formBuilder.array([]),\n      emailContactList: this.formBuilder.array([]),\n      caregiverAppContactList: this.formBuilder.array([]),\n    });\n\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.setDefaultData();\n\n\n    this.contactLists$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getClinicalFacilityContacts\n    );\n    if (\n      isAllowedRole(this.destinationAlertAccess[\"PATIENT\"][\"EDIT\"], this.roles)\n    ) {\n      this.isEditAccess = true;\n    }\n\n    this.contactLists$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getClinicalFacilityContacts\n    );\n\n    this.subscriptions.push(\n      this.commonService.destinationAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.alertDestinationSettings = JSON.parse(\n            JSON.stringify(this.alertDestinationSettingsCopy)\n          );\n          this.setDefaultContactListData(this.alertDestinationSettings);\n          this.updateDestination.emit(JSON.stringify(this.alertDestinationSettings));\n        }\n      })\n    );\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    ).subscribe(data => {\n      this.setDefaultContactListData(this.alertDestinationSettings);\n    });\n\n    this.contactLists$.subscribe((data: any) => {\n      this.contactLists = data.map((x) => {\n        return {\n          ...x,\n          displayName: `${x.firstName} ${x.lastName}`,\n        };\n      });\n      this.activeContactLists = this.contactLists.filter(user => user?.isActive === true);\n      this.activePhoneNoLists = this.activeContactLists.filter(user => user?.phoneNo);\n      this.activeEmailLists = this.activeContactLists.filter(user => user?.email);\n    });\n    this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n  ngOnChanges(changes: SimpleChanges){\n    //this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n\n  getUrserIds(type: any) {\n    const ids = [];\n    let list = [];\n    switch (type) {\n      case \"sms\":\n        list = this.contactListsSMS;\n        break;\n      case \"whatsapp\":\n        list = this.contactListsWhatsApp;\n        break;\n      case \"email\":\n        list = this.contactListsEMAIL;\n        break;\n      case \"caregiver\":\n        list = this.contactListsCaregiverApp;\n        break;\n      default:\n        break;\n    }\n    for (let index = 0; index < list.length; index++) {\n      const element: any = list[index];\n      ids.push(element.userId);\n    }\n    return ids;\n  }\n\n  get smsContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"smsContactList\");\n  }\n\n  get whatsAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"whatsAppContactList\");\n  }\n\n  get emailContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"emailContactList\");\n  }\n\n  get caregiverAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"caregiverAppContactList\");\n  }\n\n  addContactDropdownList(type: string, isDefault: boolean = false) {\n    switch (type) {\n      case \"sms\":\n        const smsContactList = this.alertDestinationForm.controls\n          .smsContactList as FormArray;\n        if (isDefault) {\n          smsContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (this.selectedSmsContact) {\n            if (\n              !this.contactListsSMS?.find((e: any) => {\n                return (\n                  e.userId === this.selectedSmsContact.userId\n                );\n              })\n            ) {\n              this.contactListsSMS.push(\n                this.selectedSmsContact\n              );\n              smsContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              smsContactList.removeAt(0);\n              this.selectedSmsContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      case \"email\":\n        const emailContactList = this.alertDestinationForm.controls\n          .emailContactList as FormArray;\n        if (isDefault) {\n          emailContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (\n            this.selectedEmailContact\n          ) {\n            if (\n              !this.contactListsEMAIL?.find((e: any) => {\n                return (\n                  e.userId === this.selectedEmailContact.userId\n                );\n              })\n            ) {\n              this.contactListsEMAIL.push(this.selectedEmailContact);\n              emailContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              emailContactList.removeAt(0);\n              this.selectedEmailContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      case \"whatsapp\":\n        const whatsAppContactList = this.alertDestinationForm.controls\n          .whatsAppContactList as FormArray;\n        if (isDefault) {\n          whatsAppContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (this.selectedWhatsappContact) {\n            if (\n              !this.contactListsWhatsApp?.find((e: any) => {\n                return (\n                  e.userId === this.selectedWhatsappContact.userId);\n              })\n            ) {\n              this.contactListsWhatsApp.push(this.selectedWhatsappContact);\n              whatsAppContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              whatsAppContactList.removeAt(0);\n              this.selectedWhatsappContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      case \"caregiver\":\n        const caregiverAppContactList = this.alertDestinationForm.controls\n          .caregiverAppContactList as FormArray;\n        if (isDefault) {\n          caregiverAppContactList.push(\n            this.formBuilder.group({\n              user: [\"\", [Validators.required]],\n            })\n          );\n        } else {\n          if (this.selectedCaregiverContact) {\n            if (\n              !this.contactListsCaregiverApp?.find((e: any) => {\n                return (\n                  e.userId === this.selectedCaregiverContact.userId);\n              })\n            ) {\n              this.contactListsCaregiverApp.push(this.selectedCaregiverContact);\n              caregiverAppContactList.push(\n                this.formBuilder.group({\n                  user: [\"\", [Validators.required]],\n                })\n              );\n              caregiverAppContactList.removeAt(0);\n              this.selectedCaregiverContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center');\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center');\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  userSelected(type, value) {\n    switch(type) {\n      case 'sms' : {\n        this.selectedSmsContact = value;\n        break;\n      }\n      case 'whatsapp' : {\n        this.selectedWhatsappContact = value;\n        break;\n      }\n      case 'email': {\n        this.selectedEmailContact = value;\n        break;\n      }\n      case \"caregiver\": {\n        this.selectedCaregiverContact = value;\n        break\n      }\n      default: break;\n    }\n\n  }\n\n  setDefaultData() {\n    this.addContactDropdownList(\"sms\", true);\n    this.addContactDropdownList(\"email\", true);\n    this.addContactDropdownList(\"whatsapp\", true);\n    this.addContactDropdownList(\"caregiver\", true);\n  }\n  openDialog(type: string, index: number) {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_delete\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.removeContactSelected(type, index);\n      }\n    });\n  }\n  removeContactSelected(type: string, index: number) {\n    switch (type) {\n      case \"sms\":\n        this.contactListsSMS.splice(index, 1);\n        break;\n      case \"whatsapp\":\n        this.contactListsWhatsApp.splice(index, 1);\n        break;\n      case \"email\":\n        this.contactListsEMAIL.splice(index, 1);\n        break;\n      case \"caregiver\":\n        this.contactListsCaregiverApp.splice(index, 1);\n        break;\n      default:\n        break;\n    }\n    this.updated();\n  }\n\n  setDefaultContactListData(setting: any) {\n    if (setting && Array.isArray(setting.AlertSMS)) {\n      this.contactListsSMS = [];\n      setting.AlertSMS?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsSMS.push(contact);\n        }\n      });\n    } else {\n      this.contactListsSMS = [];\n    }\n    if (setting && Array.isArray(setting.AlertWhatsApp)) {\n      this.contactListsWhatsApp = [];\n      setting.AlertWhatsApp?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsWhatsApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsWhatsApp = [];\n    }\n    if (setting && Array.isArray(setting.AlertEmail)) {\n      this.contactListsEMAIL = [];\n      setting.AlertEmail?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsEMAIL.push(contact);\n        }\n      });\n    } else {\n      this.contactListsEMAIL = [];\n    }\n    if (setting && Array.isArray(setting.AlertCaregiverApp)) {\n      this.contactListsCaregiverApp = [];\n      setting.AlertCaregiverApp?.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsCaregiverApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsCaregiverApp = [];\n    }\n  }\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.selectedTab = value;\n  }\n\n  toggle(event: MatSlideToggleChange) {\n    this.updated();\n  }\n  updated() {\n    let destinationSettings = JSON.parse(\n      JSON.stringify(this.alertDestinationSettings));\n    destinationSettings.AlertCaregiverApp =\n      this.getUrserIds(\"caregiver\");\n    destinationSettings.AlertEmail =\n      this.getUrserIds(\"email\");\n    destinationSettings.AlertSMS = this.getUrserIds(\"sms\");\n    destinationSettings.AlertWhatsApp =\n      this.getUrserIds(\"whatsapp\");\n    this.updateDestination.emit(JSON.stringify(destinationSettings));\n  }\n  reloadContactList(searchString) {\n    let url = `clinical-facilities/contacts?size=1000&page=1&searchText=${searchString}`;\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            {url}\n        )\n    );\n  }\n}\n","<div class=\"container-fuild\">\n  <app-patient-details [patientData]=\"patientData\" [updated]=\"lastUpdated\"></app-patient-details>\n  <div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n  <div *ngIf=\"!loader\" class=\"inside-div head-border comman-table-users bg-thead-color\">\n    <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"parameterAlertSettings\">\n      <ng-template lsWidgetName=\"enabled\" let-config>\n        <span class=\"d-flex align-items-center\">\n          <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n            [disabled]=\"!isEditAccess\">\n          </mat-slide-toggle>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"alerts\" let-config>\n        {{ config.alert }}\n        <span class=\"fw-normal\"\n          *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n          ({{ config.unit }})</span>\n      </ng-template>\n      <ng-template lsWidgetName=\"threshold\" let-config>\n        <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n          <span *ngIf=\"!editThreshold[config?.index]\">\n            {{ config.LowThr }}\n          </span>\n          <span *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n            <input (keypress)=\"numericsOnly(config.key, $event)\" matInput digitOnly\n              class=\"text-input-box py-1 me-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              [(ngModel)]=\"config.LowThr\" autocomplete=\"off\"\n              (change)=\"parameterThresholdChanged(config.index,'LowThr',parameterMinMax[config.key])\" type=\"number\"\n              [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\" [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\" />\n          </span>\n        </span>\n        <span *ngIf=\"!['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">-</span>\n      </ng-template>\n\n      <ng-template lsWidgetName=\"editThreshold\" let-config>\n        <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n          <span *ngIf=\"!editThreshold[config?.index]\">\n            <button *ngIf=\"!editThreshold[config?.index] && isEditAccess\" mat-mini-fab color=\"primary\"\n              class=\"btn-boxed btn-no-shadow\" [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config?.index, 'threshold')\">\n              <mat-icon>edit</mat-icon>\n            </button>\n          </span>\n          <span *ngIf=\"editThreshold[config?.index]\">\n            <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n              (click)=\"showHideEdit(config?.index, 'threshold')\">\n              <mat-icon>done</mat-icon>\n            </button>\n          </span>\n        </span>\n      </ng-template>\n\n      <ng-template lsWidgetName=\"priority\" let-config>\n        <span class=\"me-2\">\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\" />\n            <circle *ngIf=\"config.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n              [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\" />\n          </svg>\n          &nbsp; <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n          <span *ngIf=\"editPrior[config.index]\">\n            <mat-select placeholder=\"Select\" class=\"priority-drop-down\" [(ngModel)]=\"config.Priority\"\n              (selectionChange)=\"updated()\">\n              <mat-option *ngFor=\"let priority of alertPriority\" [value]=\"priority.value\">\n                {{ priority.label }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"editPriority\" let-config>\n        <ng-container>\n          <span>\n            <span *ngIf=\"!editPrior[config.index]\">\n              <button *ngIf=\"isEditAccess\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\" [disabled]=\"!config.Enabled\">\n                <mat-icon>edit</mat-icon>\n              </button>\n            </span>\n            <span *ngIf=\"editPrior[config.index]\">\n              <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </span>\n        </ng-container>\n      </ng-template>\n      <!--Delay time column-->\n      <ng-template lsWidgetName=\"delayTime\" let-config>\n        <div class=\"d-flex justify-content-around align-items-center\">\n          <div class=\"d-flex ack-column justify-content-center align-items-center\">\n            <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n              <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n                {{ config.CondDelay }} <span>{{'alert_config_module.secs' |\n                  translate}}</span>\n              </div>\n              <div *ngIf=\"editDelay[config.index]\">\n                <input (keypress)=\"numericsOnly(config.key, $event)\"\n                  (paste)=\"alertService.checkForSpecialCharacters($event)\" matInput autocomplete=\"off\" type=\"number\"\n                  digitOnly class=\"text-input-box py-1\" size=\"4\" (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'CondDelay',\n                  parameterMinMax[config.key]\n                )\" [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n                  [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\" [(ngModel)]=\"config.CondDelay\" />\n              </div>\n              <ng-container *ngIf=\"isEditAccess\">\n                <div class=\"ms-2 edit\">\n                  <button *ngIf=\"!editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                    [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config.index, 'delay')\">\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                  <button *ngIf=\"editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config.index, 'delay')\">\n                    <mat-icon>done</mat-icon>\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n      <!--Modified column-->\n      <ng-template lsWidgetName=\"modified\" let-config>\n        <span *ngIf=\"masterData?.modifiedDateTime\">\n          {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n        </span>\n        <br />\n        <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n      </ng-template>\n    </ls-table>\n  </div>\n</div>\n<mat-dialog-actions class=\"row px-1\" *ngIf=\"!loader && isEditAccess\">\n  <div class=\"col-lg-6\">\n    <button mat-flat-button class=\"reset_btn_bg px-2\" (click)=\"openDialog()\" *ngIf=\"isShowResetButton\">\n      <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n      <span class=\"ps-1\">{{\n        \"alert_config_module.reset_to_default\" | translate\n        }}</span>\n    </button>\n  </div>\n  <div class=\"col-lg-6 text-end\">\n    <ng-template [ngIf]=\"showActionButtons\">\n      <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n        <span>{{ \"alert_config_module.cancel\" | translate }}</span></button>&nbsp;\n      <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n        <span>{{ \"alert_config_module.save\" | translate }}</span>\n      </button>\n    </ng-template>\n  </div>\n</mat-dialog-actions>","import { Component, OnInit, EventEmitter, Output, Input, OnDestroy } from \"@angular/core\";\nimport { CommonService } from \"@services/common.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  priorityColorCode,\n  arrhythmiaAlertPriorityOptions,\n  uiAccessRoles,\n  ArrhythmiaParameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { settings } from \"cluster\";\n\n@Component({\n  selector: \"app-arrhythmia-alerts\",\n  templateUrl: \"./arrhythmia-alerts.component.html\",\n  styleUrls: [\"./arrhythmia-alerts.component.scss\"],\n})\nexport class ArrhythmiaAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  loading: boolean = false;\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = arrhythmiaAlertPriorityOptions;\n  parameterAlert = ArrhythmiaParameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ARRHYTHMIA_ALERT;\n  alertSettings$: Observable<AlertConfigurationModels.ArrhythmiaAlertConfigurationData>;\n  isEditAccess: boolean = false;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  selectedTab = \"parameter\";\n  error: string;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  cfId: string = \"\";\n  alertId: any = null;\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  GroupId: string = \"\";\n  patientId: string = \"PATALDRT1\";\n  userPreferenceUnit;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  lastUpdated;\n  loaderSubscription\n  loader = true;\n  postures;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 70px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 200px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n  ];\n  constructor(\n    public dialog: MatDialog,\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private snackbar: SnackbarService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    public alertService: AlertConfigurationsService\n  ) { }\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.parameterMinMax = this.alertService.getParameterMinMax();\n    this.cfId = this.autheticationService.getCfId();\n    this.patientId = this.patientData.patientId;\n\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getArrhythmiaAlertConfigurations\n    );\n\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data: any) => {\n\n        this.error = data;\n        if (data?.error?.errorMessage === 'ACCESS_DENIED') {\n          this.snackbar.openCustomSnackBar('alert_config_module.messages.access_denied', 'bottom', 'center', true);\n        }\n      });\n    this.loaderSubscription = this.store$\n      .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        this.loader = !loaded;\n      });\n\n    this.getSettings();\n    this.alertSettings$.subscribe((data) => { \n      //this.loader = false;\n      this.lastUpdated = new Date().toUTCString();\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      this.masterData.GroupId = \"\";\n      this.masterData.PatientId = this.patientId;\n      this.masterData.FacilityId = this.cfId;\n      this.masterData.AlertId = \"\";\n      const alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if (data?.Setting[element.key]) {\n            const settings = data.Setting[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n      this.loading = false;\n    }, (err) => {\n      this.loading = false;\n    });\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n    this.alertSettings$.subscribe((data) => {\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.ArrhythmiaId;\n      this.isShowResetButton = this.alertSettings?.IsForPatient;\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n            this.updateParameterSettings();\n        }\n      })\n    );\n  }\n\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n  // Fetch alert settings - API Call\n  getSettings = () => {\n    this.loading = true;\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `arrhythmia-alert-settings/patient/${this.cfId}/${patientId}`;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadArrhythmiaAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };////\n  showEdit(index) {\n    this.editThreshold[index] = true;\n  }\n  hideEdit(index) {\n    this.editThreshold[index] = false;\n  }\n\n  showEditPrior(index) {\n    this.editPrior[index] = true;\n  }\n  hideEditPrior(index) {\n    this.editPrior[index] = false;\n  }\n\n  showEditDelay(index) {\n    this.editDelay[index] = true;\n  }\n  hideEditDelay(index) {\n    this.editDelay[index] = false;\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  async updateParameterSettings() {\n    const parameterAlert: any = {};\n    let settings = [...this.parameterAlertSettings];\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        Thr:element.Thr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `arrhythmia-alert-settings/patient-edit/${this.cfId}/${patientId}`;\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar('Settings has been updated successfully', 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n        this.getSettings();\n      }\n    } catch (error) {\n      this.error = error;\n    }\n  }\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.parameterAlertSettings = JSON.parse(\n      JSON.stringify(this.parameterAlertSettingsCopy)\n    );\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n    this.hideParameterEdit();\n\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n\n     this.updateParameterSettings();\n  }\n  // Handle alert setting factory reset action\n  async handleFactoryReset() {\n    const patientId = encodeURIComponent(this.patientId);\n    const url = `arrhythmia-alert-settings/patient-reset/${this.cfId}/${patientId}/${this.alertId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center',true);\n        this.getSettings();\n      }\n    } catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n    }\n\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.selectedTab = value;\n  }\n  checkRole(allowedRoles: any, userRoles: any) {\n    if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n      Thr: \"invalid_threshold\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      let translate_txt = \"alert_config_module.messages.\" + keyMapping[key];\n      this.snackbar.openCustomSnackBar(translate_txt, 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  limitdelay(event) {\n    if (event.key === '.') {\n      event.preventDefault();\n    }\n    if (event.target.value.toString().length > 5) {\n      event.target.value = event.target.value.substr(0, 5);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n}\n","<mat-dialog-content class=\"alert-dialog-content\">\n    <app-patient-details [patientData]=\"patientData\"></app-patient-details>\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n        <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <div class=\"inside-div head-border alert-destination-table comman-table-users bg-thead-color\" *ngIf=\"!loader\">\n        <app-alert-destination [alertType]=\"'Clinical'\" [alertDestinationSettings]=\"alertDestinationSettings.Setting\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.Setting\" (updateDestination)=\"valueUpdated($event, 'clinical')\"\n        [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n        <app-alert-destination [alertType]=\"'Technical'\" [alertDestinationSettings]=\"alertDestinationSettings.SettingTech\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.SettingTech\" (updateDestination)=\"valueUpdated($event, 'tech')\"\n                               [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n    </div>\n    </mat-dialog-content>\n<mat-dialog-actions class=\"row px-1\" >\n    <div class=\"col-lg-6\">\n        <button mat-flat-button class=\"reset_btn_bg mb-2 mb-md-0 px-2\" (click)=\"openDialog()\" *ngIf=\"!loader && isShowResetButton\" >\n          <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n          <span class=\"ps-1\">{{\n            \"alert_config_module.reset_to_default\" | translate\n            }}</span>\n        </button>\n      </div>\n    <div class=\"col-lg-6 text-end\">\n        <ng-template [ngIf]=\"showActionButtons\">\n            <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n                <span>{{ \"alert_config_module.cancel\" | translate }}</span>\n            </button>\n            <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n                <span>{{ \"alert_config_module.save\" | translate }}</span>\n            </button>\n        </ng-template>\n    </div>\n</mat-dialog-actions>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Observable, Subscription} from \"rxjs\";\nimport {AlertConfigurationModels} from \"../../../settings/alert-configuration/store\";\nimport {CommonService} from \"@services/common.service\";\nimport {Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {SnackbarService} from \"@services/snackbar.service\";\nimport {BackendApiService} from \"@services/backendapi.service\";\nimport {AuthenticationService} from \"@services/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AlertConfigurationStoreActions, AlertConfigurationStoreSelectors, AlertConfigurationStoreState} from \"../store\";\nimport { environment } from 'src/environments/environment';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-destination-setting',\n  templateUrl: './destination-setting.component.html',\n  styleUrls: ['./destination-setting.component.scss']\n})\nexport class DestinationSettingComponent implements OnInit {\n\n  constructor(\n      private commonService: CommonService,\n      private router: Router,\n      public dialog: MatDialog,\n      private snackbar: SnackbarService,\n      private backendApiService: BackendApiService,\n      private autheticationService: AuthenticationService,\n      private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n  ) { }\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  alertDestinationSettings;\n  alertDestinationSettingsCopy;\n  cfId: string = \"\";\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  roles: string[];\n  patientId;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  loaderSubscription;\n  loader = true;\n  isPHYGCUser: boolean = false;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  alertId;\n  error;\n  loading: boolean = false;\n  ngOnInit(): void {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.patientId = this.patientData.patientId;\n    this.fetchContactList();\n    this.alertDestinationSettings$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertSettingsStatus$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n\n    this.alertSettingsMessage$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n        .subscribe((loaded) => {\n          this.loader = !loaded;\n        });\n\n    this.getAlertDestinationSettings();\n\n    if ([\"PHY\", \"GC\"].some((ai) => this.roles.includes(ai))) {\n      this.isPHYGCUser = true;\n      // this.isShowResetButton = false;\n    }\n    if ([\"PHY\", \"SC\"].some((ai) => this.roles.includes(ai))) {\n      // this.isPHYGCUser = true;\n      this.isShowResetButton = false;\n    }\n    this.alertDestinationSettings$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertDestinationSettings$.subscribe((data) => {\n      console.log(data);\n      this.alertDestinationSettings = { ...data };\n      this.alertDestinationSettings.UserData = this.alertDestinationSettings?.UserData?.map(user => {\n        return {\n          ...user,\n          displayName: `${user?.firstName} ${user?.lastName}`,\n          userId: user.id\n        }\n      });\n      if(this.alertDestinationSettings.PatientId !== this.patientId) {\n        this.alertDestinationSettings.AlertDestId = '';\n      }\n      this.alertDestinationSettings.PatientId = this.patientId;\n      this.alertDestinationSettings.FacilityId = this.cfId;\n      this.alertDestinationSettings.GroupId = \"\";\n      //this.alertDestinationSettings.AlertDestId = \"\";\n      this.alertDestinationSettingsCopy = JSON.parse(\n          JSON.stringify(this.alertDestinationSettings)\n      );\n      this.isShowResetButton = this.alertDestinationSettings?.IsForPatient;\n    });\n    this.subscriptions.push(\n        this.commonService.destinationAlertEditSubmit.subscribe((isSubmit) => {\n          if (isSubmit) {\n            this.handleAlertSettingsSave();\n          }\n        })\n    );\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n  }\n\n  async handleFactoryReset() {\n    const patientId = encodeURIComponent(this.patientId);\n    const url = `alert-settings/patient-reset/alert-destination-settings/${this.cfId}/${patientId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center', true);\n        this.getAlertDestinationSettings();\n      }\n    } \n    catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n      console.log(this.error)\n    }\n  }\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n\n  fetchContactList() {\n    let url = \"clinical-facilities/contacts?page=1&size=1000\";\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            { url }\n        )\n    );\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data: any) => {\n          if (data?.error?.errorMessage === 'ACCESS_DENIED') {\n            this.snackbar.openCustomSnackBar(\"alert_config_module.messages.access_denied\", 'bottom', 'center', true);\n          }\n        });\n  }\n  getAlertDestinationSettings() {\n    this.loading = true;\n    let patientId = encodeURIComponent(this.patientId);\n    const url =\n        `alert-settings/patient/${this.cfId}/${patientId}/alert-destination-settings`;\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadDestinationAlertConfigurationRequestAction(\n            { url }\n        )\n    );\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data) => {\n          this.error = data;\n        });\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  async handleAlertSettingsSave() {\n    try {\n      const url = `alert-settings/patient-edit/alert-destination-settings`;\n      const resp: any = await this.backendApiService\n          .post(\n              environment.dataApiUrl + url,\n              this.alertDestinationSettings\n          )\n          .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.getAlertDestinationSettings();\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setDestinationAlertEditSubmit(false);\n      }\n    } catch (error) { }\n  }\n  valueUpdated(event, type) {\n    if(type=== 'clinical') {\n      this.alertDestinationSettings.Setting = JSON.parse(event);\n    } else {\n      this.alertDestinationSettings.SettingTech = JSON.parse(event);\n    }\n    if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setDestinationAlertEditHide(true);\n  }\n  // root Alert Destination Settings\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n}\n","<div class=\"container-fluid\">\n    <app-patient-details [patientData]=\"patientData\" [tab]=\"'eventList'\" (addEvent)=\"addNewEvent()\" (acknowledgeAllEvents)=\"openConfirmDialog()\" [activeEvents]=\"selectedEvents.length\" [eventEditAccess]=\"editAccess\" [updated]=\"lastUpdated\"></app-patient-details>\n    <!--  <div class=\"loading-indicator\" *ngIf=\"loader\">-->\n    <!--    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>-->\n    <!--  </div>-->\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n        <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <ls-paginator (page)=\"onPage($event)\" class=\"sticky-paginator\"\n                  [length]=\"config?.page?.length\" [pageSize]=\"config?.page?.pageSize\" [pageLength]=\"patientEventList?.length\" [pageIndex]=\"config?.page?.pageIndex\"\n                  showFirstLastButtons [tableState] = config?.tableState >\n    </ls-paginator>\n    <div class=\"inside-div table-responsive-md head-border comman-table-users bg-thead-color\" *ngIf=\"!loader\">\n        <div class=\"event-scroll-assist\">\n        <table class=\"mat-table\" aria-label=\"Table\">\n            <thead>\n                <tr class=\"thead-row\">\n                    <th class=\"text-start event-col text-uppercase\">\n                         <mat-checkbox [disabled]=\"!unAcknowledged\" (change)=\"checkAll($event)\" [checked]=\"(selectedEvents.length !==0) && (selectedEvents.length === unAcknowledged)\" [indeterminate]=\"(selectedEvents.length !==0) && (selectedEvents.length < unAcknowledged)\"></mat-checkbox>\n                        <span class=\"ps-4\">\n                          {{ \"alert_config_module.symptoms_title\" | translate}}\n                        </span>\n                        <img src=\"../../../../assets/icons/sort-icon.svg\" alt=\"sort-icon\" width=\"20\" height=\"17\" />\n                    </th>\n                    <th class=\"text-start\">{{ \"alert_config_module.activity_title\" | translate}}</th>\n                    <th class=\"text-start\">{{ \"alert_config_module.note\" | translate}}</th>\n                    <th class=\"text-start\">{{ \"alert_config_module.event_time\" | translate}}</th>\n                    <th class=\"text-start\">{{ \"alert_config_module.log\" | translate}}</th>\n                    <th class=\"d-flex justify-content-center\">\n                        {{ \"alert_config_module.status\" | translate}}\n                        <div style=\"display: contents\">\n                            <img src=\"../../assets/icons/sort-icon.svg\" alt=\"sort-icon\" width=\"24\" height=\"20\" />\n                        </div>\n                        <!--          <button mat-flat-button type=\"button\" color=\"primary\" class=\"my-1\" (click)=\"openConfirmDialog()\">-->\n                        <!--            {{ \"alert_config_module.acknowledge_all\" | translate}}-->\n                        <!--          </button>-->\n                    </th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr class=\"tbody-row tbody-row-lower\" *ngFor=\"let event of patientEventList; let i = index\">\n                    <td class=\"event-col\">\n                        <div class=\"d-flex align-items-center\">\n                            <mat-checkbox class=\"pe-4\" [disabled]=\"event?.ack || event?.mandatoryNote\" [(ngModel)]=\"event.checked\" [checked]=\"event.checked\" (change)=\"onCheckboxChange($event, event.id)\"></mat-checkbox>\n                            <span *ngIf=\"event?.alertType\" class=\"event-label\">{{ event.alertType }}</span>\n                            <span *ngIf=\"!event?.alertType && event?.symptoms?.length\" class=\"event-label\">\n                                <span *ngFor=\"let symptom of event?.symptoms;let i=index\">\n                                    <span *ngIf=\"i!==0\">, </span><span>{{symptom}}</span>\n                                </span>\n                            </span>\n                            <span *ngIf=\"!event?.alertType && !event?.symptoms?.length && editAccess\">\n                            <button  mat-flat-button type=\"button\" color=\"primary\" (click)=\"editEvent(event)\">\n                               {{ \"alert_config_module.add_event.add_label\" | translate}}\n                            </button>\n                            </span>\n                            <span *ngIf=\"!event?.alertType && !event?.symptoms?.length && !editAccess\" class=\"ps-2\">\n                                  -\n                            </span>\n                        </div>\n                    </td>\n                    <td>\n                        <span *ngIf=\"event?.activity?.length\"  class=\"event-label\">\n                            <span *ngFor=\"let activity of event?.activity;let i=index\">\n                                <span *ngIf=\"i!==0\">, </span><span *ngIf=\"activity\">{{activity}}</span>\n                            </span>\n                        </span>\n                        <span *ngIf=\"!event?.activity?.length\">\n                            -\n                        </span>\n                    </td>\n                    <td class=\"px-2\">\n                        <img class=\"cursor-pointer note-icon\" *ngIf=\"event?.notes\" src=\"../../../../assets/icons/note.png\" (click)=\"recordedNote(event)\">\n                        <mat-icon class=\"cursor-pointer\" *ngIf=\"!event?.notes && !event?.ack\" fontSet=\"material-icons-outlined\" (click)=\"addNote(event)\">note_add</mat-icon>\n                        <span *ngIf=\"!event?.notes && event?.ack\" class=\"ps-2\"> -</span>\n                    </td>\n                    <td>\n                        <span>\n                            {{ event.alertTime*1000  | date: \"MMM dd, \" + timeFmt :timeZone }}\n                        </span>\n                    </td>\n                    <td class=\"px-2\">\n                        <span *ngIf=\"!event?.acknowledgedOn\" class=\"ps-2\"> - </span>\n                        <span class=\"ackdata\" *ngIf=\"event?.acknowledgedOn\"> {{ event?.acknowledgedOn*1000 | date: \"MMM dd, \" + timeFmt :timeZone }}</span> \n                        <span class=\"ackdata\" *ngIf=\"event?.acknowledgedBy\">by {{ event?.acknowledgedBy}}</span>\n                    </td>\n                    <td class=\"text-center px-2\">\n                        <button *ngIf=\"event?.ack === false\" mat-flat-button type=\"button\" color=\"primary\" (click)=\"acknowledge(event)\">\n            {{ \"alert_config_module.alertfreq_acknowledge\" | translate}}\n          </button>\n                        <button *ngIf=\"event?.ack === true\" [disabled]=\"true\" mat-flat-button type=\"button\" color=\"primary\">\n            {{ \"alert_config_module.acknowledge\" | translate}}\n          </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"text-center my-3\" *ngIf=\"eventListCount === 0\">\n            <strong>{{ \"alert_config_module.messages.no_data\" | translate}}</strong>\n        </div>\n        <button (click)=\"downloadLog()\" mat-flat-button type=\"button\" color=\"primary\" class=\"my-2 text-uppercase\">\n             <mat-icon>save_alt</mat-icon>\n             {{ \"alert_config_module.download_log\" | translate}}\n        </button>\n    </div>\n</div>\n</div>\n","import {Component, Input, OnDestroy, OnInit} from \"@angular/core\";\nimport {AddEventComponent} from \"../add-event/add-event.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ConfirmDialogComponent} from \"../../../shared/confirm-dialog/confirm-dialog.component\";\nimport {AlertConfigurationsService} from \"../services/alert-configuration.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AlertConfigurationStoreActions, AlertConfigurationStoreSelectors, AlertConfigurationStoreState} from \"../store\";\nimport {UserPreferenceService} from \"@services/user-preference.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {SnackbarService} from \"@services/snackbar.service\";\nimport {AuthenticationService} from \"@services/authentication.service\";\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\n@Component({\n  selector: \"app-event-list\",\n  templateUrl: \"./event-list.component.html\",\n  styleUrls: [\"./event-list.component.scss\"],\n})\nexport class EventListComponent implements OnInit, OnDestroy{\n  @Input() patientData: any;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  loader = true;\n  timeZone;\n  editlabel = [false];\n  eventList$;\n  eventListCount;\n  patientId;\n  loaderSubscription;\n  patientEventList;\n  selectedEvents = [];\n  unAcknowledged = 0;\n  editAccess = false;\n  roles;\n  lastUpdated;\n  reloadInterval;\n  config = {\n    page: {\n      pageSize: 10,\n      pageIndex: 0,\n      length: null\n    },\n    tableState: TableState.DEFAULT\n  }\n  constructor(\n    private dialog: MatDialog, public alertService: AlertConfigurationsService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private userPreference: UserPreferenceService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService\n  ) { }\n  ngOnInit() {\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.roles = this.autheticationService.getRoles() || [];\n    if (this.roles?.indexOf(\"GC\") > -1 || this.roles?.indexOf(\"PHY\") > -1) {\n      this.editAccess = true;\n    }\n    this.patientId = this.patientData.patientId;\n    this.eventList$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getEventList\n    );\n    this.getEventList();\n    // this.reloadInterval = setInterval(() => {\n    //   this.getEventList();\n    // }, 30000);\n    this.eventList$.subscribe(res => {\n      this.lastUpdated = new Date().toUTCString();\n      this.unAcknowledged = 0;\n      this.selectedEvents = [];\n      console.log(res);\n      this.patientEventList = res.map(event => {\n        if(!event.ack && (event?.notes || event?.symptoms?.length || event?.activity?.length)) {\n          this.unAcknowledged++;\n        }\n        return {\n          ...event,\n          checked: false,\n          mandatoryNote: (!event?.notes && !event?.symptoms?.length && !event?.activity?.length) || false\n        }\n      });\n      console.log(this.patientEventList);\n    });\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getEventListCount\n    ).subscribe(count => {\n      this.eventListCount = count;\n      this.config.page.length = count;\n    });\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getTableState\n    ).subscribe(state => {\n      this.config.tableState = state;\n    });\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getEventListLoader)\n        .subscribe((loaded) => {\n          if (loaded) {\n            this.loader = false;\n          }\n        });\n  }\n  getEventList() {\n    let param: any = {\n      patientId: this.patientId,\n      page: this.config.page.pageIndex,\n      pageSize: this.config.page.pageSize\n    };\n    this.store$.dispatch(new AlertConfigurationStoreActions.LoadEventListRequestAction({ params: param }))\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getEventListLoader)\n        .subscribe((loaded) => {\n          if (loaded) {\n            this.loader = false;\n          }\n        });\n  }\n  showEdit(index) {\n    this.editlabel[index] = true;\n  }\n  addNewEvent() {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      maxWidth: \"98vw\",\n      height: \"100%\",\n      maxHeight:\"100vh\",\n      panelClass: \"add-event-container\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n     // height: \"auto\",\n      //minHeight: \"100px\",\n      //maxHeight: \"90vh\",\n      data: {patientId: this.patientId, patchStarted: this.patientData?.started},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      console.log(data);\n      if(data) {\n        this.getEventList();\n      }\n    });\n  }\n  editEvent(event) {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      //maxWidth: \"98vw\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n      maxWidth: \"96vw\",\n      height: \"100%\",\n      maxHeight:\"100vh\",\n      panelClass: \"add-event-container\",\n      data: {editEvent: true, event: event},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      if(data) {\n        this.getEventList();\n      }\n    });\n  }\n  getRelativeTime(timestamp) {\n    let date = new Date();\n    const currentTimestamp = (date.getTime())/1000;\n    const difference = currentTimestamp - timestamp;\n    let output = ``;\n    if ( difference > 0 && difference < 60) {\n      // Less than a minute has passed:\n      output = `${Math.round(difference)} secs ago`;\n    } else if (difference < 3600) {\n      // Less than an hour has passed:\n      output = `${Math.floor(difference / 60)} mins ago`;\n    } else if (difference < 86400) {\n      // Less than a day has passed:\n      output = `${Math.floor(difference / 3600)} hrs ago`;\n    } else if (difference < 2620800) {\n      // Less than a month has passed:\n      let relativeTime = Math.floor(difference / 86400);\n      if (relativeTime === 1) {\n        output = `${Math.floor(difference / 86400)} day ago`;\n      } else {\n        output = `${Math.floor(difference / 86400)} days ago`;\n      }\n    }\n    return output\n  }\n  openConfirmDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"alert_config_module.messages.acknowledge_events\",\n          text: \"alert_config_module.add_event.confirm_acknowledge\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        let body = {\n          patientId: this.patientId,\n          ids: this.selectedEvents\n        };\n        this.alertService.acknowledgeEvent(body)\n            .subscribe(res => {\n              console.log(res);\n              if(res.status === 'OK') {\n                this.loader = true;\n                this.getEventList()\n              }\n            }, error => {\n              if(error) {\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n              }\n            });\n      }\n    });\n  }\n  recordedNote(event) {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      //maxWidth: \"98vw\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n      maxWidth: \"96vw\",\n      height: \"400px\",\n      //maxHeight:\"100vh\",\n      //panelClass: \"add-event-container\",\n      data: {recordedNote: true, event: event},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      console.log(data);\n    });\n  }\n  addNote(event) {\n    const addEvent = this.dialog.open(AddEventComponent, {\n      width: \"600px\",\n      //maxWidth: \"98vw\",\n      //maxHeight: \"95vh\",\n      //height: \"530px\",\n      maxWidth: \"96vw\",\n      height: \"100%\",\n      maxHeight:\"100vh\",\n      panelClass: \"add-event-container\",\n      data: {addNote: true, event: event},\n      disableClose: true,\n    });\n    addEvent.afterClosed().subscribe((data) => {\n      if(data) {\n        this.getEventList();\n      }\n    });\n  }\n  acknowledge(event) {\n    console.log(event);\n    let body = {\n      patientId: this.patientId,\n      ids: [event.id]\n    };\n    if(event?.mandatoryNote) {\n      this.addNote(event);\n    } else {\n      this.alertService.acknowledgeEvent(body)\n          .subscribe(res => {\n            console.log(res);\n            if (res.status === 'OK') {\n              this.loader = true;\n              this.getEventList()\n            }\n          }, error => {\n            if (error) {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n            }\n          });\n    }\n  }\n  onCheckboxChange(event, id) {\n    if(event.checked) {\n      this.selectedEvents = [...this.selectedEvents, id];\n    } else {\n      let i = this.selectedEvents.indexOf(id);\n      this.selectedEvents.splice(i, 1);\n    }\n  }\n  checkAll(event) {\n    this.selectedEvents = []\n    this.patientEventList.forEach(eve => {\n      if(event.checked) {\n        if(!eve.ack && !eve.mandatoryNote) {\n          eve.checked = true;\n          this.selectedEvents = [...this.selectedEvents, eve.id];\n        }\n      } else {\n        eve.checked = false;\n      }\n    });\n    console.log(this.selectedEvents);\n  }\n  addEventName(index, event) {\n    this.editlabel[index] = false\n    event.alertType = event.alertName;\n    this.alertService.addEvent(event)\n        .subscribe(res => {\n          if(res.status === 'OK') {\n            this.loader = true;\n            this.getEventList();\n          }\n        }, error => {\n          if(error) {\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n          }\n        });\n  }\n  onPaste(event: ClipboardEvent) {\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[a-zA-Z0-9 ]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n  eventLabelValid(eventLabel) {\n    let pattern = /^[a-zA-Z0-9]{1}[a-zA-Z0-9 ]*$/;\n    return pattern.test(eventLabel);\n  }\n  cancelEdit(index) {\n    this.editlabel[index] = false;\n    this.getEventList();\n  }\n  onPage(event) {\n    this.config = {\n      ...this.config,\n      page: {\n        ...this.config.page,\n        pageIndex: event.pageIndex,\n        pageSize: event.pageSize\n      }\n    }\n    this.getEventList();\n  }\n\n  downloadLog() {\n    this.alertService.downloadEventLog(this.patientId).subscribe(data => {\n      var blobUrl = URL.createObjectURL(data);\n      var link = document.createElement(\"a\");\n      link.href = blobUrl;\n      link.download = \"EventLog-\" + this.patientId + \".pdf\";\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    })\n  }\n  ngOnDestroy() {\n    clearInterval(this.reloadInterval);\n  }\n}\n","<!--<app-patient-details [patientData]=\"patientData\" [tab]=\"tab\" [count]=\"count\" [activeAlert]=\"anyActive()\"-->\n<!--                     (acknowledgeAllType)=\"openConfirmDialog()\"></app-patient-details>-->\n<div class=\"container-fluid p-3\">\n    <div class=\"row\">\n        <div class=\"col-md-8 col-lg-8 col-xl-7\">\n            <div class=\"d-flex flex-wrap align-items-center patient-details\">\n\n                <div class=\"patient-id px-2\">\n                    <strong> <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon me-2\"\n                            width=\"28\" height=\"31\" /> {{patientData?.patchId}}</strong>\n                    <span class=\"d-block pid\">{{ \"dashboard-module.pid\" | translate }} {{ patientData?.patientId\n                        }}</span>\n                    <!--<span>{{ patientData?.doctorId }}</span>-->\n                </div>\n                <div class=\"px-2 me-auto w-max-20\">\n                    <strong class=\"d-block pb-2 text-truncate\">\n                        <span class=\"patient-name\" *ngIf=\"patientData?.firstName\"> {{ patientData?.firstName + \"\n                            \"}}</span>\n                        <span class=\"patient-name\" *ngIf=\"patientData?.lastName\">{{ patientData?.lastName }}</span>\n                    </strong>\n                    <!--<span class=\"time-group\" *ngIf=\"patientData?.admitted\">{{patientData?.admitted | date: \"MMM dd, yyyy\" }}</span>-->\n                    <span *ngIf=\"patientData?.pGroup\" class=\"small-tag remote-tag\">\n                        {{patientData.pGroup?.name}}<span *ngIf=\"patientData?.pGroup && patientData?.cGroup\">,</span>\n                    </span>\n                    <span *ngIf=\"patientData?.cGroup\" class=\"small-tag sepsis-tag\">\n                        {{patientData.cGroup?.name}}\n                    </span>\n                </div>\n                <div class=\"justify-content-end py-1\">\n                    <span class=\"mx-2\">Current</span>\n                    <span class=\"alert-count\"><strong>{{count.current}}</strong></span>\n                    <span class=\"mx-2 ms-3\">Unacknowledged</span>\n                    <span class=\"alert-count\"><strong>{{count.unAcknowledged}}</strong></span>\n                </div>\n            </div>\n        </div>\n        <div class=\"text-center  text-md-end col-md-4 col-lg-4 col-xl-5\">\n            <label class=\"mx-2 py-1 time-stamp\" *ngIf=\"lastUpdated\">Last updated\n                {{ lastUpdated+ '+0000' | date: \"MMM dd, yyyy / \" + timeFmt : timeZone }}\n            </label>\n            <button (click)=\"openConfirmDialog()\" [disabled]=\"!anyActive()\" mat-flat-button type=\"button\"\n                color=\"primary\" class=\"mx-2 py-1 text-uppercase alert-acknowledged-btn \">\n                {{ \"alert_config_module.acknowledge_all\" | translate}}\n            </button>\n        </div>\n    </div>\n</div>\n<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"inside-div head-border comman-table-users bg-thead-color\" *ngIf=\"!loader\">\n        <div class=\"table-responsive-sm alert-scroll-assist\">\n            <table class=\"mat-table\" aria-label=\"Table\">\n                <thead>\n                    <tr>\n                        <th class=\"text-center\">\n                            {{ \"alert_config_module.alerts\" | translate}}\n                            <div style=\"display: contents\" (click)=\"sort('alertTime','desc')\">\n                                <mat-icon [ngClass]=\"sortBy==='alertTime'? '': 'disabled'\">filter_list</mat-icon>\n                            </div>\n                        </th>\n                        <th class=\"text-start\">{{ \"alert_config_module.time_duration\" | translate}}</th>\n                        <th style=\"text-align: initial !important\">\n                            {{ \"alert_config_module.priority\" | translate}}\n                        </th>\n                        <th class=\"text-start\">\n                            {{ \"alert_config_module.acknowledged_by\" | translate}}\n                        </th>\n                        <th scope=\"\" class=\"d-flex justify-content-center\">\n                            {{ \"alert_config_module.status\" | translate}}\n                            <div style=\"display: contents\">\n                                <img [ngClass]=\"sortBy==='status'? '': 'disabled'\"\n                                    src=\"../../assets/icons/sort-icon.svg\" alt=\"sort-icon\" width=\"24\" height=\"20\" />\n                            </div>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody *ngFor=\"let alert of alertHistory; let i = index\">\n                    <tr *ngIf=\"alert?.items?.length\" class=\"tbody-row-head py-1\" [ngStyle]=\"{\n            background:\n              alert.key === 'HR'\n                ? 'rgba(116, 255, 172, 0.4)'\n                : 'rgba(60, 209, 255, 0.2)'\n          }\">\n                        <td class=\"tbody-head-text\" [ngStyle]=\"{\n              color:\n                alert.key === 'HR'\n                  ? '#4FFF96'\n                  : '#32CFFF'\n            }\">\n                             <mat-checkbox class=\"mx-2\" (change)=\"checkAll(alert.key, $event)\"\n                                [checked]=\"(alert.selected.length !==0) && (alert.selected.length === alert.unAck)\"\n                                [indeterminate]=\"(alert.selected.length !==0) && (alert.selected.length < alert.unAck)\"\n                                [disabled]=\"!alert?.unAck\">\n                                <span class=\"mx-2 text-uppercase\">{{\n                                    alert.alert\n                                    }}</span>\n                                <span style=\"font-size: 12px\">( {{alert.selected.length}} {{\n                                    \"alert_config_module.selected\" | translate}} )</span>\n                            </mat-checkbox>\n                        </td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td class=\"d-flex justify-content-center btn-class\">\n                            <button class=\"text-uppercase\" [disabled]=\"!alert?.selected?.length\" mat-flat-button\n                                type=\"button\" color=\"primary\" (click)=\"acknowledgeAll(alert.key)\">\n                                {{ \"alert_config_module.acknowledge_all\" | translate}}\n                            </button>\n                        </td>\n                    </tr>\n                    <tr class=\"tbody-row-inner\" *ngFor=\"let rowItem of alert.items;let i = index\">\n                        <td class=\"mx-2\">\n                            <mat-checkbox class=\"mx-4\" [disabled]=\"(rowItem.ack === true)\" [(ngModel)]=\"rowItem.checked\"\n                                [checked]=\"rowItem.checked\"\n                                (change)=\"onCheckboxChange(rowItem.alertKey, $event, rowItem)\">\n                                <div class=\"alert-level\"\n                                    *ngIf=\"rowItem?.setting?.length && alert.key !== 'POSTURE_ALERT'\">\n                                    <span class=\"mx-2\">{{\n                                        getAlertType(rowItem.alertKey, rowItem.alertType, rowItem.setting[1],\n                                        rowItem.setting[2])\n                                        }}</span>\n                                </div>\n                                <div *ngIf=\"alert.key === 'POSTURE_ALERT'\" class=\"px-3\">\n                                    {{postures[rowItem.alertVal]}}\n                                </div>\n                            </mat-checkbox>\n                        </td>\n                        <td>\n                            <span class=\"d-flex align-items-center justify-content-start time-interval-text\">\n                                <span *ngIf=\"rowItem?.active === true\">\n                                    <button type=\"button\" mat-flat-button color=\"accent\" class=\"text-uppercase\">\n                                        {{ \"alert_config_module.active\" | translate}}\n                                    </button>\n                                    <span class=\"ms-3 time-duration\">\n                                        <span>{{rowItem?.alertTimeFrom/1000000 | date: \"MMM dd, yyyy \" + timeFmt\n                                            :timeZone }} to</span>\n                                        <span class=\"fw-bold hourtxt text-uppercase\">\n                                            {{ \"alert_config_module.now\" | translate}}\n                                        </span>\n                                    </span>\n                                </span>\n                                <span *ngIf=\"rowItem?.active === false\">\n                                    <span class=\"time-duration\"><span class=\"fw-bold hourtxt\">{{\n                                            getRelativeTime(rowItem?.alertTime/1000000000) }} |\n                                        </span> {{rowItem?.alertTimeFrom/1000000| date: \"MMM dd, \" + timeFmt : timeZone\n                                        }} to {{rowItem?.alertTime/1000000 | date: \"MMM dd, \" + timeFmt : timeZone\n                                        }}</span>\n                                </span>\n                            </span>\n                        </td>\n                        <td class=\"priority-text\">\n                            <div style=\"display: contents\" *ngIf=\"rowItem?.setting?.length\">\n                                <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\">\n                                    <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[rowItem?.setting[0]]\" />\n                                    <circle *ngIf=\"rowItem?.setting[0].toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n                                        [attr.stroke]=\"priorityHexCode[rowItem?.setting[0]]\" stroke-width=\"2\"\n                                        stroke-dasharray=\"4 4\" />\n                                </svg>\n                            </div>\n                            <span class=\"mx-3 mt-1\" *ngIf=\"rowItem?.setting?.length\">{{ rowItem?.setting[0] }}</span>\n                        </td>\n                        <td class=\"text-start\">\n                            <span class=\"px-2\" *ngIf=\"rowItem?.ack && rowItem?.acknowledgedOn\">\n                                {{ rowItem?.acknowledgedOn*1000 | date: \"MMM dd, \" + timeFmt : timeZone || \"-\" }}</span>\n                            <br />\n                            <span class=\"px-2\" *ngIf=\"rowItem?.ack && rowItem?.acknowledgedBy\">by {{\n                                rowItem.acknowledgedBy }}</span>\n                            <span *ngIf=\"!rowItem?.ack || !rowItem?.acknowledgedOn\">\n                                -\n                            </span>\n                        </td>\n                        <td>\n                            <span class=\"d-flex justify-content-center btn-class\">\n                                <button *ngIf=\"rowItem?.ack === false\" mat-flat-button type=\"button\" color=\"primary\"\n                                    (click)=\"acknwoledge(rowItem)\">\n                                    {{ \"alert_config_module.alertfreq_acknowledge\" | translate}}\n                                </button>\n                                <button *ngIf=\"rowItem?.ack === true\" [disabled]=\"true\" mat-flat-button type=\"button\"\n                                    color=\"primary\">\n                                    {{ \"alert_config_module.acknowledge\" | translate}}\n                                </button>\n                            </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\"text-center my-3\" *ngIf=\"totalAlerts === 0\">\n                <strong>{{ \"alert_config_module.messages.no_data\" | translate}}</strong>\n            </div>\n        </div>\n        <button mat-flat-button type=\"button\" color=\"primary\" (click)=\"downloadLog()\" class=\"my-2 text-uppercase\">\n            <mat-icon>save_alt</mat-icon>\n            {{ \"alert_config_module.download_log\" | translate}}\n        </button>\n    </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { Store } from \"@ngrx/store\";\nimport { AlertConfigurationStoreActions, AlertConfigurationStoreSelectors, AlertConfigurationStoreState } from \"../store\";\nimport {\n  AlertHistoryItems, priorityColorCode, postures\n} from \"@utils/helpers\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-notification-list\",\n  templateUrl: \"./notification-list.component.html\",\n  styleUrls: [\"./notification-list.component.scss\"],\n})\nexport class NotificationListComponent implements OnInit, OnDestroy{\n  @Input() patientData: any;\n  priorityHexCode: any = priorityColorCode;\n  patientId;\n  tab = 'alerts';\n  alertHistory$;\n  alerts;\n  alertHistory = [];\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  loader = true;\n  loaderSubscription;\n  current = 0;\n  unAcknowledged = 0;\n  count;\n  allActiveAlerts = [];\n  totalAlerts = 0;\n  sortBy = 'alertTime';\n  sortDirection = 'desc';\n  userPreferenceUnit = \"SI\";\n  reloadInterval;\n  autorefresh = false;\n  lastUpdated;\n  postures;\n  constructor(\n    private alertService: AlertConfigurationsService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private userPreference: UserPreferenceService,\n    private translate: TranslateService,\n    private snackbar: SnackbarService,\n    public dialog: MatDialog\n  ) { }\n  ngOnInit() {\n    this.postures = postures;\n    this.patientId = this.patientData.patientId;\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    this.alerts = AlertHistoryItems;\n    this.getAlerts();\n    this.reloadInterval = setInterval(() => {\n      this.getAlerts();\n    }, 30000);\n    this.alertHistory$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertHistory\n    );\n    this.alertHistory$.subscribe(res => {\n      console.log(res);\n      this.lastUpdated = new Date().toUTCString();\n      this.current = 0;\n      this.totalAlerts = 0;\n      this.unAcknowledged = 0;\n      this.allActiveAlerts = [];\n      this.alertHistory = [];\n      let alertHistory = res.topAlerts;\n      this.alerts.forEach((element:any) => {\n        this.alertHistory.push({\n          key: element.key,\n          alert: element.alerts,\n          items: res?.topAlerts ? alertHistory?.find(alertType =>  alertType.alertKey === element.key)?.topN || [] : [],\n          selected: [],\n          activeSelected: false,\n          unAck: 0\n        } );\n      });\n      this.alertHistory.forEach(alert => {\n        alert.items = this.alertService.sortAlerts(alert.items);\n        alert?.items?.forEach(ele => {\n          this.totalAlerts++;\n          ele = {...ele, checked: false};\n          if(ele.active) {\n            this.current++;\n          }\n          if(!ele.ack) {\n            this.unAcknowledged++;\n            alert.unAck++;\n          }\n          if(!ele.ack) {\n            this.allActiveAlerts.push(ele);\n          }\n\n        })\n      });\n      this.count = {\n        current: this.current,\n        unAcknowledged: this.unAcknowledged\n      }\n    });\n  }\n  getAlerts() {\n    let param: any = {\n      patientId: this.patientId\n    };\n    this.store$.dispatch(new AlertConfigurationStoreActions.LoadAlertHistoryRequestAction({ params: param }))\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertHistoryLoader)\n        .subscribe((loaded) => {\n          if (loaded) {\n            this.loader = false;\n          }\n        });\n  }\n  getRelativeTime(timestamp) {\n    let date = new Date();\n    const currentTimestamp = (date.getTime())/1000;\n    const difference = currentTimestamp - timestamp;\n    let output = ``;\n    if ( difference > 0 && difference < 60) {\n      // Less than a minute has passed:\n      output = `${Math.round(difference)} secs ago`;\n    } else if (difference < 3600) {\n      // Less than an hour has passed:\n      output = `${Math.floor(difference / 60)} mins ago`;\n    } else if (difference < 86400) {\n      // Less than a day has passed:\n      output = `${Math.floor(difference / 3600)} hrs ago`;\n    } else if (difference < 2620800) {\n      // Less than a month has passed:\n      let relativeTime = Math.floor(difference / 86400);\n      if (relativeTime === 1) {\n        output = `${Math.floor(difference / 86400)} day ago`;\n      } else {\n        output = `${Math.floor(difference / 86400)} days ago`;\n      }\n    }\n    return output\n  }\n  onCheckboxChange(key, event, alertRow) {\n    this.alertHistory.forEach(alert => {\n      if(alert.key === key) {\n        if(event.checked) {\n          if(alertRow.active) {\n            alert.activeSelected = true;\n          }\n          alert.selected = [...alert.selected, alertRow];\n        } else {\n          if(alertRow.active) {\n            alert.activeSelected = false;\n          }\n          let i = alert.selected.indexOf(alertRow);\n          alert.selected.splice(i, 1);\n        }\n      }\n    });\n  }\n  checkAll(key, event) {\n    this.alertHistory.forEach(alert => {\n      if(alert.key === key) {\n        alert.selected = [];\n        alert.items.forEach(item => {\n          if(!item.ack) {\n            item.checked = event.checked;\n            if(event.checked) {\n              if(item.active) {\n                alert.activeSelected = true;\n              }\n              alert.selected = [...alert.selected, item];\n            } else {\n              alert.selected = [];\n              alert.activeSelected = false;\n            }\n          }\n        })\n      }\n    });\n  }\n  acknowledgeAll(key) {\n    this.alertHistory.forEach(alert => {\n      if (alert.key === key) {\n        let body = {\n          \"alertAckInfo\": alert.selected,\n          \"forActive\": alert.activeSelected\n        };\n        this.alertService.acknowledgeAlert(body)\n          .subscribe((res: any) => {\n            if (res.status === 'OK') {\n              this.loader = true;\n              this.getAlerts();\n              this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + res.message, 'bottom', 'center', true);\n            }\n          });\n      }\n    })\n  }\n  acknwoledge(alert) {\n    let body = {\n      \"alertAckInfo\": [alert],\n      \"forActive\": alert.active\n    }\n    this.alertService.acknowledgeAlert(body)\n      .subscribe((res: any) => {\n        console.log(res);\n        if (res.status === 'OK') {\n          this.loader = true;\n          this.getAlerts();\n          this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + res.message, 'bottom', 'center', true);\n        }\n      });\n  }\n  getAlertType(alertKey, type, highThr, lowThr) {\n    let alertType = '';\n    let alertValue = '';\n    if(alertKey === 'SKINTEMP' || alertKey === 'BODYTEMP') {\n      highThr = (highThr/100)/10;\n      lowThr = (lowThr/100)/10;\n      if(this.userPreferenceUnit === 'IS') {\n        highThr = this.userPreference.convertCtoF(highThr);\n        lowThr = this.userPreference.convertCtoF(lowThr);\n      }\n    }\n    if(/low/i.test(type)) {\n      alertType = \"below\";\n      alertValue = lowThr;\n    } else if (/high/i.test(type)) {\n      alertType = \"above\";\n      alertValue = highThr;\n    }\n    this.translate.get('alert_config_module.'+alertType).subscribe((tran) => {\n      alertType = tran + \" \" + alertValue;\n    });\n    return alertType;\n  }\n  acknowledgeAllType() {\n    let body = {\n      \"alertAckInfo\": this.allActiveAlerts,\n      \"forActive\": true\n    }\n    this.alertService.acknowledgeAlert(body)\n      .subscribe((res: any) => {\n        console.log(res);\n        if (res.status === 'OK') {\n          this.loader = true;\n          this.getAlerts();\n          this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + res.message, 'bottom', 'center', true);\n        }\n      });\n  }\n\n  downloadLog() {\n    this.alertService.downloadAlertLog(this.patientId).subscribe(data => {\n      var blobUrl = URL.createObjectURL(data);\n      var link = document.createElement(\"a\"); // Or maybe get it from the current document\n      link.href = blobUrl;\n      // link.innerHTML = \"Download Log\";\n      link.download = \"AlertLog-\" +this.patientId+ \".pdf\";\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    })\n  }\n\n  anyActive() {\n    return this.allActiveAlerts.length > 0;\n  }\n  sort(active, dir) {\n    this.sortBy = active;\n    this.sortDirection = dir;\n    this.getAlerts();\n  }\n  openConfirmDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"alert_config_module.messages.acknowledge_alerts\",\n          text: \"alert_config_module.messages.confirm_acknowledge\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.acknowledgeAllType();\n      }\n    });\n  }\n  ngOnDestroy() {\n    clearInterval(this.reloadInterval);\n  }\n}\n\n","<div id=\"patientAlertSettings\">\n  <div class=\"dialog-header patientalert-dialog-header\">\n    <div class=\"mx-3 d-lg-flex d-md-flex d-sm-none d-none flex-wrap btn-group-area\">\n      <button mat-button [ngClass]=\"selectedTab === 'notificationsList'? 'select-btn-active select-btn-active-notif': 'select-btn select-btn-notif'\" (click)=\"selectTab('notificationsList')\">\n        <img src=\"assets/icons/notification-icon-red.svg\" alt=\"notification-icon-red\" class=\"header-tab-icon\" width=\"24\" height=\"24\" />\n        Alerts\n      </button>\n      <button mat-button [ngClass]=\"selectedTab === 'eventList' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('eventList')\">\n        <mat-icon class=\"header-tab-icon\">person</mat-icon>\n        <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon\" width=\"18\" height=\"16\" />\n        Event List\n      </button>\n      <button mat-button [ngClass]=\"selectedTab === 'parameterAlerts' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('parameterAlerts')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_parameter\" | translate }}\n      </button>\n      <!-- <button mat-button [ngClass]=\"selectedTab === 'arrhythmiaAlerts' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('arrhythmiaAlerts')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_arrhythmia\" | translate }}\n      </button> -->\n      <button mat-button [ngClass]=\"selectedTab === 'technicalAlerts' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('technicalAlerts')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_technical\" | translate }}\n      </button>\n      <button mat-button [ngClass]=\"selectedTab === 'alertDestination' ? 'select-btn-active' : 'select-btn'\" (click)=\"selectTab('alertDestination')\">\n        <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_destination\" | translate }}\n      </button>\n      <!--<button mat-button class=\"btn\" [ngClass]=\"\n        selectedTab === 'others' ? 'select-btn-active' : 'select-btn'\n      \" (click)=\"selectTab('others')\">\n      {{ \"alert_config_module.configure_others\" | translate }}\n    </button>-->\n    </div>\n    <div class=\"d-block d-lg-none d-md-none \">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border mb-2\">\n        <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\" class=\"mobile-menu alert-configuration-menu overflow-hidden d-block d-lg-none\">\n        <button mat-menu-item (click)=\"selectTab('notificationsList')\">\n          <img src=\"assets/icons/notification-icon-red.svg\" alt=\"notification-icon-red\" class=\"header-tab-icon\"\n            width=\"24\" height=\"24\" />\n          Alerts\n        </button>\n        <button mat-menu-item (click)=\"selectTab('eventList')\">\n          <mat-icon class=\"menu-tab-icon\">person</mat-icon>\n          <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon\" width=\"18\" height=\"16\" />\n          Event List\n        </button>\n        <button mat-menu-item (click)=\"selectTab('parameterAlerts')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_parameter\" | translate }}\n        </button>\n        <!-- <button mat-menu-item (click)=\"selectTab('arrhythmiaAlerts')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_arrhythmia\" | translate }}\n        </button> -->\n        <button mat-menu-item (click)=\"selectTab('technicalAlerts')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_technical\" | translate }}\n        </button>\n        <button mat-menu-item (click)=\"selectTab('alertDestination')\">\n          <mat-icon>settings</mat-icon> {{ \"alert_config_module.configure_destination\" | translate }}\n        </button>\n        <!--<button mat-menu-item (click)=\"selectTab('others')\">\n          {{ \"alert_config_module.configure_others\" | translate }}\n        </button>-->\n      </mat-menu>\n    </div>\n    <span class=\"close-icon mt-2 mt-md-0 me-2 me-md-0\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"close icon\" class=\"cursor-pointer\" (click)=\"closeDialog()\">close\n      </mat-icon>\n    </span>\n  </div>\n  <div>\n    <div *ngIf=\"selectedTab === 'notificationsList'\">\n      <app-notification-list [patientData]=\"patientData\"></app-notification-list>\n    </div>\n    <div *ngIf=\"selectedTab === 'eventList'\">\n      <app-event-list [patientData]=\"patientData\"></app-event-list>\n    </div>\n    <div *ngIf=\"selectedTab === 'parameterAlerts'\">\n      <app-parameter-alerts [patientData]=\"patientData\"></app-parameter-alerts>\n    </div>\n    <div *ngIf=\"selectedTab === 'arrhythmiaAlerts'\">\n      <app-arrhythmia-alerts [patientData]=\"patientData\"></app-arrhythmia-alerts>\n    </div>\n    <div *ngIf=\"selectedTab === 'technicalAlerts'\">\n      <app-technical-alerts [patientData]=\"patientData\"></app-technical-alerts>\n    </div>\n    <div *ngIf=\"selectedTab === 'alertDestination'\">\n      <app-destination-setting [patientData]=\"patientData\"></app-destination-setting>\n    </div>\n    <!--<div *ngIf=\"selectedTab === 'others'\">\n    <app-others [patientData]=\"patientData\"></app-others>\n  </div>-->\n  </div>\n</div>","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-notifications\",\n  templateUrl: \"./notifications.component.html\",\n  styleUrls: [\"./notifications.component.scss\"],\n})\nexport class NotificationsComponent implements OnInit{\n  selectedTab = \"notificationsList\";\n  patientData;\n  openEventTab : boolean = true;\n  constructor(private dialogRef: MatDialogRef<NotificationsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {}\n  ngOnInit() {\n    this.patientData = this.data.patientData;\n    this.openEventTab = this.data.add_event;\n    this.selectedTab = this.data?.selectedTab;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n  selectTab(value) {\n    this.selectedTab = value;\n  }\n}\n","<div class=\"container-fuild\">\n  <app-patient-details [patientData]=\"patientData\" [updated]=\"lastUpdated\"></app-patient-details>\n  <div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n  <div *ngIf=\"!loader\" class=\"inside-div head-border comman-table-users bg-thead-color\">\n    <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"parameterAlertSettings\">\n      <ng-template lsWidgetName=\"enabled\" let-config>\n        <span class=\"d-flex align-items-center\">\n        <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n          [disabled]=\"!isEditAccess\">\n        </mat-slide-toggle>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"alerts\" let-config>\n        {{ config.alert }} <span class=\"fw-normal\" *ngIf=\"config.key !== 'POSTURE_ALERT'\">({{ config.unit }})</span>\n      </ng-template>\n      <ng-template lsWidgetName=\"threshold\" let-config>\n        <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\">\n          {{ config.LowThr }} &lt;\n          <span *ngIf=\"config.key !== 'SPO2'\">\n          <span class=\"fw-700\">\n            {{ \"alert_config_module.or\" | translate }} </span>&gt; {{ config.HighThr }}\n          </span>\n        </span>\n        <span *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n          <input (keypress)=\"numericsOnly(config.key, $event)\"  (keydown)=\"limitChar(config.key,$event)\"  matInput digitOnly class=\"text-input-box py-1 me-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            [(ngModel)]=\"config.LowThr\" autocomplete=\"off\" (change)=\"parameterThresholdChanged(config.index,'LowThr',parameterMinMax[config.key])\" type=\"number\" [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\"\n            [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\" [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"/>\n          &lt;\n          <span *ngIf=\"config.key !== 'SPO2'\">\n          <span class=\"ms-1\">{{ \"alert_config_module.or\" | translate }}</span>\n          &gt;\n          </span>\n          <input *ngIf=\"config.key !== 'SPO2'\" (keypress)=\"numericsOnly(config.key, $event)\" (keydown)=\"limitChar(config.key,$event)\" autocomplete=\"off\" matInput digitOnly class=\"text-input-box py-1 ms-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            [(ngModel)]=\"config.HighThr\" type=\"number\" [min]=\"parameterMinMax[config.key]['MIN']['HighThr']\"\n            [max]=\"parameterMinMax[config.key]['MAX']['HighThr']\" (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'HighThr',\n                  parameterMinMax[config.key]\n                )\n              \" [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"/>\n          </span>\n        </span>\n        <span  *ngIf=\"config.key === 'POSTURE_ALERT'\">\n<!--          <mat-select [(ngModel)]=\"config.HighThr\" class=\"mat-sel py-1\" [disabled]=\"!isEditAccess || !config.Enabled\" (selectionChange)=\"updated()\">-->\n<!--              <mat-option *ngFor=\"let posture of postures;let i=index\" [value]=\"i\"> {{posture}}</mat-option>-->\n<!--          </mat-select>-->\n          -\n      </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"editThreshold\" let-config>\n        <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\">\n          <button *ngIf=\"!editThreshold[config?.index] && isEditAccess\" mat-mini-fab color=\"primary\"\n            class=\"btn-boxed btn-no-shadow\" [disabled]=\"!config.Enabled\"\n            (click)=\"showHideEdit(config?.index, 'threshold')\">\n            <mat-icon>edit</mat-icon>\n          </button>\n        </span>\n        <span *ngIf=\"editThreshold[config?.index]\">\n          <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n            (click)=\"showHideEdit(config?.index, 'threshold')\">\n            <mat-icon>done</mat-icon>\n          </button>\n        </span>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"priority\" let-config>\n        <span class=\"me-2\">\n              <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\"/>\n                <circle *ngIf=\"config.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\" [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\"/>\n              </svg>\n          &nbsp; <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n          <span *ngIf=\"editPrior[config.index]\">\n            <mat-select placeholder=\"Select\" class=\"priority-drop-down\" [(ngModel)]=\"config.Priority\"\n                        (selectionChange)=\"updated()\">\n              <mat-option *ngFor=\"let priority of alertPriority\" [value]=\"priority.value\">\n                {{ priority.label }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </span>\n      </ng-template>\n      <ng-template lsWidgetName=\"editPriority\" let-config>\n        <ng-container>\n          <span>\n            <span *ngIf=\"!editPrior[config.index]\">\n              <button *ngIf=\"isEditAccess\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\" [disabled]=\"!config.Enabled\">\n                <mat-icon>edit</mat-icon>\n              </button>\n            </span>\n            <span *ngIf=\"editPrior[config.index]\">\n              <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(config.index, 'priority')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </span>\n        </ng-container>\n      </ng-template>\n      <ng-template lsWidgetName=\"delayTime\" let-config>\n        <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key !== 'BPSYS' && config.key !== 'BPDIA' && config.key !=='BP'\">\n          <div class=\"d-flex ack-column justify-content-center align-items-center\">\n            <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n              <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n                {{ config.CondDelay }} <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">{{'alert_config_module.secs' | translate}}</span>\n                <span *ngIf=\"config.key === 'POSTURE_ALERT'\">{{'alert_config_module.hrs' | translate}}</span>\n              </div>\n              <div *ngIf=\"editDelay[config.index]\">\n                <input (keypress)=\"numericsOnly(config.key, $event)\"\n                (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                  matInput autocomplete=\"off\" type=\"number\" digitOnly class=\"text-input-box py-1\" size=\"4\" (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'CondDelay',\n                  parameterMinMax[config.key]\n                )\n              \" [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n                  [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\" [(ngModel)]=\"config.CondDelay\" />\n              </div>\n              <ng-container *ngIf=\"isEditAccess\">\n                <div class=\"ms-2 edit\">\n                  <button\n                          *ngIf=\"!editDelay[config.index]\"\n                          mat-mini-fab\n                          color=\"primary\"\n                          class=\"btn-boxed btn-no-shadow\"\n                          [disabled]=\"!config.Enabled\"\n                          (click)=\"showHideEdit(config.index, 'delay')\"\n                  >\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                  <button\n                          *ngIf=\"editDelay[config.index]\"\n                          mat-mini-fab\n                          color=\"primary\"\n                          class=\"btn-boxed btn-no-shadow\"\n                          (click)=\"showHideEdit(config.index, 'delay')\"\n                  >\n                    <mat-icon>done</mat-icon>\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key === 'BPSYS' || config.key === 'BPDIA' || config.key ==='BP'\">\n          -\n        </div>\n      </ng-template>\n      <ng-template lsWidgetName=\"modified\" let-config>\n        <span *ngIf=\"masterData?.modifiedDateTime\">\n          {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n        </span>\n        <br/>\n        <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n      </ng-template>\n    </ls-table>\n  </div>\n</div>\n<mat-dialog-actions class=\"row px-1\" *ngIf=\"!loader && isEditAccess\">\n  <div class=\"col-lg-6\">\n    <button mat-flat-button class=\"reset_btn_bg mb-2 mb-md-0 px-2\" (click)=\"openDialog()\" *ngIf=\"isShowResetButton\">\n      <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n      <span class=\"ps-1\">{{\n        \"alert_config_module.reset_to_default\" | translate\n        }}</span>\n    </button>\n  </div>\n  <div class=\"col-lg-6 text-end\">\n    <ng-template [ngIf]=\"showActionButtons\">\n      <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n        <span>{{ \"alert_config_module.cancel\" | translate }}</span></button>&nbsp;\n      <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n        <span>{{ \"alert_config_module.save\" | translate }}</span>\n      </button>\n    </ng-template>\n  </div>\n</mat-dialog-actions>","import { Component, OnInit, EventEmitter, Output, Input, OnDestroy } from \"@angular/core\";\nimport { CommonService } from \"@services/common.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  priorityColorCode,\n  alertPriorityOptions,\n  uiAccessRoles,\n  parameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-parameter-alerts\",\n  templateUrl: \"./parameter-alerts.component.html\",\n  styleUrls: [\"./parameter-alerts.component.scss\"],\n})\nexport class ParameterAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  loading: boolean = false;\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = alertPriorityOptions;\n  parameterAlert = parameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.PARAMETER_ALERT;\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  isEditAccess: boolean = false;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  selectedTab = \"parameter\";\n  error: string;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  cfId: string = \"\";\n  alertId: any = null;\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  GroupId: string = \"\";\n  patientId: string = \"PATALDRT1\";\n  userPreferenceUnit;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  lastUpdated;\n  loaderSubscription\n  loader = true;\n  postures;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 70px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 200px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      style: \"width: 134px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 50px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n  ];\n  constructor(\n    public dialog: MatDialog,\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private snackbar: SnackbarService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    public alertService: AlertConfigurationsService\n  ) { }\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.parameterMinMax = this.alertService.getParameterMinMax();\n    this.cfId = this.autheticationService.getCfId();\n    this.patientId = this.patientData.patientId;\n\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data: any) => {\n\n        this.error = data;\n        if (data?.error?.errorMessage === 'ACCESS_DENIED') {\n          this.snackbar.openCustomSnackBar('alert_config_module.messages.access_denied', 'bottom', 'center', true);\n        }\n      });\n    this.loaderSubscription = this.store$\n      .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        this.loader = !loaded;\n      });\n\n    this.getSettings();\n    this.alertSettings$.subscribe((data) => {\n      //this.loader = false;\n      this.lastUpdated = new Date().toUTCString();\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      this.masterData.GroupId = \"\";\n      this.masterData.PatientId = this.patientId;\n      this.masterData.FacilityId = this.cfId;\n      this.masterData.AlertId = \"\";\n      const alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if (data?.Setting?.Param?.PhyParam[element.key]) {\n            const settings = data.Setting.Param.PhyParam[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      if (this.userPreferenceUnit === 'SI') {\n        alerts.forEach(setting => {\n          if ((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = Math.round(setting.LowThr / 100) / 10;\n            setting.HighThr = Math.round(setting.HighThr / 100) / 10;\n            setting.unit = \"°C\";\n          }\n        });\n      } else {\n        alerts.forEach(setting => {\n          if ((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = this.userPreference.convertCtoF(setting.LowThr / 1000);\n            setting.HighThr = this.userPreference.convertCtoF(setting.HighThr / 1000);\n            setting.unit = \"°F\";\n          }\n        });\n      }\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n      this.loading = false;\n    }, (err) => {\n      this.loading = false;\n    });\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n    this.alertSettings$.subscribe((data) => {\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.AlertId;\n      this.isShowResetButton = this.alertSettings?.IsForPatient;\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateParameterSettings();\n        }\n      })\n    );\n  }\n\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n  // Fetch alert settings - API Call\n  getSettings = () => {\n    this.loading = true;\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient/${this.cfId}/${patientId}`;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };\n  showEdit(index) {\n    this.editThreshold[index] = true;\n  }\n  hideEdit(index) {\n    this.editThreshold[index] = false;\n  }\n\n  showEditPrior(index) {\n    this.editPrior[index] = true;\n  }\n  hideEditPrior(index) {\n    this.editPrior[index] = false;\n  }\n\n  showEditDelay(index) {\n    this.editDelay[index] = true;\n  }\n  hideEditDelay(index) {\n    this.editDelay[index] = false;\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  async updateParameterSettings() {\n    const parameterAlert: any = {};\n    let settings = [...this.parameterAlertSettings];\n    settings = settings.map(setting =>\n      setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP'\n        ? {\n          ...setting, LowThr: Math.floor(this.tempConvFunction(setting.LowThr) * 1000),\n          HighThr: Math.floor(this.tempConvFunction(setting.HighThr) * 1000),\n        }\n        : setting\n    );\n    // settings = settings.map(setting =>\n    //     setting.key === 'POSTURE_ALERT' ? { ...setting, LowThr: setting.HighThr,\n    //       } : setting\n    // );\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"PhyParam\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient-edit/${this.cfId}/${patientId}`;\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar('Settings has been updated successfully', 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n        this.getSettings();\n      }\n    } catch (error) {\n      this.error = error;\n    }\n  }\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.parameterAlertSettings = JSON.parse(\n      JSON.stringify(this.parameterAlertSettingsCopy)\n    );\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setParameterAlertEditSubmit(false);\n    this.hideParameterEdit();\n\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n\n    this.updateParameterSettings();\n  }\n  // Handle alert setting factory reset action\n  async handleFactoryReset() {\n    const patientId = encodeURIComponent(this.patientId);\n    const url = `alert-settings/patient-reset/${this.cfId}/${patientId}/${this.alertId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center', true);\n        this.getSettings();\n      }\n    } catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n    }\n\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.selectedTab = value;\n  }\n  checkRole(allowedRoles: any, userRoles: any) {\n    if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      let translate_txt = \"alert_config_module.messages.\" + keyMapping[key];\n      this.snackbar.openCustomSnackBar(translate_txt, 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n\n    if (key === \"LowThr\") {\n      if (\n        this.parameterAlertSettings[index][key] >=\n        this.parameterAlertSettings[index][\"HighThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar('alert_config_module.messages.incorrect_low_threshold', 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"HighThr\") {\n      if (\n        this.parameterAlertSettings[index][key] <=\n        this.parameterAlertSettings[index][\"LowThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar('alert_config_module.messages.incorrect_high_threshold', 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  limitChar(control, event) {\n    if (control === 'BODYTEMP' || control === 'SKINTEMP') {\n      if (event.target.value.toString().length > 5) {\n        event.target.value = event.target.value.substr(0, 5);\n      }\n    } else {\n      if (event.key === '.') {\n        event.preventDefault();\n      }\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  limitdelay(event) {\n    if (event.key === '.') {\n      event.preventDefault();\n    }\n    if (event.target.value.toString().length > 5) {\n      event.target.value = event.target.value.substr(0, 5);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    if (control === 'BODYTEMP' || control === 'SKINTEMP') {\n      return true\n    } else {\n      if (numericsOnlyPattern.test(key)) {\n        return true;\n      } else {\n        event.preventDefault();\n        return false;\n      }\n    }\n  }\n}\n","<div class=\"container-fluid py-3 pb-1\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"row\">\n        <div class=\"d-flex flex-wrap align-items-center patient-details\">\n          <div class=\"patient-id px-2\">\n            <strong> <img src=\"assets/icons/biosensor.svg\" alt=\"biosensor\" class=\"header-tab-icon me-2\" width=\"28\" height=\"31\" /> {{patientData?.patchId}}</strong>\n            <span class=\"d-block pid\">{{ \"dashboard-module.pid\" | translate }} {{ patientData?.patientId }}</span>\n          </div>\n          <div class=\"px-2 me-auto w-max-20\">\n            <strong  class=\"d-block pb-2 text-truncate\">\n              <span class=\"patient-name\" *ngIf=\"patientData?.firstName\"> {{ patientData?.firstName + \" \"}}</span>\n              <span class=\"patient-name\" *ngIf=\"patientData?.lastName\">{{ patientData?.lastName }}</span>\n            </strong>\n            <!--<span class=\"time-group\" *ngIf=\"patientData?.admitted\">\n              {{ patientData?.admitted | date: 'MMM dd, yyyy' }}\n            </span>-->\n            <span *ngIf=\"patientData?.pGroup\" class=\"small-tag remote-tag\">\n              {{patientData.pGroup?.name}}<span *ngIf=\"patientData?.pGroup && patientData?.cGroup\">,</span>\n          </span>\n          <span *ngIf=\"patientData?.cGroup\" class=\"small-tag sepsis-tag\">\n              {{patientData.cGroup?.name}}\n          </span>\n        </div>\n          <div class=\"justify-content-end py-1\" *ngIf=\"tab === 'alerts'\">\n            <span class=\"mx-2\">Current</span>\n            <span class=\"alert-count\"><strong>{{count.current}}</strong></span>\n            <span class=\"mx-2 ms-3\">Unacknowledged</span>\n            <span class=\"alert-count\"><strong>{{count.unAcknowledged}}</strong></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"text-center  text-md-end col-md-6 patient-right-detail\">\n      <label *ngIf=\"updated?.toString()\" class=\"mx-1 time-stamp fw-normal  py-1\">Last updated\n        {{ updated+ '+0000' | date: \"MMM dd, yyyy / \" + timeFmt : timeZone }}\n      </label>\n      <button *ngIf=\"tab === 'alerts'\" (click)=\"acknowledgeAll()\" [disabled]=\"!activeAlert\"\n              mat-flat-button type=\"button\" color=\"primary\" class=\"mx-1 py-1 text-uppercase\">\n        {{ \"alert_config_module.acknowledge_all\" | translate}}\n      </button>\n      <button *ngIf=\"(tab === 'eventList') && eventEditAccess && patientData?.addEvent\" mat-flat-button type=\"button\" color=\"accent\" class=\"mx-2 my-1 text-uppercase\"\n      (click)=\"addNewEvent()\">\n        {{ \"alert_config_module.add_event.new_event\" | translate}}\n      </button>\n      <button *ngIf=\"tab === 'eventList'\" (click)=\"acknowledgeAllEvent()\" [disabled]=\"!activeEvents\"\n              mat-flat-button type=\"button\" color=\"primary\" class=\"me-1 my-1 text-uppercase\">\n        {{ \"alert_config_module.alertfreq_acknowledge\" | translate}}\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-patient-details\",\n  templateUrl: \"./patient-details.component.html\",\n  styleUrls: [\"./patient-details.component.scss\"],\n})\nexport class PatientDetailsComponent implements OnInit {\n  constructor(private userPreference: UserPreferenceService) { }\n  @Input() patientData: any;\n  @Output() acknowledgeAllType = new EventEmitter<string>();\n  @Output() acknowledgeAllEvents = new EventEmitter<string>();\n  @Output() addEvent = new EventEmitter<string>();\n  @Input() updated: any;\n  @Input() activeEvents;\n  @Input() eventEditAccess = false;\n  @Input() count = {\n    current: 0,\n    unAcknowledged: 0\n  };\n  @Input() tab: any;\n  @Input() activeAlert = false;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n\n  ngOnInit(): void {\n    this.timeZone = this.userPreference.getUserTimeZone();\n  }\n  acknowledgeAll() {\n    this.acknowledgeAllType.emit();\n  }\n  addNewEvent() {\n    this.addEvent.emit();\n  }\n  acknowledgeAllEvent() {\n    this.acknowledgeAllEvents.emit();\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { delay, catchError } from \"rxjs/operators\";\nimport {\n    AlertConfiguration,\n    AlertDestinationConfiguration,\n    MiscellaneousData,\n    MiscSettings,\n    ClinicalFacilityContactList,\n    AlertHistory,\n    ArrhythmiaAlertConfiguration,\n} from \"../store/alert-configuration.models\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable()\nexport class AlertConfigurationsService {\n\n    constructor(\n        private http: HttpClient,\n        private backendApiService: BackendApiService\n    ) { }\n    getAlertSettings(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<AlertConfiguration>(environment.dataApiUrl + url, { headers: authHeaders });\n    }\n    getArrhythmiaAlertSettings(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<ArrhythmiaAlertConfiguration>(environment.dataApiUrl + url, { headers: authHeaders });\n    }\n    getSettings(url) {\n        const authHeaders = new HttpHeaders({\n          \"X-Skip-Interceptor\": \"\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        });\n        return this.http.get<MiscSettings>(environment.dataApiUrl + url, {\n          headers: authHeaders,\n        });\n      }\n      getGroups(cfId) {\n        const authHeaders = new HttpHeaders({\n          \"X-Skip-Interceptor\": \"\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        });\n        const url = \"clinical-facilities/\" + cfId + \"/groups\";\n        return this.http\n          .get<any>(environment.dataApiUrl + url, { headers: authHeaders })\n          .pipe(delay(100), catchError(this.handleError));\n      }\n      updateSettings(body: MiscellaneousData) {\n        const url = \"patients/misc-settings\";\n        console.log(\"update\", body);\n        return this.http\n          .post<any>(environment.dataApiUrl + url, body)\n          .pipe(delay(100), catchError(this.handleError));\n      }\n\n      downloadAlertLog(patientId){\n        const url = environment.dataApiUrl + \"patients/\" + patientId + \"/alert-log\"\n        return this.backendApiService\n        .downloadBlob(url);\n      }\n\n      downloadEventLog(patientId){\n        const url = environment.dataApiUrl + \"patients/\" + patientId + \"/event-log\"\n        return this.backendApiService.downloadBlob(url);\n      }\n\n      resetSettings(url) {\n        console.log(url);\n        return this.http\n          .post<any>(environment.dataApiUrl + url, \"\")\n          .pipe(delay(100), catchError(this.handleError));\n      }\n      \n     // Root destination alert fetch api\n      getAlertDestinationSettings(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<AlertDestinationConfiguration>(environment.dataApiUrl + url, { headers: authHeaders });\n    }\n\n    getClinicalFacilityContacts(url: string) {\n        const authHeaders = new HttpHeaders({\n            'X-Skip-Interceptor': '',\n            'Access-Control-Allow-Origin': '*',\n        });\n        return this.http.get<ClinicalFacilityContactList>(environment.dataApiUrl + url, { headers: authHeaders }).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error: any) {\n        let errorMessage = '';\n        // Client-side error.\n        if (error.error instanceof ErrorEvent) {\n            errorMessage = `Error: ${error.error.message}`;\n            // Server-side error.\n        } else {\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        return throwError(errorMessage);\n    }\n    getParameterMinMax() {\n        let userPreferenceUnit = JSON.parse(sessionStorage.getItem('userPreference'))?.units;\n        return {\n            HR: {\n                MIN: {\n                    HighThr: 60,\n                    CondDelay: 5,\n                    LowThr: 30,\n                },\n                MAX: {\n                    HighThr: 250,\n                    CondDelay: 300,\n                    LowThr: 160,\n                },\n            },\n            RR: {\n                MIN: {\n                    HighThr: 10,\n                    CondDelay: 30,\n                    LowThr: 6,\n                },\n                MAX: {\n                    HighThr: 60,\n                    CondDelay: 300,\n                    LowThr: 55,\n                },\n            },\n            SPO2: {\n                MIN: {\n                    HighThr: 95,\n                    CondDelay: 60,\n                    LowThr: 70,\n                },\n                MAX: {\n                    HighThr: 100,\n                    CondDelay: 300,\n                    LowThr: 95,\n                },\n            },\n            BODYTEMP: {\n                MIN: {\n                    HighThr: userPreferenceUnit === 'SI'? 37 : 98.6,\n                    CondDelay: 20,\n                    LowThr: userPreferenceUnit === 'SI'? 32: 89.6,\n                },\n                MAX: {\n                    HighThr: userPreferenceUnit === 'SI'? 43 : 109.4,\n                    CondDelay: 300,\n                    LowThr: userPreferenceUnit === 'SI'? 36 : 96.8,\n                },\n            },\n            BPSYS: {\n                MIN: {\n                    HighThr: 75,\n                    CondDelay: 1,\n                    LowThr: 35,\n                },\n                MAX: {\n                    HighThr: 240,\n                    LowThr: 150,\n                    CondDelay: 300,\n                },\n            },\n            BPDIA: {\n                MIN: {\n                    HighThr: 50,\n                    LowThr: 15,\n                    CondDelay: 1,\n                },\n                MAX: {\n                    HighThr: 180,\n                    LowThr: 50,\n                    CondDelay: 300,\n                },\n            },\n            BP: {\n                MIN: {\n                    HighThr: 70,\n                    LowThr: 25,\n                    CondDelay: 1,\n                },\n                MAX: {\n                    HighThr: 200,\n                    LowThr: 125,\n                    CondDelay: 300,\n                },\n            },\n            PR: {\n                MIN: {\n                    HighThr: 60,\n                    CondDelay: 20,\n                    LowThr: 30,\n                },\n                MAX: {\n                    HighThr: 250,\n                    CondDelay: 300,\n                    LowThr: 120,\n                },\n            },\n            SKINTEMP: {\n                MIN: {\n                    HighThr: userPreferenceUnit === 'SI'? 20: 68,\n                    CondDelay: 20,\n                    LowThr: userPreferenceUnit === 'SI'? 15: 59,\n                },\n                MAX: {\n                    HighThr: userPreferenceUnit=== 'SI'? 45: 113,\n                    CondDelay: 300,\n                    LowThr: userPreferenceUnit === 'SI'? 34.4: 94,\n                },\n            },\n            POSTURE_ALERT: {\n                MIN: {\n                    HighThr: '',\n                    CondDelay: 2,\n                    LowThr: '',\n                },\n                MAX: {\n                    HighThr: '',\n                    CondDelay: 168,\n                    LowThr: '',\n                },\n            },\n            //------------------------\n            SINUS_BRADYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 30,\n                },\n                MAX: {\n                  HighThr: 50,\n                  CondDelay: 168,\n                  LowThr: 60,\n                },\n              },\n              SINUS_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 100,\n                },\n                MAX: {\n                  HighThr: 100,\n                  CondDelay: 168,\n                  LowThr: 250,\n                },\n              },\n              VENTRICULAR_FLUTTER: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              VENTRICULAR_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              IDIOVENTRICULAR_RYTHM: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              SUPRAVENTRICULAR_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              AFIB_FLUTTER: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              JUNCTIONAL_TACHYCARDIA: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              FIRST_DEGREE_AV_BLOCK: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              PAUSE: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              V_COUPLET: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              V_TRIGEMINY: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              V_BIGEMINY: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              PVC_RATE: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 1,\n                },\n                MAX: {\n                  HighThr: 10,\n                  CondDelay: 168,\n                  LowThr: 99,\n                },\n              },\n              PAC_RATE: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: 1,\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: 99,\n                },\n              },\n              PVC: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr: 20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n              PAC: {\n                MIN: {\n                  HighThr: 0,\n                  CondDelay: 2,\n                  LowThr: '',\n                },\n                MAX: {\n                  HighThr:20,\n                  CondDelay: 168,\n                  LowThr: '',\n                },\n              },\n        }\n    }\n    alertHistory(param) {\n        let params = new HttpParams();\n\n        // Begin assigning parameters\n        let patientId = encodeURIComponent(param.patientId);\n        const url = `alerts/param/${patientId}`;\n        return this.http\n            .get<AlertHistory>(environment.dataApiUrl + url, { params })\n            .pipe(delay(100), catchError(this.handleError));\n\n    }\n    acknowledgeAlert(body) {\n        const url = \"alerts/acknowledge\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, body)\n            .pipe(delay(100), catchError(this.handleError));\n\n    }\n    eventList(param) {\n        let params = new HttpParams();\n        let patientId = encodeURIComponent(param.patientId);\n        let page = param.page + 1;\n        let pageSize = param.pageSize;\n        const url = `patients/${patientId}/events?page=${page}&size=${pageSize}`;\n        return this.http\n            .get(environment.dataApiUrl + url, { params })\n            .pipe(delay(100), catchError(this.handleError));\n\n    }\n    addEvent(event) {\n        const url = \"patients/patient-events\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, event)\n            .pipe(delay(100), catchError(this.handleError));\n    }\n    acknowledgeEvent(id){\n        const url = \"patients/ack-event\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, id)\n            .pipe(delay(100), catchError(this.handleError));\n    }\n    alphaNumericsOnly(event: KeyboardEvent) {\n        let charsOnlyPattern = /^[a-zA-Z0-9_ ]+$/;\n        let key = event.key;\n        if (charsOnlyPattern.test(key)) {\n            return true;\n        } else {\n            event.preventDefault();\n            return false;\n        }\n    }\n    \n    alphaNumericsOnlySpecialCases(event: KeyboardEvent) {\n        let charsOnlyPattern = /^[a-zA-Z0-9 ]+$/;\n        let key = event.key;\n        if (charsOnlyPattern.test(key)) {\n            return true;\n        } else {\n            event.preventDefault();\n            return false;\n        }\n    }\n\n\n\n    checkForSpecialCharacters(event: ClipboardEvent){\n        let clipboardData = event.clipboardData;\n        let key = clipboardData.getData('text');\n        let charsOnlyPattern = /^[0-9]+$/;\n        if (charsOnlyPattern.test(key)) {\n            return true;\n        } else {\n            event.preventDefault();\n            return false;\n        }\n    }\n    sortAlerts(alerts) {\n         return alerts.sort((a,b) =>\n         {\n             if(a['alertTimeFrom'] > b['alertTimeFrom']) return -1;\n             else if (a['alertTimeFrom'] < b['alertTimeFrom']) return 1;\n             else return 0;\n         });\n    }\n    forwardAlert(payload) {\n        const url = \"alerts/forward\";\n        return this.backendApiService\n            .post(environment.dataApiUrl + url, payload)\n            .pipe(delay(100), catchError(this.handleError));\n    }\n  }\n\n","import { Action } from '@ngrx/store';\nimport { AlertConfigurationActionTypes } from './alert-configuration.types';\nimport {\n  AlertConfiguration, AlertConfigurationData, AlertDestinationConfiguration, AlertHistory,\n  ArrhythmiaAlertConfiguration, ClinicalFacilityContactList, EventList, MiscellaneousData, MiscSettings,\n} from './alert-configuration.models';\n\nexport class loadArrhythmiaAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadArrhythmiaAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadArrhythmiaAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: ArrhythmiaAlertConfiguration }) {}\n}\n\nexport class loadAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class updateAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { data: AlertConfigurationData }) {}\n}\n\nexport class updateAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class resetAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class resetAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class resetAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class loadDestinationAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertDestinationConfiguration }) {}\n}\n\nexport class loadDestinationAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadDestinationAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadClinicalFacilityContactsRequestAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadClinicalFacilityContactsFailureAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadClinicalFacilityContactsSuccessAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS;\n  constructor(public payload: { data: ClinicalFacilityContactList }) {}\n}\n//miscellaneoous actions\nexport class loadMiscellaneousSettingsRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST;\n    constructor(public payload: { url: string }) {}\n}\n\nexport class loadMiscellaneousSettingsFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class loadMiscellaneousSettingsSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS;\n    constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class updateMiscellaneousSettingsRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST;\n    constructor(public payload: { data: MiscellaneousData }) {}\n}\n\nexport class updateMiscellaneousSettingsFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class updateMiscellaneousSettingsSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS;\n    constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class resetMiscellaneousSettingsRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST;\n    constructor(public payload: { url: string }) {}\n}\n\nexport class resetMiscellaneousSettingsFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class resetMiscellaneousSettingsSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS;\n    constructor(public payload: { data: MiscSettings }) {}\n}\nexport class LoadAlertHistoryRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.ALERT_HISTORY_REQUEST;\n    constructor(public payload: { params: any }) {}\n}\n\nexport class LoadAlertHistoryFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.ALERT_HISTORY_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class LoadAlertHistorySuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.ALERT_HISTORY_SUCCESS;\n    constructor(public payload: { data: AlertHistory }) {}\n}\nexport class LoadEventListRequestAction implements Action {\n    readonly type = AlertConfigurationActionTypes.EVENT_LIST_REQUEST;\n    constructor(public payload: { params: any }) {}\n}\n\nexport class LoadEventListFailureAction implements Action {\n    readonly type = AlertConfigurationActionTypes.EVENT_LIST_FAILURE;\n    constructor(public payload: { error: string }) {}\n}\nexport class LoadEventListSuccessAction implements Action {\n    readonly type = AlertConfigurationActionTypes.EVENT_LIST_SUCCESS;\n    constructor(public payload: { data: EventList }) {}\n}\n\nexport type AlertConfigurationActions = loadAlertConfigurationFailureAction | loadAlertConfigurationSuccessAction\n    | loadAlertConfigurationRequestAction | updateAlertConfigurationFailureAction | updateAlertConfigurationSuccessAction\n    | updateAlertConfigurationRequestAction | resetAlertConfigurationFailureAction | resetAlertConfigurationSuccessAction\n    | resetAlertConfigurationRequestAction | loadDestinationAlertConfigurationSuccessAction | loadDestinationAlertConfigurationFailureAction\n    | loadDestinationAlertConfigurationRequestAction | loadClinicalFacilityContactsRequestAction \n    | loadClinicalFacilityContactsFailureAction | loadClinicalFacilityContactsSuccessAction | loadMiscellaneousSettingsFailureAction | loadMiscellaneousSettingsSuccessAction\n    | loadMiscellaneousSettingsRequestAction | updateMiscellaneousSettingsFailureAction | updateMiscellaneousSettingsSuccessAction\n    | updateMiscellaneousSettingsRequestAction | resetMiscellaneousSettingsFailureAction | resetMiscellaneousSettingsSuccessAction\n    | resetMiscellaneousSettingsRequestAction | LoadAlertHistoryRequestAction | LoadAlertHistoryFailureAction | LoadAlertHistorySuccessAction\n    | LoadEventListRequestAction | LoadEventListFailureAction | LoadEventListSuccessAction\n    | loadArrhythmiaAlertConfigurationFailureAction | loadArrhythmiaAlertConfigurationSuccessAction | loadArrhythmiaAlertConfigurationRequestAction;\n\n\n\n\n","import {AlertConfigurationActions} from \"./alert-configuration.actions\";\nimport {\n    AlertConfigurationData,\n    AlertDestinationConfigData,\n    ArrhythmiaAlertConfigurationData,\n    AlertHistoryData,\n    ClinicalFacilityContactListData,\n    EventListData,\n    MiscellaneousData\n} from \"./alert-configuration.models\";\nimport {AlertConfigurationActionTypes} from './alert-configuration.types';\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\n\nexport interface patientAlertConfigurationState {\n    alert_configurations: AlertConfigurationData;\n    arrhythmiaConfigurations: ArrhythmiaAlertConfigurationData;\n    error: string;\n    status: string;\n    message: string;\n    alert_destinations: AlertDestinationConfigData,\n    groupIdSelected: string,\n    contacts: ClinicalFacilityContactListData,\n    MISCELLANEOUS_SETTINGS_DATA: MiscellaneousData;\n    loaded: boolean;\n    alert_history: AlertHistoryData;\n    historyLoaded: boolean;\n    event_list: EventListData[];\n    eventListLoaded: boolean;\n    eventListCount: number;\n    tableState: TableState;\n}\n\nconst initialAlertConfigurationState: patientAlertConfigurationState = {\n  arrhythmiaConfigurations: {\n    ArrhythmiaId: \"\",\n    Setting: {\n      SINUS_BRADYCARDIA: {\n        Enabled: true,\n        Priority: \"HIGH\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SINUS_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    IDIOVENTRICULAR_RYTHM: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SUPRAVENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    AFIB_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    JUNCTIONAL_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    FIRST_DEGREE_AV_BLOCK: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n      Enabled: true,\n      Priority: \"\",\n      LowThr: 0,\n      HighThr: 0,\n      CondDelay: 0,\n      HighUnit: \"\",\n      LowUnit: \"\",\n      Thr: 0,\n  },\n    PAUSE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_COUPLET: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_BIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_TRIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    },\n    FacilityId: \"\",\n    FacilityName: \"\",\n    PatientId: \"\",\n    GroupId: \"\",\n    IsForPatient: true,\n    createdDateTime: \"\",\n    modifiedDateTime: \"\",\n  },\n  alert_configurations: {\n    AlertId: \"\",\n    FacilityId: \"\",\n    FacilityName: \"\",\n    GroupId: \"\",\n    IsForPatient: false,\n    PatientId: \"\",\n    modifiedDateTime: \"\",\n    Setting: {\n      Param: {\n        PhyParam: {\n          HR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          RR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          PR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SPO2: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPSYS: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPDIA: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SKINTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BODYTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          CardiacStandStill: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n        },\n        TechParam: {\n          LEAD_OFF: {\n            Enabled: false,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            Enabled: false,\n          },\n          RELAY_DISCONNECTED: {\n            Enabled: false,\n          },\n          LOW_BATTERY: {\n            Enabled: false,\n          },\n          COMPUTE_HR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_RR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_SPO2_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            Enabled: false,\n          },\n        },\n      },\n      Common: {\n        PhyCommon: {\n          HIGH: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          MEDIUM: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          LOW: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n        },\n        TechCommon: {\n          LEAD_OFF: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          RELAY_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          LOW_BATTERY: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_HR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_RR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_SPO2_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n        },\n      },\n    },\n    auditloginfotype: {\n      CreatedBy: \"\",\n      CreatedById: \"\",\n      ModifiedBy: \"\",\n      ModifiedById: \"\",\n      CreatedDateTime: \"\",\n      ModifiedDateTime: \"\",\n\n    },\n  },\n    error: '',\n    status: '',\n    message: '',\n    loaded: false,\n    historyLoaded: false,\n    tableState: TableState.DEFAULT,\n    \n    MISCELLANEOUS_SETTINGS_DATA: {\n        thirdPartyDeviceSettings: [],\n        ecgFilterSettings: {\n            ecgFilterSetting: '',\n            isActive: false\n        },\n        bioSensorConfigSettings: [],\n        otherSettings: {\n            autoGeneratePatientId: false,\n            enableAccessToSPPHY: false,\n            facilityName: '',\n            facilityLogo: '',\n            emr: ''\n        },\n        facilityId: '0',\n        groupId: '0',\n        patientId: '0',\n        alertId: '0',\n        miscSettingsId: \"\",\n        modifiedDateTime: \"\"\n\n\n    },\n    alert_destinations: {\n        AlertDestId: '',\n        FacilityId: '',\n        GroupId: '',\n        PatientId: '',\n        Setting: {\n            AlertSMS: '',\n            AlertWhatsApp: '',\n            AlertEmail: '',\n            AlertCaregiverApp: '',\n            AlertSMSEnabled:false,\n            AlertWhatsAppEnabled: false,\n            AlertEmailEnabled: false,\n            AlertCaregiverAppEnabled: false,\n        },\n        SettingTech: {\n            AlertSMS: '',\n            AlertWhatsApp: '',\n            AlertEmail: '',\n            AlertCaregiverApp: '',\n            AlertSMSEnabled:false,\n            AlertWhatsAppEnabled: false,\n            AlertEmailEnabled: false,\n            AlertCaregiverAppEnabled: false,\n        },\n        UserData: [],\n        auditloginfotype: {\n            CreatedBy: '',\n            CreatedById: '',\n            ModifiedBy: '',\n            ModifiedById: '',\n            CreatedDateTime: '',\n            ModifiedDateTime: ''\n        },\n        NotificationMessage: ''\n      },\n   \n  groupIdSelected: null,\n  contacts: [],\n  alert_history: {\n    patientId: \"\",\n    topAlerts: []\n  },\n  event_list: [],\n  eventListLoaded: false,\n  eventListCount: 0\n};\n\nexport const patientAlertConfigurationKey = \"patientAlertConfiguration\";\n\nexport function AlertConfigurationReducer(state: patientAlertConfigurationState = initialAlertConfigurationState,\n    action: AlertConfigurationActions) {\n\n    switch (action.type) {\n      case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST: {\n        return {\n            ...state, error: null, loaded: false\n        };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE: {\n        return {\n            ...state, error: action.payload\n        };\n    }\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS: {\n        return {\n            ...state,\n            arrhythmiaConfigurations: action.payload.data.data,\n            message: action.payload.data.message,\n            status: action.payload.data.status,\n            loaded: true\n        };\n    }\n        case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST: {\n            return {\n                ...state, error: null, loaded: false\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS: {\n            return {\n                ...state,\n                alert_configurations: action.payload.data.data,\n                message: action.payload.data.message,\n                status: action.payload.data.status,\n                loaded: true\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST: {\n            return {\n                ...state, error: null, loaded: false\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS: {\n            return {\n                ...state,\n                alert_destinations: action.payload.data.data,\n                message: action.payload.data.message,\n                status: action.payload.data.status,\n                loaded: true\n            };\n        }\n       \n        case AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS: {\n            return {\n                ...state,\n                contacts: action.payload.data.data\n            };\n        }\n        case AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST: {\n            return {\n                ...state, error: null\n            };\n        }\n        case AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n        case AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST: {\n            return {\n                ...state, error: null,\n                loaded: false,\n\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS: {\n            return {\n                ...state, MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n                message: action.payload.data.message, status: action.payload.data.status,\n                loaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST: {\n            return {\n                ...state, error: null,\n                loaded: false,\n            };\n        }\n\n        case AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS: {\n            return {\n                ...state, MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n                message: action.payload.data.message, status: action.payload.data.status,\n                loaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST: {\n            return {\n                ...state, error: null,\n                loaded: false,\n            };\n        }\n\n        case AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS: {\n            return {\n                ...state, MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n                message: action.payload.data.message, status: action.payload.data.status,\n                loaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.ALERT_HISTORY_REQUEST: {\n            return {\n                ...state, error: null,\n                historyLoaded: false,\n            };\n        }\n\n        case AlertConfigurationActionTypes.ALERT_HISTORY_FAILURE: {\n            return {\n                ...state, error: action.payload\n            };\n        }\n\n        case AlertConfigurationActionTypes.ALERT_HISTORY_SUCCESS: {\n            return {\n                ...state,\n                alert_history: action.payload.data.data,\n                historyLoaded: true,\n            };\n        }\n        case AlertConfigurationActionTypes.EVENT_LIST_REQUEST: {\n            return {\n                ...state, error: null,\n                eventListLoaded: false,\n                tableState: TableState.LOADING\n            };\n        }\n\n        case AlertConfigurationActionTypes.EVENT_LIST_FAILURE: {\n            return {\n                ...state, error: action.payload,\n                tableState: TableState.FAILURE\n            };\n        }\n\n        case AlertConfigurationActionTypes.EVENT_LIST_SUCCESS: {\n            return {\n                ...state,\n                event_list: action.payload.data.data.items,\n                eventListLoaded: true,\n                eventListCount: action.payload.data.data.total,\n                tableState: TableState.SUCCESS\n            };\n        }\n        default:\n            return state;\n    }\n      \n\n}\n\n\n\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\n\nimport { patientAlertConfigurationState, patientAlertConfigurationKey } from './alert-configuration.reducer';\n\nconst getAlertConfigurationsState =\n  createFeatureSelector<patientAlertConfigurationState>(patientAlertConfigurationKey);\n\nexport const getAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_configurations\n);\n\nexport const getArrhythmiaAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.arrhythmiaConfigurations\n);\n\nexport const getDestinationAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_destinations\n);\n\nexport const getAlertConfigurationError = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.error\n);\nexport const getAlertConfigurationStatus = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.status\n);\nexport const getAlertConfigurationMessage = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.message\n);\nexport const getAlertGroupId = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.groupIdSelected\n);\n\nexport const getClinicalFacilityContacts = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.contacts\n);\n\nexport const getMiscellaneousSettings = createSelector(\n    getAlertConfigurationsState,\n    state => state?.MISCELLANEOUS_SETTINGS_DATA\n);\n\nexport const getMiscellaneousError = createSelector(\n    getAlertConfigurationsState,\n    state => state.error\n);\nexport const getMiscellaneousStatus = createSelector(\n    getAlertConfigurationsState,\n    state => state.status\n);\nexport const getMiscellaneousMessage = createSelector(\n    getAlertConfigurationsState,\n    state => state.message\n);\nexport const getLoaderStatus = createSelector(\n    getAlertConfigurationsState,\n    (state) => state?.loaded\n  );\nexport const getAlertHistory = createSelector(\n    getAlertConfigurationsState,\n    state => state?.alert_history\n);\nexport const getAlertHistoryLoader = createSelector(\n    getAlertConfigurationsState,\n    state => state?.historyLoaded\n);\nexport const getEventList = createSelector(\n    getAlertConfigurationsState,\n    state => state?.event_list\n);\nexport const getEventListLoader = createSelector(\n    getAlertConfigurationsState,\n    state => state?.eventListLoaded\n);\nexport const getEventListCount = createSelector(\n    getAlertConfigurationsState,\n    state => state?.eventListCount\n);\nexport const getTableState = createSelector(\n    getAlertConfigurationsState,\n    state => state?.tableState\n);\n","export enum AlertConfigurationActionTypes {\n  LOAD_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load alert configuration request\",\n  LOAD_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load alert configuration Failure\",\n  LOAD_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load alert configuration Success\",\n\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST = \"[ARRHYTHMIAALERTSCONFIGURATION] Arrhythmia load alert configuration request\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE = \"[ARRHYTHMIAALERTSCONFIGURATION] Arrhythmia load alert configuration Failure\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS = \"[ARRHYTHMIAALERTSCONFIGURATION] Arrhythmia load alert configuration Success\",\n\n  UPDATE_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Update alert configuration request\",\n  UPDATE_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Update alert configuration Failure\",\n  UPDATE_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Update alert configuration Success\",\n\n  RESET_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Reset alert configuration request\",\n  RESET_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Reset alert configuration Failure\",\n  RESET_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Reset alert configuration Success\",\n\n  LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Success\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Request\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Failure\",\n\n    CF_CONATCT_LIST_REQUEST = '[ALERTSCONFIGURATION] CF Contact list Request',\n    CF_CONATCT_LIST_FAILURE = '[ALERTSCONFIGURATION] CF Contact list Failure',\n    CF_CONATCT_LIST_SUCCESS = '[ALERTSCONFIGURATION] CF Contact list Success',\n\n    LOAD_MISCELLANEOUS_SETTINGS_REQUEST = '[MISCELLANEOUSSETTINGS] Load miscellaneous settings request',\n    LOAD_MISCELLANEOUS_SETTINGS_FAILURE = '[MISCELLANEOUSSETTINGS] Load miscellaneous settings Failure',\n    LOAD_MISCELLANEOUS_SETTINGS_SUCCESS = '[MISCELLANEOUSSETTINGS] Load miscellaneous settings Success',\n\n  UPDATE_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings request\",\n  UPDATE_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Failure\",\n  UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Success\",\n\n  RESET_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings request\",\n  RESET_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Failure\",\n  RESET_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Success\",\n\n  ALERT_HISTORY_REQUEST = \"[ALERT HISTORY] Alert History Request\",\n  ALERT_HISTORY_SUCCESS = \"[ALERT HISTORY] Alert History Success\",\n  ALERT_HISTORY_FAILURE = \"[ALERT HISTORY] Alert History Failure\",\n\n  EVENT_LIST_REQUEST = \"[EVENT LIST] Event List Request\",\n  EVENT_LIST_SUCCESS = \"[EVENT LIST] Event List Success\",\n  EVENT_LIST_FAILURE = \"[EVENT LIST] Event List Failure\",\n\n}\n","<div class=\"container-fuild\">\n    <app-patient-details [patientData]=\"patientData\" [updated]=\"lastUpdated\"></app-patient-details>\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n        <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <div *ngIf=\"!loader\" class=\"inside-div head-border  comman-table-users bg-thead-color\">\n        <ls-table class=\"fixed-header-relative\" [(config)]=\"config\" [columns]=\"columns\" [data]=\"technicalAlertSettings\">\n            <ng-template lsWidgetName=\"enabled\" let-config>\n                <span class=\"d-flex align-items-center\">\n                <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n                                  [disabled]=\"!isEditAccess\">\n                </mat-slide-toggle>\n                </span>\n            </ng-template>\n            <ng-template lsWidgetName=\"alerts\" let-config>\n                {{ config.alert }}\n            </ng-template>\n            <ng-template lsWidgetName=\"alert_freqExtraHeader\" let-technicalAlertConfig>\n                <div class=\"d-flex  align-items-center justify-content-center\">\n                    <div class=\"d-flex ack-column align-items-center justify-content-center\">\n                        {{ \"alert_config_module.acknowledge\" | translate }}\n                    </div>\n                    <div class=\"d-flex ack-column align-items-center justify-content-center\">\n                        {{ \"alert_config_module.unacknowledge\" | translate }}\n                    </div>\n                </div>\n            </ng-template>                                           \n            <ng-template lsWidgetName=\"alert_freq\" let-technicalAlertConfig>\n                <div class=\"d-flex  align-items-center justify-content-center\">\n                    <div class=\"d-flex ack-column justify-content-center align-items-center\">\n                        <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n                            <div *ngIf=\"!editAlertFrequency[technicalAlertConfig?.index]\" class=\"text-value align-items-center justify-content-start\">\n                                {{ technicalAlertConfig.Frequency_Ack }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins'|translate) : technicalAlertConfig.units }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"d-flex ack-column justify-content-center align-items-center\">\n                        <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n                            <div *ngIf=\"!editAlertFrequencyUnAck[technicalAlertConfig?.index]\" class=\"text-value align-items-center justify-content-start\">\n                                {{ technicalAlertConfig.Frequency_UnAck }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins'|translate) : technicalAlertConfig.units }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template lsWidgetName=\"modified\" let-config>\n                <span *ngIf=\"masterData?.modifiedDateTime\">\n                    {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n                </span><br/>\n                <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n            </ng-template>\n        </ls-table>\n\n</div>\n</div>\n<mat-dialog-actions class=\"row px-1\" *ngIf=\"!loader && isEditAccess\">\n    <div class=\"col-lg-6\">\n        <button\n                mat-flat-button\n                class=\"btn reset_btn_bg mb-2 mb-md-0 px-2\"\n                (click)=\"openDialog()\"\n                *ngIf=\"isShowResetButton\"\n        >\n            <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n            <span class=\"btn-clr ps-1\">{{\n                \"alert_config_module.reset_to_default\" | translate\n                }}</span>\n        </button>\n    </div>\n    <div class=\"col-lg-6 text-end\">\n        <ng-template [ngIf]=\"showActionButtons\">\n            <button\n                    mat-flat-button\n                    color=\"warn\"\n                    class=\"fill-btn\"\n                    (click)=\"handleAlertSettingsEditCancel()\"\n            >\n                <span>{{ \"alert_config_module.cancel\" | translate }}</span></button\n            >&nbsp;\n            <button\n                    mat-flat-button\n                    color=\"primary\"\n                    class=\"fill-btn\"\n                    (click)=\"handleAlertSettingsSave()\"\n            >\n                <span>{{ \"alert_config_module.save\" | translate }}</span>\n            </button>\n        </ng-template>\n    </div>\n</mat-dialog-actions>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Subscription, Observable } from \"rxjs\";\nimport {\n  uiAccessRoles,\n  technicalAlertItems,\n  isAllowedRole,\n  alertConfigMinMaxValues,\n} from \"src/app/utils/helpers\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-technical-alerts\",\n  templateUrl: \"./technical-alerts.component.html\",\n  styleUrls: [\"./technical-alerts.component.scss\"],\n})\nexport class TechnicalAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() patientData: any;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n    showExtraHeader: true,\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 70px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 250px\"\n    },\n    {\n      id: \"alert_freq\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-start\"],\n      //style: \"width: 360px;\",\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n  ];\n  constructor(\n    private userPreference: UserPreferenceService,\n    private commonService: CommonService,\n    public dialog: MatDialog,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.patientAlertConfigurationState>,\n    private snackbar: SnackbarService,\n    public alertService : AlertConfigurationsService\n  ) {}\n\n  editAlertFrequency = [false];\n  editAlertFrequencyUnAck = [false];\n  editDelaytime = [false];\n\n  roles: string[];\n  technicalAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.TECHNICAL_ALERT;\n  isEditAccess: boolean = false;\n  selectedTab = \"parameter\";\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  technicalAlert = technicalAlertItems;\n  masterData: any = {};\n  technicalAlertSettings: any = [];\n  technicalAlertSettingsCopy: any = [];\n  cfId: string = \"\";\n  alertId: any = null;\n  GroupId: string = \"\";\n  error: string;\n  alertSettings: any = {};\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  accessRoles: any = uiAccessRoles;\n  clinicalFacilityGroups: Group[];\n  clinicalFacilityGroupId: any = null;\n  patientId: string = \"PATALDRT1\";\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  technicalAlertMinMax = alertConfigMinMaxValues.technicalAlert;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  lastUpdated;\n  loaderSubscription;\n  loader = true;\n\n  ngOnInit() {\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.cfId = this.autheticationService.getCfId();\n    this.patientId = this.patientData.patientId;\n\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.loaderSubscription = this.store$\n        .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n        .subscribe((loaded) => {\n          this.loader = !loaded;\n        });\n    this.getSettings();\n    \n    this.alertSettings$.subscribe((data) => {\n      //this.loader = false;\n      this.lastUpdated = new Date().toUTCString();\n      this.masterData = { ...data };\n      this.masterData.GroupId = \"\";\n      this.masterData.PatientId = this.patientId;\n      this.masterData.FacilityId = this.cfId;\n      this.masterData.AlertId = \"\";\n      const alerts = [];\n      this.technicalAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any; units: any }, i) => {\n          const settings = data.Setting.Param.TechParam[element.key];\n          if(settings) {\n            alerts.push({\n              ...settings,\n              ...this.masterData.Setting.Common.TechCommon[element.key],\n              alert: element.alerts,\n              unit: element.unit,\n              units: element.units,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      this.technicalAlertSettings = alerts;\n      this.technicalAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setTechnicalAlertEditSubmit(false);\n      this.hideTechnicalAlertEdit();\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.AlertId;\n      this.isShowResetButton = this.alertSettings?.IsForPatient;\n    });\n    if (isAllowedRole(this.technicalAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.technicalAlertSettings = JSON.parse(\n            JSON.stringify(this.technicalAlertSettingsCopy)\n          );\n          this.hideTechnicalAlertEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateTechnicalSettings();\n        }\n      })\n    );\n  }\n\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n\n  getSettings = () => {\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient/${this.cfId}/${patientId}`;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data: any) => {\n        this.error = data;\n        if(data?.error?.errorMessage === 'ACCESS_DENIED') {\n          this.snackbar.openCustomSnackBar(\"alert_config_module.messages.access_denied\", 'bottom', 'center', true);\n        }\n      });\n  };\n\n  \n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  showEditAlertFrequency(index: string | number) {\n    this.editAlertFrequency[index] = true;\n  }\n  hideEditAlertFrequency(index: string | number) {\n    this.editAlertFrequency[index] = false;\n  }\n\n  showEditAlertFrequencyUnAck(index: string | number) {\n    this.editAlertFrequencyUnAck[index] = true;\n  }\n  hideEditAlertFrequencyUnAck(index: string | number) {\n    this.editAlertFrequencyUnAck[index] = false;\n  }\n\n  showEditDelaytime(index: string | number) {\n    this.editDelaytime[index] = true;\n  }\n  hideEditDelaytime(index: string | number) {\n    this.editDelaytime[index] = false;\n  }\n\n  // Hide all active edit buttons\n  hideTechnicalAlertEdit() {\n    this.editAlertFrequency = [false];\n    this.editDelaytime = [false];\n    this.editAlertFrequencyUnAck = [false];\n  }\n  async updateTechnicalSettings() {\n    const technicalParameter: any = {};\n    const technicalCommonParameter: any = {};\n    this.technicalAlertSettings.forEach(\n      (element: {\n        key: string | number;\n        Enabled: any;\n        CondDelay: string;\n        Frequency_Ack: any;\n        Frequency_UnAck: any;\n      }) => {\n        technicalParameter[element.key] = {\n          Enabled: element.Enabled,\n        };\n        technicalCommonParameter[element.key] = {\n          CondDelay: parseInt(element.CondDelay),\n          Frequency_UnAck: parseInt(element.Frequency_UnAck),\n          Frequency_Ack: parseInt(element.Frequency_Ack),\n        };\n      }\n    );\n\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"TechParam\"] = technicalParameter;\n    payload.Setting = payload?.Setting || {};\n    payload.Setting.Common = payload.Setting?.Common || {};\n    payload.Setting.Common.TechCommon = technicalCommonParameter;\n    delete payload[\"auditloginfotype\"];\n    let patientId = encodeURIComponent(this.patientId);\n    let url = `alert-settings/patient-edit/${this.cfId}/${patientId}`;\n   \n    try {\n      \n      const resp = await this.backendApiService\n      .post(environment.dataApiUrl + url, payload)\n      .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setTechnicalAlertEditSubmit(false);\n        this.hideTechnicalAlertEdit();\n        this.getSettings();\n      }\n    } catch (error) {}\n  }\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"alertFrequencyACK\":\n        this.editAlertFrequency[index] = !this.editAlertFrequency[index];\n        break;\n      case \"alertFrequencyNACK\":\n        this.editAlertFrequencyUnAck[index] =\n          !this.editAlertFrequencyUnAck[index];\n        break;\n      case \"delay\":\n        this.editDelaytime[index] = !this.editDelaytime[index];\n        break;\n      default:\n        break;\n    }\n  }\n\n  toggle(i: number) {\n    this.editAlertFrequency[i] = false;\n    this.editDelaytime[i] = false;\n    this.editAlertFrequencyUnAck[i] = false;\n    this.updated();\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.commonService.setSettingsAlertActionButtons(false);\n    this.commonService.setTechnicalAlertEditSubmit(false);\n    this.hideTechnicalAlertEdit();\n    this.technicalAlertSettings = JSON.parse(\n      JSON.stringify(this.technicalAlertSettingsCopy)\n    );\n    \n  }\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n   this.updateTechnicalSettings();\n  }\n  \n   // Handle alert setting factory reset action\n   async handleFactoryReset() {\n     const patientId = encodeURIComponent(this.patientId);\n    const url = `alert-settings/patient-reset/${this.cfId}/${patientId}/${this.alertId}`;\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"alert_config_module.reset_success\", 'bottom', 'center',true);\n        this.getSettings();\n      } \n    } catch (error) {\n      this.snackbar.openCustomSnackBar(\"alert_config_module.reset_error\", 'bottom', 'center', true);\n    }\n  }\n\n\n  // input filed validation\n  technicalParamInputChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      Frequency_Ack: \"invalid_alertfreq_ack\",\n      Frequency_UnAck: \"invalid_alertfreq_unack\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n        this.technicalAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n        this.technicalAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.technicalAlertSettings[index][key] =\n          this.technicalAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    if (key === \"Frequency_Ack\") {\n      if (\n          this.technicalAlertSettings[index][key] <=\n          this.technicalAlertSettings[index][\"Frequency_UnAck\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n            this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Frequency_UnAck\") {\n      if (\n          this.technicalAlertSettings[index][key] >=\n          this.technicalAlertSettings[index][\"Frequency_Ack\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n            this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n        !str ||\n        0 === str.length ||\n        str === \" \" ||\n        str === \"null\" ||\n        str === \"undefined\"\n    );\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.technicalAlertSettings) !== JSON.stringify(this.technicalAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommonService {\n  private hidePrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  parameterAlertEditHide = this.hidePrameterAlertEdit.asObservable();\n\n  private hideArrhythmiaPrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  arrhythmiaParameterAlertEditHide = this.hideArrhythmiaPrameterAlertEdit.asObservable();\n\n  private hideTechnicalAlertEdit = new BehaviorSubject<boolean>(false);\n  technicalAlertEditHide = this.hideTechnicalAlertEdit.asObservable();\n\n  private hidePriorityAlertEdit = new BehaviorSubject<boolean>(false);\n  priorityAlertEditHide = this.hidePriorityAlertEdit.asObservable();\n\n  private showSettingsAlertActionButtons = new BehaviorSubject<boolean>(false);\n  settingsAlertActionButtonsShow =this.showSettingsAlertActionButtons.asObservable(); \n\n  private savePrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  parameterAlertEditSubmit = this.savePrameterAlertEdit.asObservable();\n\n  private saveArrhythmiaPrameterAlertEdit = new BehaviorSubject<boolean>(false);\n  arrhythmiaParameterAlertEditSubmit = this.saveArrhythmiaPrameterAlertEdit.asObservable();\n  private saveTechnicalAlertEdit = new BehaviorSubject<boolean>(false);\n  technicalAlertEditSubmit = this.saveTechnicalAlertEdit.asObservable();\n\n  private savePriorityAlertEdit = new BehaviorSubject<boolean>(false);\n  priorityAlertEditSubmit = this.savePriorityAlertEdit.asObservable();\n\n  private hideDestinationAlertEdit = new BehaviorSubject<boolean>(false);\n  destinationAlertEditHide = this.hideDestinationAlertEdit.asObservable();\n\n  private hideNotificationAlertEdit = new BehaviorSubject<boolean>(false);\n  notificationAlertEditHide = this.hideNotificationAlertEdit.asObservable();\n\n  private saveNotificationAlertEdit = new BehaviorSubject<boolean>(false);\n  notificationAlertEditSubmit = this.saveNotificationAlertEdit.asObservable();\n\n  private saveDestinationAlertEdit = new BehaviorSubject<boolean>(false);\n  destinationAlertEditSubmit = this.saveDestinationAlertEdit.asObservable();\n\n  constructor() {}\n\n  setParameterAlertEditHide(isHide: boolean) {\n    this.hidePrameterAlertEdit.next(isHide);\n  }\n\n  setArrhythmiaParameterAlertEditHide(isHide: boolean) {\n    this.hidePrameterAlertEdit.next(isHide);\n  }\n\n  setTechnicalAlertEditHide(isHide: boolean) {\n    this.hideTechnicalAlertEdit.next(isHide);\n  }\n\n  setPriorityAlertEditHide(isHide: boolean) {\n    this.hidePriorityAlertEdit.next(isHide);\n  }\n\n  setSettingsAlertActionButtons(isShow: boolean) {\n    this.showSettingsAlertActionButtons.next(isShow);\n  }\n\n  setParameterAlertEditSubmit(isSubmit: boolean) {\n    this.savePrameterAlertEdit.next(isSubmit);\n  }\n\n  setArrhythmiaParameterAlertEditSubmit(isSubmit: boolean) {\n    this.saveArrhythmiaPrameterAlertEdit.next(isSubmit);\n  }\n\n  setTechnicalAlertEditSubmit(isSubmit: boolean) {\n    this.saveTechnicalAlertEdit.next(isSubmit);\n  }\n  setPriorityAlertEditSubmit(isSubmit: boolean) {\n    this.savePriorityAlertEdit.next(isSubmit);\n  }\n\n  setDestinationAlertEditHide(isHide: boolean) {\n    this.hideDestinationAlertEdit.next(isHide);\n  }\n\n  setNotificationAlertEditHide(isHide: boolean) {\n    this.hideNotificationAlertEdit.next(isHide);\n  }\n\n  setNotificationAlertEditSubmit(isSubmit: boolean) {\n    this.saveNotificationAlertEdit.next(isSubmit);\n  }\n\n  setDestinationAlertEditSubmit(isSubmit: boolean) {\n    this.saveDestinationAlertEdit.next(isSubmit);\n  }\n  convertSecToHrs(seconds) {\n    return seconds/3600;\n  }\n  convertHrtoSecs(hours) {\n    return hours*3600;\n  }\n}\n","import { FormGroup, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport const atLeastOne =\n  (validator: ValidatorFn, controls: string[] = null) =>\n  (group: FormGroup): ValidationErrors | null => {\n    if (!controls) {\n      controls = Object.keys(group.controls);\n    }\n\n    const hasAtLeastOne =\n      group &&\n      group.controls &&\n      controls.some((k) => !validator(group.controls[k]));\n\n    return hasAtLeastOne\n      ? null\n      : {\n          atLeastOne: true,\n        };\n  };\n"]}