{"version":3,"file":"default-src_app_settings_settings_module_ts-es2017.js","mappings":"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","sources":["./src/app/services/date.adapter.ts","./src/app/settings/alert-configuration/alert-configuration.component.ts","./src/app/settings/alert-configuration/alert-configuration.component.html","./src/app/settings/alert-configuration/alert-destination/alert-destination.component.ts","./src/app/settings/alert-configuration/alert-destination/alert-destination.component.html","./src/app/settings/alert-configuration/alert-messages/alert-messages.component.ts","./src/app/settings/alert-configuration/alert-messages/alert-messages.component.html","./src/app/settings/alert-configuration/arrhythmia-alerts/arrhythmia-alerts.component.ts","./src/app/settings/alert-configuration/arrhythmia-alerts/arrhythmia-alerts.component.html","./src/app/settings/alert-configuration/destination-settings/destination-settings.component.ts","./src/app/settings/alert-configuration/destination-settings/destination-settings.component.html","./src/app/settings/alert-configuration/parameter-alerts/parameter-alerts.component.ts","./src/app/settings/alert-configuration/parameter-alerts/parameter-alerts.component.html","./src/app/settings/alert-configuration/priority/priority.component.ts","./src/app/settings/alert-configuration/priority/priority.component.html","./src/app/settings/alert-configuration/services/alert-configuration.service.ts","./src/app/settings/alert-configuration/store/alert-configuration.actions.ts","./src/app/settings/alert-configuration/store/alert-configuration.effects.ts","./src/app/settings/alert-configuration/store/alert-configuration.models.ts","./src/app/settings/alert-configuration/store/alert-configuration.reducer.ts","./src/app/settings/alert-configuration/store/alert-configuration.selector.ts","./src/app/settings/alert-configuration/store/alert-configuration.types.ts","./src/app/settings/alert-configuration/store/index.ts","./src/app/settings/alert-configuration/technical-alerts/technical-alerts.component.ts","./src/app/settings/alert-configuration/technical-alerts/technical-alerts.component.html","./src/app/settings/manage-relays/add-relay/add-relay.component.ts","./src/app/settings/manage-relays/add-relay/add-relay.component.html","./src/app/settings/manage-relays/care-giver-app/care-giver-app.component.ts","./src/app/settings/manage-relays/care-giver-app/care-giver-app.component.html","./src/app/settings/manage-relays/manage-relays.module.ts","./src/app/settings/manage-relays/manage-relays/manage-relays.component.ts","./src/app/settings/manage-relays/manage-relays/manage-relays.component.html","./src/app/settings/manage-relays/multi-patient-relays/multi-patient-relays.component.ts","./src/app/settings/manage-relays/multi-patient-relays/multi-patient-relays.component.html","./src/app/settings/manage-relays/relay-configuration/relay-configuration.component.ts","./src/app/settings/manage-relays/relay-configuration/relay-configuration.component.html","./src/app/settings/manage-relays/single-patient-relays/single-patient-relays.component.ts","./src/app/settings/manage-relays/single-patient-relays/single-patient-relays.component.html","./src/app/settings/manage-relays/store/index.ts","./src/app/settings/manage-relays/store/manage-relays.actions.ts","./src/app/settings/manage-relays/store/manage-relays.effects.ts","./src/app/settings/manage-relays/store/manage-relays.reducer.ts","./src/app/settings/manage-relays/store/manage-relays.selector.ts","./src/app/settings/manage-users/addgroup/addgroup.component.ts","./src/app/settings/manage-users/addgroup/addgroup.component.html","./src/app/settings/manage-users/adduser/adduser.component.ts","./src/app/settings/manage-users/adduser/adduser.component.html","./src/app/settings/manage-users/edituser/edituser.component.ts","./src/app/settings/manage-users/edituser/edituser.component.html","./src/app/settings/manage-users/manage-users-cfa/manage-users-cfa.component.ts","./src/app/settings/manage-users/manage-users-cfa/manage-users-cfa.component.html","./src/app/settings/manage-users/manage-users.module.ts","./src/app/settings/manage-users/rename-roles/rename-roles.component.ts","./src/app/settings/manage-users/rename-roles/rename-roles.component.html","./src/app/settings/manage-users/store/index.ts","./src/app/settings/manage-users/store/manage-users.actions.ts","./src/app/settings/manage-users/store/manage-users.effects.ts","./src/app/settings/manage-users/store/manage-users.reducer.ts","./src/app/settings/manage-users/store/manage-users.selector.ts","./src/app/settings/miscellaneous/miscellaneous.component.ts","./src/app/settings/miscellaneous/miscellaneous.component.html","./src/app/settings/miscellaneous/services/miscellaneous-settings.service.ts","./src/app/settings/miscellaneous/store/index.ts","./src/app/settings/miscellaneous/store/miscellaneous-settings.actions.ts","./src/app/settings/miscellaneous/store/miscellaneous-settings.effects.ts","./src/app/settings/miscellaneous/store/miscellaneous-settings.reducer.ts","./src/app/settings/miscellaneous/store/miscellaneous-settings.selector.ts","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings/settings.component.ts","./src/app/settings/settings/settings.component.html"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { NativeDateAdapter } from \"@angular/material/core\";\n\n@Injectable()\nexport class AppDateAdapter extends NativeDateAdapter {\n  parse(value: any): Date | null {\n    if (typeof value === \"string\" && value.indexOf(\"/\") > -1) {\n      const str = value.split(\"/\");\n      const year = Number(str[2]);\n      const month = Number(str[1]) - 1;\n      const date = Number(str[0]);\n      return new Date(year, month, date);\n    }\n    const timestamp = typeof value === \"number\" ? value : Date.parse(value);\n    return isNaN(timestamp) ? null : new Date(timestamp);\n  }\n  format(date: Date, displayFormat: string): string {\n    if (displayFormat === \"input\") {\n      const day = date.getDate();\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      return this._to2digit(day) + \"/\" + this._to2digit(month) + \"/\" + year;\n    } else if (displayFormat === \"inputMonth\") {\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      return this._to2digit(month) + \"/\" + year;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return (\"00\" + n)?.slice(-2);\n  }\n}\n\nexport const APP_DATE_FORMATS = {\n  parse: {\n    dateInput: { month: \"short\", year: \"numeric\", day: \"numeric\" },\n  },\n  display: {\n    // dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\n    dateInput: \"input\",\n    // monthYearLabel: { month: 'short', year: 'numeric', day: 'numeric' },\n    monthYearLabel: \"inputMonth\"//,\n    // dateA11yLabel: { year: \"numeric\", month: \"long\", day: \"numeric\" },\n    // monthYearA11yLabel: { year: \"numeric\", month: \"long\" },\n  },\n};\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  parameterAlertItems,\n  technicalAlertItems,\n  priorityAlertItems,\n  uiAccessRoles,\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"./store\";\nimport { Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { ConfirmDialogComponent } from \"../../shared/confirm-dialog/confirm-dialog.component\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-alert-configuration\",\n  templateUrl: \"./alert-configuration.component.html\",\n  styleUrls: [\"./alert-configuration.component.scss\"],\n})\nexport class AlertConfigurationComponent implements OnInit {\n  selectedTab = \"parameter\";\n  error: string;\n  alertSettings: any = {};\n  alertDestinationSettings: any = {};\n  alertArrhythmiaSettings: any = {};\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  alertArrhythmiaSettings$: Observable<AlertConfigurationModels.ArrhythmiaAlertConfigurationData>;\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  parameterAlert = parameterAlertItems;\n  technicalAlert = technicalAlertItems;\n  priorityAlert = priorityAlertItems;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  isPHYGCUser: boolean = false;\n  cfId: string = \"\";\n  alertId: any = null;\n  roles: string[];\n  accessRoles: any = uiAccessRoles;\n  clinicalGroups: Group[] = [];\n  locationGroups: Group[] = [];\n  clinicalFacilityGroupId: any = null;\n  clinicalGroupId;\n  locationGroupId;\n  alertDestId: string = null;\n  alertArrId: string = null;\n  loader = true;\n  loaderSubscription: any;\n  isCfa = false;\n  facilityName;\n  editAccess;\n  groupsView = false;\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    private snackbar: SnackbarService,\n    private backendApiService: BackendApiService,\n    private commonService: CommonService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>\n  ) {}\n\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.facilityName = sessionStorage.getItem(\"facilityName\") || '';\n    if ([\"CFA\", \"CFAC\"].some((ai) => this.roles.includes(ai))) {\n      this.isCfa = true;\n      this.getSettings();\n    }\n    if([\"SC\", \"GC\", \"PHY\"].some((ai) => this.roles.includes(ai))) {\n      this.groupsView = true;\n      this.getClinicalFacilityGroups();\n    }\n    if ([\"CFA\", \"CFAC\", \"SC\"].some((ai) => this.roles.includes(ai))) {\n      this.editAccess = true;\n    }\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertDestinationSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertArrhythmiaSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getArrhythmiaAlertConfigurations\n    );\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.loaderSubscription = this.store$\n      .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        if (loaded) {\n          this.loader = false;\n        }\n      });\n\n    // if ([\"PHY\", \"GC\"].some((ai) => this.roles.includes(ai))) {\n    //   this.isPHYGCUser = true;\n    //   this.isShowResetButton = false;\n    // }\n    if(this.editAccess) {\n      this.isShowResetButton = true;\n    }\n\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n\n    this.alertSettings$.subscribe((data) => {\n      //this.loader = false;\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.AlertId;\n      if (\n        this.alertSettings.modifiedDateTime &&\n        this.selectedTab !== \"destination\"\n      ) {\n        this.editAccess\n          ? (this.isShowResetButton = true)\n          : (this.isShowResetButton = false);\n      }\n    });\n\n    this.alertDestinationSettings$.subscribe((data) => {\n      this.alertDestinationSettings = { ...data };\n      if (this.alertDestinationSettings.modifiedDateTime){\n        this.isPHYGCUser\n          ? (this.isShowResetButton = false)\n          : (this.isShowResetButton = true);\n      }\n      this.alertDestId = this.alertDestinationSettings.AlertDestId;\n    });\n\n    this.alertArrhythmiaSettings$.subscribe((data) => {\n      this.alertArrhythmiaSettings = { ...data };\n      if (this.alertArrhythmiaSettings.modifiedDateTime){\n        this.isPHYGCUser\n          ? (this.isShowResetButton = false)\n          : (this.isShowResetButton = true);\n      }\n      this.alertArrId = this.alertArrhythmiaSettings.ArrhythmiaId;\n      console.log(this.alertArrhythmiaSettings.ArrhythmiaId);\n    });\n  }\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.isShowResetButton = this.editAccess;\n    this.selectedTab = value;\n  }\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n\n  // Fetch alert settings - API Call\n  getSettings = () => {\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.setGroupAlertId(\n            this.clinicalFacilityGroupId\n        )\n    );\n    if (this.clinicalFacilityGroupId) {\n      this.getGroupAlertSettings();\n    } else {\n      let url = \"alert-settings/root/\" + this.cfId;\n      this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadAlertConfigurationRequestAction({\n          url,\n        })\n      );\n      this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data) => {\n          if (data) {\n            this.error = data;\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n          }\n        });\n      this.getAlertDestinationSettings();\n      this.getArrhythmiaSettings();\n    }\n  };\n\n  // Clinical Facility Groups list\n  getClinicalFacilityGroups = async () => {\n    let url = \"clinical-facilities/\" + this.cfId + \"/groups?sortBy=name:asc\";\n    try {\n      const resp: any = await this.backendApiService\n        .callGetApi(environment.dataApiUrl + url)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        let groups = resp.data;\n        this.clinicalGroups = groups.filter(g => g.type === \"CLINICAL\");\n        this.locationGroups = groups.filter(g => g.type === \"PHYSICAL\");\n        if (this.roles.indexOf('CFAC') > -1) {\n          this.clinicalGroups.unshift({ groupId: null, name: 'None' });\n          this.locationGroups.unshift({ groupId: null, name: 'None' });\n        } else {\n          if (this.locationGroups.length > 0) {\n            let parentGroups = this.locationGroups.filter(grp => grp.parent === 'ROOT');\n            this.locationGroups?.forEach(group => {\n              if (group.parent !== 'ROOT' && !(this.locationGroups.find(grp => grp.groupId === group.parent))) {\n                parentGroups.push(group);\n              }\n            });\n            this.clinicalFacilityGroupId = parentGroups[0].groupId;\n            this.locationGroupId = parentGroups[0].groupId;\n            this.getGroupAlertSettings();\n          } else if (this.clinicalGroups.length > 0) {\n            let parentGroups = this.clinicalGroups.filter(grp => grp.parent === 'ROOT');\n            this.locationGroups?.forEach(group => {\n              if (group.parent !== 'ROOT' && !(this.clinicalGroups.find(grp => grp.groupId === group.parent))) {\n                parentGroups.push(group);\n              }\n            });\n            this.clinicalFacilityGroupId = parentGroups[0].groupId;\n            this.clinicalGroupId = parentGroups[0].groupId;\n            this.getGroupAlertSettings();\n          } else {\n            this.loader = false;\n          }\n        }\n      }\n    } catch (error) {}\n  };\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.commonService.setSettingsAlertActionButtons(false);\n    switch (this.selectedTab) {\n      case \"parameter\":\n        this.commonService.setParameterAlertEditHide(true);\n        break;\n      case \"arrhythmia\":\n        this.commonService.setArrhythmiaParameterAlertEditHide(true);\n        break;\n      case \"technical\":\n        this.commonService.setTechnicalAlertEditHide(true);\n        break;\n      case \"priority\":\n        this.commonService.setPriorityAlertEditHide(true);\n        break;\n      case \"destination\":\n        this.commonService.setDestinationAlertEditHide(true);\n        break;\n      case \"message\": {\n        this.loader = true;\n        this.commonService.setNotificationAlertEditHide(true);\n        setTimeout(() => {\n          this.loader = false;\n        }, 300)\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  // Handle alert setting factory reset action\n  async handleFactoryReset() {\n    let responseMessage = \"\";\n    let url = \"\";\n    switch (this.selectedTab) {\n      case \"arrhythmia\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"arrhythmia-alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"arrhythmia-alert-settings/factory-reset/\" +\n            this.cfId + \"/\" + this.alertArrId;\n        }\n        responseMessage = \"Arrhythmia Alerts Settings Factory Reset Done\";\n        break;\n      case \"parameter\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/factory-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.alertId +\n            \"/param-alert-settings\";\n        }\n        responseMessage = \"Clinical Alerts Settings Factory Reset Done\";\n        break;\n      case \"technical\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/factory-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.alertId +\n            \"/tech-alert-settings\";\n        }\n        responseMessage = \"Technical Alerts Settings Factory Reset Done\";\n        break;\n      case \"priority\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/factory-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.alertId +\n            \"/priority-alert-settings\";\n        }\n        responseMessage = \"Priority Alerts Settings Factory Reset Done\";\n        break;\n      case \"destination\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/alert-destination-settings/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/root/\" +\n            this.cfId +\n            \"/\" +\n            this.alertDestId +\n            \"/alert-destination-settings/factory-reset\";\n        }\n        responseMessage = \"Destination Alerts Settings Factory Reset Done\";\n        break;\n      case \"message\":\n        this.loader = true;\n        url =\n          \"alert-settings/root/\" +\n          this.cfId +\n          \"/\" +\n          this.alertDestId +\n          \"/alert-destination-settings/factory-reset\";\n        responseMessage = \"Alert Notifications Factory Reset Done\";\n        break;\n      default:\n        break;\n    }\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(responseMessage, 'bottom', 'center');\n        if (this.selectedTab === \"message\") {\n          this.getAlertDestinationSettings();\n        } else {\n          if (this.clinicalFacilityGroupId) {\n            this.getGroupAlertSettings();\n          } else {\n            this.getSettings();\n          }\n        }\n      }\n    } catch (error) {\n      this.loader = false;\n      if (error) {\n        this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n      }\n    }\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n    switch (this.selectedTab) {\n      case \"parameter\":\n        this.commonService.setParameterAlertEditSubmit(true);\n        break;\n      case \"technical\":\n        this.commonService.setTechnicalAlertEditSubmit(true);\n        break;\n      case \"priority\":\n        this.commonService.setPriorityAlertEditSubmit(true);\n        break;\n      case \"message\":\n        this.commonService.setNotificationAlertEditSubmit(true);\n        break;\n      case \"destination\":\n        this.commonService.setDestinationAlertEditSubmit(true);\n        break;\n      case \"arrhythmia\":\n        this.commonService.setArrhythmiaParameterAlertEditSubmit(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Group Alert Settings\n  getGroupAlertSettings() {\n    this.loader = true;\n    this.getGroupAlertDestinationSettings();\n    this.getArrhythmiaAlertGoupSettings();\n    this.getAlertGoupSettings();\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.setGroupAlertId(\n        this.clinicalFacilityGroupId\n      )\n    );\n  }\n\n  // Group Alert Settings\n  getAlertGoupSettings = () => {\n    let url =\n      \"alert-settings/group/\" + this.cfId + \"/\" + this.clinicalFacilityGroupId;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadGroupAlertConfigurationRequestAction(\n        { url }\n      )\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };\n\n  //Arrhythmia alert setting\n  getArrhythmiaAlertGoupSettings = () => {\n    let url = \"arrhythmia-alert-settings/group/\" + this.cfId + \"/\" + this.clinicalFacilityGroupId;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadArrhythmiaAlertConfigurationRequestAction(\n        { url }\n      )\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };\n\n  // root Alert Destination Settings\n  getAlertDestinationSettings() {\n    let url = \"alert-settings/root/\" + this.cfId + \"/alert-destination-settings\";\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadDestinationAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        if (data) {\n          this.error = data;\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n        }\n      });\n  }\n\n  // root  Arrhythmia Alert Settings\n  getArrhythmiaSettings() {\n    let url = \"arrhythmia-alert-settings/root/\" + this.cfId;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadArrhythmiaAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        if (data) {\n          this.error = data;\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n        }\n      });\n  }\n\n  // group Alert Destination Settings\n  getGroupAlertDestinationSettings() {\n    const url =\n      \"alert-settings/group/\" +\n      this.cfId +\n      \"/\" +\n      this.clinicalFacilityGroupId +\n      \"/alert-destination-settings\";\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadGroupDestinationAlertConfigurationRequestAction(\n        { url }\n      )\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  }\n\n  checkRole(allowedRoles: any, userRoles: any) {\n    if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  onLocationSelected(event, type) {\n    this.clinicalFacilityGroupId = event;\n    if(this.clinicalFacilityGroupId) {\n      this.editAccess = [\"SC\"].some((ai) => this.roles.includes(ai));\n      if (type === 'CLINICAL') {\n        this.locationGroupId = null;\n        this.clinicalGroupId = event;\n      } else {\n        this.clinicalGroupId = null;\n        this.locationGroupId = event;\n      }\n      this.getGroupAlertSettings();\n    } else {\n      if ([\"CFA\", \"CFAC\"].some((ai) => this.roles.includes(ai))) {\n        this.editAccess = true;\n      }\n      this.loader = true;\n      this.getSettings();\n    }\n  }\n}\n","<ls-page-header type=\"alert_configuration\">\n</ls-page-header>\n<div class=\"container-fluid\">\n  <div class=\"justify-content-between align-items-center my-2 mt-3\">\n    <div class=\"mx-md-2 mb-3 d-md-flex align-items-center\">\n      <span class=\"pe-3 head-setting\" *ngIf=\"(!isBlank(alertSettings?.FacilityName) || !isCfa)\">\n        {{ \"alert_config_module.alert_configuration\" | translate }} :\n      </span>\n      <span class=\"head-setting-right\" *ngIf=\"\n        checkRole(\n          accessRoles.ALERT_CONFIGURATIONS.ALERT_NOTIFICATIONS.PAGE_VIEW,\n          roles\n        )\n      \">\n        {{ alertSettings?.FacilityName }}\n      </span>\n      <span class=\"selectfilter-dropdown justify-content-md-start justify-content-between d-flex\" *ngIf=\"groupsView\">\n        <!-- <mat-form-field appearance=\"fill\" class=\"whiteselect drop-down-selectfilter selectfilter\">\n          <mat-select placeholder=\"Clinical Condition\" class=\"drop-down\"\n            (selectionChange)=\"getGroupAlertSettings()\" [(ngModel)]=\"clinicalFacilityGroupId\">\n            <mat-option *ngFor=\"let group of clinicalFacilityGroups\" [value]=\"group.groupId\">\n              {{ group.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter me-2 me-md-0  mx-md-2\" [selectedValue]=\"locationGroupId\" key=\"groupId\" displayKey=\"name\"\n                                     [label]=\"'alert_config_module.location' | translate\" (selected)=\"onLocationSelected($event, 'LOCATION')\"\n                                     [options]=\"locationGroups\" [noSelection]=\"true\">\n        </app-nested-dropdown>\n        <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter mx-md-2\" [selectedValue]=\"clinicalGroupId\" key=\"groupId\" displayKey=\"name\"\n                             [label]=\"'alert_config_module.medical_condition' | translate\" (selected)=\"onLocationSelected($event, 'CLINICAL')\"\n                             [options]=\"clinicalGroups\" [noSelection]=\"true\">\n        </app-nested-dropdown>\n      </span>\n    </div>\n    <div class=\"my-0 button-card-area alert-configuration-button \">\n      <button mat-button [ngClass]=\"\n        selectedTab === 'parameter' ? 'select-btn-active' : 'alert_btn'\n      \" (click)=\"selectTab('parameter')\">\n        {{ \"alert_config_module.parameter_alert\" | translate }}\n      </button>\n      <!-- <button mat-button (click)=\"selectTab('arrhythmia')\"\n        [ngClass]=\"selectedTab === 'arrhythmia' ? 'select-btn-active' : 'alert_btn'\">\n        {{ \"alert_config_module.arrhythmia_alert\" | translate }}\n      </button> -->\n      <button mat-button [ngClass]=\"\n        selectedTab === 'technical' ? 'select-btn-active' : 'alert_btn'\n      \" (click)=\"selectTab('technical')\">\n        {{ \"alert_config_module.technical_alert\" | translate }}\n      </button>\n\n      <button mat-button [ngClass]=\"selectedTab === 'priority' ? 'select-btn-active' : 'alert_btn'\"\n        (click)=\"selectTab('priority')\">\n        {{ \"alert_config_module.priority_alert\" | translate }}\n      </button>\n      <button mat-button [ngClass]=\"\n        selectedTab === 'destination' ? 'select-btn-active' : 'alert_btn'\n      \" (click)=\"selectTab('destination')\">\n        <span>{{ \"alert_config_module.alert_destinations\" | translate }}</span>\n      </button>\n\n      <button *ngIf=\"\n        checkRole(\n          accessRoles.ALERT_CONFIGURATIONS.ALERT_NOTIFICATIONS.PAGE_VIEW,\n          roles\n        )\n      \" class=\"btn4\" mat-button [ngClass]=\"selectedTab === 'message' ? 'select-btn-active' : 'alert_btn'\"\n        (click)=\"selectTab('message')\">\n        <span>{{ \"alert_config_module.alert_notifications\" | translate }}</span>\n      </button>\n    </div>\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n      <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <div class=\"table-container  bg-thead-color with-tab-table-low table-responsive-md px-2 comman-table-users head-border\" *ngIf=\"!loader\">\n      <div *ngIf=\"locationGroups?.length || clinicalGroups?.length || this.isCfa\">\n        <ng-template [ngIf]=\"selectedTab === 'parameter'\">\n          <app-parameter-alerts (reloadData)=\"getSettings()\"></app-parameter-alerts>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'technical'\">\n          <app-technical-alerts (reloadData)=\"getSettings()\"></app-technical-alerts>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'arrhythmia'\">\n          <app-arrhythmia-alerts (reloadData)=\"getSettings()\"></app-arrhythmia-alerts>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'priority'\">\n          <app-priority (reloadData)=\"getSettings()\"></app-priority>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'message'\">\n          <app-alert-messages (reloadData)=\"getSettings()\"></app-alert-messages>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'destination'\">\n          <app-destination-settings (reloadData)=\"getSettings()\"></app-destination-settings>\n        </ng-template>\n      </div>\n      <div class=\"text-center my-4 py-4\" *ngIf=\"clinicalGroups?.length === 0 && locationGroups?.length === 0 && !isCfa\">\n        {{\"alert_config_module.messages.no_groups\" | translate}}\n      </div>\n    </div>\n    <div class=\"row py-2 px-2\" *ngIf=\"!loader && (clinicalGroups?.length || locationGroups?.length || this.isCfa)\">\n      <div class=\"col-md-6 my-1\">\n        <button mat-flat-button color=\"primary\" class=\"reset_btn_bg\" (click)=\"openDialog()\" *ngIf=\"isShowResetButton\">\n          <mat-icon>refresh</mat-icon>\n          <span class=\"ps-2\">{{ \"alert_config_module.reset_to_default\" | translate }}</span>\n        </button>\n      </div>\n      <div class=\"col-md-6 text-center text-md-end my-1\">\n        <ng-template [ngIf]=\"showActionButtons\">\n          <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n            <span>{{ \"alert_config_module.cancel\" | translate }}</span>\n          </button>\n          <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n            <span>{{ \"alert_config_module.save\" | translate }}</span>\n          </button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter, Input, OnChanges,\n  OnInit,\n  Output, SimpleChanges\n} from \"@angular/core\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { CommonService } from \"@services/common.service\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { isAllowedRole, uiAccessRoles } from \"@utils/helpers\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from \"@angular/forms\";\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {AlertConfigurationStoreActions} from \"../../../dialogs/notifications-component/store\";\n\n@Component({\n  selector: \"app-alert-destination\",\n  templateUrl: \"./alert-destination.component.html\",\n  styleUrls: [\"./alert-destination.component.scss\"],\n})\nexport class AlertDestinationComponent implements OnInit, OnChanges {\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() alertDestinationSettings;\n  @Input() alertDestinationSettingsCopy;\n  @Input() alertType;\n  @Input() userData;\n  @Output() updateDestination = new EventEmitter<string>();\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  private subscriptions: Subscription[] = [];\n  cfId: string = \"\";\n  alertGroupId: any = null;\n\n  roles: string[];\n  destinationAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_DESTINATIONS;\n  isEditAccess: boolean = false;\n\n  contactLists: any = [];\n  activeContactLists: any = [];\n  activePhoneNoLists: any = [];\n  activeEmailLists: any = [];\n  contactLists$: Observable<AlertConfigurationModels.ClinicalFacilityContactListData>;\n\n  alertDestinationForm: FormGroup;\n  contactListsSMS: any = [];\n  contactListsWhatsApp: any = [];\n  contactListsEMAIL: any = [];\n  contactListsCaregiverApp: any = [];\n  selectedSmsContact;\n  selectedEmailContact;\n  selectedWhatsappContact;\n  selectedCaregiverContact;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 100px\",\n    },\n    {\n      id: \"alert_type\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 200px\",\n    },\n    {\n      id: \"alert_dest\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n    },\n    {\n      id: \"alert_select\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n    },\n  ];\n  constructor(\n    private commonService: CommonService,\n    private autheticationService: AuthenticationService,\n    private snackbar: SnackbarService,\n    public dialog: MatDialog,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.alertDestinationForm = this.formBuilder.group({\n      smsContactList: this.formBuilder.array([]),\n      whatsAppContactList: this.formBuilder.array([]),\n      emailContactList: this.formBuilder.array([]),\n      caregiverAppContactList: this.formBuilder.array([]),\n    });\n    this.setDefaultData();\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n\n    if (isAllowedRole(this.destinationAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n\n    this.contactLists$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getClinicalFacilityContacts\n    );\n\n    this.subscriptions.push(\n      this.commonService.destinationAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.alertDestinationSettings = JSON.parse(\n            JSON.stringify(this.alertDestinationSettingsCopy)\n            \n          );\n          this.updateDestination.emit(JSON.stringify(this.alertDestinationSettings));\n          this.setDefaultContactListData(this.alertDestinationSettings);\n        }\n      })\n    );\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    ).subscribe(data => {\n      this.setDefaultContactListData(this.alertDestinationSettings);\n    });\n\n\n    this.contactLists$.subscribe((data:any) => {\n      this.contactLists = data.map((x) => {\n        return {\n          ...x,\n          displayName: `${x.firstName} ${x.lastName}`,\n        };\n      });\n      this.activeContactLists = this.contactLists.filter(user => user?.isActive === true);\n      this.activePhoneNoLists = this.activeContactLists.filter(user => user?.phoneNo);\n      this.activeEmailLists = this.activeContactLists.filter(user => user?.email);\n    });\n    this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n  ngOnChanges(changes: SimpleChanges){\n    //this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n\n\n  toggle(event: MatSlideToggleChange) {\n    this.updated();\n  }\n  openDialog(type: string, index: number) {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_delete\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.removeContactSelected(type, index);\n      }\n    });\n  }\n  getUrserIds(type: any) {\n    const ids = [];\n    let list = [];\n    switch (type) {\n      case \"sms\":\n        list = this.contactListsSMS;\n        break;\n      case \"whatsapp\":\n        list = this.contactListsWhatsApp;\n        break;\n      case \"email\":\n        list = this.contactListsEMAIL;\n        break;\n      case \"caregiver\":\n        list = this.contactListsCaregiverApp;\n        break;\n      default:\n        break;\n    }\n    for (let index = 0; index < list.length; index++) {\n      const element: any = list[index];\n      ids.push(element.userId);\n    }\n    return ids;\n  }\n\n  get smsContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"smsContactList\");\n  }\n\n  get whatsAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"whatsAppContactList\");\n  }\n\n  get emailContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"emailContactList\");\n  }\n\n  get caregiverAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"caregiverAppContactList\");\n  }\n\n  addContactDropdownList(type: string, isDefault: boolean = false) {\n    switch (type) {\n      case \"sms\":\n        const smsContactList = this.alertDestinationForm.controls\n            .smsContactList as FormArray;\n        if (isDefault) {\n          smsContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (this.selectedSmsContact) {\n            if (\n                !this.contactListsSMS?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedSmsContact.userId\n                  );\n                })\n            ) {\n              this.contactListsSMS.push(\n                  this.selectedSmsContact\n              );\n              smsContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              smsContactList.removeAt(0);\n              this.selectedSmsContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      case \"email\":\n        const emailContactList = this.alertDestinationForm.controls\n            .emailContactList as FormArray;\n        if (isDefault) {\n          emailContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (\n              this.selectedEmailContact\n          ) {\n            if (\n                !this.contactListsEMAIL?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedEmailContact.userId\n                  );\n                })\n            ) {\n              this.contactListsEMAIL.push(this.selectedEmailContact);\n              emailContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              emailContactList.removeAt(0);\n              this.selectedEmailContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      case \"whatsapp\":\n        const whatsAppContactList = this.alertDestinationForm.controls\n            .whatsAppContactList as FormArray;\n        if (isDefault) {\n          whatsAppContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (this.selectedWhatsappContact) {\n            if (\n                !this.contactListsWhatsApp?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedWhatsappContact.userId);\n                })\n            ) {\n              this.contactListsWhatsApp.push(this.selectedWhatsappContact);\n              whatsAppContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              whatsAppContactList.removeAt(0);\n              this.selectedWhatsappContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      case \"caregiver\":\n        const caregiverAppContactList = this.alertDestinationForm.controls\n            .caregiverAppContactList as FormArray;\n        if (isDefault) {\n          caregiverAppContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (this.selectedCaregiverContact) {\n            if (\n                !this.contactListsCaregiverApp?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedCaregiverContact.userId);\n                })\n            ) {\n              this.contactListsCaregiverApp.push(this.selectedCaregiverContact);\n              caregiverAppContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              caregiverAppContactList.removeAt(0);\n              this.selectedCaregiverContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  userSelected(type, value) {\n    switch(type) {\n      case 'sms' : {\n        this.selectedSmsContact = value;\n        break;\n      }\n      case 'whatsapp' : {\n        this.selectedWhatsappContact = value;\n        break;\n      }\n      case 'email': {\n        this.selectedEmailContact = value;\n        break;\n      }\n      case \"caregiver\": {\n        this.selectedCaregiverContact = value;\n        break\n      }\n      default: break;\n    }\n\n  }\n\n  setDefaultData() {\n    this.addContactDropdownList(\"sms\", true);\n    this.addContactDropdownList(\"email\", true);\n    this.addContactDropdownList(\"whatsapp\", true);\n    this.addContactDropdownList(\"caregiver\", true);\n  }\n\n  removeContactSelected(type: string, index: number) {\n    switch (type) {\n      case \"sms\":\n        this.contactListsSMS.splice(index, 1);\n        break;\n      case \"whatsapp\":\n        this.contactListsWhatsApp.splice(index, 1);\n        break;\n      case \"email\":\n        this.contactListsEMAIL.splice(index, 1);\n        break;\n      case \"caregiver\":\n        this.contactListsCaregiverApp.splice(index, 1);\n        break;\n      default:\n        break;\n    }\n    this.updated();\n  }\n\n  setDefaultContactListData(setting: any) {\n    if (setting && Array.isArray(setting.AlertSMS)) {\n      this.contactListsSMS = [];\n      setting.AlertSMS.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsSMS.push(contact);\n        }\n      });\n    } else {\n      this.contactListsSMS = [];\n    }\n    if (setting && Array.isArray(setting.AlertWhatsApp)) {\n      this.contactListsWhatsApp = [];\n      setting.AlertWhatsApp.forEach((element) => {\n        const contact = this.userData.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsWhatsApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsWhatsApp = [];\n    }\n    if (setting && Array.isArray(setting.AlertEmail)) {\n      this.contactListsEMAIL = [];\n      setting.AlertEmail.forEach((element) => {\n        const contact = this.userData.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsEMAIL.push(contact);\n        }\n      });\n    } else {\n      this.contactListsEMAIL = [];\n    }\n    if (setting && Array.isArray(setting.AlertCaregiverApp)) {\n      this.contactListsCaregiverApp = [];\n      setting.AlertCaregiverApp.forEach((element) => {\n        const contact = this.userData.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsCaregiverApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsCaregiverApp = [];\n    }\n  }\n  updated() {\n    let destinationSettings = JSON.parse(\n        JSON.stringify(this.alertDestinationSettings));\n    destinationSettings.AlertCaregiverApp =\n        this.getUrserIds(\"caregiver\");\n    destinationSettings.AlertEmail =\n        this.getUrserIds(\"email\");\n    destinationSettings.AlertSMS = this.getUrserIds(\"sms\");\n    destinationSettings.AlertWhatsApp =\n        this.getUrserIds(\"whatsapp\");\n    this.updateDestination.emit(JSON.stringify(destinationSettings));\n  }\n  reloadContactList(searchString) {\n    let url = `clinical-facilities/contacts?size=1000&page=1&searchText=${searchString}`;\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            {url}\n        )\n    );\n  }\n}\n","<table class=\"table destination-table\" *ngIf=\"alertDestinationSettings?.toString()\" aria-label=\"Table\">\n    <thead>\n    <tr><th colspan=\"3\" class=\"ps-4\">{{alertType}}</th></tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n                [(ngModel)]=\"alertDestinationSettings.AlertSMSEnabled\"></mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.sms\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsSMS; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertSMSEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\" matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('sms',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsSMS.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"smsContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of smsContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertSMSEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('sms', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('sms')\"  [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n                [(ngModel)]=\"alertDestinationSettings.AlertWhatsAppEnabled\">\n              </mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.whatsapp\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsWhatsApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertWhatsAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\" matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('whatsapp',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsWhatsApp.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"whatsAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of whatsAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"me-3 msg-select\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertWhatsAppEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('whatsapp', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('whatsapp')\"  [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n                [(ngModel)]=\"alertDestinationSettings.AlertEmailEnabled\"></mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.email\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsEMAIL; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertEmailEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive===false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\"  matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('email',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsEMAIL.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"emailContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of emailContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertEmailEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activeEmailLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('email', $event)\" [items]=\"activeEmailLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('email')\" [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\" [(ngModel)]=\"\n              alertDestinationSettings.AlertCaregiverAppEnabled\n            \">\n              </mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.capp\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsCaregiverApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertCaregiverAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive===false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\"  matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('caregiver',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsCaregiverApp.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"caregiverAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of caregiverAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertCaregiverAppEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activeContactLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('caregiver', $event)\" [items]=\"activeContactLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('caregiver')\" [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n","import {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-alert-messages\",\n  templateUrl: \"./alert-messages.component.html\",\n  styleUrls: [\"./alert-messages.component.scss\"],\n})\nexport class AlertMessagesComponent implements OnInit {\n  @Output() reloadData = new EventEmitter<any>(true);\n  private subscriptions: Subscription[] = [];\n  iseditDisabled: boolean;\n  alertDestinationSettings: any = {};\n  alertDestinationSettingsCopy: any = {};\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  cfId: string = \"\";\n\n  constructor(\n    private commonService: CommonService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private snackbar: SnackbarService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>\n  ) {}\n\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.iseditDisabled = true;\n    this.alertDestinationSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertDestinationSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.iseditDisabled = true;\n      this.alertDestinationSettings = { ...data };\n      this.alertDestinationSettingsCopy = JSON.parse(\n        JSON.stringify(this.alertDestinationSettings)\n      );\n    });\n\n    this.subscriptions.push(\n      this.commonService.notificationAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.iseditDisabled = true;\n          this.alertDestinationSettings = JSON.parse(\n            JSON.stringify(this.alertDestinationSettingsCopy)\n          );\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.commonService.notificationAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateAlertNotification();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  showActionButtons(isShow: boolean) {\n    this.updated();\n  }\n\n  async updateAlertNotification() {\n    try {\n      const url =\n        \"alert-settings/root/\" + this.cfId + \"/alert-destination-settings\";\n      const resp: any = await this.backendApiService\n        .post(\n          environment.dataApiUrl + url,\n          this.alertDestinationSettings\n        )\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setNotificationAlertEditSubmit(false);\n        this.iseditDisabled = true;\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center')\n      }\n    } catch (error) {}\n  }\n  updated() {\n    if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","<div class=\"table-container table-responsive-sm\">\n    <table>\n        <tbody>\n            <tr>\n                <td class=\"alert_msg my-2\">\n                    <br>\n                    <mat-label class=\"matlabel mx-2 py-2 pb-2\"> {{ \"alert_config_module.notification\" | translate }}:\n                    </mat-label>\n                    <mat-form-field class=\"notification-textarea\">\n                        <textarea matInput cdkTextareaAutosize class=\"p-2\" [(ngModel)]=\"alertDestinationSettings.NotificationMessage\" [disabled]=\"iseditDisabled\" (keyup)=\"updated()\">\n                        </textarea>\n                        <button *ngIf=\"iseditDisabled\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow msgbtn\" (click)=\"\n                iseditDisabled = !iseditDisabled;\" matSuffix>\n                    <mat-icon>edit</mat-icon>\n                </button>\n                        <button *ngIf=\"!iseditDisabled\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow msgbtn\" (click)=\"iseditDisabled = !iseditDisabled\" matSuffix>\n                    <mat-icon>done</mat-icon>\n                </button>\n                    </mat-form-field>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  priorityColorCode,\n  arrhythmiaAlertPriorityOptions,\n  uiAccessRoles,\n  ArrhythmiaParameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { element } from \"angular\";\n\n@Component({\n  selector: 'app-arrhythmia-alerts',\n  templateUrl: './arrhythmia-alerts.component.html',\n  styleUrls: ['./arrhythmia-alerts.component.scss']\n})\nexport class ArrhythmiaAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = arrhythmiaAlertPriorityOptions;\n  parameterAlert = ArrhythmiaParameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ARRHYTHMIA_PARAMETER;\n  isEditAccess: boolean = false;\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  alertSettings$: Observable<AlertConfigurationModels.ArrhythmiaAlertConfigurationData>;\n  userPreferenceUnit;\n  postures;\n\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 60px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 250px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n      // style: \"width: 40px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      //style: \"width: 150px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n      //style: \"width: 40px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      //style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 20px\"\n    },\n  ];\n\n  constructor(\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    public alertService: AlertConfigurationsService,\n  ) { }\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.parameterMinMax = this.alertService.getParameterMinMax();\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getArrhythmiaAlertConfigurations\n    );\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      let alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if (data?.Setting[element.key]) {\n            const settings = data?.Setting[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i,\n            });\n          }\n        }\n      );\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateParameterSettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n    // this.commonService.setSettingsAlertActionButtons(true);\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n\n  async updateParameterSettings() {\n    let parameterAlert: any = {};\n    let settings = [...this.parameterAlertSettings];\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        Thr: element.Thr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let url = \"arrhythmia-alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n      }\n    } catch (error) { }\n  }\n\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n      Thr: \"invalid_threshold\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    console.log(key);\n    console.log(control);\n    if (control === 'BODYTEMP' || control === 'SKINTEMP') {\n      return true\n    } else {\n      if (numericsOnlyPattern.test(key)) {\n        return true;\n      } else {\n        event.preventDefault();\n        return false;\n      }\n    }\n  }\n}\n","<ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"parameterAlertSettings\">\n  <ng-template lsWidgetName=\"enabled\" let-config>\n    <span class=\"d-flex align-items-center\">\n      <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n        [disabled]=\"!isEditAccess\">\n      </mat-slide-toggle>\n    </span>\n  </ng-template>\n<ng-template lsWidgetName=\"alerts\" let-config>\n  {{ config.alert }}\n  <span class=\"fw-normal\"\n    *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n    ({{ config.unit }})</span>\n</ng-template>\n<ng-template lsWidgetName=\"threshold\" let-config>\n  <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n    <span *ngIf=\"!editThreshold[config?.index]\">\n      {{ config.LowThr }}\n    </span>\n    <span *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n      <input (keypress)=\"numericsOnly(config.key, $event)\" matInput digitOnly\n        class=\"text-input-box py-1 me-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n        [(ngModel)]=\"config.LowThr\" autocomplete=\"off\"\n        (change)=\"parameterThresholdChanged(config.index,'LowThr',parameterMinMax[config.key])\" type=\"number\"\n        [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\" [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\" />\n    </span>\n  </span>\n  <span *ngIf=\"!['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">-</span>\n</ng-template>\n\n<ng-template lsWidgetName=\"editThreshold\" let-config>\n  <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n    <span *ngIf=\"!editThreshold[config?.index]\">\n      <button *ngIf=\"!editThreshold[config?.index] && isEditAccess\" mat-mini-fab color=\"primary\"\n        class=\"btn-boxed btn-no-shadow\" [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config?.index, 'threshold')\">\n        <mat-icon>edit</mat-icon>\n      </button>\n    </span>\n    <span *ngIf=\"editThreshold[config?.index]\">\n      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n        (click)=\"showHideEdit(config?.index, 'threshold')\">\n        <mat-icon>done</mat-icon>\n      </button>\n    </span>\n  </span>\n</ng-template>\n\n<ng-template lsWidgetName=\"priority\" let-config>\n  <span class=\"me-2\">\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\" />\n      <circle *ngIf=\"config.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n        [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\" />\n    </svg>\n    &nbsp; <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n    <span *ngIf=\"editPrior[config.index]\">\n      <mat-select placeholder=\"Select\" class=\"priority-drop-down\" [(ngModel)]=\"config.Priority\"\n        (selectionChange)=\"updated()\">\n        <mat-option *ngFor=\"let priority of alertPriority\" [value]=\"priority.value\">\n          {{ priority.label }}\n        </mat-option>\n      </mat-select>\n    </span>\n  </span>\n</ng-template>\n<ng-template lsWidgetName=\"editPriority\" let-config>\n  <ng-container>\n    <span>\n      <span *ngIf=\"!editPrior[config.index]\">\n        <button *ngIf=\"isEditAccess\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n          (click)=\"showHideEdit(config.index, 'priority')\" [disabled]=\"!config.Enabled\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </span>\n      <span *ngIf=\"editPrior[config.index]\">\n        <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n          (click)=\"showHideEdit(config.index, 'priority')\">\n          <mat-icon>done</mat-icon>\n        </button>\n      </span>\n    </span>\n  </ng-container>\n</ng-template>\n<!--Delay time column-->\n<ng-template lsWidgetName=\"delayTime\" let-config>\n  <div class=\"d-flex justify-content-around align-items-center\">\n    <div class=\"d-flex ack-column justify-content-center align-items-center\">\n      <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n        <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n          {{ config.CondDelay }} <span>{{'alert_config_module.secs' |\n            translate}}</span>\n        </div>\n        <div *ngIf=\"editDelay[config.index]\">\n          <input (keypress)=\"numericsOnly(config.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\" matInput autocomplete=\"off\" type=\"number\"\n            digitOnly class=\"text-input-box py-1\" size=\"4\" (change)=\"\n          parameterThresholdChanged(\n            config.index,\n            'CondDelay',\n            parameterMinMax[config.key]\n          )\" [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n            [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\" [(ngModel)]=\"config.CondDelay\" />\n        </div>\n        <ng-container *ngIf=\"isEditAccess\">\n          <div class=\"ms-2 edit\">\n            <button *ngIf=\"!editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n              [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config.index, 'delay')\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n              (click)=\"showHideEdit(config.index, 'delay')\">\n              <mat-icon>done</mat-icon>\n            </button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<!--Modified column-->\n<ng-template lsWidgetName=\"modified\" let-config>\n  <span *ngIf=\"masterData?.modifiedDateTime\">\n    {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n  </span>\n  <br />\n  <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n</ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport {Observable, Subscription} from \"rxjs\";\nimport {CommonService} from \"@services/common.service\";\nimport {BackendApiService} from \"@services/backendapi.service\";\nimport {AuthenticationService} from \"@services/authentication.service\";\nimport {SnackbarService} from \"@services/snackbar.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {Store} from \"@ngrx/store\";\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-destination-settings',\n  templateUrl: './destination-settings.component.html',\n  styleUrls: ['./destination-settings.component.scss']\n})\nexport class DestinationSettingsComponent implements OnInit {\n\n  constructor(private commonService: CommonService,\n              private backendApiService: BackendApiService,\n              private autheticationService: AuthenticationService,\n              private snackbar: SnackbarService,\n              public dialog: MatDialog,\n              private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,) { }\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  alertDestinationSettings;\n  alertDestinationSettingsCopy;\n  cfId: string = \"\";\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  ngOnInit(): void {\n    this.cfId = this.autheticationService.getCfId();\n    this.fetchContactList();\n    this.alertGroupId$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n    this.alertDestinationSettings$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertDestinationSettings$.subscribe((data) => {\n      this.alertDestinationSettings = { ...data };\n      this.alertDestinationSettings.UserData = this.alertDestinationSettings?.UserData?.map(user => {\n        return {\n          ...user,\n          displayName: `${user?.firstName} ${user?.lastName}`,\n          userId: user.id\n        }\n      });\n      this.alertDestinationSettingsCopy = JSON.parse(\n          JSON.stringify(this.alertDestinationSettings)\n      );\n    });\n    this.subscriptions.push(\n        this.commonService.destinationAlertEditSubmit.subscribe((isSubmit) => {\n          if (isSubmit) {\n            this.updateDestinationAlerts();\n          }\n        })\n    );\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n  valueUpdated(event, type) {\n    if(type=== 'clinical') {\n      this.alertDestinationSettings.Setting = JSON.parse(event);\n    } else {\n      this.alertDestinationSettings.SettingTech = JSON.parse(event);\n    }\n    if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  async updateDestinationAlerts() {\n    try {\n      let resp;\n      if(this.alertGroupId) {\n        if(this.alertDestinationSettings.GroupId === 'ROOT') {\n          this.alertDestinationSettings.AlertDestId = '';\n        }\n        this.alertDestinationSettings = {\n          ...this.alertDestinationSettings,\n          GroupId: this.alertGroupId,\n          FacilityId: this.cfId\n        };\n        const url = \"alert-settings/group-edit/alert-destination-settings\";\n         resp = await this.backendApiService\n            .post(\n                environment.dataApiUrl + url,\n                this.alertDestinationSettings\n            )\n            .toPromise();\n      } else {\n        const url =\n            \"alert-settings/root/\" + this.cfId + \"/alert-destination-settings\";\n         resp = await this.backendApiService\n            .post(\n                environment.dataApiUrl + url,\n                this.alertDestinationSettings\n            )\n            .toPromise();\n      }\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center')\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setDestinationAlertEditSubmit(false);\n      }\n    } catch (error) {}\n  }\n  fetchContactList() {\n    let url = \"clinical-facilities/contacts?page=1&size=1000\";\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            { url }\n        )\n    );\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data) => {});\n  }\n  ngOnDestroy() {\n    this.reloadData.emit();\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n}\n","<div class=\"px-2 py-3 \">\n    <div class=\"table-container alert-destination-table table-responsive-sm\">\n        <app-alert-destination [alertType]=\"'Clinical'\" [alertDestinationSettings]=\"alertDestinationSettings.Setting\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.Setting\" (updateDestination)=\"valueUpdated($event, 'clinical')\"\n                               [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n        <app-alert-destination [alertType]=\"'Technical'\" [alertDestinationSettings]=\"alertDestinationSettings.SettingTech\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.SettingTech\" (updateDestination)=\"valueUpdated($event, 'tech')\"\n                               [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n    </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  priorityColorCode,\n  alertPriorityOptions,\n  uiAccessRoles,\n  parameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\nimport {AlertConfigurationsService} from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-parameter-alerts\",\n  templateUrl: \"./parameter-alerts.component.html\",\n  styleUrls: [\"./parameter-alerts.component.scss\"],\n})\nexport class ParameterAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = alertPriorityOptions;\n  parameterAlert = parameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_PARAMETER;\n  isEditAccess: boolean = false;\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  userPreferenceUnit;\n  postures;\n\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n     style: \"width: 60px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n     style: \"min-width: 250px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n     // style: \"width: 40px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      //style: \"width: 150px;\",\n      cellClass: [\"text-end\", \"d-flex\", \"justify-content-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n      //style: \"width: 40px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      //style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 20px\"\n    },\n  ];\n\n  constructor(\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    public alertService: AlertConfigurationsService,\n  ) {}\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.parameterMinMax = this.alertService.getParameterMinMax() ;\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      let alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if(data?.Setting?.Param?.PhyParam[element.key]) {\n            const settings = data?.Setting.Param.PhyParam[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i,\n            });\n          }\n        }\n      );\n      if (this.userPreferenceUnit === 'SI') {\n        alerts.forEach(setting => {\n          if((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = Math.round(setting.LowThr/100)/10;\n            setting.HighThr = Math.round(setting.HighThr/100)/10;\n            setting.unit = \"°C\";\n          }\n              });\n      } else {\n        alerts.forEach(setting => {\n          if((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = this.userPreference.convertCtoF(setting.LowThr/1000);\n            setting.HighThr = this.userPreference.convertCtoF(setting.HighThr/1000);\n            setting.unit = \"°F\";\n          }\n        });\n      }\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateParameterSettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n    // this.commonService.setSettingsAlertActionButtons(true);\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n\n  async updateParameterSettings() {\n    let parameterAlert: any = {};\n    console.log(this.parameterAlertSettings);\n    let settings = [...this.parameterAlertSettings];\n    settings = settings.map(setting =>\n        setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP'\n            ? { ...setting, LowThr: Math.floor(this.tempConvFunction(setting.LowThr)*1000),\n              HighThr:  Math.floor(this.tempConvFunction(setting.HighThr)*1000),}\n            : setting\n    );\n    // settings = settings.map(setting =>\n    //     setting.key === 'POSTURE_ALERT' ? { ...setting, LowThr: setting.HighThr} : setting\n    // );\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"PhyParam\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let url = \"alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n      }\n    } catch (error) {}\n  }\n\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n\n    if (key === \"LowThr\") {\n      if (\n        this.parameterAlertSettings[index][key] >=\n        this.parameterAlertSettings[index][\"HighThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_low_threshold\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"HighThr\") {\n      if (\n        this.parameterAlertSettings[index][key] <=\n        this.parameterAlertSettings[index][\"LowThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_high_threshold\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  limitChar(control, event) {\n    if(control === 'BODYTEMP' || control === 'SKINTEMP') {\n      if(event.target.value.toString().length>5){\n        event.target.value = event.target.value.substr(0, 5);\n      }\n    } else {\n      if(event.key==='.'){\n        event.preventDefault();\n      }\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    console.log(key);\n    console.log(control);\n    if(control === 'BODYTEMP' || control === 'SKINTEMP') {\n      return true\n    } else {\n      if (numericsOnlyPattern.test(key)) {\n        return true;\n      } else {\n        event.preventDefault();\n        return false;\n      }\n    }\n  }\n}\n","<ls-table\n        [(config)]=\"config\"\n        [columns]=\"columns\"\n        [data]=\"parameterAlertSettings\"\n>\n  <ng-template lsWidgetName=\"enabled\" let-config>\n      <span class=\"d-flex align-items-center\">\n        <mat-slide-toggle\n                [(ngModel)]=\"config.Enabled\"\n                class=\"ms-1 me-2\"\n                (change)=\"toggle(config?.index)\"\n                [disabled]=\"!isEditAccess\"\n        >\n        </mat-slide-toggle>\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"alerts\" let-config>\n      {{ config.alert }} <span class=\"fw-normal\" *ngIf=\"config.key !== 'POSTURE_ALERT'\">({{ config.unit }})</span>\n  </ng-template>\n  <ng-template lsWidgetName=\"threshold\" let-config>\n      <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\"\n              >{{ config.LowThr }} &lt;\n            <span *ngIf=\"config.key !== 'SPO2'\">\n            <span class=\"fw-700\">\n              {{ \"alert_config_module.or\" | translate }} </span\n            >&gt; {{ config.HighThr }}\n            </span>\n          </span>\n        <div *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n            <input\n            (keypress)=\"numericsOnly(config.key, $event)\"\n                     (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                    matInput\n                    digitOnly\n                    autocomplete=\"off\"\n                    class=\"text-input-box py-1\"\n                    [(ngModel)]=\"config.LowThr\"\n                    (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'LowThr',\n                  parameterMinMax[config.key]\n                )\n              \"\n                    type=\"number\"\n                    [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\"\n                    [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\"\n                    (keydown)=\"limitChar(config.key, $event)\"\n                    [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"\n            />\n            <span class=\"ms-1\"><</span>\n            <span *ngIf=\"config.key !== 'SPO2'\">\n            <span class=\"me-1\">{{ \"alert_config_module.or\" | translate }}&gt;</span>\n            <input\n                    (keypress)=\"numericsOnly(config.key, $event)\"\n                    (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                    matInput\n                    digitOnly\n                    autocomplete=\"off\"\n                    class=\"text-input-box py-1\"\n                    [(ngModel)]=\"config.HighThr\"\n                    type=\"number\"\n                    (keydown)=\"limitChar(config.key, $event)\"\n                    [min]=\"parameterMinMax[config.key]['MIN']['HighThr']\"\n                    [max]=\"parameterMinMax[config.key]['MAX']['HighThr']\"\n                    [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"\n                    (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'HighThr',\n                  parameterMinMax[config.key]\n                )\n              \"\n            />\n            </span>\n          </div>\n      </span>\n      <span  *ngIf=\"config.key === 'POSTURE_ALERT'\">\n<!--        <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--          <mat-select [(ngModel)]=\"config.HighThr\" class=\"mat-sel\" [disabled]=\"!isEditAccess || !config.Enabled\" (selectionChange)=\"updated()\">-->\n<!--              <mat-option *ngFor=\"let posture of postures;let i=index\" [value]=\"i\"> {{posture}}</mat-option>-->\n<!--          </mat-select>-->\n<!--        </mat-form-field>-->\n          -\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"editThreshold\" let-config>\n      <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\">\n            <button\n                    *ngIf=\"!editThreshold[config?.index] && isEditAccess\"\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    [disabled]=\"!config.Enabled\"\n                    (click)=\"showHideEdit(config?.index, 'threshold')\"\n            >\n              <mat-icon>edit</mat-icon>\n            </button>\n          </span>\n        <span *ngIf=\"editThreshold[config?.index]\">\n            <button\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config?.index, 'threshold')\"\n            >\n              <mat-icon>done</mat-icon>\n            </button>\n          </span>\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"priority\" let-config>\n      <span class=\"me-1 priority-card \">\n              <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\"/>\n                <circle *ngIf=\"config?.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\" [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\"/>\n              </svg>\n              &nbsp;   <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n                  <span *ngIf=\"editPrior[config.index]\">\n                  <mat-select\n                    placeholder=\"Select\"\n                    class=\"priority-drop-down\"\n                    [(ngModel)]=\"config.Priority\"\n                    (selectionChange)=\"updated()\">\n                    <mat-option\n                      *ngFor=\"let priority of alertPriority\"\n                      [value]=\"priority.value\"\n              >\n                {{ priority.label }}\n              </mat-option>\n                    </mat-select>\n                  </span>\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"editPriority\" let-config>\n      <ng-container>\n                      <span>\n                          <span *ngIf=\"!editPrior[config.index]\">\n            <button\n                    *ngIf=\"isEditAccess\"\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config.index, 'priority')\"\n                    [disabled]=\"!config.Enabled\"\n            >\n              <mat-icon>edit</mat-icon>\n            </button>\n          </span>\n                          <span *ngIf=\"editPrior[config.index]\">\n            <button\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config.index, 'priority')\"\n            >\n              <mat-icon>done</mat-icon>\n            </button>\n          </span>\n                      </span>\n      </ng-container>\n  </ng-template>\n  <ng-template lsWidgetName=\"delayTime\" let-config>\n      <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key !== 'BPSYS' && config.key !== 'BPDIA' && config.key !=='BP'\">\n          <div class=\"d-flex ack-column justify-content-center align-items-center\">\n              <div class=\"d-flex justify-content-center align-items-center\">\n                  <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n                      {{ config.CondDelay }} <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">{{'alert_config_module.secs' | translate}}</span>\n                      <span *ngIf=\"config.key === 'POSTURE_ALERT'\">{{'alert_config_module.hrs' | translate}}</span>\n                  </div>\n                  <div *ngIf=\"editDelay[config.index]\">\n                     <input\n                     (keypress)=\"numericsOnly(config.key, $event)\"\n                     (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                    matInput\n                    autocomplete=\"off\"\n                    type=\"number\"\n                    digitOnly\n                    class=\"text-input-box py-1\"\n                    size=\"4\"\n                    (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'CondDelay',\n                  parameterMinMax[config.key]\n                )\n              \"\n                    [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n                    [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\"\n                    [(ngModel)]=\"config.CondDelay\"\n            />\n                  </div>\n                  <ng-container *ngIf=\"isEditAccess\">\n                      <div class=\"ms-2 edit\">\n                          <button\n                                  *ngIf=\"!editDelay[config.index]\"\n                                  mat-mini-fab\n                                  color=\"primary\"\n                                  class=\"btn-boxed btn-no-shadow\"\n                                  [disabled]=\"!config.Enabled\"\n                                  (click)=\"showHideEdit(config.index, 'delay')\"\n                          >\n                              <mat-icon>edit</mat-icon>\n                          </button>\n                          <button\n                                  *ngIf=\"editDelay[config.index]\"\n                                  mat-mini-fab\n                                  color=\"primary\"\n                                  class=\"btn-boxed btn-no-shadow\"\n                                  (click)=\"showHideEdit(config.index, 'delay')\"\n                          >\n                              <mat-icon>done</mat-icon>\n                          </button>\n                      </div>\n                  </ng-container>\n              </div>\n          </div>\n      </div>\n      <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key === 'BPSYS' || config.key === 'BPDIA' || config.key ==='BP'\">\n          -\n      </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"modified\" let-config>\n    <span *ngIf=\"masterData?.modifiedDateTime\">\n      {{ masterData?.modifiedDateTime+ '+0000' | date : \"MMM dd, yyyy \" + timeFmt : timeZone }}\n    </span><br />\n    <span *ngIf=\"!isBlank(masterData?.modifiedBy)\"\n    >by {{ masterData?.modifiedBy }}</span\n    >\n  </ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>\n","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  priorityColorCode,\n  alertPriorityOptions,\n  uiAccessRoles,\n  priorityAlertItems,\n  isAllowedRole,\n  alertConfigMinMaxValues,\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-priority\",\n  templateUrl: \"./priority.component.html\",\n  styleUrls: [\"./priority.component.scss\"],\n})\nexport class PriorityComponent implements OnInit, OnDestroy {\n  @Output() reloadData = new EventEmitter<any>(true);\n  private subscriptions: Subscription[] = [];\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = alertPriorityOptions;\n\n  priorityAlert = priorityAlertItems;\n  masterData: any = {};\n  priorityAlertSettings: any = [];\n  priorityAlertSettingsCopy: any = [];\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n\n  roles: string[];\n  priorityAlertAccess: any = uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_PRIORITY;\n  isEditAccess: boolean = false;\n\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  priorityAlertMinMax = alertConfigMinMaxValues.priorityAlert;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n    showExtraHeader: true\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 150px\",\n    },\n    {\n      id: \"alert_freq\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-end\"],\n      style: \"width: 460px;\",\n    },\n    {\n      id: \"alert_breakthrough\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-end\"],\n      style: \"width: 460px;\",\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"min-width: 50px\"\n    },\n  ];\n  constructor(\n    private commonService: CommonService,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    public alertService : AlertConfigurationsService\n  ) {}\n\n  editPriority = [false];\n  editPrio = [false];\n\n  editBreakThrough = [false];\n  editBreaksThrough = [false];\n\n  ngOnInit() {\n    this.roles = this.autheticationService.getRoles();\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.hidePriorityAlertEdit();\n      this.masterData = { ...data };\n      const alerts = [];\n      this.priorityAlert.forEach(\n        (element: {\n          key: string | number;\n          alerts: any;\n          unit: any;\n          percentage: any;\n        }, i) => {\n          const settings = (data?.Setting?.Param?.PhyParam || {})[element.key];\n          alerts.push({\n            ...settings,\n            ...((this.masterData?.Setting?.Common?.PhyCommon || {})[\n              element.key\n            ] || {}),\n            alert: element.alerts,\n            unit: element.unit,\n            key: element.key,\n            percentage: element.percentage,\n            index: i\n          });\n        }\n      );\n      this.priorityAlertSettings = alerts;\n      this.priorityAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n\n    if (isAllowedRole(this.priorityAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.priorityAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.priorityAlertSettings = JSON.parse(\n            JSON.stringify(this.priorityAlertSettingsCopy)\n          );\n          this.hidePriorityAlertEdit();\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.commonService.priorityAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updatePrioritySettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n      console.log('groupId', this.alertGroupId);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"priorityACK\":\n        this.editPriority[index] = !this.editPriority[index];\n        break;\n      case \"priorityNACK\":\n        this.editPrio[index] = !this.editPrio[index];\n        break;\n      case \"breakThroughACK\":\n        this.editBreakThrough[index] = !this.editBreakThrough[index];\n        break;\n      case \"breakThroughNACK\":\n        this.editBreaksThrough[index] = !this.editBreaksThrough[index];\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Hide all active edit buttons\n  hidePriorityAlertEdit() {\n    this.editPriority = [false];\n    this.editPrio = [false];\n    this.editBreakThrough = [false];\n    this.editBreaksThrough = [false];\n  }\n\n  // To update priority alert settings\n  async updatePrioritySettings() {\n    const parameterAlert: any = {};\n    this.priorityAlertSettings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Frequency_UnAck: parseInt(element.Frequency_UnAck),\n        Frequency_Ack: parseInt(element.Frequency_Ack),\n        Percentage_UnAck: parseInt(element.Percentage_UnAck),\n        Percentage_Ack: parseInt(element.Percentage_Ack),\n      };\n    });\n    const payload: any = { ...this.masterData } || {};\n    payload.Setting = payload?.Setting || {};\n    payload.Setting.Common = payload?.Setting?.Common || {};\n    payload.Setting.Common.PhyCommon = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let url = \"alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setPriorityAlertEditSubmit(false);\n        this.hidePriorityAlertEdit();\n      }\n    } catch (error) { }\n  }\n\n  priorityParamInputChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      Frequency_Ack: \"invalid_alertfreq_ack\",\n      Frequency_UnAck: \"invalid_alertfreq_unack\",\n      Percentage_Ack: \"invalid_alertbreak_ack\",\n      Percentage_UnAck: \"invalid_alertbreak_unack\",\n    };\n    this.updated();\n\n    if (\n      this.priorityAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.priorityAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.priorityAlertSettings[index][key] =\n        this.priorityAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n\n    if (key === \"Frequency_Ack\") {\n      if (\n        this.priorityAlertSettings[index][key] <=\n        this.priorityAlertSettings[index][\"Frequency_UnAck\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Frequency_UnAck\") {\n      if (\n        this.priorityAlertSettings[index][key] >=\n        this.priorityAlertSettings[index][\"Frequency_Ack\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Percentage_Ack\") {\n      if (\n        this.priorityAlertSettings[index][key] <=\n        this.priorityAlertSettings[index][\"Percentage_UnAck\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertbreak_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Percentage_UnAck\") {\n      if (\n        this.priorityAlertSettings[index][key] >=\n        this.priorityAlertSettings[index][\"Percentage_Ack\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertbreak_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.priorityAlertSettings) !== JSON.stringify(this.priorityAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","<ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"priorityAlertSettings\" class=\"head-border fixed-header-relative\">\n  <ng-template lsWidgetName=\"alerts\" let-priorityAlertConfig>\n    <span class=\"mx-3\">\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[priorityAlertConfig.alert.toUpperCase()]\" />\n        <circle *ngIf=\"priorityAlertConfig.alert.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n          [attr.stroke]=\"priorityHexCode[priorityAlertConfig.alert.toUpperCase()]\" stroke-width=\"2\"\n          stroke-dasharray=\"4 4\" />\n      </svg>\n    </span>\n    <span>\n      {{ priorityAlertConfig.alert }}\n    </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freqExtraHeader\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column align-items-center text-center\">\n        {{ \"alert_config_module.acknowledge\" | translate }}\n      </div>\n      <div class=\"d-flex ack-column align-items-center text-center\">\n        {{ \"alert_config_module.unacknowledge\" | translate }}\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freq\" let-priorityAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\" d-flex align-items-center\">\n          <div *ngIf=\"!editPriority[priorityAlertConfig?.index]\"\n            class=\"text-value align-items-center\">\n\n            {{ priorityAlertConfig.Frequency_Ack }} {{ (priorityAlertConfig.unit !== 'Mins') ?\n            ('alert_config_module.mins' | translate) : priorityAlertConfig.unit}}\n          </div>\n          <div *ngIf=\"editPriority[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly type=\"number\" matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Frequency_Ack',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Frequency_Ack'\n                ]\n              \" [max]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MAX'][\n                  'Frequency_Ack'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Frequency_Ack\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <span *ngIf=\"!editPriority[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityACK')\">\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </span>\n              <span *ngIf=\"editPriority[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityACK')\">\n                  <mat-icon>done</mat-icon>\n                </button>\n              </span>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\" d-flex align-items-center\">\n          <div *ngIf=\"!editPrio[priorityAlertConfig?.index]\" class=\"text-value align-items-center\">\n\n            {{ priorityAlertConfig.Frequency_UnAck }} {{ (priorityAlertConfig.unit !== 'Mins') ?\n            ('alert_config_module.mins' | translate) : priorityAlertConfig.unit }}\n          </div>\n          <div *ngIf=\"editPrio[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" type=\"number\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Frequency_UnAck',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Frequency_UnAck'\n                ]\n              \" [max]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MAX'][\n                  'Frequency_UnAck'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Frequency_UnAck\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <span *ngIf=\"!editPrio[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityNACK')\">\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </span>\n              <span *ngIf=\"editPrio[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityNACK')\">\n                  <mat-icon>done</mat-icon>\n                </button>\n              </span>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_breakthroughExtraHeader\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column align-items-center justify-content-center\">\n        {{ \"alert_config_module.acknowledge\" | translate }}\n      </div>\n      <div class=\"d-flex ack-column align-items-center justify-content-center\">\n        {{ \"alert_config_module.unacknowledge\" | translate }}\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_breakthrough\" let-priorityAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\" d-flex align-items-center\">\n          <div *ngIf=\"!editBreakThrough[priorityAlertConfig?.index]\"\n            class=\"text-value align-items-center\">\n            <span>&#177; </span>\n            {{ priorityAlertConfig.Percentage_Ack }} {{ priorityAlertConfig.percentage }}\n          </div>\n          <div *ngIf=\"editBreakThrough[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" type=\"number\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Percentage_Ack',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Percentage_Ack'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Percentage_Ack\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <button *ngIf=\"!editBreakThrough[priorityAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughACK')\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button *ngIf=\"editBreakThrough[priorityAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughACK')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\"d-flex align-items-center\">\n          <div *ngIf=\"!editBreaksThrough[priorityAlertConfig?.index]\"\n            class=\"text-value align-items-center\">\n            <span>&#177; </span>\n            {{ priorityAlertConfig.Percentage_UnAck }} {{ priorityAlertConfig.percentage }}\n          </div>\n          <div *ngIf=\"editBreaksThrough[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" type=\"number\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Percentage_UnAck',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Percentage_UnAck'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Percentage_UnAck\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughNACK')\"\n                *ngIf=\"!editBreaksThrough[priorityAlertConfig?.index]\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button *ngIf=\"editBreaksThrough[priorityAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughNACK')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport {\n  AlertConfiguration,\n  AlertDestinationConfiguration,\n  ArrhythmiaAlertConfiguration,\n  ClinicalFacilityContactList,\n} from \"../store/alert-configuration.models\";\n\n@Injectable()\nexport class AlertConfigurationsService {\n  constructor(private http: HttpClient) { }\n\n  // Root alert settings fetch api\n  getAlertSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertConfiguration>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  // Root destination alert fetch api\n  getAlertDestinationSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertDestinationConfiguration>(\n        environment.dataApiUrl + url,\n        { headers: authHeaders }\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  getGroupAlertSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertConfiguration>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  getArrhythmiaGroupAlertSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<ArrhythmiaAlertConfiguration>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  getGroupAlertDestinationSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertDestinationConfiguration>(\n        environment.dataApiUrl + url,\n        { headers: authHeaders }\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  getClinicalFacilityContacts(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<ClinicalFacilityContactList>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(error: any) {\n    let errorMessage = \"\";\n    // Client-side error.\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n      // Server-side error.\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n\n  checkForSpecialCharacters(event: ClipboardEvent){\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[0-9]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n\n  getParameterMinMax() {\n    let userPreferenceUnit = JSON.parse(sessionStorage.getItem('userPreference'))?.units;\n    return {\n      HR: {\n        MIN: {\n          HighThr: 60,\n          CondDelay: 5,\n          LowThr: 30,\n        },\n        MAX: {\n          HighThr: 250,\n          CondDelay: 300,\n          LowThr: 160,\n        },\n      },\n      RR: {\n        MIN: {\n          HighThr: 10,\n          CondDelay: 30,\n          LowThr: 6,\n        },\n        MAX: {\n          HighThr: 60,\n          CondDelay: 300,\n          LowThr: 55,\n        },\n      },\n      SPO2: {\n        MIN: {\n          HighThr: 95,\n          CondDelay: 60,\n          LowThr: 70,\n        },\n        MAX: {\n          HighThr: 100,\n          CondDelay: 300,\n          LowThr: 95,\n        },\n      },\n      BODYTEMP: {\n        MIN: {\n          HighThr: userPreferenceUnit === 'SI'? 37 : 98.6,\n          CondDelay: 20,\n          LowThr: userPreferenceUnit === 'SI'? 32: 89.6,\n        },\n        MAX: {\n          HighThr: userPreferenceUnit === 'SI'? 43 : 109.4,\n          CondDelay: 300,\n          LowThr: userPreferenceUnit === 'SI'? 36 : 96.8,\n        },\n      },\n      BPSYS: {\n        MIN: {\n          HighThr: 75,\n          CondDelay: 1,\n          LowThr: 35,\n        },\n        MAX: {\n          HighThr: 240,\n          LowThr: 150,\n          CondDelay: 300,\n        },\n      },\n      BPDIA: {\n        MIN: {\n          HighThr: 50,\n          LowThr: 15,\n          CondDelay: 1,\n        },\n        MAX: {\n          HighThr: 180,\n          LowThr: 50,\n          CondDelay: 300,\n        },\n      },\n      BP: {\n        MIN: {\n          HighThr: 70,\n          LowThr: 25,\n          CondDelay: 1,\n        },\n        MAX: {\n          HighThr: 200,\n          LowThr: 125,\n          CondDelay: 300,\n        },\n      },\n      PR: {\n        MIN: {\n          HighThr: 60,\n          CondDelay: 20,\n          LowThr: 30,\n        },\n        MAX: {\n          HighThr: 250,\n          CondDelay: 300,\n          LowThr: 120,\n        },\n      },\n      SKINTEMP: {\n        MIN: {\n          HighThr: userPreferenceUnit === 'SI'? 20: 68,\n          CondDelay: 20,\n          LowThr: userPreferenceUnit === 'SI'? 15: 59,\n        },\n        MAX: {\n          HighThr: userPreferenceUnit=== 'SI'? 45: 113,\n          CondDelay: 300,\n          LowThr: userPreferenceUnit === 'SI'? 34.4: 94,\n        },\n      },\n      POSTURE_ALERT: {\n        MIN: {\n          HighThr: '',\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: '',\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SINUS_BRADYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 1,\n          LowThr: 30,\n        },\n        MAX: {\n          HighThr: 50,\n          CondDelay: 168,\n          LowThr: 60,\n        },\n      },\n      SINUS_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: 100,\n        },\n        MAX: {\n          HighThr: 100,\n          CondDelay: 168,\n          LowThr: 250,\n        },\n      },\n      VENTRICULAR_FLUTTER: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      VENTRICULAR_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      IDIOVENTRICULAR_RYTHM: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SUPRAVENTRICULAR_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      AFIB_FLUTTER: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      JUNCTIONAL_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      FIRST_DEGREE_AV_BLOCK: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      PAUSE: {\n        MIN: {\n          HighThr: 20,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      V_COUPLET: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      V_BIGEMINY: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      V_TRIGEMINY: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      PVC_RATE: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: 1,\n        },\n        MAX: {\n          HighThr: 10,\n          CondDelay: 168,\n          LowThr: 99,\n        },\n      },\n      PAC_RATE: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: 1,\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: 99,\n        },\n      },\n      PVC: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      PAC: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr:20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n    }\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport { AlertConfigurationActionTypes } from \"./alert-configuration.types\";\nimport {\n  AlertConfiguration,\n  ArrhythmiaAlertConfiguration,\n  AlertConfigurationData,\n  AlertDestinationConfiguration,\n  ClinicalFacilityContactList,\n} from \"./alert-configuration.models\";\n\nexport class loadAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class loadAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class updateAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { data: AlertConfigurationData }) {}\n}\nexport class updateAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class resetAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class resetAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class resetAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class loadDestinationAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertDestinationConfiguration }) {}\n}\nexport class loadDestinationAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadDestinationAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadGroupAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class loadGroupAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadGroupAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n// Arrhythmia group alert\nexport class loadArrhythmiaAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class loadArrhythmiaAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadArrhythmiaAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: ArrhythmiaAlertConfiguration }) {}\n}\n//----\nexport class loadGroupDestinationAlertConfigurationSuccessAction\n  implements Action\n{\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertDestinationConfiguration }) {}\n}\nexport class loadGroupDestinationAlertConfigurationFailureAction\n  implements Action\n{\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadGroupDestinationAlertConfigurationRequestAction\n  implements Action\n{\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class setGroupAlertId implements Action {\n  readonly type = AlertConfigurationActionTypes.SET_GROUP_ALERT_ID;\n  constructor(public payload: { groupId: string }) {}\n}\n\nexport class loadClinicalFacilityContactsRequestAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadClinicalFacilityContactsFailureAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadClinicalFacilityContactsSuccessAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS;\n  constructor(public payload: { data: ClinicalFacilityContactList }) {}\n}\n\nexport type AlertConfigurationActions =\n  | loadAlertConfigurationFailureAction\n  | loadAlertConfigurationSuccessAction\n  | loadAlertConfigurationRequestAction\n  | updateAlertConfigurationFailureAction\n  | updateAlertConfigurationSuccessAction\n  | updateAlertConfigurationRequestAction\n  | resetAlertConfigurationFailureAction\n  | resetAlertConfigurationSuccessAction\n  | resetAlertConfigurationRequestAction\n  | loadDestinationAlertConfigurationSuccessAction\n  | loadDestinationAlertConfigurationFailureAction\n  | loadDestinationAlertConfigurationRequestAction\n  | loadGroupDestinationAlertConfigurationSuccessAction\n  | loadGroupDestinationAlertConfigurationFailureAction\n  | loadGroupDestinationAlertConfigurationRequestAction\n  | loadGroupAlertConfigurationRequestAction\n  | loadGroupAlertConfigurationFailureAction\n  | loadGroupAlertConfigurationSuccessAction\n  | loadArrhythmiaAlertConfigurationRequestAction\n  | loadArrhythmiaAlertConfigurationFailureAction\n  | loadArrhythmiaAlertConfigurationSuccessAction\n  | setGroupAlertId\n  | loadClinicalFacilityContactsRequestAction\n  | loadClinicalFacilityContactsFailureAction\n  | loadClinicalFacilityContactsSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { Observable, of as observableOf } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap } from \"rxjs/operators\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { AlertConfigurationActionTypes } from \"./alert-configuration.types\";\nimport {\n  loadAlertConfigurationRequestAction,\n  loadAlertConfigurationSuccessAction,\n  loadAlertConfigurationFailureAction,\n  loadDestinationAlertConfigurationFailureAction,\n  loadDestinationAlertConfigurationRequestAction,\n  loadDestinationAlertConfigurationSuccessAction,\n  loadGroupDestinationAlertConfigurationRequestAction,\n  loadGroupDestinationAlertConfigurationFailureAction,\n  loadGroupDestinationAlertConfigurationSuccessAction,\n  loadGroupAlertConfigurationFailureAction,\n  loadGroupAlertConfigurationRequestAction,\n  loadGroupAlertConfigurationSuccessAction,\n  loadClinicalFacilityContactsRequestAction,\n  loadClinicalFacilityContactsSuccessAction,\n  loadClinicalFacilityContactsFailureAction,\n  loadArrhythmiaAlertConfigurationRequestAction,\n  loadArrhythmiaAlertConfigurationSuccessAction,\n  loadArrhythmiaAlertConfigurationFailureAction,\n} from \"./alert-configuration.actions\";\n\n@Injectable()\nexport class AlertConfigurationEffects {\n  constructor(\n    private alertConfigurationService: AlertConfigurationsService,\n    private actions$: Actions\n  ) {}\n\n  @Effect()\n  loadAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService.getAlertSettings(action.payload.url).pipe(\n        map((data) => new loadAlertConfigurationSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new loadAlertConfigurationFailureAction({ error }))\n        )\n      )\n    )\n  );\n\n  @Effect()\n  loadGroupAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadGroupAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getGroupAlertSettings(action.payload.url)\n        .pipe(\n          map((data) => new loadGroupAlertConfigurationSuccessAction({ data })),\n          catchError((error) =>\n            observableOf(\n              new loadGroupAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadArrhythmiaGroupAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadArrhythmiaAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getArrhythmiaGroupAlertSettings(action.payload.url)\n        .pipe(\n          map((data) => new loadArrhythmiaAlertConfigurationSuccessAction({ data })),\n          catchError((error) =>\n            observableOf(\n              new loadArrhythmiaAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadDestinationAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadDestinationAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getAlertDestinationSettings(action.payload.url)\n        .pipe(\n          map(\n            (data) =>\n              new loadDestinationAlertConfigurationSuccessAction({ data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new loadDestinationAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadGroupDestinationAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadGroupDestinationAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getGroupAlertDestinationSettings(action.payload.url)\n        .pipe(\n          map(\n            (data) =>\n              new loadGroupDestinationAlertConfigurationSuccessAction({ data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new loadGroupDestinationAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadClinicalFacilityContactsRequestEffect$ = this.actions$.pipe(\n    ofType<loadClinicalFacilityContactsRequestAction>(\n      AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getClinicalFacilityContacts(action.payload.url)\n        .pipe(\n          map(\n            (data) => new loadClinicalFacilityContactsSuccessAction({ data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new loadClinicalFacilityContactsFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n}\n","export interface AlertConfiguration {\n  status: string;\n  message: string;\n  data: AlertConfigurationData;\n}\n\nexport interface ArrhythmiaAlertConfiguration {\n  status: string;\n  message: string;\n  data: ArrhythmiaAlertConfigurationData;\n}\n\nexport interface ArrhythmiaAlertConfigurationData {\n  ArrhythmiaId: string;\n  Setting:ArrhythmiaSettings;\n  FacilityId: string;\n  FacilityName: string;\n  PatientId: string;\n  GroupId: string;\n  IsForPatient: boolean;\n  createdDateTime: string;\n  modifiedDateTime: string;\n}\n\nexport interface ArrhythmiaSettings {\n  SINUS_BRADYCARDIA:ArrhythmiaParameter;\n  SINUS_TACHYCARDIA:ArrhythmiaParameter;\n  VENTRICULAR_FLUTTER:ArrhythmiaParameter;\n  VENTRICULAR_TACHYCARDIA:ArrhythmiaParameter;\n  IDIOVENTRICULAR_RYTHM:ArrhythmiaParameter;\n  SUPRAVENTRICULAR_TACHYCARDIA:ArrhythmiaParameter;\n  AFIB_FLUTTER:ArrhythmiaParameter;\n  JUNCTIONAL_TACHYCARDIA:ArrhythmiaParameter;\n  FIRST_DEGREE_AV_BLOCK:ArrhythmiaParameter;\n  SECOND_DEGREE_AV_BLOCK_TYPE_I:ArrhythmiaParameter;\n  SECOND_DEGREE_AV_BLOCK_TYPE_II:ArrhythmiaParameter;\n  PAUSE:ArrhythmiaParameter;\n  V_COUPLET:ArrhythmiaParameter;\n  V_BIGEMINY:ArrhythmiaParameter;\n  V_TRIGEMINY:ArrhythmiaParameter;\n  PVC_RATE:ArrhythmiaParameter;\n  PAC_RATE:ArrhythmiaParameter;\n  PVC:ArrhythmiaParameter;\n  PAC:ArrhythmiaParameter;\n}\n\nexport interface ArrhythmiaParameter {\n  Enabled: boolean;\n  Priority: string;\n  LowThr: number;\n  HighThr: number;\n  CondDelay: number;\n  HighUnit: string;\n  LowUnit: string;\n  Thr: number;\n}\nexport interface AlertDestinationConfiguration {\n  status: string;\n  message: string;\n  data: AlertDestinationConfigData;\n}\n\nexport interface ClinicalFacilityContactList {\n  status: string;\n  message: string;\n  data: ClinicalFacilityContactListData;\n}\n\nexport interface AlertConfigurationData {\n  AlertId: string;\n  FacilityId: string;\n  FacilityName: string;\n  GroupId: string;\n  IsForPatient: boolean;\n  PatientId: string;\n  Setting: Settings;\n  auditloginfotype: AuditLogInfoType;\n}\n\nexport interface AuditLogInfoType {\n  CreatedBy: string;\n  CreatedById: string;\n  ModifiedBy: string;\n  ModifiedById: string;\n  CreatedDateTime: string;\n  ModifiedDateTime: string;\n}\n\nexport interface Settings {\n  Param: ParameterSettings;\n  Common: CommonSettings;\n}\n\nexport interface ParameterSettings {\n  PhyParam: PhyParameterSettings;\n  TechParam: TechnicalParameterSettings;\n}\n\nexport interface CommonSettings {\n  PhyCommon: PhyCommonSettings;\n  TechCommon: TechnicalCommonSettings;\n}\n\nexport interface PhyParameterSettings {\n  HR: PhyParameter;\n  RR: PhyParameter;\n  PR: PhyParameter;\n  SPO2: PhyParameter;\n  BPSYS: PhyParameter;\n  BPDIA: PhyParameter;\n  BP: PhyParameter;\n  SKINTEMP: PhyParameter;\n  BODYTEMP: PhyParameter;\n  CardiacStandStill: PhyParameter;\n}\n\nexport interface TechnicalParameterSettings {\n  LEAD_OFF: TechnicalParameter;\n  BIOSENSOR_DISCONNECTED: TechnicalParameter;\n  RELAY_DISCONNECTED: TechnicalParameter;\n  LOW_BATTERY: TechnicalParameter;\n  //TEMPERATURE_CALIBRATION: TechnicalParameter;\n  COMPUTE_HR_ERROR: TechnicalParameter;\n  COMPUTE_RR_ERROR: TechnicalParameter;\n  COMPUTE_SPO2_ERROR: TechnicalParameter;\n  COMPUTE_BODY_TEMP_ERROR: TechnicalParameter;\n}\n\nexport interface PhyCommonSettings {\n  HIGH: PhyCommon;\n  MEDIUM: PhyCommon;\n  LOW: PhyCommon;\n}\n\nexport interface TechnicalCommonSettings {\n  LEAD_OFF: TechnicalCommon;\n  BIOSENSOR_DISCONNECTED: TechnicalCommon;\n  RELAY_DISCONNECTED: TechnicalCommon;\n  LOW_BATTERY: TechnicalCommon;\n  //TEMPERATURE_CALIBRATION: TechnicalCommon;\n  COMPUTE_HR_ERROR: TechnicalCommon;\n  COMPUTE_RR_ERROR: TechnicalCommon;\n  COMPUTE_SPO2_ERROR: TechnicalCommon;\n  COMPUTE_BODY_TEMP_ERROR: TechnicalCommon;\n}\n\nexport interface PhyParameter {\n  Enabled: boolean;\n  Priority: string;\n  LowThr: number;\n  HighThr: number;\n  CondDelay: number;\n}\n\nexport interface TechnicalParameter {\n  Enabled: boolean;\n}\n\nexport interface PhyCommon {\n  Frequency_UnAck: number;\n  Frequency_Ack: number;\n  Percentage_UnAck: number;\n  Percentage_Ack: number;\n}\n\nexport interface TechnicalCommon {\n  CondDelay: number;\n  Frequency_UnAck: number;\n  Frequency_Ack: number;\n}\n\n// Root Alert Destination Settings Model\nexport interface AlertDestinationConfigData {\n  AlertDestId?: string;\n  FacilityId?: string;\n  GroupId?: string;\n  PatientId?: string;\n  Setting?: AlertDestSettingType;\n  SettingTech?: AlertDestSettingType;\n  auditloginfotype?: AuditLogInfoType;\n  NotificationMessage?: string;\n  UserData;\n}\n\nexport interface AlertDestSettingType {\n  AlertSMS: string;\n  AlertWhatsApp: string;\n  AlertEmail: string;\n  AlertCaregiverApp: string;\n  AlertSMSEnabled: boolean;\n  AlertWhatsAppEnabled: boolean;\n  AlertEmailEnabled: boolean;\n  AlertCaregiverAppEnabled: boolean;\n}\n\nexport interface ClinicalFacilityContactListData\n  extends Array<ClinicalFacilityContactListItem> {}\n\ninterface ClinicalFacilityContactListItem {\n  displayName: string;\n  userId: string;\n}\n","import { AlertConfigurationActions } from \"./alert-configuration.actions\";\nimport {\n  AlertConfigurationData,\n  AlertDestinationConfigData,\n  ClinicalFacilityContactListData,ArrhythmiaAlertConfigurationData,\n} from \"./alert-configuration.models\";\nimport { AlertConfigurationActionTypes } from \"./alert-configuration.types\";\n\nexport interface AlertConfigurationState {\n  alert_configurations: AlertConfigurationData;\n  arrhythmiaConfigurations: ArrhythmiaAlertConfigurationData;\n  error: string;\n  status: string;\n  message: string;\n  loaded: boolean\n  alert_destinations: AlertDestinationConfigData;\n  groupIdSelected: string;\n  contacts: ClinicalFacilityContactListData;\n}\n\nexport const initialAlertConfigurationState: AlertConfigurationState = {\n  arrhythmiaConfigurations: {\n    ArrhythmiaId: \"\",\n    Setting: {\n      SINUS_BRADYCARDIA: {\n        Enabled: true,\n        Priority: \"HIGH\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SINUS_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    IDIOVENTRICULAR_RYTHM: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SUPRAVENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    AFIB_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    JUNCTIONAL_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    FIRST_DEGREE_AV_BLOCK: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n      Enabled: true,\n      Priority: \"\",\n      LowThr: 0,\n      HighThr: 0,\n      CondDelay: 0,\n      HighUnit: \"\",\n      LowUnit: \"\",\n      Thr: 0,\n  },\n    PAUSE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_COUPLET: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_BIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_TRIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    },\n    FacilityId: \"\",\n    FacilityName: \"\",\n    PatientId: \"\",\n    GroupId: \"\",\n    IsForPatient: true,\n    createdDateTime: \"\",\n    modifiedDateTime: \"\",\n  },\n  alert_configurations: {\n    AlertId: \"\",\n    FacilityId: \"\",\n    FacilityName: \"\",\n    GroupId: \"\",\n    IsForPatient: false,\n    PatientId: \"\",\n    Setting: {\n      Param: {\n        PhyParam: {\n          HR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          RR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          PR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SPO2: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPSYS: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPDIA: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SKINTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BODYTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          CardiacStandStill: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n        },\n        TechParam: {\n          LEAD_OFF: {\n            Enabled: false,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            Enabled: false,\n          },\n          RELAY_DISCONNECTED: {\n            Enabled: false,\n          },\n          LOW_BATTERY: {\n            Enabled: false,\n          },\n          /* TEMPERATURE_CALIBRATION:{\n            Enabled: false,\n          }, */\n          COMPUTE_HR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_RR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_SPO2_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            Enabled: false,\n          },\n        },\n      },\n      Common: {\n        PhyCommon: {\n          HIGH: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          MEDIUM: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          LOW: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n        },\n        TechCommon: {\n          LEAD_OFF: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          RELAY_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          LOW_BATTERY: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          /* TEMPERATURE_CALIBRATION:{\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          }, */\n          COMPUTE_HR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_RR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_SPO2_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n        },\n      },\n    },\n    auditloginfotype: {\n      CreatedBy: \"\",\n      CreatedById: \"\",\n      ModifiedBy: \"\",\n      ModifiedById: \"\",\n      CreatedDateTime: \"\",\n      ModifiedDateTime: \"\",\n    },\n  },\n  error: \"\",\n  status: \"\",\n  message: \"\",\n  loaded: false,\n  alert_destinations: {\n    AlertDestId: \"\",\n    FacilityId: \"\",\n    GroupId: \"\",\n    PatientId: \"\",\n    Setting: {\n      AlertSMS: \"\",\n      AlertWhatsApp: \"\",\n      AlertEmail: \"\",\n      AlertCaregiverApp: \"\",\n      AlertSMSEnabled: false,\n      AlertWhatsAppEnabled: false,\n      AlertEmailEnabled: false,\n      AlertCaregiverAppEnabled: false,\n    },\n    SettingTech: {\n      AlertSMS: \"\",\n      AlertWhatsApp: \"\",\n      AlertEmail: \"\",\n      AlertCaregiverApp: \"\",\n      AlertSMSEnabled: false,\n      AlertWhatsAppEnabled: false,\n      AlertEmailEnabled: false,\n      AlertCaregiverAppEnabled: false,\n    },\n    UserData: [],\n    auditloginfotype: {\n      CreatedBy: \"\",\n      CreatedById: \"\",\n      ModifiedBy: \"\",\n      ModifiedById: \"\",\n      CreatedDateTime: \"\",\n      ModifiedDateTime: \"\",\n    },\n    NotificationMessage: \"\",\n  },\n  groupIdSelected: null,\n  contacts: [],\n};\n\nexport const alertConfigurationKey = \"alertConfiguration\";\n\nexport function AlertConfigurationReducer(\n  state: AlertConfigurationState = initialAlertConfigurationState,\n  action: AlertConfigurationActions\n) {\n  switch (action.type) {\n    case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_configurations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_destinations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_destinations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_configurations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        arrhythmiaConfigurations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.SET_GROUP_ALERT_ID: {\n      return {\n        ...state,\n        groupIdSelected: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS: {\n      return {\n        ...state,\n        contacts: action.payload.data.data,\n      };\n    }\n    case AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\n\nimport {\n  AlertConfigurationState,\n  alertConfigurationKey,\n} from \"./alert-configuration.reducer\";\n\nconst getAlertConfigurationsState =\n  createFeatureSelector<AlertConfigurationState>(alertConfigurationKey);\n\nexport const getAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_configurations\n);\n\nexport const getArrhythmiaAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.arrhythmiaConfigurations\n);\n\nexport const getDestinationAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_destinations\n);\n\nexport const getAlertConfigurationError = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.error\n);\nexport const getAlertConfigurationStatus = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.status\n);\nexport const getAlertConfigurationMessage = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.message\n);\n\nexport const getAlertGroupId = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.groupIdSelected\n);\n\nexport const getClinicalFacilityContacts = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.contacts\n);\nexport const getLoaderStatus = createSelector(\n    getAlertConfigurationsState,\n    (state) => state?.loaded\n);\n","export enum AlertConfigurationActionTypes {\n  LOAD_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Alert Configuration Request\",\n  LOAD_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Alert Configuration Failure\",\n  LOAD_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Alert Configuration Success\",\n\n  UPDATE_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Update Alert Configuration Request\",\n  UPDATE_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Update Alert Configuration Failure\",\n  UPDATE_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Update Alert Configuration Success\",\n\n  RESET_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Reset Alert Configuration Request\",\n  RESET_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Reset Alert Configuration Failure\",\n  RESET_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Reset Alert Configuration Success\",\n\n  LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Success\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Request\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Failure\",\n\n  LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Group Destination Alert Configuration Success\",\n  LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Group Destination Alert Configuration Request\",\n  LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Group Destination Alert Configuration Failure\",\n\n  LOAD_GROUP_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Group Alert Configuration Request\",\n  LOAD_GROUP_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Group Alert Configuration Failure\",\n  LOAD_GROUP_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Group Alert Configuration Success\",\n\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST = \"[ARRHYTHMIAALERTSCONFIGURATION] Load Arrhythmia Alert Configuration Request\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE = \"[ARRHYTHMIAALERTSCONFIGURATION] Load Arrhythmia Alert Configuration Failure\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS = \"[ARRHYTHMIAALERTSCONFIGURATION] Load Arrhythmia Alert Configuration Success\",\n\n  SET_GROUP_ALERT_ID = \"[ALERTSCONFIGURATION] Set Group Alert Id\",\n\n  CF_CONATCT_LIST_REQUEST = \"[ALERTSCONFIGURATION] CF Contact list Request\",\n  CF_CONATCT_LIST_FAILURE = \"[ALERTSCONFIGURATION] CF Contact list Failure\",\n  CF_CONATCT_LIST_SUCCESS = \"[ALERTSCONFIGURATION] CF Contact list Success\",\n}\n","import * as AlertConfigurationStoreActions from \"./alert-configuration.actions\";\nimport * as AlertConfigurationStoreSelectors from \"./alert-configuration.selector\";\nimport * as AlertConfigurationStoreState from \"./alert-configuration.reducer\";\nimport * as AlertConfigurationModels from \"./alert-configuration.models\";\nimport * as AlertConfigurationActionTypes from \"./alert-configuration.types\";\n\nexport {\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n  AlertConfigurationModels,\n  AlertConfigurationActionTypes,\n};\n","import {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n  OnDestroy,\n} from \"@angular/core\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { Subscription, Observable } from \"rxjs\";\nimport {\n  uiAccessRoles,\n  technicalAlertItems,\n  isAllowedRole,\n  alertConfigMinMaxValues,\n} from \"src/app/utils/helpers\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { CommonService } from \"@services/common.service\";\nimport { environment } from \"src/environments/environment\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-technical-alerts\",\n  templateUrl: \"./technical-alerts.component.html\",\n  styleUrls: [\"./technical-alerts.component.scss\"],\n})\nexport class TechnicalAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  loading = false;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n    showExtraHeader: true,\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width:60px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 250px\"\n    },\n    {\n      id: \"alert_freq\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-end\"],\n      //style: \"width: 360px;\",\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      //style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 20px\"\n    },\n  ];\n  constructor(\n    private userPreference: UserPreferenceService,\n    private commonService: CommonService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    private snackbar: SnackbarService,\n    public alertService : AlertConfigurationsService\n  ) { }\n\n  editAlertFrequency = [false];\n  editAlertFrequencyUnAck = [false];\n  editDelaytime = [false];\n\n  roles: string[];\n  technicalAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_TECHNICAL;\n  isEditAccess: boolean = false;\n\n  technicalAlert = technicalAlertItems;\n  masterData: any = {};\n  technicalAlertSettings: any = [];\n  technicalAlertSettingsCopy: any = [];\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  technicalAlertMinMax = alertConfigMinMaxValues.technicalAlert;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  ngOnInit() {\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setTechnicalAlertEditSubmit(false);\n      this.hideTechnicalAlertEdit();\n      this.masterData = { ...data };\n      const alerts = [];\n      this.technicalAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any; units: any }, i) => {\n          const settings = data?.Setting?.Param.TechParam[element.key];\n          if(settings) {\n            alerts.push({\n              ...settings,\n              ...this.masterData?.Setting?.Common?.TechCommon[element.key],\n              alert: element.alerts,\n              unit: element.unit,\n              units: element.units,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      this.technicalAlertSettings = alerts;\n      this.technicalAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n\n    if (isAllowedRole(this.technicalAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.technicalAlertSettings = JSON.parse(\n            JSON.stringify(this.technicalAlertSettingsCopy)\n          );\n          this.hideTechnicalAlertEdit();\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateTechnicalSettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"alertFrequencyACK\":\n        this.editAlertFrequency[index] = !this.editAlertFrequency[index];\n        break;\n      case \"alertFrequencyNACK\":\n        this.editAlertFrequencyUnAck[index] =\n          !this.editAlertFrequencyUnAck[index];\n        break;\n      case \"delay\":\n        this.editDelaytime[index] = !this.editDelaytime[index];\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Hide all active edit buttons\n  hideTechnicalAlertEdit() {\n    this.editAlertFrequency = [false];\n    this.editDelaytime = [false];\n    this.editAlertFrequencyUnAck = [false];\n  }\n\n  toggle(i: number) {\n    this.editAlertFrequency[i] = false;\n    this.editDelaytime[i] = false;\n    this.editAlertFrequencyUnAck[i] = false;\n    this.updated();\n  }\n\n  async updateTechnicalSettings() {\n    const technicalParameter: any = {};\n    const technicalCommonParameter: any = {};\n    this.technicalAlertSettings.forEach(\n      (element: {\n        key: string | number;\n        Enabled: any;\n        CondDelay: string;\n        Frequency_Ack: any;\n        Frequency_UnAck: any;\n      }) => {\n        technicalParameter[element.key] = {\n          Enabled: element.Enabled,\n        };\n        technicalCommonParameter[element.key] = {\n          CondDelay: parseInt(element.CondDelay),\n          Frequency_UnAck: parseInt(element.Frequency_UnAck),\n          Frequency_Ack: parseInt(element.Frequency_Ack),\n        };\n      }\n    );\n\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"TechParam\"] = technicalParameter;\n    payload.Setting = payload?.Setting || {};\n    payload.Setting.Common = payload.Setting?.Common || {};\n    payload.Setting.Common.TechCommon = technicalCommonParameter;\n    delete payload[\"auditloginfotype\"];\n    let url = \"alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setTechnicalAlertEditSubmit(false);\n        this.hideTechnicalAlertEdit();\n      }\n    } catch (error) { }\n  }\n\n  // input filed validation\n  technicalParamInputChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      Frequency_Ack: \"invalid_alertfreq_ack\",\n      Frequency_UnAck: \"invalid_alertfreq_unack\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n      this.technicalAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.technicalAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.technicalAlertSettings[index][key] =\n        this.technicalAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\"+keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    if (key === \"Frequency_Ack\") {\n      if (\n        this.technicalAlertSettings[index][key] <=\n        this.technicalAlertSettings[index][\"Frequency_UnAck\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n          this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Frequency_UnAck\") {\n      if (\n        this.technicalAlertSettings[index][key] >=\n        this.technicalAlertSettings[index][\"Frequency_Ack\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n          this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.technicalAlertSettings) !== JSON.stringify(this.technicalAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","<ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"technicalAlertSettings\" class=\"head-border fixed-header-relative\">\n  <ng-template lsWidgetName=\"enabled\" let-config>\n    <span class=\"d-flex align-items-center\">\n    <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n      [disabled]=\"!isEditAccess\">\n    </mat-slide-toggle>\n    </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"alerts\" let-config>\n    {{ config.alert }}\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freqExtraHeader\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center\">\n      <div class=\"d-flex ack-column align-items-center text-start\">\n        {{ \"alert_config_module.acknowledge\" | translate }}\n      </div>\n      <div class=\"d-flex ack-column align-items-center text-start\">\n        {{ \"alert_config_module.unacknowledge\" | translate }}\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freq\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center\">\n      <div class=\"d-flex ack-column text-start align-items-center\">\n        <div class=\"d-flex align-items-center\">\n          <div *ngIf=\"!editAlertFrequency[technicalAlertConfig?.index]\" class=\"text-value align-items-center\">\n            {{ technicalAlertConfig.Frequency_Ack }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins' | translate) : technicalAlertConfig.units }}\n          </div>\n          <div *ngIf=\"editAlertFrequency[technicalAlertConfig?.index] && isEditAccess\">\n            <input autocomplete=\"off\"\n            (keypress)=\"numericsOnly(technicalAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            type=\"number\" matInput class=\"text-input-box py-1\" digitOnly (change)=\"technicalParamInputChanged(\n                  technicalAlertConfig?.index,\n                  'Frequency_Ack',\n                  technicalAlertMinMax[technicalAlertConfig.key]\n                )\" [min]=\"technicalAlertMinMax[technicalAlertConfig.key]['MIN']['Frequency_Ack']\"\n              [max]=\"technicalAlertMinMax[technicalAlertConfig.key]['MAX']['Frequency_Ack']\"\n              [(ngModel)]=\"technicalAlertConfig.Frequency_Ack\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <div class=\"ms-2 edit\">\n              <div *ngIf=\"!editAlertFrequency[technicalAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyACK')\"\n                  [disabled]=\"!technicalAlertConfig.Enabled\">\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </div>\n              <div class=\"align-middle\" *ngIf=\"editAlertFrequency[technicalAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyACK')\">\n                  <mat-icon>done</mat-icon>\n                </button>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"d-flex ack-column justify-content-center align-items-center\">\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <div *ngIf=\"!editAlertFrequencyUnAck[technicalAlertConfig?.index]\" class=\"text-value align-items-center\">\n            {{ technicalAlertConfig.Frequency_UnAck }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins' | translate) : technicalAlertConfig.units }}\n          </div>\n          <div *ngIf=\"editAlertFrequencyUnAck[technicalAlertConfig?.index]\">\n            <input autocomplete=\"off\"\n            (keypress)=\"numericsOnly(technicalAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            matInput class=\"text-input-box py-1\" digitOnly type=\"number\" (change)=\"\n                technicalParamInputChanged(\n                  technicalAlertConfig?.index,\n                  'Frequency_UnAck',\n                  technicalAlertMinMax[technicalAlertConfig.key]\n                )\n              \" [min]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MIN'][\n                  'Frequency_UnAck'\n                ]\n              \" [max]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MAX'][\n                  'Frequency_UnAck'\n                ]\n              \" [(ngModel)]=\"technicalAlertConfig.Frequency_UnAck\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <div class=\"ms-2 edit\">\n              <button *ngIf=\"!editAlertFrequencyUnAck[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyNACK')\"\n                [disabled]=\"!technicalAlertConfig.Enabled\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button *ngIf=\"editAlertFrequencyUnAck[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyNACK')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"delayTime\" let-technicalAlertConfig>\n    <div class=\"d-flex justify-content-around align-items-center\">\n      <div class=\"d-flex ack-column justify-content-center align-items-center\">\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <div *ngIf=\"!editDelaytime[technicalAlertConfig?.index]\" class=\"text-value align-items-center\">\n            {{ technicalAlertConfig.CondDelay }} {{ (technicalAlertConfig.unit !== 'Secs') ? ('alert_config_module.secs' | translate) : technicalAlertConfig.unit }}\n          </div>\n          <div *ngIf=\"editDelaytime[technicalAlertConfig?.index]\">\n            <input autocomplete=\"off\"\n            (keypress)=\"numericsOnly(technicalAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            type=\"number\" matInput class=\"text-input-box py-1\" digitOnly [(ngModel)]=\"technicalAlertConfig.CondDelay\"\n          (change)=\"\n                technicalParamInputChanged(\n                  technicalAlertConfig?.index,\n                  'CondDelay',\n                  technicalAlertMinMax[technicalAlertConfig.key]\n                )\n              \" [min]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MIN'][\n                  'CondDelay'\n                ]\n              \" [max]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MAX'][\n                  'CondDelay'\n                ]\n              \" />\n           </div>\n          <ng-container *ngIf=\"isEditAccess\">\n      <div class=\"ms-2 edit\">\n      <button *ngIf=\"!editDelaytime[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n              class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(technicalAlertConfig?.index, 'delay')\"\n              [disabled]=\"!technicalAlertConfig.Enabled\">\n        <mat-icon>edit</mat-icon>\n      </button>\n      <button *ngIf=\"editDelaytime[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n              class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(technicalAlertConfig?.index, 'delay')\">\n        <mat-icon>done</mat-icon>\n      </button>\n      </div>\n    </ng-container>\n        </div>\n    </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"modified\" let-config>\n    <span *ngIf=\"masterData?.modifiedDateTime\">\n      {{ masterData?.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt  :timeZone }}\n    </span><br />\n    <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n  </ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport {ManageRelaysService} from \"../services/manage-relays.service\";\n\n@Component({\n  selector: \"app-add-relay\",\n  templateUrl: \"./add-relay.component.html\",\n  styleUrls: [\"./add-relay.component.scss\"],\n})\nexport class AddRelayComponent {\n  constructor(\n    private dialogRef: MatDialogRef<MatDialogRef<any>>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public service: ManageRelaysService\n  ) {}\n  location : string = '';\n  submitted = false;\n  groupExists = false;\n  save() {\n    this.submitted = true;\n    if (this.isBlank(this.location)  || !this.locationValid(this.location)) {\n      return;\n    } else {\n      this.dialogRef.close({ data: this.location });\n    }\n  }\n  isBlank(str) {\n    let input = str.replace(/\\s/g, \"\");\n    return (\n      !input ||\n      0 === input.length ||\n      input === \" \" ||\n      input === \"null\" ||\n      input === \"undefined\"\n    );\n  }\n  locationValid(location) {\n    let regex = /^[a-zA-Z0-9]{1}[a-zA-Z0-9-_ ]*$/;\n    let valid = regex.test(location);\n    let loc = location.replace(/\\s/g, \"\");\n    return loc.length > 0 && valid;\n  }\n\n  onPaste(event: ClipboardEvent) {\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[a-zA-Z0-9-_ ]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n}\n","<div id=\"addRelay\">\n<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ \"manage_relays_module.add_relay\" | translate }}\n  </h1>\n  <!--<button mat-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>-->\n</mat-card>\n<mat-dialog-content class=\"py-2 mat-dialog-popup\">\n  <div class=\"dialog-form addRelayForm\">\n    <mat-label class=\"matlabel\"\n    >{{ \"manage_relays_module.location_label\" | translate }}\n      <span class=\"required-star\">* </span>\n  </mat-label>\n    \n    <mat-form-field class=\"formfield-control mt-2\" appearance=\"fill\" >\n<!--      <mat-label>{{-->\n<!--        \"manage_relays_module.location_label\" | translate-->\n<!--      }}</mat-label>-->\n      <input\n        matInput autocomplete=\"off\"\n        maxlength=\"32\"\n        type=\"text\"\n        placeholder=\"Location\"\n        [(ngModel)]=\"location\" #location_ctrl=\"ngModel\"\n        (keypress)=\"service.alphaNumericsOnly($event)\" (paste)=\"onPaste($event)\"\n      />\n    </mat-form-field>\n    <mat-error  *ngIf=\"submitted && !location_ctrl?.value\" class=\"d-block mt-n2 \">\n      {{ \"manage_relays_module.add_location\" | translate }}\n    </mat-error>\n    <mat-error *ngIf=\"!locationValid(location) && location_ctrl.touched && location_ctrl?.value\">\n        {{ \"manage_relays_module.invalid_location\" | translate }}\n    </mat-error>\n  </div>\n</mat-dialog-content>\n<div matDialogActions align=\"right\">\n  <button\n    mat-flat-button\n    mat-dialog-close\n    class=\"fill-btn\"\n    color=\"warn\"\n  >\n    {{ \"manage_users_module.addgroup.cancelbutton\" | translate }}\n  </button>\n  <button\n    mat-flat-button\n    class=\"fill-btn\"\n    (click)=\"save()\"\n    color=\"primary\"\n  >\n    {{ \"manage_relays_module.create_relay\" | translate }}\n  </button>\n</div>\n</div>\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport {Store} from \"@ngrx/store\";\r\nimport {ManageRelaysSelectors, ManageRelaysStoreActions, ManageRelaysStoreState} from \"../store\";\r\nimport {Observable} from \"rxjs\";\r\nimport {SinglePatientRelay} from \"../../../interfaces/manage-relays.interface\";\r\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Sort} from \"@angular/material/sort\";\r\nimport {QueryParams} from \"../../../interfaces/manage-users.interface\";\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {SelectionModel} from \"@angular/cdk/collections\";\r\nimport { UserPreferenceService } from '@services/user-preference.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-care-giver-app',\r\n  templateUrl: './care-giver-app.component.html',\r\n  styleUrls: ['./care-giver-app.component.scss']\r\n})\r\nexport class CareGiverAppComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  constructor(\r\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\r\n    private userPreference: UserPreferenceService\r\n  ) { }\r\n  @Input() searchString: string;\r\n  relayList$: Observable<SinglePatientRelay[]>;\r\n  relayCount$: Observable<number>;\r\n  CGRelayList: SinglePatientRelay[];\r\n  cfId: string;\r\n  careGiverRelayList: SinglePatientRelay[];\r\n  loader = true;\r\n  loaderSubscription: any;\r\n  relayIds = [];\r\n  config: LSTableConfig = {\r\n    id: \"manage_relays_module\",\r\n    rowSelectEnabled: false,\r\n    actions: {\r\n      show: false,\r\n    },\r\n    sort: {\r\n      active: null,\r\n      direction: null,\r\n    },\r\n    page: {\r\n      pageIndex: 0,\r\n      pageSize: 10,\r\n    },\r\n    paginator: {\r\n      hide: false,\r\n      offline: false,\r\n    },\r\n    translate: true,\r\n    translateKey: \"manage_relays_module\",\r\n  }\r\n\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"cgId\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"firstName\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"email\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"createdDateTime\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"lastActive\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n  ];\r\n  timeZone: string;\r\n  readonly timeFmt: string = environment.customization.timeFormat;\r\n  ngOnInit(): void {\r\n    this.timeZone = this.userPreference.getUserTimeZone();\r\n    this.relayIds = [];\r\n    this.relayList$ = this.store$\r\n        .select(ManageRelaysSelectors.getCGRelayList)\r\n        .pipe(\r\n            map((res: any) => {\r\n              return res?.map(r => {\r\n                return {\r\n                  ...r,\r\n                  lastActive: r.lastActive * 1000\r\n                }\r\n              });\r\n            })\r\n        );\r\n    this.relayCount$ = this.store$.select(\r\n        ManageRelaysSelectors.getCGRelayCount\r\n    );\r\n    this.relayCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n    this.loaderSubscription = this.store$\r\n        .select(ManageRelaysSelectors.getLoaderStatus)\r\n        .subscribe((loader) => {\r\n          if (loader) {\r\n            this.loader = false;\r\n          }\r\n        });\r\n    //this.getCGRelayList();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.loader = true;\r\n    if(this.config) this.config.page.pageIndex = 0;\r\n    this.getCGRelayList();\r\n  }\r\n  onSortChange(sort: Sort) {\r\n    // this.loader = true;\r\n    // this.config.page.pageIndex = 0;\r\n    this.config.sort = {\r\n      ...sort,\r\n    };\r\n    this.getCGRelayList();\r\n  }\r\n  isSelected(row, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.relayId).includes(row.relayId);\r\n  }\r\n  getCGRelayList() {\r\n    let url = \"\";\r\n    let param: QueryParams = {\r\n      url: url,\r\n      page: this.config.page.pageIndex + 1,\r\n      size: this.config.page.pageSize,\r\n      sortOrder:\"asc\",\r\n      sortBy: this.config?.sort?.direction? `${this.config?.sort?.active || \"\"}:${\r\n          this.config?.sort?.direction || \"\"\r\n      }`: \"\",\r\n      searchText: this.searchString,\r\n    };\r\n    this.store$.dispatch(\r\n        new ManageRelaysStoreActions.LoadCGRelaysRequestAction({ params: param })\r\n    );\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n        !str ||\r\n        0 === str.length ||\r\n        str === \" \" ||\r\n        str === \"null\" ||\r\n        str === \"undefined\"\r\n    );\r\n  }\r\n  onPage(event: PageEvent) {\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getCGRelayList();\r\n  }\r\n  ngOnDestroy() {\r\n    this.loaderSubscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n\n<div *ngIf=\"!loader\" class=\"bg-thead-color with-tab-table comman-table-users head-border\">\n    <ls-table [config]=\"config\" [columns]=\"columns\" (page)=\"onPage($event)\" (sortChange)=\"onSortChange($event)\" [data]=\"relayList$ | async\" [isSelected]=\"isSelected\" [Id]=\"'relayId'\">\n        <ng-template lsWidgetName=\"cgId\" let-data>\n            <div class=\"mx-1\">{{data.relayId}}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"firstName\" let-data>\n            {{data.firstName}}\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-data>\n            <div class=\"mx-3\">\n                <small class=\"pt-1\">{{ data?.email }}</small><br>\n                <small class=\"pt-1\">{{ data?.phoneNo }}</small>\n            </div>\n        </ng-template>\n\n        <ng-template lsWidgetName=\"biosensorID\" let-row>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"me-2 biosensor-id\">\n                    {{ row.activePatch || \"-\" }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdDateTime\" let-row>\n            {{ row?.createdDateTime | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"fw-bold\">{{ row?.createdDateTime | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"lastActive\" let-row>\n            {{ row?.lastActive | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"fw-bold\">{{ row?.lastActive | date: timeFmt : timeZone }}</span>\n        </ng-template>\n    </ls-table>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromManageRelays from \"./store/manage-relays.reducer\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { ManageRelaysEffects } from \"./store/manage-relays.effects\";\nimport { SinglePatientRelaysComponent } from \"./single-patient-relays/single-patient-relays.component\";\nimport { MultiPatientRelaysComponent } from \"./multi-patient-relays/multi-patient-relays.component\";\nimport { RelayConfigurationComponent } from \"./relay-configuration/relay-configuration.component\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { I18nModule } from \"../../i18n/i18n.module\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { ManageRelaysService } from \"./services/manage-relays.service\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { AddRelayComponent } from \"./add-relay/add-relay.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { PaginatePipe } from \"ngx-pagination\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { LifeSignalsModule } from \"src/app/life-signals/life-signals.module\";\nimport { CareGiverAppComponent } from './care-giver-app/care-giver-app.component';\n\n@NgModule({\n  declarations: [\n    SinglePatientRelaysComponent,\n    MultiPatientRelaysComponent,\n    RelayConfigurationComponent,\n    AddRelayComponent,\n    CareGiverAppComponent,\n  ],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\n      fromManageRelays.manageRelaysFeatureKey,\n      fromManageRelays.ManageRelaysReducer\n    ),\n    EffectsModule.forFeature([ManageRelaysEffects]),\n    MatCheckboxModule,\n    MatInputModule,\n    FormsModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    I18nModule,\n    MatPaginatorModule,\n    SharedModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n\n    MatTableModule,\n\n    LifeSignalsModule,\n  ],\n    exports: [\n        SinglePatientRelaysComponent,\n        MultiPatientRelaysComponent,\n        RelayConfigurationComponent,\n        CareGiverAppComponent,\n    ],\n  providers: [\n    {\n      provide: ManageRelaysService,\n      useClass: ManageRelaysService,\n    },\n  ],\n})\nexport class ManageRelaysModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SendOtpQrComponent } from \"../../../dialogs/manage-relays/send-otp-qr/send-otp-qr.component\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { SinglePatientRelaysComponent } from \"../single-patient-relays/single-patient-relays.component\";\nimport { MultiPatientRelaysComponent } from \"../multi-patient-relays/multi-patient-relays.component\";\nimport { AddRelayComponent } from \"../add-relay/add-relay.component\";\n\n@Component({\n  selector: \"app-manage-relays\",\n  templateUrl: \"./manage-relays.component.html\",\n  styleUrls: [\"./manage-relays.component.scss\"],\n})\nexport class ManageRelaysComponent implements OnInit {\n  @ViewChild(SinglePatientRelaysComponent)\n  private singlePatientRelayComponent: SinglePatientRelaysComponent;\n  @ViewChild(MultiPatientRelaysComponent)\n  private multiPatientRelayComponent: MultiPatientRelaysComponent;\n  selectedTab = \"sprelay\";\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    private autheticationService: AuthenticationService\n  ) {}\n  searchString = \"\";\n  cfId = \"\";\n  roles = [];\n  role = \"\";\n  editAccessSPR = false;\n  editAccessMPR = false;\n  editAccessRelayConfiguration = false;\n  relaySelected: boolean;\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.relaySelected = false;\n    if (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"CFAC\") > -1) {\n      this.role = \"CFA\";\n      this.editAccessSPR = true;\n      this.editAccessMPR = true;\n      this.editAccessRelayConfiguration = true;\n    } else if (this.roles.indexOf(\"SC\") > -1) {\n      this.role = \"SC\";\n      this.editAccessSPR = true;\n    } else {\n      this.role = this.roles[0];\n    }\n    console.log(this.relaySelected);\n  }\n  selectTab(value) {\n    this.searchString = \"\";\n    this.selectedTab = value;\n  }\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n  getDate(timestamp) {\n    let DateString = new Date(timestamp * 1000);\n    let date = DateString.toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n    });\n    let time = DateString.toLocaleTimeString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n    return date + \" / \" + time;\n  }\n  openQrDialog() {\n    const dialogRef = this.dialog.open(SendOtpQrComponent, {\n      width: \"400px\",\n      maxWidth: \"90vw\",\n      height: \"auto\",\n      maxHeight: \"90vh\",\n      panelClass: \"custom-modal-managerelay\",\n      // disableClose: true,\n      backdropClass: \"backdropBackground\",\n    });\n  }\n\n  addRelay() {\n    this.multiPatientRelayComponent.addRelay();\n  }\n  search() {\n    this.searchString = (<HTMLInputElement>(\n      document.getElementById(\"search\")\n    )).value;\n  }\n  clear(){\n    this.searchString = \"\";\n  }\n  deleteRelays() {\n    if (this.selectedTab === \"sprelay\") {\n      this.singlePatientRelayComponent.confirmDelete();\n    } else if (this.selectedTab === \"mprelay\") {\n      this.multiPatientRelayComponent.confirmDelete();\n    }\n  }\n  relaysSelected(event) {\n    this.relaySelected = event;\n  }\n}\n","<ls-page-header type=\"manage_relays\">\n    <ng-container page-actions>\n        <div class=\"d-flex justify-content-end me-4\">\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group\">\n              <button class=\"me-2\" mat-flat-button color=\"primary\" *ngIf=\"selectedTab === 'sprelay'\" (click)=\"openQrDialog()\">\n                {{ \"manage_relays_module.send_otp_qr\" | translate }}\n              </button>\n              <button class=\"me-2\" mat-flat-button  color=\"primary\" *ngIf=\"selectedTab === 'mprelay' && editAccessMPR\" (click)=\"addRelay()\">\n                {{\"manage_relays_module.add_relay\" | translate}}\n              </button>\n              <button class=\"delete-btn\" mat-flat-button [disabled]=\"!relaySelected\" color=\"primary\" *ngIf=\"(selectedTab === 'sprelay' && editAccessSPR) || (selectedTab === 'mprelay' && editAccessMPR)\" (click)=\"deleteRelays()\">\n                {{ \"manage_relays_module.delete\" | translate }}\n              </button>\n            </div>\n            <div class=\"d-block d-lg-none my-2 \">\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\" *ngIf=\"selectedTab === 'sprelay' ||(selectedTab === 'mprelay' && editAccessMPR)\">\n                <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\n                  <button mat-menu-item class=\"me-2\" color=\"primary\" *ngIf=\"selectedTab === 'sprelay'\" (click)=\"openQrDialog()\">\n                    {{ \"manage_relays_module.send_otp_qr\" | translate }}\n                  </button>\n                  <button class=\"me-2\" mat-menu-item  color=\"primary\" *ngIf=\"selectedTab === 'mprelay' && editAccessMPR\" (click)=\"addRelay()\">\n                    {{\"manage_relays_module.add_relay\" | translate}}\n                  </button>\n                  <button mat-menu-item [disabled]=\"!relaySelected\" color=\"primary\" *ngIf=\"(selectedTab === 'sprelay' && editAccessSPR) || (selectedTab === 'mprelay' && editAccessMPR)\" (click)=\"deleteRelays()\">\n                    {{ \"manage_relays_module.delete\" | translate }}\n                  </button>\n                </mat-menu>\n            </div>\n        </div>\n    </ng-container>\n</ls-page-header>\n<div class=\"sc-el-1 mt-2 px-3 custom-position-pagination\">\n    <div class=\"row mt-3 mb-3 mx-n1 \">\n        <div class=\"col-sm-7 px-1\">\n            <mat-form-field class=\"search-form-field\" appearance=\"fill\" *ngIf=\"selectedTab !== 'configurations'\">\n                <mat-label>{{ \"manage_users_module.search\" | translate }} </mat-label>\n                <input matInput id=\"search\" (keyup.enter)=\"search()\" [(ngModel)]=\"searchString\" autocomplete=\"off\"/>\n                <mat-icon  class=\"clear-icon\" *ngIf=\"searchString\" (click)=\"clear()\">close\n                </mat-icon>\n                <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-5 px-1 d-flex justify-content-sm-end\">\n\n        </div>\n    </div>\n    <div class=\"my-0 button-card-area\">\n        <button mat-button [ngClass]=\"\n          selectedTab === 'sprelay' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('sprelay')\">\n      {{ \"manage_relays_module.single_patient_relay\" | translate }}\n    </button>\n        <button mat-button [ngClass]=\"\n          selectedTab === 'mprelay' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('mprelay')\">\n      {{ \"manage_relays_module.multi_patient_relay\" | translate }}\n    </button>\n        <button mat-button [ngClass]=\"\n          selectedTab === 'configurations' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('configurations')\">\n      {{ \"manage_relays_module.relay_configurations\" | translate }}\n    </button>\n        <button mat-button [ngClass]=\"\n          selectedTab === 'careGiverApp' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('careGiverApp')\">\n      {{ \"manage_relays_module.caregiver_app\" | translate }}\n    </button>\n    </div>\n    <div class=\"table-container table-responsive-md px-2\">\n        <app-single-patient-relays *ngIf=\"selectedTab === 'sprelay'\" (selected)=\"relaysSelected($event)\" [searchString]=\"searchString\" [editAccess]=\"editAccessSPR\"></app-single-patient-relays>\n        <app-multi-patient-relays *ngIf=\"selectedTab === 'mprelay'\" (selected)=\"relaysSelected($event)\" [searchString]=\"searchString\" [editAccess]=\"editAccessMPR\"></app-multi-patient-relays>\n        <span class=\"py-4\">\n      <app-relay-configuration *ngIf=\"selectedTab === 'configurations'\" [editAccess]=\"editAccessRelayConfiguration\">\n      </app-relay-configuration>\n    </span>\n        <app-care-giver-app *ngIf=\"selectedTab === 'careGiverApp'\" [searchString]=\"searchString\"></app-care-giver-app>\n    </div>\n</div>\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  MultiPatientRelay,\r\n  UpdateRelay,\r\n} from \"../../../interfaces/manage-relays.interface\";\r\nimport {\r\n  ManageRelaysSelectors,\r\n  ManageRelaysStoreActions,\r\n  ManageRelaysStoreState,\r\n} from \"../store\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { QueryParams } from \"../../../interfaces/manage-users.interface\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport { AddRelayComponent } from \"../add-relay/add-relay.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UserPreferenceService } from \"@services/user-preference.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-multi-patient-relays\",\r\n  templateUrl: \"./multi-patient-relays.component.html\",\r\n  styleUrls: [\"./multi-patient-relays.component.scss\"],\r\n})\r\nexport class MultiPatientRelaysComponent\r\n  implements OnInit, OnDestroy, OnChanges\r\n{\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"relayId\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\", \"px-3\"],\r\n      cellClass: [\"align-left\",\"fw-bold\", \"bold-text\", \"px-2\"],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      sortable: true,\r\n      headerClass: [\"align-right\"],\r\n      cellClass: [\"d-flex\", \"justify-content-end\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"createdBy\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"createdDateTime\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"status\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n    }\r\n  ];\r\n  constructor(\r\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\r\n    public relayService: ManageRelaysService,\r\n    private snackbar: SnackbarService,\r\n    private dialog: MatDialog,\r\n    private userPreference: UserPreferenceService\r\n  ) { }\r\n  @Input() searchString: string;\r\n  @Output() selected = new EventEmitter<boolean>();\r\n  @Input() public editAccess = false;\r\n  config: LSTableConfig;\r\n  relayList$: Observable<MultiPatientRelay[]>;\r\n  relayCount$: Observable<number>;\r\n  MPRelayList: MultiPatientRelay[];\r\n  cfId: string;\r\n  role: string;\r\n  roles: string[];\r\n  selection: SelectionModel<any> = new SelectionModel<any[]>();\r\n  loader = true;\r\n  loaderSubscription: any;\r\n  editLocation = {};\r\n  valueUpdated = {};\r\n  timeZone: string;\r\n  readonly timeFmt: string = environment.customization.timeFormat;\r\n  ngOnInit(): void {\r\n    this.timeZone = this.userPreference.getUserTimeZone();\r\n    console.log(this.timeZone);\r\n    this.config = {\r\n      id: \"manage_relays_module\",\r\n      rowSelectEnabled: this.editAccess,\r\n      // actions: {\r\n      //   show: this.editAccess,\r\n      //   headerLabel: \"Actions\",\r\n      //   style: \"text-align:center!important;\"\r\n      // },\r\n      sort: {\r\n        active: null,\r\n        direction: null,\r\n      },\r\n      page: {\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n      },\r\n      paginator: {\r\n        hide: false,\r\n        offline: false,\r\n      },\r\n      \r\n      translate: true,\r\n      translateKey: \"manage_relays_module\",\r\n    };\r\n    console.log(this.editAccess);\r\n    if(this.editAccess) {\r\n    this.columns.push({\r\n        id: \"actions_col\",\r\n        sortable: false,\r\n        headerClass: [\"align-center\"],\r\n        cellClass: [\"text-center\"],\r\n      });\r\n      this.columns.splice(2, 0, {\r\n        id: \"editLocation\",\r\n        sortable: false,\r\n        headerClass: [\"align-center\"],\r\n        cellClass: [\"text-center\"],\r\n        style: \"min-width:40px\"\r\n      })\r\n    } else {\r\n      this.columns[1] = {\r\n        id: \"location\",\r\n        sortable: true,\r\n        headerClass: [\"align-left\",\"gc-left\"],\r\n        cellClass: [\"text-start\",\"gc-left\"],\r\n      };\r\n    }\r\n    this.selected.emit(false);\r\n    this.relayList$ = this.store$\r\n      .select(ManageRelaysSelectors.getMPRelayList)\r\n      .pipe(\r\n        map((list: any[]) => {\r\n          return [\r\n            ...(list || []).map((l, i) => {\r\n              return {\r\n                ...l,\r\n                index: i,\r\n                lastActive: l.lastActive * 1000\r\n              };\r\n            }),\r\n          ];\r\n        })\r\n      );\r\n    this.relayList$.subscribe(res => {\r\n      this.selection.clear();\r\n    });\r\n    this.relayCount$ = this.store$.select(\r\n      ManageRelaysSelectors.getMPRelayCount\r\n    );\r\n    this.relayCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n    this.loaderSubscription = this.store$\r\n      .select(ManageRelaysSelectors.getLoaderStatus)\r\n      .subscribe((loader) => {\r\n        if (loader) {\r\n          this.loader = false;\r\n        }\r\n      });\r\n    //this.getMPRelayList();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.loader = true;\r\n    if(this.config) this.config.page.pageIndex = 0;\r\n    this.getMPRelayList();\r\n  }\r\n  relaysSelected(event: SelectionModel<any[]>) {\r\n    console.log(event);\r\n    this.selection = event;\r\n    if (this.selection.selected.length > 0) {\r\n      this.selected.emit(true);\r\n    } else {\r\n      this.selected.emit(false);\r\n    }\r\n  }\r\n  onSortChange(sort: Sort) {\r\n    // this.loader = true;\r\n    this.config.sort = {\r\n      ...sort,\r\n    };\r\n    this.getMPRelayList();\r\n  }\r\n  showEdit(index) {\r\n    this.editLocation[index] = true;\r\n  }\r\n  hideEdit(index) {\r\n    this.editLocation[index] = false;\r\n  }\r\n  locationValid(location) {\r\n    let regex = /^[a-zA-Z0-9]{1}[a-zA-Z0-9-_ ]*$/;\r\n    let valid = regex.test(location);\r\n    let loc = location.replace(/\\s/g, \"\");\r\n    return loc.length > 0 && valid;\r\n  }\r\n  getDate(timestamp) {\r\n    // const DateString = new Date(timestamp * 1000);\r\n    const DateString = new Date(timestamp);\r\n    const date = DateString.toLocaleDateString(\"en-US\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n    const time = DateString.toLocaleTimeString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      hour12: true,\r\n    });\r\n    return date + \" / \" + \"<b>\" + time + \"</b>\";\r\n  }\r\n  isSelected(row, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.relayId).includes(row.relayId);\r\n  }\r\n  getMPRelayList() {\r\n    let mpUrl = \"\";\r\n    let param: QueryParams = {\r\n      url: mpUrl,\r\n      page: this.config?.page?.pageIndex + 1,\r\n      size: this.config?.page?.pageSize,\r\n      sortOrder:\"asc\",\r\n      sortBy: (this.config?.sort?.direction)? `${this.config?.sort?.active || \"\"}:${\r\n        this.config?.sort?.direction || \"\"\r\n      }` : \"\",\r\n      searchText: this.searchString,\r\n    };\r\n    this.store$.dispatch(\r\n      new ManageRelaysStoreActions.LoadMPRelaysRequestAction({ params: param })\r\n    );\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  onPage(event: PageEvent) {\r\n    console.log(event);\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getMPRelayList();\r\n  }\r\n  onSelectChange(event, relay) {}\r\n  deleteRelays() {\r\n    let body = {\r\n      relayId: this.selection.selected.map((s) => s.relayId),\r\n    };\r\n    this.relayService.deleteRelays(body).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res.status === \"OK\") {\r\n        this.loader = true;\r\n        this.selection.clear();\r\n        this.config.page.pageIndex = 0;\r\n        this.getMPRelayList();\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\"+res.message, 'bottom', 'center', true);\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.operation_failed\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  deleteSingleRelay(relayId) {\r\n    let body = {\r\n      relayId: [relayId],\r\n    };\r\n    this.relayService.deleteRelays(body).subscribe((res: any) => {\r\n      if (res.status === \"OK\") {\r\n        this.loader = true;\r\n        this.config.page.pageIndex = 0;\r\n        this.getMPRelayList();\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\"+res.message, 'bottom', 'center', true);\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.operation_failed\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  confirmDelete() {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_relays_module.delete_relays\",\r\n          text: \"manage_relays_module.delete_relays_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.deleteRelays();\r\n      }\r\n    });\r\n  }\r\n  confirmSingleRelayDelete(relayId) {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_relays_module.delete_relays\",\r\n          text: \"manage_relays_module.delete_relay_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.deleteSingleRelay(relayId);\r\n      }\r\n    });\r\n  }\r\n  save(relay) {\r\n    this.editLocation[relay?.index] = false;\r\n    if (this.valueUpdated[relay?.index]) {\r\n      this.relayService\r\n        .updateRelay(relay)\r\n        .subscribe((response: UpdateRelay) => {\r\n          this.valueUpdated[relay?.index] = false;\r\n          if (response.status === \"OK\") {\r\n            this.snackbar.openCustomSnackBar(\"manage_relays_module.relay_updated\", 'bottom', 'center', true);\r\n          }\r\n        });\r\n    }\r\n  }\r\n  addRelay() {\r\n    const addRelay = this.dialog.open(AddRelayComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {},\r\n      disableClose: true,\r\n    });\r\n    addRelay.afterClosed().subscribe((data) => {\r\n      console.log(data.data);\r\n      if (!this.isBlank(data.data)) {\r\n        this.loader = true;\r\n        let location = { location: data.data };\r\n        this.relayService.addRelay(location).subscribe((response) => {\r\n          console.log(response);\r\n          if (response.status === \"OK\") {\r\n            this.getMPRelayList();\r\n          } else {\r\n            this.loader = false;\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        }, error => {\r\n          this.loader = false;\r\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  locationEdit(index) {\r\n    this.valueUpdated[index] = true;\r\n  }\r\n  getStatus(lastActive) {\r\n    return lastActive > 0 ? \"Active\" : \"Inactive\";\r\n  }\r\n  onPaste(event: ClipboardEvent) {\r\n    let clipboardData = event.clipboardData;\r\n    let key = clipboardData.getData('text');\r\n    let charsOnlyPattern = /^[a-zA-Z0-9-_ ]+$/;\r\n    if (charsOnlyPattern.test(key)) {\r\n        return true;\r\n    } else {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n  }\r\n  resendOtp(relay) {\r\n    if(relay?.location) {\r\n      let body = {\r\n        location: relay?.location,\r\n        relayId: relay?.relayId\r\n      }\r\n      this.relayService.addRelay(body).subscribe(res => {\r\n        if(res.status === 'OK') {\r\n          this.snackbar.openCustomSnackBar(\"manage_relays_module.otp_sent\", 'bottom', 'center', true);\r\n        } else {\r\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n        }\r\n      }, (error) => {\r\n        if(error.error.message === 'RELAY_ALREADY_ACTIVE') {\r\n          this.snackbar.openCustomSnackBar(\"manage_relays_module.relay_already_active\", 'bottom', 'center', true);\r\n        } else {\r\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n        }\r\n      })\r\n    } else {\r\n      this.snackbar.openSnackBar(\"manage_relays_module.location_invalid\", 'bottom', 'center', true);\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.loaderSubscription.unsubscribe();\r\n  }\r\n  \r\n}\r\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n\n<div *ngIf=\"!loader\" class=\"scrolltab-height bg-thead-color comman-table-users head-border\">\n    <ls-table [config]=\"config\" [columns]=\"columns\" (page)=\"onPage($event)\" (sortChange)=\"onSortChange($event)\"\n        [data]=\"relayList$ | async\" (selected)=\"relaysSelected($event)\" [isSelected]=\"isSelected\" [Id]=\"'relayId'\">\n        <ng-template lsWidgetName=\"relayId\" let-data>\n            <div class=\"py-2\">{{ data?.relayId }}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"contactInfo\" let-data>\n            <div class=\"pt-1\">{{ data?.email }}</div>\n            <div class=\"pt-1\">{{ data?.phoneNo }}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdBy\" let-data>\n            {{data?.createdBy}}\n        </ng-template>\n        <ng-template lsWidgetName=\"location\" let-data>\n            <div class=\"d-flex align-items-center  location-info \">\n            <ng-container>\n                \n                <span class=\"text-truncate\" *ngIf=\"!editLocation[data?.index]\">\n                    {{ data.location }}\n                </span>\n                <span class=\"location-info\" *ngIf=\"editLocation[data?.index]\">\n                    <mat-form-field class=\"location-input-field\">\n                        <input matInput autocomplete=\"off\" placeholder=\"Location\" [(ngModel)]=\"data.location\"\n                            maxlength=\"32\" (ngModelChange)=\"locationEdit(data?.index)\" class=\"text-center\"\n                            (keypress)=\"relayService.alphaNumericsOnly($event)\" (paste)=\"onPaste($event)\" />\n                    </mat-form-field>\n                    <mat-error *ngIf=\"!locationValid(data.location)\">\n                        *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                </span>\n           \n            </ng-container>\n            <ng-container *ngIf=\"editAccess\">\n                <span class=\"ms-2\">\n                    <span *ngIf=\"!editLocation[data?.index]\">\n                        <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                            (click)=\"showEdit(data?.index)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                    </span>\n                    <span *ngIf=\"editLocation[data?.index]\">\n                        <button mat-mini-fab color=\"primary\" *ngIf=\"locationValid(data.location)\"\n                            class=\"btn-boxed btn-no-shadow\" (click)=\"save(data)\">\n                            <mat-icon>check</mat-icon>\n                        </button>\n                    </span>\n                </span>\n            </ng-container>\n        </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"editLocation\" let-data>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdBy\" let-row>\n            {{row?.createdBy}}\n            <mat-icon fontSet=\"material-icons-outlined\" style=\"cursor: pointer;\">info</mat-icon>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdDateTime\" let-row>\n            {{ row?.createdDateTime | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"bold-text\">{{ row?.createdDateTime+ '+0000' | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"lastActive\" let-row>\n            {{ row?.lastActive | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"fw-bold\">{{ row?.lastActive | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"status\" let-data>\n            <span class=\"text-capitalize\">{{ data?.status?.toLowerCase() }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"actions_col\" let-data *ngIf=\"editAccess\">\n            <button mat-mini-fab color=\"primary\" class=\"btn-no-shadow btn-boxed mx-auto me-2\" (click)=\"confirmSingleRelayDelete(data.relayId)\">\n               <mat-icon>delete_outline</mat-icon>\n            </button>\n            <button mat-mini-fab  mat-flat-button color=\"primary\"  class=\"btn-boxed download-btn mx-auto btn-no-shadow\"\n                    (click)=\"resendOtp(data)\">\n                <img class=\"downloadicon\" src=\"assets/icons/download-icon.svg\" alt=\"Download\" />\n            </button>\n\n        </ng-template>\n    </ls-table>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\nimport { RelayConfiguration } from \"../../../interfaces/manage-relays.interface\";\nimport { Observable } from \"rxjs\";\nimport {\n  ManageRelaysSelectors,\n  ManageRelaysStoreActions,\n  ManageRelaysStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-relay-configuration\",\n  templateUrl: \"./relay-configuration.component.html\",\n  styleUrls: [\"./relay-configuration.component.scss\"],\n})\nexport class RelayConfigurationComponent implements OnInit, OnDestroy {\n  constructor(\n    private service: ManageRelaysService,\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\n    private snackbar: SnackbarService\n  ) {}\n  settings = [];\n  @Input() public editAccess;\n  loader = true;\n  loaderSubscription: any;\n  configSubscription: any;\n  relayConfig$: Observable<RelayConfiguration>;\n  relayConfiguration: RelayConfiguration;\n  ngOnInit(): void {\n    for (let i = 30; i <= 180; i++) {\n      this.settings.push({\n        name: i + \"  days\",\n        value: i * 24 * 60,\n      });\n    }\n    this.relayConfig$ = this.store$.select(\n      ManageRelaysSelectors.getRelayConfiguration\n    );\n    this.configSubscription = this.relayConfig$.subscribe((response) => {\n      console.log(response);\n      this.relayConfiguration = response;\n    });\n    this.loaderSubscription = this.store$\n      .select(ManageRelaysSelectors.getLoaderStatus)\n      .subscribe((loader) => {\n        if (loader) {\n          this.loader = false;\n        }\n      });\n    this.getRelayConfiguration();\n  }\n  getRelayConfiguration() {\n    this.store$.dispatch(\n      new ManageRelaysStoreActions.LoadRelayConfigurationRequestAction({})\n    );\n  }\n  updateRelayConfiguration(config) {\n    this.service.updateRelayConif(config).subscribe((res) => {\n      if (res.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\" + res.message, 'bottom', 'center', true);\n      }\n    });\n  }\n  updateSettings() {\n    this.updateRelayConfiguration({\n      sprDeletionDate: this.relayConfiguration.sprDeletionDate,\n      relayConfigId: this.relayConfiguration.relayConfigId,\n    });\n  }\n  ngOnDestroy() {\n    this.loaderSubscription.unsubscribe();\n    this.configSubscription.unsubscribe();\n  }\n}\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n  <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n<div *ngIf=\"!loader\">\n  <div class=\"table-responsive-md py-4\">\n    <table class=\"table\" aria-label=\"Table\">\n      <tbody class=\"border-0\">\n        <tr class=\"m-0\">\n          <td>\n            <div class=\"row\">\n              <div class=\"col-6 col-md-8 text-start d-flex align-items-center\">\n                <mat-slide-toggle\n                        class=\"px-2\"\n                        *ngIf=\"editAccess\"\n                        [(ngModel)]=\"relayConfiguration.sprDeletionDate.isActive\"\n                        (change)=\"updateSettings()\"\n                >\n                  {{\n                  \"manage_relays_module.single_patient_relay_auto_deletion_date\"\n                          | translate\n                  }}\n                </mat-slide-toggle>\n                <span *ngIf=\"!editAccess\">\n              <span *ngIf=\"relayConfiguration.sprDeletionDate.isActive\">\n                {{\n                \"manage_relays_module.single_patient_relay_auto_deletion_date\"\n                        | translate\n                }}\n                {{ \"additional_devices.enabled_txt\" | translate }}\n              </span>\n              <span *ngIf=\"!relayConfiguration.sprDeletionDate.isActive\">\n                {{\n                \"manage_relays_module.single_patient_relay_auto_deletion_date\"\n                        | translate\n                }}\n                {{ \"additional_devices.disabled_txt\" | translate }}\n              </span>\n            </span>\n              </div>\n              <div class=\"col-6 col-md-4 text-end\">\n                <mat-select\n                        (ngModelChange)=\"updateSettings()\"\n                        placeholder=\"Settings\"\n                        class=\"mat-sel select text-start p-2 m-0\"\n                        [(ngModel)]=\"relayConfiguration.sprDeletionDate.value\"\n                        [disabled]=\"\n                !relayConfiguration.sprDeletionDate.isActive || !editAccess\n              \"\n                >\n                  <mat-option\n                          *ngFor=\"let setting of settings\"\n                          [value]=\"setting.value.toString()\"\n                  >\n                    {{ setting.name }}\n                  </mat-option>\n                </mat-select>\n              </div>\n            </div>\n\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport {\r\n  ManageRelaysSelectors,\r\n  ManageRelaysStoreState,\r\n  ManageRelaysStoreActions,\r\n} from \"../store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SinglePatientRelay } from \"../../../interfaces/manage-relays.interface\";\r\nimport { QueryParams } from \"../../../interfaces/manage-users.interface\";\r\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UserPreferenceService } from \"@services/user-preference.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-single-patient-relays\",\r\n  templateUrl: \"./single-patient-relays.component.html\",\r\n  styleUrls: [\"./single-patient-relays.component.scss\"],\r\n})\r\nexport class SinglePatientRelaysComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  constructor(\r\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\r\n    private relayService: ManageRelaysService,\r\n    private snackbar: SnackbarService,\r\n    private dialog: MatDialog,\r\n    private userPreference: UserPreferenceService\r\n  ) {}\r\n  @Input() searchString: string;\r\n  @Input() private delete!: EventEmitter<boolean>;\r\n  @Input() public editAccess = false;\r\n  @Output() selected = new EventEmitter<boolean>();\r\n  relayList$: Observable<SinglePatientRelay[]>;\r\n  relayCount$: Observable<number>;\r\n  SPRelayList: SinglePatientRelay[];\r\n  cfId: string;\r\n  role: string;\r\n  roles: string[];\r\n  singlePatientRelayList: SinglePatientRelay[];\r\n  loader = true;\r\n  loaderSubscription: any;\r\n  relayIds = [];\r\n  selection: SelectionModel<any>= new SelectionModel<any[]>();\r\n  config: LSTableConfig = {\r\n    id: \"manage_relays_module\",\r\n    rowSelectEnabled: false,\r\n    actions: {\r\n      show: false,\r\n    },\r\n    sort: {\r\n      active: null,\r\n      direction: null,\r\n    },\r\n    page: {\r\n      pageIndex: 0,\r\n      pageSize: 10,\r\n    },\r\n    paginator: {\r\n      hide: false,\r\n      offline: false,\r\n    },\r\n    translate: true,\r\n    translateKey: \"manage_relays_module\",\r\n  }\r\n\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"relayId\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\", \"px-3\"],\r\n      cellClass: [\"align-left\",\"bold-text\", \"px-2\"],\r\n    },\r\n    {\r\n      id: \"biosensorID\",\r\n      headerClass: [\"text-start\", \"px-4\"],\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-left\", \"px-3\"],\r\n    },\r\n    {\r\n      id: \"firstName\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"email\",\r\n      label:\"email\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"createdDateTime\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"lastActive\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n  ];\r\n  timeZone: string;\r\n  readonly timeFmt: string = environment.customization.timeFormat;\r\n  ngOnInit(): void {\r\n    this.config.rowSelectEnabled = this.editAccess;\r\n    this.timeZone = this.userPreference.getUserTimeZone();\r\n    this.relayIds = [];\r\n    this.selected.emit(false);\r\n    this.relayList$ = this.store$\r\n      .select(ManageRelaysSelectors.getSPRelayList)\r\n      .pipe(\r\n        map((res: any) => {\r\n          return res?.map(r => {\r\n            return {\r\n              ...r,\r\n              lastActive: r.lastActive * 1000\r\n            }\r\n          });\r\n        })\r\n      );\r\n    this.relayList$.subscribe(res => {\r\n      this.selection.clear();\r\n    });\r\n    this.relayCount$ = this.store$.select(\r\n      ManageRelaysSelectors.getSPRelayCount\r\n    );\r\n    this.relayCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n    this.loaderSubscription = this.store$\r\n      .select(ManageRelaysSelectors.getLoaderStatus)\r\n      .subscribe((loader) => {\r\n        if (loader) {\r\n          this.loader = false;\r\n        }\r\n      });\r\n    //this.getSPRelayList();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.loader = true;\r\n    if(this.config) this.config.page.pageIndex = 0;\r\n    this.getSPRelayList();\r\n  }\r\n  relaysSelected(event) {\r\n    console.log(event);\r\n    this.selection = event;\r\n    if (this.selection.selected.length > 0) {\r\n      this.selected.emit(true);\r\n    } else {\r\n      this.selected.emit(false);\r\n    }\r\n  }\r\n  onSortChange(sort: Sort) {\r\n    // this.loader = true;\r\n    // this.config.page.pageIndex = 0;\r\n    this.config.sort = {\r\n      ...sort,\r\n    };\r\n    this.getSPRelayList();\r\n  }\r\n  getDate(timestamp) {\r\n    // const DateString = new Date(timestamp * 1000);\r\n    const DateString = new Date(timestamp);\r\n    const date = DateString.toLocaleDateString(\"en-US\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n    const time = DateString.toLocaleTimeString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    });\r\n    return `${date} / ${time}`;\r\n  }\r\n  isSelected(row, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.relayId).includes(row.relayId);\r\n  }\r\n  getSPRelayList() {\r\n    let url = \"relays/sprlist\";\r\n    let param: QueryParams = {\r\n      url: url,\r\n      page: this.config.page.pageIndex + 1,\r\n      size: this.config.page.pageSize,\r\n      sortOrder: \"asc\",\r\n      sortBy: (this.config?.sort?.direction)? `${this.config?.sort?.active || \"\"}:${\r\n        this.config?.sort?.direction || \"\"\r\n      }`: \"\",\r\n      searchText: this.searchString,\r\n    };\r\n    this.store$.dispatch(\r\n      new ManageRelaysStoreActions.LoadSPRelaysRequestAction({ params: param })\r\n    );\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  onPage(event: PageEvent) {\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getSPRelayList();\r\n  }\r\n  ngOnDestroy() {\r\n    this.loaderSubscription.unsubscribe();\r\n  }\r\n  onCheckboxChange(event, relayId) {\r\n    if (event.checked) {\r\n      this.relayIds.push(relayId);\r\n    } else {\r\n      this.relayIds = this.relayIds.filter((relayid) => relayid !== relayId);\r\n    }\r\n  }\r\n  deleteRelays() {\r\n    let body = {\r\n      relayId: this.selection.selected.map((s) => s.relayId),\r\n    };\r\n    this.relayService.deleteRelays(body).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res.status === \"OK\") {\r\n        this.loader = true;\r\n        this.relayIds = [];\r\n        this.config.page.pageIndex = 0;\r\n        this.getSPRelayList();\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\" + res.message, 'bottom', 'center', true);\r\n\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.operation_failed\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  ifChecked(relayId) {\r\n    return this.relayIds.indexOf(relayId) > -1;\r\n  }\r\n  confirmDelete() {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_relays_module.delete_relays\",\r\n          text: \"manage_relays_module.delete_relays_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.deleteRelays();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n\n<div *ngIf=\"!loader\" class=\"scrolltab-height bg-thead-color comman-table-users head-border\">\n    <ls-table [config]=\"config\" [columns]=\"columns\" (page)=\"onPage($event)\" (sortChange)=\"onSortChange($event)\" [data]=\"relayList$ | async\" (selected)=\"relaysSelected($event)\" [isSelected]=\"isSelected\" [Id]=\"'relayId'\">\n\n\n        <ng-template lsWidgetName=\"relayId\" let-data>\n            <div class=\"py-2\">{{ data?.relayId }}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"firstName\" let-data>\n            {{data.firstName || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-data>\n            <div class=\"pe-3\">\n                <small class=\"pt-1\">{{ data?.email }}</small><br>\n                <small class=\"pt-1\">{{ data?.phoneNo }}</small>\n            </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"biosensorIDHeading\">\n            <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" /> {{'manage_relays_module.biosensorID' | translate}}\n        </ng-template>\n        <ng-template lsWidgetName=\"biosensorID\" let-row>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <img class=\"patch-icon\" src=\"assets/icons/biosensor.svg\" />\n                <div class=\"biosensor-id\">\n                    {{ row.biosensorID || \"-\" }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdDateTime\" let-row>\n            {{ row?.createdDateTime | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"bold-text\">{{ row?.createdDateTime+ '+0000' | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"lastActive\" let-row>\n            <span *ngIf=\"row?.lastActive\">{{ row?.lastActive | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"bold-text\">{{ row?.lastActive | date: timeFmt : timeZone }}</span>\n            </span>\n            <span *ngIf=\"!row?.lastActive\"> - </span>\n        </ng-template>\n    </ls-table>\n</div>\n","import * as ManageRelaysStoreActions from \"./manage-relays.actions\";\nimport * as ManageRelaysSelectors from \"./manage-relays.selector\";\nimport * as ManageRelaysStoreState from \"./manage-relays.reducer\";\n\nexport {\n  ManageRelaysStoreActions,\n  ManageRelaysSelectors,\n  ManageRelaysStoreState,\n};\n","import { Action } from \"@ngrx/store\";\nimport {\n  MPRelayList,\n  RelayConfigurationResponse,\n  SinglePatientRelay,\n  SPRelayList,\n} from \"../../../interfaces/manage-relays.interface\";\nimport { QueryParams } from \"../../../interfaces/manage-users.interface\";\n\nexport enum ActionTypes {\n  LOAD_SINGLE_PATIENT_RELAYS_REQUEST = \"[MANAGERELAYS] Load SP Relay List Request\",\n  LOAD_SINGLE_PATIENT_RELAYS_FAILURE = \"[MANAGERELAYS] Load SP Relay List Failure\",\n  LOAD_SINGLE_PATIENT_RELAYS_SUCCESS = \"[MANAGERELAYS] Load SP Relay List Success\",\n  LOAD_MULTI_PATIENT_RELAYS_REQUEST = \"[MANAGERELAYS] Load MP Relay List Request\",\n  LOAD_MULTI_PATIENT_RELAYS_FAILURE = \"[MANAGERELAYS] Load MP Relay List Failure\",\n  LOAD_MULTI_PATIENT_RELAYS_SUCCESS = \"[MANAGERELAYS] Load MP Relay List Success\",\n  LOAD_RELAY_CONFIGURATION_REQUEST = \"[MANAGERELAYS] Load Relay Configuration Request\",\n  LOAD_RELAY_CONFIGURATION_FAILURE = \"[MANAGERELAYS] Load Relay Configuration Failure\",\n  LOAD_RELAY_CONFIGURATION_SUCCESS = \"[MANAGERELAYS] Load Relay Configuration Success\",\n  LOAD_CARE_GIVER_RELAYS_REQUEST = \"[MANAGERELAYS] Load CG Relay List Request\",\n  LOAD_CARE_GIVER_RELAYS_FAILURE = \"[MANAGERELAYS] Load CG Relay List Failure\",\n  LOAD_CARE_GIVER_RELAYS_SUCCESS = \"[MANAGERELAYS] Load CG Relay List Success\",\n}\nexport class LoadSPRelaysRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadSPRelaysFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadSPRelaysSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_SUCCESS;\n  constructor(public payload: { data: SPRelayList }) {}\n}\nexport class LoadMPRelaysRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_MULTI_PATIENT_RELAYS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadMPRelaysFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_MULTI_PATIENT_RELAYS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadMPRelaysSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_MULTI_PATIENT_RELAYS_SUCCESS;\n  constructor(public payload: { data: MPRelayList }) {}\n}\nexport class LoadRelayConfigurationRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_RELAY_CONFIGURATION_REQUEST;\n  constructor(public payload: {}) {}\n}\n\nexport class LoadRelayConfigurationFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_RELAY_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadRelayConfigurationSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_RELAY_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: RelayConfigurationResponse }) {}\n}\nexport class LoadCGRelaysRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_CARE_GIVER_RELAYS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadCGRelaysFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_CARE_GIVER_RELAYS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadCGRelaysSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_CARE_GIVER_RELAYS_SUCCESS;\n  constructor(public payload: { data: SPRelayList }) {}\n}\nexport type ManageRelaysActions =\n  | LoadSPRelaysRequestAction\n  | LoadSPRelaysFailureAction\n  | LoadSPRelaysSuccessAction\n  | LoadMPRelaysRequestAction\n  | LoadMPRelaysFailureAction\n  | LoadMPRelaysSuccessAction\n  | LoadRelayConfigurationRequestAction\n  | LoadRelayConfigurationFailureAction\n  | LoadRelayConfigurationSuccessAction\n  | LoadCGRelaysRequestAction\n  | LoadCGRelaysFailureAction\n  | LoadCGRelaysSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { Observable, of as observableOf } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap } from \"rxjs/operators\";\nimport * as featureActions from \"./manage-relays.actions\";\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\n\n@Injectable()\nexport class ManageRelaysEffects {\n  constructor(\n    private manageRelayService: ManageRelaysService,\n    private actions$: Actions\n  ) {}\n\n  @Effect()\n  loadSPRelayListRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadSPRelaysRequestAction>(\n      featureActions.ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageRelayService.getSPRelayList(action.payload.params).pipe(\n        map((data) => new featureActions.LoadSPRelaysSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.LoadSPRelaysFailureAction({ error }))\n        )\n      )\n    )\n  );\n  @Effect()\n  loadMPRelayListRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadMPRelaysRequestAction>(\n      featureActions.ActionTypes.LOAD_MULTI_PATIENT_RELAYS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageRelayService.getMPRelayList(action.payload.params).pipe(\n        map((data) => new featureActions.LoadMPRelaysSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.LoadMPRelaysFailureAction({ error }))\n        )\n      )\n    )\n  );\n  @Effect()\n  loadRelayConfigurationEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadRelayConfigurationRequestAction>(\n      featureActions.ActionTypes.LOAD_RELAY_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageRelayService.getRelayConif().pipe(\n        map(\n          (data) =>\n            new featureActions.LoadRelayConfigurationSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.LoadRelayConfigurationFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n  @Effect()\n  loadCGRelayListRequestEffect$ = this.actions$.pipe(\n      ofType<featureActions.LoadCGRelaysRequestAction>(\n          featureActions.ActionTypes.LOAD_CARE_GIVER_RELAYS_REQUEST\n      ),\n      mergeMap((action) =>\n          this.manageRelayService.getCGRelayList(action.payload.params).pipe(\n              map((data) => new featureActions.LoadCGRelaysSuccessAction({ data })),\n              catchError((error) =>\n                  observableOf(new featureActions.LoadCGRelaysFailureAction({ error }))\n              )\n          )\n      )\n  );\n}\n","import {\n  MultiPatientRelay,\n  RelayConfiguration,\n  SinglePatientRelay,\n} from \"../../../interfaces/manage-relays.interface\";\nimport { ActionTypes, ManageRelaysActions } from \"./manage-relays.actions\";\n\nexport interface ManageRelaysState {\n  SINGLE_PATIENT_RELAYS: SinglePatientRelay[];\n  SP_RELAY_COUNT: number;\n  MULTI_PATIENT_RELAYS: MultiPatientRelay[];\n  MP_RELAY_COUNT: number;\n  RELAY_CONFIGURATION: RelayConfiguration;\n  CARE_GIVER_RELAYS: SinglePatientRelay[];\n  CG_RELAY_COUNT: number;\n  error: string;\n  loaded: boolean;\n}\n\nconst initialManageRelayState: ManageRelaysState = {\n  SINGLE_PATIENT_RELAYS: [],\n  SP_RELAY_COUNT: 0,\n  MULTI_PATIENT_RELAYS: [],\n  MP_RELAY_COUNT: 0,\n  RELAY_CONFIGURATION: {\n    sprDeletionDate: {\n      isActive: true,\n      value: \"\",\n    },\n    relayConfigId: \"\",\n  },\n  CARE_GIVER_RELAYS: [],\n  CG_RELAY_COUNT: 0,\n  error: \"\",\n  loaded: false,\n};\n\nexport const manageRelaysFeatureKey = \"managerelays\";\n\nexport function ManageRelaysReducer(\n  state: ManageRelaysState = initialManageRelayState,\n  action: ManageRelaysActions\n) {\n  switch (action.type) {\n    case ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_SUCCESS: {\n      return {\n        ...state,\n        SINGLE_PATIENT_RELAYS: action.payload.data.data.items,\n        SP_RELAY_COUNT: action.payload.data.data.total,\n        loaded: true,\n      };\n    }\n    case ActionTypes.LOAD_MULTI_PATIENT_RELAYS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_MULTI_PATIENT_RELAYS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_MULTI_PATIENT_RELAYS_SUCCESS: {\n      return {\n        ...state,\n        MULTI_PATIENT_RELAYS: action.payload.data.data.items,\n        MP_RELAY_COUNT: action.payload.data.data.total,\n        loaded: true,\n      };\n    }\n    case ActionTypes.LOAD_RELAY_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_RELAY_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_RELAY_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        RELAY_CONFIGURATION: action.payload.data.data,\n        loaded: true,\n      };\n    }\n    case ActionTypes.LOAD_CARE_GIVER_RELAYS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_CARE_GIVER_RELAYS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_CARE_GIVER_RELAYS_SUCCESS: {\n      return {\n        ...state,\n        CARE_GIVER_RELAYS: action.payload.data.data.items,\n        CG_RELAY_COUNT: action.payload.data.data.total,\n        loaded: true,\n      };\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  ManageRelaysState,\n  manageRelaysFeatureKey,\n} from \"./manage-relays.reducer\";\n\nconst getManageRelaysState = createFeatureSelector<ManageRelaysState>(\n  manageRelaysFeatureKey\n);\n\nexport const getSPRelayList = createSelector(\n  getManageRelaysState,\n  (state) => state?.SINGLE_PATIENT_RELAYS\n);\n\nexport const getError = createSelector(\n  getManageRelaysState,\n  (state) => state?.error\n);\nexport const getSPRelayCount = createSelector(\n  getManageRelaysState,\n  (state) => state?.SP_RELAY_COUNT\n);\nexport const getLoaderStatus = createSelector(\n  getManageRelaysState,\n  (state) => state?.loaded\n);\nexport const getMPRelayList = createSelector(\n  getManageRelaysState,\n  (state) => state?.MULTI_PATIENT_RELAYS\n);\nexport const getMPRelayCount = createSelector(\n  getManageRelaysState,\n  (state) => state?.MP_RELAY_COUNT\n);\nexport const getRelayConfiguration = createSelector(\n  getManageRelaysState,\n  (state) => state?.RELAY_CONFIGURATION\n);\nexport const getCGRelayList = createSelector(\n    getManageRelaysState,\n    (state) => state?.CARE_GIVER_RELAYS\n);\nexport const getCGRelayCount = createSelector(\n    getManageRelaysState,\n    (state) => state?.CG_RELAY_COUNT\n);\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { ManageUsersService } from \"../services/manage-users.service\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\n\r\ninterface Location {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n@Component({\r\n  selector: \"app-addgroup\",\r\n  templateUrl: \"./addgroup.component.html\",\r\n  styleUrls: [\"./addgroup.component.scss\"],\r\n})\r\nexport class AddgroupComponent implements OnInit {\r\n  constructor(\r\n    private autheticationService: AuthenticationService,\r\n    private manageUserService: ManageUsersService,\r\n    private dialogRef: MatDialogRef<MatDialogRef<any>>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n  cfId: string;\r\n  groups: Group[];\r\n  clinicalGroups: Group[];\r\n  locationGroups: Group[];\r\n  selectedClinicalGroup;\r\n  selectedLocationGroup;\r\n  submitted = false;\r\n  selGroups: Group[] = [];\r\n  clinicalGroupExists = false;\r\n  locationGroupExists = false;\r\n  ngOnInit() {\r\n    this.selGroups = this.data.data?.selectedGroups;\r\n    console.log(this.selGroups);\r\n    this.cfId = this.autheticationService.getCfId();\r\n    this.manageUserService.getGroups(this.cfId).subscribe((response) => {\r\n      console.log(response);\r\n      // if (response.status === \"OK\") { vishnu removed\r\n        this.groups = response.data;\r\n        this.selGroups.forEach(group => {\r\n          this.groups = this.groups.filter(grp => group.groupId !== grp.groupId);\r\n          this.groups = this.groups.filter(grp =>  grp?.ancestor?.indexOf(group.groupId) == -1 );\r\n        })\r\n        this.clinicalGroups = this.groups.filter(group => group.type === 'clinical')\r\n        this.locationGroups = this.groups.filter(group => group.type === 'physical');\r\n      // }  vishnu removed\r\n    });\r\n  }\r\n  groupChange(groupId, type) {\r\n    if (type === 'LOCATION') {\r\n      this.selectedLocationGroup = groupId;\r\n    \r\n      } else if (type === 'clinical') {\r\n      this.selectedClinicalGroup = groupId;\r\n    }\r\n    this.clinicalGroupExists = false;\r\n    this.locationGroupExists = false;\r\n    this.selGroups.forEach((group) => {\r\n      if (group.groupId === this.selectedClinicalGroup) {\r\n        this.clinicalGroupExists = true;\r\n      }\r\n      if (group.groupId === this.selectedLocationGroup) {\r\n        this.locationGroupExists = true;\r\n      }\r\n    });\r\n  }\r\n  save() {\r\n    this.clinicalGroupExists = false;\r\n    this.locationGroupExists = false;\r\n    this.submitted = true;\r\n    if (this.isBlank(this.selectedClinicalGroup) && this.isBlank(this.selectedLocationGroup)) {\r\n      return;\r\n    }\r\n    let selectedgroups = [];\r\n    if (this.selectedLocationGroup) {\r\n\r\n      selectedgroups.push(this.selectedLocationGroup);\r\n  \r\n    }\r\n    if (this.selectedClinicalGroup) {\r\n      selectedgroups.push(this.selectedClinicalGroup);\r\n    }\r\n    this.dialogRef.close({ data: selectedgroups });\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n}\r\n","<div id=\"addGroup\">\r\n  <mat-card class=\"dialog-header\">\r\n    <h1 mat-dialog-title>\r\n      {{ \"manage_users_module.addgroup.add_group\" | translate }}\r\n    </h1>\r\n   <!--<button mat-icon-button mat-dialog-close>\r\n      <mat-icon>close</mat-icon>\r\n    </button>--> \r\n  </mat-card>\r\n  <mat-dialog-content class=\"mat-dialog-popup\">\r\n    <div class=\"dialog-form\">\r\n      <div class=\"row mx-n2\">\r\n        <div class=\"col-sm-6 px-2 mb-2 mb-md-0\">\r\n<!--          <mat-form-field appearance=\"fill\" class=\"formfield-control\">-->\r\n<!--            <mat-select placeholder=\"Location\" [(ngModel)]=\"selectedLocationGroup\" (ngModelChange)=\"groupChange()\">-->\r\n<!--              <mat-option *ngFor=\"let location of locationGroups\" [value]=\"location\">-->\r\n<!--                {{ location.name }}-->\r\n<!--              </mat-option>-->\r\n<!--            </mat-select>-->\r\n<!--          </mat-form-field>-->\r\n          <app-nested-dropdown class=\"nested-selectfilter select toplabel-no\" [selectedValue]=\"selectedLocationGroup\" key=\"groupId\" displayKey=\"name\"\r\n                               [label]=\"'alert_config_module.location' | translate\" (selected)=\"groupChange($event, 'LOCATION')\"\r\n                               [options]=\"locationGroups\" [showSelect]=\"true\" [assignGroup]=\"true\">\r\n          </app-nested-dropdown>\r\n          <mat-error class=\"required my-2\" *ngIf=\"locationGroupExists\">\r\n            {{ \"manage_users_module.addgroup.location_group_exits\" | translate }}\r\n          </mat-error>\r\n        </div>\r\n        <!--  <div class=\"col-sm-6 px-2 mb-2 mb-md-0\">  -->\r\n<!--          <mat-form-field appearance=\"fill\" class=\"formfield-control\">-->\r\n<!--            <mat-select placeholder=\"Clinical condition\" [(ngModel)]=\"selectedClinicalGroup\" (ngModelChange)=\"groupChange()\">-->\r\n<!--              <mat-option *ngFor=\"let group of clinicalGroups\" [value]=\"group\">-->\r\n<!--                {{ group.name }}-->\r\n<!--              </mat-option>-->\r\n<!--            </mat-select>-->\r\n<!--          </mat-form-field>-->\r\n<!--vishnu-->\r\n          <!-- <app-nested-dropdown class=\"nested-selectfilter select toplabel-no\" [selectedValue]=\"selectedClinicalGroup\" key=\"groupId\" displayKey=\"name\"\r\n                               [label]=\"'alert_config_module.medical_condition' | translate\" (selected)=\"groupChange($event, 'CLINICAL')\"\r\n                               [options]=\"clinicalGroups\" [showSelect]=\"true\" [assignGroup]=\"true\">\r\n          </app-nested-dropdown>\r\n\r\n          <mat-error class=\"required my-2\" *ngIf=\"clinicalGroupExists\">\r\n            {{ \"manage_users_module.addgroup.clinical_group_exits\" | translate }}\r\n          </mat-error>\r\n        </div> -->\r\n        <!--vishnu-->\r\n      </div>\r\n      <mat-error *ngIf=\"submitted && isBlank(selectedClinicalGroup) && isBlank(selectedLocationGroup)\" class=\"required\">\r\n        {{ \"manage_users_module.addgroup.error_group_required\" | translate }}\r\n      </mat-error>\r\n    </div>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-flat-button mat-dialog-close class=\"fill-btn\" color=\"warn\">\r\n      {{ \"manage_users_module.addgroup.cancelbutton\" | translate }}\r\n    </button>\r\n    <button mat-flat-button class=\"fill-btn\" [disabled]=\"clinicalGroupExists || locationGroupExists\" (click)=\"save()\" color=\"primary\"\r\n    [class.disabled]=\"clinicalGroupExists || locationGroupExists\">\r\n      {{ \"manage_users_module.addgroup.addbutton\" | translate }}\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { AddgroupComponent } from \"../addgroup/addgroup.component\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  FormArray,\r\n  FormBuilder, FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { CountryISO } from \"ngx-intl-tel-input\";\r\nimport {\r\n  ManageUsersSelectors,\r\n  ManageUsersStoreActions,\r\n  ManageUsersStoreState,\r\n} from \"../store\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { _validatePhoneNumberInput } from \"../../../validators/phone-no.validator\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\nimport {ManageUsersService} from \"../services/manage-users.service\";\r\n@Component({\r\n  selector: \"app-adduser\",\r\n  templateUrl: \"./adduser.component.html\",\r\n  styleUrls: [\"./adduser.component.scss\"],\r\n})\r\nexport class AdduserComponent implements OnInit {\r\n  \r\n  addUserForm: FormGroup;\r\n  matcher = new ErrorStateMatcher();\r\n  groups: Group[] = [];\r\n  selectedRole = [];\r\n  facilityId: string;\r\n  serviceProviderId: string;\r\n  userGroups = [];\r\n   \r\n  // roles = [\r\n  //   { name: \"Admin\", value: \"SC\"},\r\n  //   { name: \"General clinician\", value: \"GC1\" },\r\n  //   { name: \"Physician\", value: \"PHY\" },\r\n    \r\n  // ];\r\n  roles = [\r\n    { name: \"Admin\", value: \"admin\"},\r\n    { name: \"Prescribing Physician\", value: \"prescriber\" },\r\n    { name: \"Interpreting Physician\", value: \"interpreter\" },\r\n    { name: \"Nurse/ clinician\", value: \"clinician\" },\r\n    { name: \"ECG Technician\", value: \"ecg_technician\" }\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<MatDialogRef<any>>,\r\n    private autheticationService: AuthenticationService,\r\n    private store$: Store<ManageUsersStoreState.ManageUsersState>,\r\n    private manageUserService: ManageUsersService\r\n  ) { }\r\n  submitted = false;\r\n  CountryISO = CountryISO;\r\n  error: string;\r\n  valuesUpdated = false;\r\n  loaderSubscription;\r\n  loader = false;\r\n  public config = {\r\n    id: \"0\",\r\n    title: \"Are you sure? \",\r\n    text: \"manage_users_module.savechanges.text1\",\r\n  };\r\n  ngOnInit() {\r\n    this.facilityId = this.autheticationService.getCfId();\r\n    if (this.autheticationService.getRoles().indexOf('CFA') > -1) {\r\n      this.roles.unshift({ name: \"Admin\", value: \"CFAC\" });\r\n    }\r\n    this.serviceProviderId = this.autheticationService.getSPId();\r\n    this.userGroups = [];\r\n    this.manageUserService.getGroups(this.facilityId).subscribe((res) => {\r\n      // if (res.status === \"OK\") {\r\n        this.groups = res.data;\r\n      // }\r\n    });\r\n    this.addUserForm = this.formBuilder.group(\r\n      {\r\n        // user_Id : [\"\"],\r\n        first_name: [\r\n          \"\",\r\n          [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n        ],\r\n        last_name: [\r\n          \"\",\r\n          [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n        ],\r\n        email: [\r\n          \"\",\r\n          [ Validators.email,],\r\n        ],\r\n        mobile: [\"\", [_validatePhoneNumberInput.bind(this)]],\r\n        roles: this.formBuilder.array([], Validators.required),\r\n      },\r\n      { validator: atLeastOne(Validators.required, [\"email\", \"mobile\"]) }\r\n    );\r\n    // this.addUserForm.valueChanges.pipe(debounceTime(200)).subscribe((value) => {\r\n    //   console.log(\"values updated\");\r\n    //   this.valuesUpdated = true;\r\n    // });\r\n    // setTimeout(() => {\r\n    //   this.valuesUpdated = false;\r\n    // }, 500);\r\n    this.loaderSubscription = this.store$\r\n      .select(ManageUsersSelectors.getLoaderStatus)\r\n      .subscribe((loaded) => {\r\n        if (loaded) {\r\n          this.loader = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  addGroup() {\r\n    const addGroup = this.dialog.open(AddgroupComponent, {\r\n      width: \"90vw\",\r\n      maxWidth: \"600px\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: { data: { selectedGroups: this.userGroups } },\r\n      disableClose: true,\r\n    });\r\n    addGroup.afterClosed().subscribe((data) => {\r\n      if (data?.data) {\r\n        let newGroups = data?.data;\r\n        newGroups.forEach((groupId) => {\r\n          if (this.groups.find((group) => group.groupId === groupId)) {\r\n            this.userGroups.push(\r\n                this.groups.find((group) => group.groupId === groupId)\r\n            );\r\n            this.userGroups = this.userGroups.filter(group => group.Ancestors.indexOf(groupId) == -1);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  get f() {\r\n    return this.addUserForm.controls;\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addUserForm.value);\r\n    console.log(this.addUserForm)\r\n    this.submitted = true;\r\n    if (this.addUserForm.invalid) {\r\n      this.addUserForm.markAllAsTouched();\r\n      return;\r\n    } else {\r\n      let groupIds = [];\r\n      if (this.showAssignGroup()) {\r\n        this.userGroups.forEach((group) => {\r\n          groupIds.push(group.groupId);\r\n        });\r\n      }\r\n      let formData = this.addUserForm.value;\r\n      let userRoles = [];\r\n      let userRoles1 =  {\r\n        \"admin\": 0,\r\n        \"prescriber\": 0,\r\n        \"interpreter\": 0,\r\n        \"ecg_technician\": 0,\r\n        \"clinician\": 0\r\n    }\r\n  \r\n      this.roles.forEach(role => {\r\n        if(formData?.roles.indexOf(role.value) > -1) {\r\n          userRoles.push(role.value)\r\n        }\r\n      });\r\n      let i;\r\n      for (i = 0; i < userRoles.length; i++) {\r\n        userRoles1[userRoles[i]] = 1\r\n      }\r\n \r\n      formData.roles = userRoles1;\r\n\r\n      formData.first_name = formData?.first_name ? formData?.first_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      formData.last_name = formData?.last_name ? formData?.last_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      if (!this.isBlank(formData.mobile)) {\r\n        const parsedValue = parsePhoneNumberFromString(formData.mobile);\r\n        formData.mobile = parsedValue.number.toString();\r\n        // formData.mobile = formData.mobile.e164Number;\r\n      }\r\n      console.log(\"form\"+formData);\r\n      let userData = {\r\n        // serviceProviderId: this.serviceProviderId,\r\n        // facilityId: this.facilityId,\r\n        facility_id: \"CFPI8P\",\r\n        country_code: \"+91\",\r\n        unit_system: \"metric\",\r\n        time_zone: \"IND\",\r\n        enable: true,\r\n        group: groupIds,\r\n        // isActive: true,\r\n      };\r\n      let addUserData = { ...formData, ...userData };\r\n      console.log(\"addUserData in popup\", addUserData);\r\n      // this.userService.addUser(addUserData)\r\n      //     .subscribe(response => {\r\n      //         console.log(response);\r\n      //     });\r\n      this.loader = true;\r\n      this.store$.dispatch(\r\n        new ManageUsersStoreActions.AddUserRequestAction({ data: addUserData })\r\n      );\r\n      this.store$\r\n        .select(ManageUsersSelectors.getUsersError)\r\n        .subscribe((data) => {\r\n          if(data) {\r\n            if (data === 'EMAIL_OR_PHONE_ALREADY_EXIST') {\r\n              this.error = data;\r\n            } else {\r\n              this.error = 'err_generic_message';\r\n            }\r\n            if (!this.isBlank(this.error)) {\r\n              return;\r\n            }\r\n          }\r\n        });\r\n      this.store$\r\n        .select(ManageUsersSelectors.getUsersCode)\r\n        .subscribe((code) => {\r\n          this.dialogRef.close(true);\r\n          if (code === 201) {\r\n            this.dialogRef.close(true);\r\n          }\r\n        });\r\n    }\r\n  }\r\n  remove(groupId) {\r\n    this.userGroups = this.userGroups.filter((group) => group.groupId !== groupId);\r\n  }\r\n  saveChanges(groupId) {\r\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"645px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vw\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.savechanges.title\",\r\n          text: \"manage_users_module.savechanges.text1\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    SaveChanges.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.userGroups = this.userGroups.filter((group) => group.groupId !== groupId);\r\n      }\r\n    });\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  close() {\r\n    if (this.valuesUpdated) {\r\n      const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        width: \"auto\",\r\n        height: \"auto\",\r\n        maxHeight: \"80vh\",\r\n        data: {\r\n          body: {\r\n            title: \"manage_users_module.cancel_title\",\r\n            text: \"manage_users_module.cancel_text\",\r\n          },\r\n        },\r\n        disableClose: true,\r\n      });\r\n      confirm.afterClosed().subscribe((data) => {\r\n        if (data) {\r\n          this.dialogRef.close();\r\n        }\r\n      });\r\n    } else {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n  charsOnly(control: string, event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  numericsOnly(control: string, event: KeyboardEvent) {\r\n    let numericsOnlyPattern = /^[0-9]$/;\r\n    let key = event.key;\r\n    if (numericsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  showAssignGroup() {\r\n    return this.addUserForm.value.roles.indexOf('prescriber') > -1 || this.addUserForm.value.roles.indexOf('interpreter') > -1 || this.addUserForm.value.roles.indexOf('ecg_technician') > -1 || this.addUserForm.value.roles.indexOf('clinician') > -1;\r\n  }\r\n  onRoleChange(e) {\r\n    const rolesArray: FormArray = this.addUserForm.get('roles') as FormArray;\r\n    if (e?.checked) {\r\n      rolesArray.push(new FormControl(e.source.value));\r\n    } else {\r\n      let i: number = 0;\r\n      rolesArray.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.source.value) {\r\n          rolesArray.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div id=\"addUser\">\r\n    <mat-card class=\"dialog-header\">\r\n        <h1 mat-dialog-title>\r\n            {{ \"manage_users_module.adduser.add_user\" | translate }}\r\n        </h1>\r\n        <!--<button mat-icon-button mat-dialog-close>\r\n      <mat-icon>close</mat-icon>\r\n    </button>-->\r\n    </mat-card>\r\n    <mat-dialog-content class=\"mat-dialog-popup\">\r\n        <div class=\"loading-indicator\" *ngIf=\"loader\">\r\n            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n        </div>\r\n        <form [formGroup]=\"addUserForm\" class=\"dialog-form\" autocomplete=\"off\">\r\n            <!--            <div class=\"row\">-->\r\n            <!--                <div class=\"col-md-6\">-->\r\n            <!--                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.user_Id\" | translate }}-->\r\n            <!--                    </mat-label>-->\r\n            <!--                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">-->\r\n            <!--                        <input matInput type=\"text\" formControlName=\"user_Id\" class=\"form-control\" id=\"firstName\" autocomplete=\"off\" />-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.firstname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\"\r\n                        [ngClass]=\"addUserForm.get('first_name').hasError('pattern') && addUserForm.get('first_name').touched ? 'error-msg': ''\">\r\n                        <input matInput type=\"text\" formControlName=\"first_name\" class=\"form-control first_name\"\r\n                            id=\"firstname\" autocomplete=\"off\" placeholder=\"First Name\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.first_name.errors }\"\r\n                            (keypress)=\"charsOnly('first_name', $event)\" maxlength=\"25\" />\r\n                        <mat-error *ngIf=\"f.first_name?.errors?.required && submitted\">\r\n                            {{ \"manage_users_module.adduser.firstname_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"!f.first_name?.errors?.required && f.first_name?.errors?.pattern\">\r\n                            {{ \"manage_users_module.adduser.firstname_invalid\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error\r\n                            *ngIf=\"f.first_name?.errors?.maxlength && !f.first_name?.errors?.required && !f.first_name?.errors?.pattern\">\r\n                            {{'error_message.err_first_name_range' | translate}}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"lastname\" class=\"matlabel\">{{ \"manage_users_module.adduser.lastname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\"\r\n                        [ngClass]=\"addUserForm.get('last_name').hasError('pattern') && addUserForm.get('last_name').touched ? 'error-msg': ''\">\r\n                        <input matInput formControlName=\"last_name\" type=\"text\" class=\"form-control firstName\"\r\n                            id=\"lastname\" autocomplete=\"off\" placeholder=\"Last Name\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.last_name.errors }\"\r\n                            (keypress)=\"charsOnly('last_name', $event)\" maxlength=\"25\" />\r\n                        <mat-error *ngIf=\"f.last_name?.errors?.required && submitted\">\r\n                            {{ \"manage_users_module.adduser.lastname_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"!f.last_name?.errors?.required && f.last_name?.errors?.pattern\">\r\n                            {{ \"manage_users_module.adduser.lastname_invalid\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error\r\n                            *ngIf=\"f.last_name?.errors?.maxlength && !f.last_name?.errors?.required && !f.last_name?.errors?.pattern\">\r\n                            {{'error_message.err_last_name_range' | translate}}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"email\" class=\"matlabel\">{{ \"manage_users_module.adduser.emailid\" | translate }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                        <input matInput type=\"email\" formControlName=\"email\" [maxlength]=\"320\" id=\"email\"\r\n                            autocomplete=\"off\" placeholder=\"Email\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                        <mat-error *ngIf=\"f.email?.errors?.required\">\r\n                            {{ \"manage_users_module.adduser.email_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.email?.invalid\">\r\n                            {{ \"manage_users_module.adduser.invalid_email\" | translate }}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <mat-label for=\"phonenumber\" class=\"matlabel\">{{ \"manage_users_module.adduser.phoneno\" | translate\r\n                        }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <!--        <ngx-intl-tel-input-->\r\n                    <!--          formControlName=\"phoneNo\"-->\r\n                    <!--          class=\"iti-phone2 form-control\"-->\r\n                    <!--          id=\"phonenumber\"-->\r\n                    <!--          placeholder=\"Phone number\"-->\r\n                    <!--          [ngClass]=\"{ 'is-invalid': submitted && f.phoneNo.errors }\"-->\r\n                    <!--          [selectedCountryISO]=\"CountryISO.India\"-->\r\n                    <!--        ></ngx-intl-tel-input>-->\r\n                    <app-tel-input [formControl]=\"addUserForm?.controls?.mobile\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"></app-tel-input>\r\n                    <mat-error *ngIf=\"f.mobile?.errors?.required\" class=\"mt-2 required\">\r\n                        {{ \"manage_users_module.adduser.phoneno_required\" | translate }}\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"!f.mobile?.errors?.required && !f.mobile?.valid\" class=\"mt-2 required\">\r\n                        {{ \"manage_users_module.adduser.invalid_phoneno\" | translate }}\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <mat-error *ngIf=\"!isBlank(error)\" class=\"required\">\r\n                {{ \"manage_users_module.adduser.\" + error | translate }}\r\n            </mat-error>\r\n            <mat-error *ngIf=\"\r\n        submitted &&\r\n        isBlank(addUserForm.getRawValue().email) &&\r\n        isBlank(addUserForm.getRawValue().mobile)\r\n      \" class=\"required\">\r\n                {{ \"manage_users_module.edituser.message1\" | translate }}\r\n            </mat-error>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group my-3\">\r\n                        <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.select_role\" | translate }}\r\n                            <label class=\"required\"> *</label>\r\n                        </mat-label>\r\n                        <div *ngFor=\"let role of roles\" class=\"d-flex flex-column mt-1\">\r\n                            <mat-checkbox class=\"my-1\" [value]=\"role.value\" (change)=\"onRoleChange($event)\">\r\n                                <span> {{ role.name }}</span>\r\n                            </mat-checkbox>\r\n                        </div>\r\n                        <ng-container *ngIf=\"submitted && f.roles.errors\">\r\n                            <mat-error *ngIf=\"f.roles.errors.required\" class=\"my-1\">\r\n                                {{ \"manage_users_module.adduser.role_required\" | translate }}\r\n                            </mat-error>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"my-3\" *ngIf=\"showAssignGroup()\">\r\n                        <label class=\"matlabel\">{{ \"manage_users_module.adduser.groups\" | translate }} </label>\r\n                        <div *ngFor=\"let group of userGroups; let i = index\" class=\"d-flex align-items-center my-2\">\r\n                            <span class=\"text-truncate lh-base\">{{ i + 1 }}. {{ group.name }} </span>\r\n                            <mat-icon fontSet=\"material-icons-outlined\" class=\"ms-2 cursor-pointer\"\r\n                                (click)=\"saveChanges(group.groupId)\">\r\n                                delete</mat-icon>\r\n                        </div>\r\n                        <!--      <div *ngIf=\"submitted && isBlank(groups)\">-->\r\n                        <!--        <mat-error class=\"required-text my-1\">-->\r\n                        <!--          {{ \"manage_users_module.adduser.group_required\" | translate }}-->\r\n                        <!--        </mat-error>-->\r\n                        <!--      </div>-->\r\n                    </div>\r\n                    <button mat-flat-button (click)=\"addGroup()\" color=\"primary\" *ngIf=\"showAssignGroup()\">\r\n                        {{ \"manage_users_module.adduser.groupbutton\" | translate }}\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"mt-4\">\r\n                <label class=\"required\">\r\n                    {{ \"manage_users_module.adduser.required\" | translate }}</label><br />\r\n                <label class=\"required\">\r\n                    {{ \"manage_users_module.adduser.message\" | translate }}</label>\r\n            </div>\r\n        </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions *ngIf=\"!loader\" class=\"mx-4\">\r\n        <button mat-flat-button (click)=\"close()\" class=\"fill-btn\" color=\"warn\">\r\n            {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\r\n        </button>\r\n        <button mat-flat-button type=\"submit\" class=\"fill-btn\" (click)=\"onSubmit()\" color=\"primary\">\r\n            {{ \"manage_users_module.adduser.savebutton\" | translate }}\r\n        </button>\r\n    </mat-dialog-actions>\r\n</div>","import {Component, Inject, InjectionToken, Input, OnInit} from \"@angular/core\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { AddgroupComponent } from \"../addgroup/addgroup.component\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport {\r\n  FormArray,\r\n  FormBuilder, FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { CountryISO } from \"ngx-intl-tel-input\";\r\nimport { ManageUsersService } from \"../services/manage-users.service\";\r\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\n\r\n@Component({\r\n  selector: \"app-edituser\",\r\n  templateUrl: \"./edituser.component.html\",\r\n  styleUrls: [\"./edituser.component.scss\"],\r\n})\r\n\r\nexport class EdituserComponent implements OnInit {\r\n  editUserForm = new FormGroup({});\r\n  groups: Group[] = [];\r\n   \r\n   \r\n  userGroups: Group[] = [];\r\n  cfId: string;\r\n  usrData: any;\r\n  userId;\r\n  usrDataCopy: any;\r\n  selGroups: Group[];\r\n  error: string;\r\n  editAccess;\r\n  constructor(\r\n    private manageUserService: ManageUsersService,\r\n    private autheticationService: AuthenticationService,\r\n    private dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<MatDialogRef<EdituserComponent>>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n  submitted = false;\r\n  CountryISO = CountryISO;\r\n  phoneNum;\r\n  loader = true;\r\n  valuesUpdated = false;\r\n  userRole;\r\n  // roles = [\r\n  //   { name: \"Supervisory clinician\", value: \"SC\" },\r\n  //   { name: \"General clinician\", value: \"GC\" },\r\n  //   { name: \"Physician\", value: \"PHY\" },\r\n  // ];\r\n  roles = [\r\n    { name: \"Admin\", value: \"admin\"},\r\n    { name: \"Prescribing Physician\", value: \"prescriber\" },\r\n    { name: \"Interpreting Physician\", value: \"interpreter\" },\r\n    { name: \"Nurse/ clinician\", value: \"clinician\" },\r\n    { name: \"ECG Technician\", value: \"ecg_technician\" }\r\n  ];\r\n\r\n\r\n  ngOnInit() {\r\n   \r\n    this.groups = [];\r\n    this.userId = this.data.userData;\r\n    if (this.autheticationService.getRoles().indexOf('CFA') > -1) {\r\n      this.roles.unshift({ name: \"Admin\", value: \"CFAC\" });\r\n    }\r\n    this.editAccess = this.data.editAccess;\r\n    this.editUserForm = this.formBuilder.group(\r\n        {\r\n          user_Id : [{value: \"\", disabled: true}],\r\n          first_name: [{value: \"\", disabled: true}, [Validators.required]],\r\n          last_name: [{value: \"\", disabled: true}, [Validators.required]],\r\n          email: [\r\n            {value: \"\", disabled: !this.editAccess},\r\n            [Validators.email],\r\n          ],\r\n          phoneNo: [\"\", [_validatePhoneNumberInput.bind(this)]],\r\n          roles: this.formBuilder.array([], Validators.required),\r\n        },\r\n        { validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\r\n    );\r\n    this.manageUserService.getUser(this.userId).subscribe((response: any) => {\r\n      this.usrData = response.data;\r\n      this.loader = false;\r\n      this.phoneNum = this.usrData.mobile;\r\n      this.userRole = this.usrData.roles;\r\n      \r\n      let roles = this.editUserForm?.get('roles') as FormArray;\r\n      for (let i=0; i<this.usrData?.roles?.length; i++) {\r\n        roles.push(new FormControl(this.usrData.roles[i]));\r\n      }\r\n      this.valuesUpdated = false;\r\n      this.manageUserService.getGroups(this.cfId).subscribe((res) => {\r\n        // if (res.status === \"OK\") {\r\n          this.groups = res.data;\r\n          this.usrData.group.forEach((groupId) => {\r\n            if (this.groups.find((grp) => grp.groupId === groupId)) {\r\n              this.userGroups.push(\r\n                  this.groups.find((grp) => grp.groupId === groupId)\r\n              );\r\n            }\r\n          });\r\n          console.log(this.groups);\r\n          this.valuesUpdated = false;\r\n        // }\r\n      });\r\n    });\r\n    this.cfId = this.autheticationService.getCfId();\r\n    // this.editUserForm.valueChanges\r\n    //   .pipe(debounceTime(200))\r\n    //   .subscribe((value) => {\r\n    //     console.log(\"values updated\");\r\n    //     this.valuesUpdated = true;\r\n    //   });\r\n    // this.valuesUpdated = false;\r\n    setTimeout(()=> {\r\n      if(!this.editAccess) {\r\n        const element = document.getElementById('add-group');\r\n        element.scrollIntoView({behavior: 'smooth'});\r\n      }\r\n    }, 500)\r\n  }\r\n  get f() {\r\n    return this.editUserForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.editUserForm.invalid) {\r\n      this.editUserForm.markAllAsTouched();\r\n      console.log(\"invalid\");\r\n      return;\r\n    } else {\r\n      let groupIds = [];\r\n      if(this.showAssignGroup()) {\r\n        this.userGroups.forEach((group) => {\r\n          groupIds.push(group.groupId);\r\n        });\r\n      }\r\n      let formData = this.editUserForm.value;\r\n      console.log(formData);\r\n      this.usrData.group = groupIds;\r\n      let userRoles = [];\r\n    //   let userRoles1 =  {\r\n    //     \"admin\": 0,\r\n    //     \"prescriber\": 0,\r\n    //     \"interpreter\": 0,\r\n    //     \"ecg_technician\": 0,\r\n    //     \"clinician\": 0\r\n    // }\r\n     let userRoles1=this.userRole;\r\n    console.log(userRoles1);\r\n      this.roles.forEach(role => {\r\n        if(formData?.roles.indexOf(role.value) > -1) {\r\n          userRoles.push(role.value)\r\n        }\r\n      })\r\n      let i;\r\n      for (i = 0; i < userRoles.length; i++) {\r\n        this.userRole[0][userRoles[i]] = 1\r\n      }\r\n      console.log(userRoles1);\r\n      this.usrData.roles = this.userRole[0];\r\n      if (!this.isBlank(this.phoneNum)) {\r\n        const parsedValue = parsePhoneNumberFromString(formData.phoneNo);\r\n        this.usrData.mobile = parsedValue.number.toString();\r\n        // this.usrData.phoneNo = this.phoneNum.e164Number;\r\n      } else {\r\n        this.usrData.phoneNo = \"\";\r\n      }\r\n      console.log(this.usrData);\r\n      this.usrData.first_name = this.usrData?.first_name ? this.usrData?.first_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      this.usrData.last_name = this.usrData?.last_name ? this.usrData?.last_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))): '';\r\n      if(this.editAccess) {\r\n        this.manageUserService.editUser(this.usrData).subscribe(\r\n            (response) => {\r\n              console.log(response);\r\n              // if (response.status === \"OK\") {\r\n                this.dialogRef.close(true);\r\n              // }\r\n            },\r\n            (error) => {\r\n              if(error === 'EMAIL_OR_PHONE_ALREADY_EXIST') {\r\n                this.error = error;\r\n              } else {\r\n                this.error = 'err_generic_message';\r\n              }\r\n              if (!this.isBlank(this.error)) {\r\n                return;\r\n              }\r\n            }\r\n        );\r\n      } else {\r\n        this.manageUserService.editGroups(this.usrData).subscribe(\r\n            (response) => {\r\n              console.log(response);\r\n              // if (response.status === \"OK\") {\r\n                this.dialogRef.close(true);\r\n              // }\r\n            },\r\n            (error) => {\r\n              if(error === 'EMAIL_OR_PHONE_ALREADY_EXIST') {\r\n                this.error = error;\r\n              } else {\r\n                this.error = 'err_generic_message';\r\n              }\r\n              if (!this.isBlank(this.error)) {\r\n                return;\r\n              }\r\n            }\r\n        );\r\n      }\r\n      // this.store$.dispatch(new ManageUsersStoreActions.EditUserRequestAction({data: this.usrData}));\r\n      // this.store$.select(ManageUsersSelectors.getUsersError)\r\n      //     .subscribe(data => {\r\n      //       this.error = data;\r\n      //       console.log(this.error);\r\n      //       if (!this.isBlank(this.error)) {\r\n      //         return;\r\n      //       }\r\n      //     });\r\n      // this.store$.select(ManageUsersSelectors.getUsersStatus)\r\n      //     .subscribe(status => {\r\n      //       if (status === 'OK') {\r\n      //         this.dialogRef.close();\r\n      //       }\r\n      //     });\r\n    }\r\n  }\r\n\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n\r\n  addGroup() {\r\n    console.log(\"iam in\");\r\n    this.valuesUpdated = true;\r\n    const AddGroup = this.dialog.open(AddgroupComponent, {\r\n      width: \"90vw\",\r\n      maxWidth: \"600px\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: { data: { selectedGroups: this.userGroups } },\r\n      disableClose: true,\r\n    });\r\n    AddGroup.afterClosed().subscribe((data) => {\r\n      if (data?.data) {\r\n        let newGroups = data?.data;\r\n        newGroups.forEach((groupId) => {\r\n          if (this.groups.find((group) => group.groupId === groupId)) {\r\n            this.userGroups.push(\r\n                this.groups.find((group) => group.groupId === groupId)\r\n            );\r\n            this.userGroups = this.userGroups.filter(group => group.ancestor.indexOf(groupId) == -1);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  saveChanges(groupId) {\r\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"645px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vw\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.savechanges.delete_title\",\r\n          text: \"manage_users_module.savechanges.text1\",\r\n        },\r\n      },\r\n      \r\n      disableClose: true,\r\n    });\r\n    SaveChanges.afterClosed().subscribe((data) => {\r\n      console.log(data);\r\n      if (data) {\r\n        this.valuesUpdated = true;\r\n        this.userGroups = this.userGroups.filter(\r\n          (group) => group.groupId !== groupId\r\n        );\r\n      }\r\n    });\r\n  }\r\n  saveRole(e) {\r\n    const SaveChanges1 = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"645px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vw\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.savechanges.change_role_title\",\r\n          text: \"manage_users_module.savechanges.text2\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    SaveChanges1.afterClosed().subscribe((data) => {\r\n      if (!data) {\r\n        let roles = this.editUserForm?.get('roles') as FormArray;\r\n        while (roles.length !== 0) {\r\n          roles.removeAt(0)\r\n        }\r\n        this.editUserForm.patchValue({'role': []});\r\n        for (let i=0; i<this.userRole.length; i++) {\r\n          roles.push(new FormControl(this.usrData.roles[i]));\r\n        }\r\n      } else {\r\n        this.onRoleChange(e);\r\n      }\r\n      console.log(this.editUserForm);\r\n    });\r\n  }\r\n  close() {\r\n    if (this.valuesUpdated) {\r\n      const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        width: \"auto\",\r\n        height: \"auto\",\r\n        maxHeight: \"80vh\",\r\n        data: {\r\n          body: {\r\n            title: \"manage_users_module.cancel_title\",\r\n            text: \"manage_users_module.cancel_text\",\r\n          },\r\n        },\r\n        disableClose: true,\r\n      });\r\n      confirm.afterClosed().subscribe((data) => {\r\n        if (data) {\r\n          this.dialogRef.close();\r\n        }\r\n      });\r\n    } else {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n  // onRoleChange(e) {\r\n  //   const rolesArray: FormArray = this.editUserForm.get('roles') as FormArray;\r\n   \r\n  //   if (e?.checked) {\r\n  //     rolesArray.push(new FormControl(e.source.value));\r\n     \r\n  //     } \r\n  //     else {\r\n  //     console.log(\"keri\")\r\n  //     let i: number = 0;\r\n  //     rolesArray.controls.forEach((item: FormControl) => {\r\n  //       console.log(item);\r\n  //       if (item.value == e.source.value) {\r\n  //         rolesArray.removeAt(i);\r\n  //         console.log(rolesArray);\r\n  //         this.userRole.removeAt(i);\r\n  //         console.log(this.userRole(i))\r\n  //         return;\r\n  //       }\r\n        \r\n  //       i++;\r\n  //     });\r\n  //   }\r\n  // }\r\nonRoleChange(e) {\r\n    const rolesArray: FormArray = this.editUserForm.get('roles') as FormArray;\r\n   \r\n    if (e?.checked) {\r\n      rolesArray.value[0][e.source.value]=1;\r\n      } \r\n      else {\r\n        rolesArray.value[0][e.source.value]=0;\r\n       }\r\n  }\r\n\r\n  \r\n  showAssignGroup(){\r\n    return this.userRole[0][\"admin\"]==1 || this.userRole[0][\"prescriber\"]==1 || this.userRole[0][\"clinician\"]==1|| this.userRole[0][\"ecg_technician\"]==1;\r\n    // return this.editUserForm.value.roles.indexOf('GC') > -1 || this.editUserForm.value.roles.indexOf('PHY') > -1;\r\n  }\r\n}\r\n","<div id=\"editUser\">\r\n    <mat-card class=\"dialog-header\">\r\n        <h1 mat-dialog-title>\r\n            {{ \"manage_users_module.edituser.edit_user\" | translate }}\r\n        </h1>\r\n        <!--<button mat-icon-button mat-dialog-close>\r\n    <mat-icon>close</mat-icon>\r\n  </button>-->\r\n    </mat-card>\r\n    <mat-dialog-content class=\"mat-dialog-popup\">\r\n        <div class=\"loading-indicator\" *ngIf=\"loader\">\r\n            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n        </div>\r\n        <form [formGroup]=\"editUserForm\" class=\"dialog-form\" *ngIf=\"!loader\" autocomplete=\"off\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.user_Id\" | translate }}\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">\r\n                        <input matInput type=\"text\" formControlName=\"user_Id\" class=\"form-control\" id=\"userId\" autocomplete=\"off\" [(ngModel)]=\"usrData.id\" />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.firstname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">\r\n                        <input matInput type=\"text\" formControlName=\"first_name\" maxlength=\"30\" class=\"form-control firstName\" id=\"firstname\" autocomplete=\"off\" placeholder=\"First Name\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" [(ngModel)]=\"usrData.first_name\"\r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"lastname\" class=\"matlabel\">{{ \"manage_users_module.adduser.lastname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">\r\n                        <input matInput formControlName=\"last_name\" maxlength=\"30\" type=\"text\" class=\"form-control firstName\" id=\"lastname\" placeholder=\"Last Name\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" [(ngModel)]=\"usrData.last_name\" />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"email\" class=\"matlabel\">{{ \"manage_users_module.adduser.emailid\" | translate }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                        <input matInput type=\"email\" formControlName=\"email\" [maxlength]=\"320\" id=\"email\" placeholder=\"Email\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" [(ngModel)]=\"usrData.email\" />\r\n                        <mat-error *ngIf=\"editUserForm.get('email').hasError('required')\">\r\n                            {{ \"manage_users_module.adduser.email_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"editUserForm.get('email').hasError('email')\">\r\n                            {{ \"manage_users_module.adduser.invalid_email\" | translate }}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"phonenumber\" class=\"matlabel\">{{ \"manage_users_module.adduser.phoneno\" | translate }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <!--        <ngx-intl-tel-input-->\r\n                    <!--          formControlName=\"phoneNo\"-->\r\n                    <!--          class=\"iti-phone2 form-control\"-->\r\n                    <!--          id=\"phonenumber\"-->\r\n                    <!--          placeholder=\"Phone number\"-->\r\n                    <!--          [ngClass]=\"{ 'is-invalid': submitted && f.phoneNo.errors }\"-->\r\n                    <!--          [selectedCountryISO]=\"CountryISO.India\"-->\r\n                    <!--          [(ngModel)]=\"phoneNum\"-->\r\n                    <!--        ></ngx-intl-tel-input>-->\r\n                    <app-tel-input formControlName=\"phoneNo\" [ngClass]=\"{ 'is-invalid': submitted && f.phoneNo.errors }\" [(ngModel)]=\"phoneNum\" [disabled]=\"!editAccess\" [class.disabled]=\"!editAccess\"></app-tel-input>\r\n                    <div *ngIf=\"f.phoneNo.errors\" class=\"required-text mt-1\">\r\n                        <mat-error *ngIf=\"!f.phoneNo.errors.required && !f.phoneNo.valid\">\r\n                            {{ \"manage_users_module.adduser.invalid_phoneno\" | translate }}\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <mat-error *ngIf=\"!isBlank(error)\" class=\"required\">\r\n                {{ \"manage_users_module.adduser.\" + error | translate }}\r\n            </mat-error>\r\n            <mat-error *ngIf=\"\r\n        submitted &&\r\n        isBlank(editUserForm.value.email) &&\r\n        isBlank(editUserForm.value.phoneNo) && editAccess\r\n      \" class=\"required\">\r\n                {{ \"manage_users_module.edituser.message1\" | translate }}\r\n            </mat-error>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group my-3\">\r\n                        <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.select_role\" | translate }}\r\n                            <label class=\"required\"> *</label>\r\n                        </mat-label>\r\n                        <div *ngFor=\"let role of roles\" class=\"d-flex flex-column mt-1\" [class.disabled]=\"!editAccess\">\r\n                            <div *ngFor=\"let usr of userRole\">\r\n                            <!-- <mat-checkbox class=\"my-1\" [value]=\"role.value\" (change)=\"onRoleChange($event)\" [checked]=\"editUserForm?.value?.roles?.indexOf(role.value) !== -1\"> -->\r\n                                <mat-checkbox class=\"my-1\" [value]=\"role.value\" (change)=\"onRoleChange($event)\" [checked]=\"usr[role.value] == 1\">\r\n                                <span> {{ role.name }}</span>\r\n                            </mat-checkbox>\r\n                            </div>\r\n                        </div>\r\n                        <ng-container *ngIf=\"submitted && f.roles.errors\" class=\"required-text\">\r\n                            <mat-error *ngIf=\"f.roles.errors.required\">\r\n                                {{ \"manage_users_module.adduser.role_required\" | translate }}\r\n                            </mat-error>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"my-4\" *ngIf=\"showAssignGroup()\" id=\"add-group\">\r\n                        <label class=\"matlabel\">{{ \"manage_users_module.adduser.assign_group\" | translate }} </label\r\n          >\r\n          <div\r\n                  *ngFor=\"let group of userGroups; let i = index\"\r\n                  class=\"d-flex align-items-center my-2\"\r\n          >\r\n            <span class=\"text-truncate lh-base\">{{ i + 1 }}. {{ group.name }} </span>\r\n            <mat-icon\r\n                    fontSet=\"material-icons-outlined\"\r\n                    class=\"ms-2 cursor-pointer\"\r\n                    (click)=\"saveChanges(group.groupId)\"\r\n            >\r\n              delete</mat-icon\r\n            >\r\n          </div>\r\n          <!--      <div *ngIf=\"submitted && isBlank(userGroups)\">-->\r\n          <!--        <mat-error class=\"required-text my-1\">-->\r\n          <!--          {{ \"manage_users_module.adduser.group_required\" | translate }}-->\r\n          <!--        </mat-error>-->\r\n          <!--      </div>-->\r\n        </div>\r\n        <button mat-flat-button (click)=\"addGroup()\" color=\"primary\" *ngIf=\"showAssignGroup()\">\r\n          {{ \"manage_users_module.adduser.groupbutton\" | translate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-4\">\r\n      <label class=\"required\">\r\n        {{ \"manage_users_module.edituser.required\" | translate }} </label\r\n      ><br />\r\n      <label class=\"required\">\r\n        {{ \"manage_users_module.edituser.message1\" | translate }}</label\r\n      ><br />\r\n    </div>\r\n            </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions *ngIf=\"!loader\" class=\"mx-4\">\r\n  <button\r\n    mat-flat-button\r\n    (click)=\"close()\"\r\n    class=\"fill-btn\"\r\n    color=\"warn\"\r\n  >\r\n    {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    type=\"submit\"\r\n    class=\"fill-btn\"\r\n    (click)=\"onSubmit()\"\r\n    color=\"primary\"\r\n  >\r\n    {{ \"manage_users_module.adduser.savebutton\" | translate }}\r\n  </button>\r\n</mat-dialog-actions>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { EdituserComponent } from \"src/app/settings/manage-users/edituser/edituser.component\";\r\nimport { AdduserComponent } from \"src/app/settings/manage-users/adduser/adduser.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  CFUser,\r\n  QueryParams,\r\n} from \"../../../interfaces/manage-users.interface\";\r\nimport {\r\n  ManageUsersSelectors,\r\n  ManageUsersStoreState,\r\n  ManageUsersStoreActions,\r\n} from \"../store\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { ManageUsersService } from \"../services/manage-users.service\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { RenameRolesComponent } from \"../rename-roles/rename-roles.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-manage-users-cfa\",\r\n  templateUrl: \"./manage-users-cfa.component.html\",\r\n  styleUrls: [\"./manage-users-cfa.component.scss\"],\r\n})\r\nexport class ManageUsersCFAComponent implements OnInit, OnDestroy {\r\n  userEditAccess = false;\r\n  config: LSTableConfig = {\r\n    id: \"manage_users_module.table\",\r\n    rowSelectEnabled: false,\r\n    // actions: {\r\n    //   show: true,\r\n    //   class: [\"d-flex\", \"align-items-center\", \"justify-content-start\"],\r\n    //   headerLabel: \"Actions\",\r\n    //   header: {\r\n    //     style: \"width: 250px\",\r\n    //   },\r\n    // },\r\n    page: {\r\n      pageIndex: 0,\r\n      pageSize: 10,\r\n    },\r\n    paginator: {\r\n      hide: false,\r\n      offline: false,\r\n    },\r\n    sort: {\r\n      active: null,\r\n      direction: null,\r\n    },\r\n    translate: true,\r\n    translateKey: \"manage_users_module.table\",\r\n    isActive: (user) => {\r\n      return user.isActive;\r\n    },\r\n  };\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"enabled\",\r\n      label: \"\",\r\n      sortable: false,\r\n    },\r\n    {\r\n      id: \"id\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"]\r\n    },\r\n    {\r\n      id: \"first_name\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"font-size-16\"],\r\n      style: \"max-width: 300px; width: 300px;\",\r\n    },\r\n    {\r\n      id: \"email\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-left\",\"text-truncate\"],\r\n      style: \"max-width: 220px; width: 220px;\",\r\n    },\r\n    {\r\n      id: \"phoneNo\",\r\n      sortable: false,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-left\"]\r\n    },\r\n    {\r\n      id: \"roles\",\r\n      sortable: false,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-left\"],\r\n      style: \"min-width: 150px\",\r\n    },\r\n    {\r\n      id: \"actions_col\",\r\n      sortable: false,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n      style: \"width: 250px\",\r\n    }\r\n  ];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private store$: Store<ManageUsersStoreState.ManageUsersState>,\r\n    private autheticationService: AuthenticationService,\r\n    private usersService: ManageUsersService,\r\n    private snackbar: SnackbarService\r\n  ) { }\r\n\r\n  usersList$: Observable<CFUser[]>;\r\n  cfId: string;\r\n  role: string;\r\n  roles: string[];\r\n  loader = true;\r\n  searchText = \"\";\r\n  adminUsersList: CFUser[];\r\n  usersCount$;\r\n  loaderSubscription;\r\n  ngOnInit() {\r\n    this.cfId = this.autheticationService.getCfId();\r\n    this.roles = this.autheticationService.getRoles() || [];\r\n    if (this.roles?.indexOf(\"CFA\") > -1 || this.roles?.indexOf(\"CFAC\") > -1) {\r\n      this.role = \"CFA\";\r\n      this.userEditAccess = true;\r\n    } else if (this.roles?.indexOf(\"SC\") > -1) {\r\n      this.role = \"SC\";\r\n    } else {\r\n      this.role = this.roles[0];\r\n    }\r\n    this.usersList$ = this.store$.select(ManageUsersSelectors.getUsersList);\r\n    this.getUsersList();\r\n    this.store$.select(ManageUsersSelectors.getTableStatus)\r\n      .subscribe(tableState => {\r\n        this.config = {\r\n          ...this.config,\r\n          tableState\r\n        }\r\n      });\r\n    this.usersCount$ = this.store$.select(ManageUsersSelectors.getUsersCount);\r\n    this.usersCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n  }\r\n  addUser() {\r\n    const Adduser = this.dialog.open(AdduserComponent, {\r\n      autoFocus: false,\r\n      maxWidth: \"90vw\",\r\n      width: \"700px\",\r\n      height: \"auto\",\r\n      maxHeight: \"95vh\",\r\n      data: { dialogueData: {} },\r\n      disableClose: true,\r\n    });\r\n    Adduser.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.loader = true;\r\n        this.config.page.pageIndex = 0;\r\n        this.getUsersList();\r\n      }\r\n    });\r\n  }\r\n\r\n  editUser(userId) {\r\n    let Edituser;\r\n    this.usersService.getUser(userId).subscribe((res: any) => {\r\n      if (res.data.isActive || this.userEditAccess) {\r\n        Edituser = this.dialog.open(EdituserComponent, {\r\n          maxWidth: \"90vw\",\r\n          width: \"700px\",\r\n          height: \"auto\",\r\n          maxHeight: \"95vh\",\r\n          data: { userData: userId, editAccess: this.userEditAccess },\r\n          disableClose: true,\r\n        });\r\n        Edituser.afterClosed().subscribe((data) => {\r\n          if (data) {\r\n            this.getUsersList();\r\n          }\r\n        });\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_users_module.user_disabled\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  getUsersList() {\r\n    console.log(this.config);\r\n    let url = \"clinical-facilities/\" + this.cfId + \"/users\";\r\n    let param: QueryParams = {\r\n      url: url,\r\n      page: this.config?.page?.pageIndex + 1,\r\n      size: this.config?.page?.pageSize,\r\n      sortBy: (this.config?.sort?.direction) ? `${this.config?.sort?.active}` : \"\",\r\n      searchText: this.searchText,\r\n      sortOrder:this.config?.sort?.direction\r\n    };\r\n    console.log(param);\r\n    this.store$.dispatch(\r\n      new ManageUsersStoreActions.LoadAdminUsersRequestAction({ params: param })\r\n    );\r\n  }\r\n  sort(event: Sort) {\r\n    this.config.sort = {\r\n      ...event,\r\n    };\r\n    this.getUsersList();\r\n  }\r\n  search() {\r\n    this.loader = true;\r\n    this.config.page.pageIndex = 0;\r\n    this.getUsersList();\r\n  }\r\n  clear() {\r\n    this.searchText = '';\r\n    this.search();\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  changeUserStatus(user, event) {\r\n    if (event.checked) {\r\n      this.usersService.enableUser(user.id).subscribe(\r\n        (res: any) => {\r\n          user.enable = true;\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.\"+res.message, 'bottom', 'center', true);\r\n        },\r\n        (err) => {\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.update_failed\", 'bottom', 'center', true);\r\n          user.enable = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.usersService.disableUser(user).subscribe(\r\n        (res: any) => {\r\n          user.enable = false;\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.\"+res.message, 'bottom', 'center', true);\r\n        },\r\n        (err) => {\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.update_failed\", 'bottom', 'center', true);\r\n          user.enable = true;\r\n        }\r\n      );\r\n    }\r\n  }\r\n  resetPassword(userId) {\r\n    this.usersService.resetPassword(userId).subscribe((response: any) => {\r\n      if (response.status === \"OK\") {\r\n        this.snackbar.openCustomSnackBar(\"manage_users_module.Reset_success\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  confirmResetPassword(userId) {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"85vw\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.reset_password\",\r\n          text: \"manage_users_module.reset_password_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      console.log(data);\r\n      if (data) {\r\n        this.resetPassword(userId);\r\n      }\r\n    });\r\n  }\r\n  confirmEnableDisable(user, event) {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"85vw\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.change_status\",\r\n          text: \"manage_users_module.change_status_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.changeUserStatus(user, event);\r\n      } else {\r\n        user.isActive = !event.checked;\r\n      }\r\n    });\r\n  }\r\n  onPage(event: PageEvent) {\r\n    // this.loader = true;\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getUsersList();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.loaderSubscription)\r\n      this.loaderSubscription.unsubscribe();\r\n  }\r\n  renameRoles() {\r\n    const renameRoles = this.dialog.open(RenameRolesComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"900px\",\r\n      height: \"auto\",\r\n      maxHeight: \"95vh\",\r\n      disableClose: true,\r\n    });\r\n    renameRoles.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.loader = true;\r\n        this.getUsersList();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ls-page-header type=\"manage_users\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group my-2\" *ngIf=\"userEditAccess\">\r\n                <button mat-flat-button color=\"primary\" type=\"button\" class=\"mx-2\" (click)=\"renameRoles()\" [disabled]=\"true\">\r\n                    {{ \"manage_users_module.rename_roles_button\" | translate }}\r\n                </button>\r\n                <button mat-flat-button color=\"accent\" type=\"button\" class=\"mx-2\" (click)=\"addUser()\">\r\n                    {{ \"manage_users_module.add_user_button\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\" *ngIf=\"userEditAccess\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <button mat-menu-item (click)=\"renameRoles()\" [disabled]=\"true\">\r\n                        {{ \"manage_users_module.rename_roles_button\" | translate }}\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"addUser()\">\r\n                        {{ \"manage_users_module.add_user_button\" | translate }}\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"table-container table-responsive-md px-3\">\r\n\r\n    <div class=\"table-scroll comman-table-users without-tab-table head-border\">\r\n        <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"usersList$ | async\" (sortChange)=\"sort($event)\" (page)=\"onPage($event)\">\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row\">\r\n                    <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">\r\n                            <mat-label>{{ \"manage_users_module.search\" | translate }}</mat-label>\r\n                            <input [(ngModel)]=\"searchText\" matInput [placeholder]=\"'manage_users_module.search' | translate\" type=\"search\" (keyup)=\"search()\" id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchText\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template lsWidgetName=\"enabled\" let-user>\r\n                <span class=\"d-flex align-items-center\">\r\n                    <mat-slide-toggle [checked]=\"user?.enable\" (change)=\"confirmEnableDisable(user, $event)\"\r\n                        [(ngModel)]=\"user.enable\" [disabled]=\"!userEditAccess\">\r\n                    </mat-slide-toggle>\r\n                </span>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"userId\" let-user>\r\n                {{ user?.id }}\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"first_name\" let-user>\r\n                <div class=\"d-flex\"><span   [matTooltip]=\"user?.first_name\" matTooltipPosition=\"below\" class=\"text-truncate d-block pe-1\" [matTooltipDisabled]=\"user?.first_name?.length < 15 \">{{ user?.first_name }}</span>\r\n                <span [matTooltip]=\"user.last_name\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"user?.last_name?.length < 15 \">{{ user?.last_name }}</span></div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"email\" let-user>\r\n                {{ user?.email || \"-\"}}\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"phoneNo\"  let-user>\r\n                {{ user?.mobile || \"-\"}}\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"roles\" let-user>\r\n                <span *ngFor=\"let role of user?.roles\">\r\n                <label *ngIf=\"role['admin'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(244, 237, 211, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">Admin</span></label>\r\n                <label *ngIf=\"role['prescriber'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(160, 207, 180, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">prescriber</span></label>\r\n                <label *ngIf=\"role['interpreter'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(212, 228, 244, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">interpreter</span></label>\r\n                <label *ngIf=\"role['ecg_technician'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(225, 202, 255, 1) !important\"><span class=\"roleslabelscontent\">\r\n                    ecg technician</span></label>\r\n                <label *ngIf=\"role['clinician'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(237, 218, 218, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">nurse/Clinician</span></label>       \r\n                <!-- <label *ngIf=\"role!== 'GC' && role !== 'SC' && role !== 'PHY' && role !== 'CFAC'\" class=\"roleslabels me-2\" style=\"background: rgba(222, 210, 78, 0.56) !important\">\r\n                    <span class=\"roleslabelscontent\">{{ role}}</span></label> -->\r\n                </span>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"actions_col\" let-user>\r\n                <span *ngIf=\"userEditAccess\">\r\n                    <button mat-mini-fab class=\"me-3 btn-boxed btn-no-shadow\" color=\"primary\"\r\n                        (click)=\"editUser(user.id)\">\r\n                        <mat-icon>edit</mat-icon>\r\n                    </button>\r\n                    <button mat-flat-button color=\"primary\" class=\"me-2 reset-btn\" [disabled]=\"!user.isActive\"\r\n                        (click)=\"confirmResetPassword(user.id)\">\r\n                        <mat-icon>refresh</mat-icon>\r\n                        {{ \"manage_users_module.reset_password\" | translate }}\r\n                    </button>\r\n                </span>\r\n                <span *ngIf=\"!userEditAccess\">\r\n                    <button mat-flat-button color=\"primary\" class=\"me-2\" [disabled]=\"!user.isActive || (user?.roles?.indexOf('SC')>-1)\"\r\n                        (click)=\"editUser(user.id)\">\r\n                        {{ \"manage_users_module.manage_group\" | translate }}\r\n                    </button>\r\n                </span>\r\n            </ng-template>\r\n        </ls-table>\r\n    </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { I18nModule } from \"../../i18n/i18n.module\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport * as fromManageUsers from \"./store/manage-users.reducer\";\nimport { ManageUsersEffects } from \"./store/manage-users.effects\";\nimport { ManageUsersCFAComponent } from \"./manage-users-cfa/manage-users-cfa.component\";\nimport { AdduserComponent } from \"./adduser/adduser.component\";\nimport { EdituserComponent } from \"./edituser/edituser.component\";\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { AddgroupComponent } from \"./addgroup/addgroup.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { ManageUsersService } from \"./services/manage-users.service\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { NgxIntlTelInputModule } from \"ngx-intl-tel-input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { LifeSignalsModule } from \"src/app/life-signals/life-signals.module\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport {MatMenuModule} from '@angular/material/menu';\nimport { RenameRolesComponent } from './rename-roles/rename-roles.component';\n\n@NgModule({\n  declarations: [\n    ManageUsersCFAComponent,\n    AdduserComponent,\n    EdituserComponent,\n    AddgroupComponent,\n    RenameRolesComponent,\n  ],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\n      fromManageUsers.manageUsersFeatureKey,\n      fromManageUsers.ManageUsersReducer\n    ),\n    EffectsModule.forFeature([ManageUsersEffects]),\n    MatCheckboxModule,\n    MatInputModule,\n    FormsModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    I18nModule,\n    MatPaginatorModule,\n    SharedModule,\n    MatMenuModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    NgxIntlTelInputModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatButtonModule,\n    LifeSignalsModule,\n    MatCardModule,\n  ],\n  providers: [\n    {\n      provide: ManageUsersService,\n      useClass: ManageUsersService,\n    },\n  ],\n  exports: [],\n})\nexport class ManageUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {ConfirmDialogComponent} from \"../../../shared/confirm-dialog/confirm-dialog.component\";\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\n\n@Component({\n  selector: 'app-rename-roles',\n  templateUrl: './rename-roles.component.html',\n  styleUrls: ['./rename-roles.component.scss']\n})\nexport class RenameRolesComponent implements OnInit {\n  valuesUpdated = false;\n  editCurrent = [false];\n  constructor(private dialogRef: MatDialogRef<MatDialogRef<RenameRolesComponent>>,\n              private dialog: MatDialog) { }\n  rolesdata = [\n    {\n      role: \"CFA\",\n      default: \"Admin\",\n      current: \"Administrator\"\n    },\n    {\n      role: \"SC\",\n      default: \"Supervisory Nurse\",\n      current: \"Staff Nurse\"\n    },\n    {\n      role: \"GC\",\n      default: \"General Nurse\",\n      current: \"Nurse\"\n    },\n    {\n      role: \"PHY\",\n      default: \"Physician\",\n      current: \"Doctor\"\n    }\n\n  ]\n  config: LSTableConfig = {\n    id: \"manage_users_module.rename_roles\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"manage_users_module.rename_roles\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"default\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"min-width: 450px\",\n    },\n    {\n      id: \"current\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n    }\n  ];\n  ngOnInit(): void {\n    let roles = [];\n    this.rolesdata.forEach((role, i) => {\n      roles.push({\n        ...role,\n        index: i\n      })\n    });\n    this.rolesdata = roles;\n  }\n  close() {\n    if (this.valuesUpdated) {\n      const confirm = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: \"90vw\",\n        width: \"auto\",\n        height: \"auto\",\n        maxHeight: \"80vh\",\n        data: {\n          body: {\n            title: \"manage_users_module.cancel_title\",\n            text: \"manage_users_module.cancel_text\",\n          },\n        },\n        disableClose: true,\n      });\n      confirm.afterClosed().subscribe((data) => {\n        if (data) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n  onSubmit(){\n    this.dialogRef.close();\n  }\n  editRole(index, editStatus) {\n    this.editCurrent[index] = editStatus;\n  }\n\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{ \"manage_users_module.rename_roles_button\" | translate }}\n    </h1>\n</mat-card>\n<mat-dialog-content class=\"mat-dialog-popup rename-roleModal\">\n    <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"rolesdata\">\n        <ng-template lsWidgetName=\"default\" let-role>\n            <span class=\"mx-2\">{{ role?.default }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"current\" let-role>\n            <div class=\"d-flex align-items-center\">\n            <input matInput type=\"text\" [(ngModel)]=\"role.current\" class=\"input-field fw-bold\"\n            [disabled]=\"!editCurrent[role?.index]\" [ngClass]=\"{'disabled' : !editCurrent[role?.index]}\">\n            <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n            *ngIf=\"editCurrent[role?.index]\" (click)=\"editRole(role?.index, false)\">\n                <mat-icon>done</mat-icon>\n            </button>\n            <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                    *ngIf=\"!editCurrent[role?.index]\" (click)=\"editRole(role?.index, true)\">\n                <mat-icon>edit</mat-icon>\n            </button>\n            </div>\n        </ng-template>\n    </ls-table>\n</mat-dialog-content>\n<mat-dialog-actions class=\"mx-4\">\n    <button\n            mat-flat-button\n            (click)=\"close()\"\n            class=\"fill-btn\"\n            color=\"warn\"\n    >\n        {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\n    </button>\n    <button\n            mat-flat-button\n            type=\"submit\"\n            [disabled]=\"!valuesUpdated\"\n            class=\"fill-btn\"\n            (click)=\"onSubmit()\"\n            color=\"primary\"\n    >\n        {{ \"manage_users_module.adduser.savebutton\" | translate }}\n    </button>\n</mat-dialog-actions>\n","import * as ManageUsersStoreActions from \"./manage-users.actions\";\nimport * as ManageUsersSelectors from \"./manage-users.selector\";\nimport * as ManageUsersStoreState from \"./manage-users.reducer\";\n\nexport { ManageUsersStoreActions, ManageUsersSelectors, ManageUsersStoreState };\n","import { Action } from \"@ngrx/store\";\nimport {\n  AddUser,\n  CFUser,\n  CFUserList,\n  QueryParams,\n} from \"../../../interfaces/manage-users.interface\";\n\nexport enum ActionTypes {\n  LOAD_ADMIN_USERS_REQUEST = \"[MANAGEUSERS] Load Admin Users List Request\",\n  LOAD_ADMIN_USERS_FAILURE = \"[MANAGEUSERS] Load Admin Users List Failure\",\n  LOAD_ADMIN_USERS_SUCCESS = \"[MANAGEUSERS] Load Admin Users List Success\",\n  ADD_USER_REQUEST = \"[MANAGEUSERS] Add User Request\",\n  ADD_USER_FAILURE = \"[MANAGEUSERS] Add User Failure\",\n  ADD_USER_SUCCESS = \"[MANAGEUSERS] Add User Success\",\n  EDIT_USER_REQUEST = \"[MANAGEUSERS] Add User Request\",\n  EDIT_USER_FAILURE = \"[MANAGEUSERS] Add User Failure\",\n  EDIT_USER_SUCCESS = \"[MANAGEUSERS] Add User Success\",\n}\nexport class LoadAdminUsersRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_ADMIN_USERS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadAdminUsersFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_ADMIN_USERS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadAdminUsersSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_ADMIN_USERS_SUCCESS;\n  constructor(public payload: { data: CFUserList }) {}\n}\nexport class AddUserRequestAction implements Action {\n  readonly type = ActionTypes.ADD_USER_REQUEST;\n  constructor(public payload: { data: CFUser }) {}\n}\nexport class AddUserFailureAction implements Action {\n  readonly type = ActionTypes.ADD_USER_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class AddUserSuccessAction implements Action {\n  readonly type = ActionTypes.ADD_USER_SUCCESS;\n  constructor(public payload: { data: AddUser }) {}\n}\nexport class EditUserRequestAction implements Action {\n  readonly type = ActionTypes.EDIT_USER_REQUEST;\n  constructor(public payload: { data: CFUser }) {}\n}\nexport class EditUserFailureAction implements Action {\n  readonly type = ActionTypes.EDIT_USER_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class EditUserSuccessAction implements Action {\n  readonly type = ActionTypes.EDIT_USER_SUCCESS;\n  constructor(public payload: { data: AddUser }) {}\n}\nexport type ManageUsersActions =\n  | LoadAdminUsersRequestAction\n  | LoadAdminUsersFailureAction\n  | LoadAdminUsersSuccessAction\n  | AddUserFailureAction\n  | AddUserSuccessAction\n  | AddUserRequestAction\n  | EditUserRequestAction\n  | EditUserFailureAction\n  | EditUserSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport {  of as observableOf } from \"rxjs\";\nimport { catchError, map,  mergeMap } from \"rxjs/operators\";\nimport * as featureActions from \"./manage-users.actions\";\nimport { ManageUsersService } from \"../services/manage-users.service\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\n@Injectable()\nexport class ManageUsersEffects {\n  constructor(\n    private manageUsersService: ManageUsersService,\n    private actions$: Actions,\n   \n  ) {}\n\n  @Effect()\n  loadAdminUsersRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadAdminUsersRequestAction>(\n      featureActions.ActionTypes.LOAD_ADMIN_USERS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageUsersService.getAdminUsersList(action.payload.params).pipe(\n        map((data) => new featureActions.LoadAdminUsersSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(\n            new featureActions.LoadAdminUsersFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n  @Effect()\n  AddUserRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.AddUserRequestAction>(\n      featureActions.ActionTypes.ADD_USER_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageUsersService.addUser(action.payload.data).pipe(\n        map((data) => new featureActions.AddUserSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.AddUserFailureAction({ error }))\n        )\n      )\n    )\n  );\n\n  // @Effect({dispatch: false})\n  EditUserRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.EditUserRequestAction>(\n      featureActions.ActionTypes.EDIT_USER_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageUsersService.editUser(action.payload.data).pipe(\n        map((data) => new featureActions.EditUserSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.EditUserFailureAction({ error }))\n        )\n      )\n    )\n  );\n}\n","import { TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { CFUser } from \"../../../interfaces/manage-users.interface\";\r\nimport { ActionTypes, ManageUsersActions } from \"./manage-users.actions\";\r\n\r\nexport interface ManageUsersState {\r\n  USERS_LIST: CFUser[];\r\n  error: string;\r\n  status: string;\r\n  loaded: boolean;\r\n  code:number;\r\n  tableState: TableState;\r\n  usersCount: number;\r\n}\r\n\r\nconst initialManageUsersState: ManageUsersState = {\r\n  USERS_LIST: [],\r\n  error: \"\",\r\n  status: \"\",\r\n  code:0,\r\n  loaded: false,\r\n  tableState: TableState.DEFAULT,\r\n  usersCount: 0,\r\n};\r\n\r\nexport const manageUsersFeatureKey = \"manageusers\";\r\n\r\nexport function ManageUsersReducer(\r\n  state: ManageUsersState = initialManageUsersState,\r\n  action: ManageUsersActions\r\n) {\r\n  switch (action.type) {\r\n    case ActionTypes.LOAD_ADMIN_USERS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loaded: false,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ADMIN_USERS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ADMIN_USERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        USERS_LIST: action.payload.data.data.items,\r\n        loaded: true,\r\n        usersCount: action.payload.data.data.total,\r\n        tableState: TableState.SUCCESS\r\n      };\r\n    }\r\n    case ActionTypes.ADD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        status: null,\r\n        loaded: false,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ADD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loaded: true,\r\n        tableState: TableState.FAILURE\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ADD_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        USERS_LIST: [action.payload.data.data, ...state.USERS_LIST],\r\n        status: action.payload.data.status,\r\n        loaded: true,\r\n        tableState: TableState.SUCCESS\r\n      };\r\n    }\r\n    case ActionTypes.EDIT_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        status: null,\r\n        loaded: false,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.EDIT_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loaded: true,\r\n        tableState: TableState.FAILURE\r\n      };\r\n    }\r\n\r\n    case ActionTypes.EDIT_USER_SUCCESS: {\r\n      const updatedlist = state.USERS_LIST.map((user) => {\r\n        return action.payload.data.data.id === user.id\r\n          ? action.payload.data.data\r\n          : user;\r\n      });\r\n      return {\r\n        ...state,\r\n        USERS_LIST: updatedlist,\r\n        status: action.payload.data.status,\r\n        loaded: true,\r\n        tableState: TableState.SUCCESS\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport {\r\n  ManageUsersState,\r\n  manageUsersFeatureKey,\r\n} from \"./manage-users.reducer\";\r\n\r\nconst getUsersState = createFeatureSelector<ManageUsersState>(\r\n  manageUsersFeatureKey\r\n);\r\n\r\nexport const getUsersList = createSelector(\r\n  getUsersState,\r\n  (state) => state?.USERS_LIST\r\n);\r\n\r\nexport const getUsersError = createSelector(\r\n  getUsersState,\r\n  (state) => state?.error\r\n);\r\nexport const getUsersStatus = createSelector(\r\n  getUsersState,\r\n  (state) => state?.status\r\n);\r\nexport const getUsersCode = createSelector(\r\n  getUsersState,\r\n  (state) => state?.code\r\n);\r\nexport const getLoaderStatus = createSelector(\r\n  getUsersState,\r\n  (state) => state?.loaded\r\n);\r\nexport const getTableStatus = createSelector(\r\n  getUsersState,\r\n  (state) => state?.tableState\r\n);\r\nexport const getUsersCount = createSelector(\r\n  getUsersState,\r\n  (state) => state?.usersCount\r\n);\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  MiscellaneousData, spo2ConfigData, spo2Data,\n} from \"../../interfaces/misc-settings.interface\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  MiscellaneousSettingsStoreSelectors,\n  MiscellaneousSettingsStoreState,\n  MiscellaneousSettingsStoreActions,\n} from \"./store\";\nimport { Observable } from \"rxjs\";\nimport { MiscellaneousSettingsService } from \"./services/miscellaneous-settings.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { ConfirmDialogComponent } from \"../../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-miscellaneous\",\n  templateUrl: \"./miscellaneous.component.html\",\n  styleUrls: [\"./miscellaneous.component.scss\"],\n})\nexport class MiscellaneousComponent implements OnInit, OnDestroy {\n  selectedTab = \"spo2\";\n  headerColumnsBiosensor = [\n    \"\",\n    \"additional_devices.relay_password\",\n    \"additional_devices.hospital_ssid\",\n    \"additional_devices.hospital_password\",\n  ];\n  settings = [{\n    option: 'Enable',\n    value: true\n  },\n    {\n      option: 'Disable',\n      value: false\n    }\n  ];\n  ecgSettings = [\"244\", \"976\"];\n  miscellaneousSettings: MiscellaneousData;\n  spo2Settings: spo2Data;\n  miscellaneousCopy: MiscellaneousData;\n  spo2SettingsCopy:spo2Data\n  editOnTime = false;\n  editOffTime = false;\n  editInterval = false;\n  editSsid1 = false;\n  editSsid2 = false;\n  editPass1 = false;\n  editPass2 = false;\n  regex = /[^*/ ]/gi;\n  error: string;\n  miscellaneousSettings$: Observable<MiscellaneousData>;\n  spo2Settings$: Observable<spo2ConfigData>;\n  miscellaneousSettingsStatus$: Observable<string>;\n  miscellaneousSettingsMessage$: Observable<string>;\n  role: string;\n  editFacilityName = false;\n  fileName = \"\";\n  groups;\n  clinicalGroups = [];\n  locationGroups = [];\n  groupId = \"\";\n  clinicalGroupId;\n  locationGroupId;\n  cfId: string;\n  signedUrl = \"\";\n  facilityName;\n  submitted = false;\n  invalidon = false;\n  invalidoff = false;\n  invalidInterval = false;\n  roles: string[];\n  invalidFormat = false;\n  loader = true;\n  settingSubscription: any;\n  spo2Subscription: any;\n  errorSubscription: any;\n  loaderSubscription: any;\n  valuesUpdated = false;\n  editAccessCFA = false;\n  editAccessSC = false;\n  imgUrl;\n  patientBarCode;\n  minOnOFF = 1;\n  maxOnOff = 7200;\n  minOn = 3;\n  maxOn = 1440;\n  minOff = 2;\n  maxOff = 27;\n  invalid_msg;\n  pasteData;\n  patientIdentification = [\"MRN\", \"PID\"];\n  emrList: Array<string> = [];\n  groupsView;\n  facility;\n  constructor(\n    private store$: Store<MiscellaneousSettingsStoreState.MiscellaneousSettingsState>,\n    private snackbar: SnackbarService,\n    private miscellaneousService: MiscellaneousSettingsService,\n    private autheticationService: AuthenticationService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.miscellaneousService.getEmrList().subscribe((response: any) => {\n      if (response.data.length > 0) {\n        this.emrList = response.data;\n      }\n    });\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles() || [];\n    if (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"CFAC\") > -1) {\n      this.role = \"CFA\";\n      this.editAccessCFA = true;\n    } else if (this.roles.indexOf(\"SC\") > -1) {\n      this.role = \"SC\";\n      this.editAccessSC = true;\n    } else {\n      this.role = this.roles[0];\n    }\n    this.facility = sessionStorage.getItem(\"facilityName\") || '';\n    if([\"SC\", \"GC\", \"PHY\"].some((ai) => this.roles.includes(ai))) {\n      this.groupsView = true;\n    } if (this.groupsView) {\n      this.miscellaneousService.getGroups(this.cfId).subscribe((response) => {\n        if (response.status === \"OK\") {\n          this.groups = response.data;\n          this.clinicalGroups = this.groups.filter(g => g.type === \"CLINICAL\");\n          this.locationGroups = this.groups.filter(g => g.type === \"PHYSICAL\");\n          if (this.roles.indexOf('CFAC') > -1) {\n            this.clinicalGroups.unshift({groupId: null, name: 'None'});\n            this.locationGroups.unshift({groupId: null, name: 'None'});\n          } else {\n            if (this.locationGroups.length > 0) {\n              let parentGroups = this.locationGroups.filter(grp => grp.parent === 'ROOT');\n              this.locationGroups.forEach(group => {\n                if (group.parent !== 'ROOT' && !(this.locationGroups.find(grp => grp.groupId === group.parent))) {\n                  parentGroups.push(group);\n                }\n              });\n              this.groupId = parentGroups[0].groupId;\n              this.locationGroupId = parentGroups[0].groupId;\n            } else if (this.clinicalGroups.length > 0) {\n              let parentGroups = this.clinicalGroups.filter(grp => grp.parent === 'ROOT');\n              this.locationGroups.forEach(group => {\n                if (group.parent !== 'ROOT' && !(this.clinicalGroups.find(grp => grp.groupId === group.parent))) {\n                  parentGroups.push(group);\n                }\n              });\n              this.groupId = parentGroups[0].groupId;\n              this.clinicalGroupId = parentGroups[0].groupId;\n            } else {\n              // this.openSnackBar(\"no_groups\");\n              this.loader = false;\n            }\n          }\n          if(this.groupId) {\n            this.getMiscSettings();\n            this.getSpo2Settings();\n          }\n        }\n      });\n    }\n    if (this.role === \"CFA\") {\n      this.getMiscSettings();\n      this.getSpo2Settings();\n    }\n    this.miscellaneousSettings$ = this.store$.select(\n      MiscellaneousSettingsStoreSelectors.getMiscellaneousSettings\n    );\n    this.spo2Settings$ = this.store$.select(\n      MiscellaneousSettingsStoreSelectors.getSpo2Settings\n    );\n    this.miscellaneousSettingsMessage$ = this.store$.select(\n      MiscellaneousSettingsStoreSelectors.getMiscellaneousMessage\n    );\n    this.spo2Subscription = this.spo2Settings$.subscribe((data) => {\n      this.spo2Settings = { ...data.data };\n      this.spo2SettingsCopy = JSON.parse(\n        JSON.stringify(this.spo2Settings)\n      );\n\n    });\n    this.settingSubscription = this.miscellaneousSettings$.subscribe((data) => {\n      this.miscellaneousSettings = { ...data };\n      this.miscellaneousCopy = JSON.parse(\n        JSON.stringify(this.miscellaneousSettings)\n      );\n\n\n      let signedUrl = this.miscellaneousSettings?.otherSettings?.facilityLogo;\n      //let facilityName = this.miscellaneousSettings?.otherSettings?.facilityName;\n      sessionStorage.setItem(\"facility-logo\", signedUrl);\n      //sessionStorage.setItem(\"facilityName\", facilityName);\n      this.autheticationService.getCustomizationLogo(true);\n      this.imgUrl = signedUrl;\n      this.facilityName =\n        this.miscellaneousSettings?.otherSettings?.facilityName;\n      this.closeEdit();\n      if (!this.loader) {\n        this.miscellaneousSettingsMessage$.subscribe((message) => {\n          if (!this.isBlank(message)) {\n            this.snackbar.openCustomSnackBar(\"additional_devices.messages.\"+ message, 'bottom', 'center', true);\n          }\n        });\n      }\n      this.submitted = false;\n      this.closeEdit();\n    });\n    this.errorSubscription = this.store$\n      .select(MiscellaneousSettingsStoreSelectors.getMiscellaneousError)\n      .subscribe((data) => {\n        this.error = data;\n        if (!this.isBlank(this.error)) {\n          this.snackbar.openCustomSnackBar(\"additional_devices.messages.OPERATION_FAILED\", 'bottom', 'center', true);\n        }\n      });\n    this.loaderSubscription = this.store$\n      .select(MiscellaneousSettingsStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        if (loaded) {\n          this.loader = false;\n        }\n      });\n  }\n  getMiscSettings() {\n    let url = \"\";\n    if (!this.groupId) {\n      url = \"clinical-facilities/\" + this.cfId + \"/misc-settings\";\n    } else {\n      url =\n        \"clinical-facilities/\" +\n        this.cfId +\n        \"/groups/\" +\n        this.groupId +\n        \"/misc-settings\";\n    }\n    console.log(url);\n    this.store$.dispatch(\n      new MiscellaneousSettingsStoreActions.loadMiscellaneousSettingsRequestAction(\n        { url }\n      )\n    );\n  }\n  getSpo2Settings() {\n    let url = \"\";\n    if (!this.groupId) {\n      url = \"spo2-config/root/\" + this.cfId ;\n    } else {\n      url =\n        \"spo2-config/group/\" +\n        this.cfId +\n        \"/\" +\n        this.groupId ;\n    }\n    this.store$.dispatch(\n      new MiscellaneousSettingsStoreActions.loadSpo2SettingsRequestAction(\n        { url }\n      )\n    );\n  }\n  getMiscSettingsGrp(event, type) {\n    this.groupId = event;\n    if(this.groupId) {\n      this.editAccessCFA = false;\n      this.editAccessSC = [\"SC\"].some((ai) => this.roles.includes(ai));\n      if (type === 'CLINICAL') {\n        this.locationGroupId = null;\n        this.clinicalGroupId = event;\n      } else {\n        this.clinicalGroupId = null;\n        this.locationGroupId = event;\n      }\n      this.closeEdit();\n      this.loader = true;\n      let url =\n          \"clinical-facilities/\" +\n          this.cfId +\n          \"/groups/\" +\n          this.groupId +\n          \"/misc-settings\";\n      console.log(url);\n      this.store$.dispatch(\n          new MiscellaneousSettingsStoreActions.loadMiscellaneousSettingsRequestAction(\n              {url}\n          )\n      );\n    } else {\n      this.editAccessCFA = true;\n      this.loader = true;\n      this.getMiscSettings()\n    }\n    this.getSpo2Settings();\n  }\n  selectTab(value) {\n    this.selectedTab = value;\n  }\n  async updateSettings() {\n    this.invalidFormat = false;\n    this.fileName = \"\";\n    if (this.miscellaneousSettings?.bioSensorConfigSettings) {\n      this.submitted = true;\n      if (!(this.miscellaneousSettings?.bioSensorConfigSettings[0]?.relayPassword.trim() &&\n        this.miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalSSID.trim() &&\n        this.miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalPassword.trim())) {\n        return false;\n      }\n    }\n    this.loader = true;\n    this.miscellaneousSettings.otherSettings.facilityName = this.facilityName;\n    // this.store$.dispatch(\n    //   new MiscellaneousSettingsStoreActions.updateMiscellaneousSettingsRequestAction(\n    //     { data: this.miscellaneousSettings }\n    //   )\n    // );\n    // this.miscellaneousSettings.thirdPartyDeviceSettings.map(setting => {\n    //   if(setting.type === 'SPO2') {\n    //     setting.dutyCycle = Math.round((setting.onTime/(setting.onTime + setting.offTime))*100)\n    //   }\n    // });\n    this.miscellaneousService.updateSettings(this.miscellaneousSettings)\n      .subscribe(res => {\n        if (res.status === \"OK\") {\n          this.snackbar.openCustomSnackBar(\"additional_devices.messages.\" + res.message, 'bottom', 'center', true);\n          this.getMiscSettings();\n        }\n      });\n    if (JSON.stringify(this.spo2Settings) !== JSON.stringify(this.spo2SettingsCopy)) {\n      let url = !this.groupId ? \"spo2-config/root-edit\" : \"spo2-config/group-edit\"\n      if(this.groupId) {\n        this.spo2Settings.GroupId = this.groupId;\n      }\n      this.miscellaneousService.updateSpo2Settings(this.spo2Settings, url)\n        .subscribe(res => {\n          if (res.message === \"ALERT_SETTINGS_UPDATED\") {\n            this.snackbar.openCustomSnackBar(\"additional_devices.messages.spo2Config_settings_updated\", 'bottom', 'center', true);\n            this.getSpo2Settings();\n          }\n        });\n    }\n  }\n  factoryReset() {\n    let url = \"\";\n    let spo2Url =\"\"\n    this.fileName = \"\";\n    this.submitted = false;\n    this.invalidFormat = false;\n    this.invalidon = false;\n    this.invalidoff = false;\n    this.invalidInterval = false;\n    if (!this.groupId) {\n      url = \"clinical-facilities/\" + this.cfId + \"/misc-settings/factory-reset\";\n      spo2Url = \"spo2-config/factory-reset/\" + this.cfId + \"/\"+this.spo2Settings?.Spo2ConfigId;\n    } else {\n      url =\n        \"clinical-facilities/\" +\n        this.cfId +\n        \"/groups/\" +\n        this.groupId +\n        \"/misc-settings/factory-reset\";\n        spo2Url = \"spo2-config/group-reset/\" + this.cfId + \"/\"+this.spo2Settings?.GroupId;\n    }\n    this.loader = true;\n    this.store$.dispatch(\n      new MiscellaneousSettingsStoreActions.resetMiscellaneousSettingsRequestAction(\n        { url }\n      )\n    );\n\n    this.miscellaneousService.resetSpo2Settings(spo2Url)\n        .subscribe(res => {\n          if(res.status === \"OK\") {\n            this.getSpo2Settings();\n          }\n        })\n  }\n  showEditOnTime() {\n    this.editOnTime= true;\n  }\n  hideEditOnTime() {\n    this.editOnTime = false;\n  }\n  showEditOffTime() {\n    this.editOffTime = true;\n  }\n  hideEditOffTime() {\n    this.editOffTime = false;\n  }\n  toggleInterval() {\n    this.editInterval = !this.editInterval;\n  }\n  cancel() {\n    this.fileName = \"\";\n    this.submitted = false;\n    this.closeEdit();\n    this.invalidFormat = false;\n    this.invalidon = false;\n    this.invalidoff = false;\n    this.miscellaneousSettings = JSON.parse(\n      JSON.stringify(this.miscellaneousCopy)\n    );\n    this.spo2Settings = JSON.parse(\n      JSON.stringify(this.spo2SettingsCopy)\n    );\n    this.imgUrl = this.miscellaneousSettings?.otherSettings?.facilityLogo;\n    this.facilityName = this.miscellaneousSettings?.otherSettings?.facilityName;\n    this.snackbar.openCustomSnackBar(\"additional_devices.messages.updated_cancelled\", 'bottom', 'center', true);\n  }\n  reload(event) {\n    event.target.value = null;\n  }\n  closeEdit() {\n    this.editOnTime = false;\n    this.editOffTime = false;\n    this.editInterval = false;\n    this.editSsid1 = false;\n    this.editSsid2 = false;\n    this.editPass1 = false;\n    this.editPass2 = false;\n    this.valuesUpdated = false;\n    this.editFacilityName = false;\n    this.invalidFormat = false;\n  }\n  async upload(fileInput) {\n    this.invalidFormat = false;\n    let reader = new FileReader();\n    if (fileInput?.target?.files && fileInput?.target?.files[0]) {\n      let file = fileInput.target.files[0];\n      reader.readAsDataURL(file);\n      const pattern = /image-*/;\n      if (!file.type.match(pattern)) {\n        this.fileName = file.name;\n        this.invalidFormat = true;\n        this.invalid_msg = \"invalid_format\";\n        this.valuesUpdated = true;\n        return;\n      }\n      if (file.size > 2097152) {\n        this.invalidFormat = true;\n        this.invalid_msg = \"invalid_size\";\n        return;\n      }\n      let img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = async () => {\n        if (img.width < 48 || img.height < 48) {\n          this.invalidFormat = true;\n          this.invalid_msg = \"invalid_minsize\";\n          return;\n        }\n        if (img.height > img.width) {\n          this.invalidFormat = true;\n          this.invalid_msg = \"invalid_orientation\";\n          return;\n        }\n        if (img.width > 800 || img.height > 512) {\n          this.invalidFormat = true;\n          this.invalid_msg = \"invalid_maxsize\";\n          return;\n        }\n        this.valuesUpdated = true;\n        this.fileName = file.name;\n        reader.onload = () => {\n          this.imgUrl = reader.result;\n        };\n        reader.readAsDataURL(file);\n        let body = {\n          filename: this.cfId + \"/\" + this.fileName,\n        };\n        await this.miscellaneousService\n          .getSignedUrl(body)\n          .subscribe((response) => {\n            console.log(\"signedUrl\", response);\n            this.signedUrl = response.data;\n            this.miscellaneousService\n              .uploadImage(this.signedUrl, file)\n              .subscribe((res) => {\n                console.log(res);\n                let url = new URL(this.signedUrl);\n                const url_new = url.origin + url.pathname;\n                console.log(url_new);\n                this.miscellaneousSettings.otherSettings.facilityLogo = url_new;\n              });\n          });\n      }\n    } else {\n      this.fileName = \"Select File\";\n    }\n  }\n\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  onTimeValid(value: any) {\n    this.invalidon = value < this.minOn || value > this.maxOn;\n    return (value >= this.minOn && value <= this.maxOn);\n  }\n  offTimeValid(value: any) {\n    this.maxOff = 9 * this.spo2Settings.Setting.OnTime ;\n    this.invalidoff = value < this.minOff || value > this.maxOff;\n    return (value >= this.minOff && value <= this.maxOff);\n  }\n  invalidInt(value) {\n    this.invalidInterval = value < this.minOnOFF || value > this.maxOnOff;\n    return (value >= this.minOnOFF && value <= this.maxOnOff);\n  }\n  invalidonoff() {\n    return (\n        ((!this.onTimeValid(this.spo2Settings?.Setting?.OnTime) || !this.offTimeValid(this.spo2Settings?.Setting?.OffTime)) && this.spo2Settings.Setting.Mode=='Periodic')\n        || !this.invalidInt(this.miscellaneousSettings?.thirdPartyDeviceSettings[1].interval) || this.invalidFacilityName());\n  }\n  invalidFacilityName() {\n    let regex = /^[a-zA-Z]{1}[a-zA-Z ]*$/;\n    return !regex.test(this.facilityName) && this.facilityName?.toString();\n  }\n  ngOnDestroy() {\n    this.settingSubscription.unsubscribe();\n    this.errorSubscription.unsubscribe();\n    this.loaderSubscription.unsubscribe();\n  }\n  disableEdit(event, tab, type) {\n    console.log(event);\n    this.valuesUpdated = JSON.stringify(this.miscellaneousSettings) !== JSON.stringify(this.miscellaneousCopy) || JSON.stringify(this.spo2Settings) !== JSON.stringify(this.spo2SettingsCopy);\n    if(!event.checked) {\n      if(tab === 'spo2') {\n        if(type === 'SPO2') {\n          this.editOnTime = false;\n          this.editOffTime = false;\n        } else {\n          this.editInterval = false;\n        }\n      } else if (tab === \"biosensor\") {\n        this.editSsid1 = false;\n        this.editSsid2 = false;\n        this.editPass1 = false;\n        this.editPass2 = false;\n      }\n    }\n  }\n  updated(spo2ValueChange?: boolean) {\n    if(spo2ValueChange) {\n      if( this.spo2Settings.Setting.Mode ==\"Continuous\"){\n        this.spo2Settings.Setting.DutyCycle =100;\n        this.spo2Settings.Setting.OnTime = this.minOn;\n        this.spo2Settings.Setting.OffTime =0;\n        this.editOnTime = false;\n        this.editOffTime = false;\n       }else{\n        this.spo2Settings.Setting.OnTime = this.minOn;\n        this.spo2Settings.Setting.OffTime = this.minOff;\n       }\n    }\n    if(this.spo2Settings.Setting.Mode ==\"Periodic\") {\n      this.spo2Settings.Setting.DutyCycle =Math.round(( this.spo2Settings.Setting.OnTime/( this.spo2Settings.Setting.OnTime +  this.spo2Settings.Setting.OffTime))*100);\n    }\n    this.valuesUpdated = JSON.stringify(this.miscellaneousSettings) !== JSON.stringify(this.miscellaneousCopy) || JSON.stringify(this.spo2Settings) !== JSON.stringify(this.spo2SettingsCopy);\n    if(this.facilityName !== this.miscellaneousCopy.otherSettings.facilityName) {\n      this.valuesUpdated = true;\n    }\n  }\n  confirmReset() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"250px\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      \n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.factoryReset();\n      }\n    });\n  }\n  delete() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"250px\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_delete_logo\",\n        },\n      },\n\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.imgUrl = \"\";\n        this.miscellaneousSettings.otherSettings.facilityLogo = \"\";\n        this.invalidFormat = false;\n        this.updated();\n        this.fileName = null;\n      }\n    });\n  }\n  charsOnly(event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  onPaste(event: ClipboardEvent) {\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[a-zA-Z_ ]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n\n  numericsOnly(event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  checkForSpecialCharacters(event: ClipboardEvent){\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[0-9]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n\n}\n","<ls-page-header type=\"additional_devices\"></ls-page-header>\n<div class=\"px-3 my-2 mt-3\">\n  <div class=\"mx-md-2 mb-3 d-md-flex align-items-center\">\n    <span class=\"pe-3  me-0 fw-bold settings-txt head-setting\">\n      {{ \"additional_devices.settings_for\" | translate }} :\n    </span>\n    <span class=\"mx-2 head-setting-right\" *ngIf=\"this.role === 'CFA'\">\n      {{ facility }}\n    </span>\n    <!--            <mat-select disabled=\"true\" placeholder=\"Location\" class=\"mat-sel1\">-->\n    <!--                <mat-option *ngFor=\"let setting of settings\" [value]=\"setting\">-->\n    <!--                    {{setting}}-->\n    <!--                </mat-option>-->\n    <!--            </mat-select>-->\n    <!--      <mat-form-field appearance=\"fill\" class=\"whiteselect drop-down-selectfilter selectfilter\">-->\n    <!--      <mat-select (selectionChange)=\"getMiscSettingsGrp()\"-->\n    <!--        [placeholder]=\"'additional_devices.medical_condition' | translate\" class=\"\"-->\n    <!--        [(ngModel)]=\"miscellaneousSettings.groupId\">-->\n    <!--        <mat-option *ngFor=\"let group of groups\" [value]=\"group.groupId\">-->\n    <!--          {{ group.name }}-->\n    <!--        </mat-option>-->\n    <!--      </mat-select>-->\n    <!--    </mat-form-field>-->\n    <div class=\"justify-content-md-start justify-content-between d-flex selectfilter-comman \">\n      <app-nested-dropdown *ngIf=\"groupsView\" class=\"nested-selectfilter bg-selectfilter me-2 me-md-0 mx-md-2\"\n        [selectedValue]=\"locationGroupId\" key=\"groupId\" displayKey=\"name\"\n        [label]=\"'alert_config_module.location' | translate\" (selected)=\"getMiscSettingsGrp($event, 'LOCATION')\"\n        [options]=\"locationGroups\" [noSelection]=\"true\">\n      </app-nested-dropdown>\n      <app-nested-dropdown *ngIf=\"groupsView\" class=\"nested-selectfilter bg-selectfilter mx-md-2\"\n        [selectedValue]=\"clinicalGroupId\" key=\"groupId\" displayKey=\"name\"\n        [label]=\"'alert_config_module.medical_condition' | translate\"\n        (selected)=\"getMiscSettingsGrp($event, 'CLINICAL')\" [options]=\"clinicalGroups\" [noSelection]=\"true\">\n      </app-nested-dropdown>\n    </div>\n  </div>\n  <div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n  <div *ngIf=\"!loader\">\n    <div class=\"my-0 button-card-area\">\n      <button mat-button class=\"btn\" [ngClass]=\"\n            selectedTab === 'spo2' ? 'select-btn-active' : 'select-btn'\n          \" (click)=\"selectTab('spo2')\">\n        {{ \"additional_devices.spo2_bp_settings\" | translate }}\n      </button>\n      <button mat-button class=\"btn\" [ngClass]=\"selectedTab === 'ecg' ? 'select-btn-active' : 'select-btn'\"\n        (click)=\"selectTab('ecg')\">\n        {{ \"additional_devices.ecg_filter\" | translate }}\n      </button>\n      <button mat-button class=\"btn\" [ngClass]=\"\n            selectedTab === 'biosensor' ? 'select-btn-active' : 'select-btn'\n          \" (click)=\"selectTab('biosensor')\">\n        {{ \"additional_devices.biosensor_reconfiguration\" | translate }}\n      </button>\n      <button mat-button class=\"btn\" [ngClass]=\"\n            selectedTab === 'other' ? 'select-btn-active' : 'select-btn'\n          \" (click)=\"selectTab('other')\">\n        {{ \"additional_devices.other_settings\" | translate }}\n      </button>\n    </div>\n\n\n    <div class=\"additional-table bg-thead-color tab-table-low comman-table-users head-border\"\n      *ngIf=\"groups?.length || editAccessCFA\">\n      <ng-template [ngIf]=\"selectedTab === 'spo2'\">\n        <div class=\"table-container scroll-assist   table-responsive-sm px-2\">\n          <table class=\"mat-table custom-table\" aria-label=\"Table\">\n            <thead>\n              <tr>\n                <th scope=\"col\" class=\"col-header fw-bold py-3 pe-2\"></th>\n                <th class=\"col-header fw-bold py-3 px-2 text-start\">\n                  {{ \"additional_devices.settings\" | translate }}\n                </th>\n                <th class=\"col-header fw-bold py-3 pe-2\">{{ \"additional_devices.default_devices\" | translate }}</th>\n                <th class=\"col-header fw-bold py-3 pe-2\" [colSpan]=\"3\"></th>\n                <th></th>\n                <th class=\"col-header fw-bold py-3 pe-2\" [colSpan]=\"3\"></th>\n                <th class=\"col-header fw-bold py-3 pe-2\" [colSpan]=\"2\"></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr *ngIf=\"spo2Settings?.Setting\"\n                [ngClass]=\"!spo2Settings.Setting.Enable ? 'row-disabled' : ''\">\n                <td class=\"vw-5\">\n                  <span class=\"align-middle\">\n                    <mat-slide-toggle *ngIf=\"editAccessCFA ||(editAccessSC &&!isBlank(miscellaneousSettings.groupId))\"\n                      class=\"align-middle me-3\" [(ngModel)]=\"spo2Settings.Setting.Enable\"\n                      (change)=\"disableEdit($event, 'spo2', 'SPO2')\">\n                    </mat-slide-toggle>\n                  </span>\n                </td>\n                <td class=\"text-start align-items-center fw-bold\">\n                  <span class=\"align-middle\">\n                    {{ \"additional_devices.SPO2\"| translate }}\n                    {{ \"additional_devices.device_txt\" | translate }}\n                  </span>\n                </td>\n                <td>{{ '-' }}</td>\n                <td class=\"align-middle text-center\" >\n                  <mat-select  style=\"width: 120px\" [(ngModel)] =\"spo2Settings.Setting.Mode\" (ngModelChange)=\"updated(true)\"\n                    [disabled]=\"!spo2Settings?.Setting?.Enable && !editOnTime && !editOnTime\">\n                      <mat-option value=\"Continuous\">CONTINUOUS</mat-option>\n                      <mat-option value=\"Periodic\">INTERVAL</mat-option>\n                  </mat-select>\n                  <!-- <mat-error *ngIf=\"newPatientForm.get('gender').hasError('required') && submitted\">\n                      {{\"active-patients-module.errors.required\" | translate}}\n                  </mat-error> -->\n                 </td>\n                <td class=\"col-header fw-bold text-center\">\n                  {{\"additional_devices.on_time\" | translate}}\n                </td>\n                <td class=\"align-middle text-center ontime-card\">\n                  <span *ngIf=\"!editOnTime\">\n                    {{ (spo2Settings.Setting.Mode === 'Periodic') ? spo2Settings?.Setting?.OnTime : ' -- ' }} Mins\n                  </span>\n                  <span *ngIf=\"editOnTime\" class=\"d-flex align-items-center justify-content-center\">\n                    <input (keypress)=\"numericsOnly($event)\" (paste)=\"checkForSpecialCharacters($event)\" matInput\n                      placeholder=\"Enter\" type=\"number\" [min]=\"minOn\" [max]=\"maxOn\" class=\"edit-box\"\n                      [(ngModel)]=\"spo2Settings.Setting.OnTime\" autocomplete=\"off\"\n                      (ngModelChange)=\"updated()\" />\n                    <div class=\"ms-1\"> Mins</div>\n                  </span>\n                </td>\n                <td class=\"text-start px-0 edit-Time\">\n                  <span *ngIf=\"!editOnTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\" (click)=\"showEditOnTime()\"\n                      [disabled]=\"!spo2Settings.Setting.Enable || spo2Settings.Setting.Mode=='Continuous'\"\n                      *ngIf=\"editAccessCFA || (editAccessSC && !isBlank(miscellaneousSettings.groupId))\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  </span>\n                  <span *ngIf=\"editOnTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                      *ngIf=\"onTimeValid(spo2Settings?.Setting?.OnTime)\"\n                      (click)=\"hideEditOnTime()\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"!onTimeValid(spo2Settings?.Setting?.OnTime)\">\n                      *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                  </span>\n                </td>\n                <td></td>\n                <td class=\"col-header fw-bold text-end\">{{ \"additional_devices.off_time\" | translate }}</td>\n                <td class=\"align-middle text-center ontime-card\">\n                  <span *ngIf=\"!editOffTime\">\n                    {{ (spo2Settings.Setting.Mode === 'Periodic') ? spo2Settings?.Setting?.OffTime : ' -- ' }} Mins\n                  </span>\n                  <span *ngIf=\"editOffTime\" class=\"d-flex justify-content-center align-items-center\">\n                    <input (keypress)=\"numericsOnly($event)\" (paste)=\"checkForSpecialCharacters($event)\" matInput\n                      placeholder=\"Enter\" type=\"number\" [min]=\"minOff\" [max]=\"maxOff\" class=\"edit-box\"\n                      [(ngModel)]=\"spo2Settings.Setting.OffTime\" autocomplete=\"off\"\n                      (ngModelChange)=\"updated()\" />\n                    <div class=\"ms-1\"> Mins</div>\n                  </span>\n                </td>\n                <td class=\"text-start px-0 edit-Time\">\n                  <span *ngIf=\"!editOffTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\" (click)=\"showEditOffTime()\"\n                      [disabled]=\"!spo2Settings.Setting.Enable || spo2Settings.Setting.Mode=='Continuous'\"\n                      *ngIf=\"editAccessCFA || (editAccessSC && !isBlank(miscellaneousSettings.groupId))\">\n                      <mat-icon class=\"fw-normal\">edit</mat-icon>\n                    </button>\n                  </span>\n                  <span *ngIf=\"editOffTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                      *ngIf=\"offTimeValid(spo2Settings?.Setting?.OffTime)\"\n                      (click)=\"hideEditOffTime()\">\n                      <mat-icon class=\"fw-normal\">done</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"!offTimeValid(spo2Settings?.Setting?.OffTime)\">\n                      *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                  </span>\n                </td>\n                <td class=\"col-header fw-bold text-end\">{{\"additional_devices.duty_cycle\" | translate}}</td>\n                <td class=\"align-middle text-center\">\n                  {{ spo2Settings?.Setting?.DutyCycle }}%\n                </td>\n              </tr>\n              <tr *ngIf=\"miscellaneousSettings?.thirdPartyDeviceSettings[1]\"\n                [ngClass]=\"!miscellaneousSettings.thirdPartyDeviceSettings[1]?.isActive ? 'row-disabled' : ''\">\n                <td class=\"vw-5\">\n                  <span class=\"align-middle\">\n                    <mat-slide-toggle *ngIf=\"editAccessCFA ||(editAccessSC &&!isBlank(miscellaneousSettings.groupId))\"\n                      class=\"align-middle me-3\" [(ngModel)]=\"miscellaneousSettings.thirdPartyDeviceSettings[1].isActive\"\n                      (change)=\"disableEdit($event, 'spo2', 'BP')\">\n                    </mat-slide-toggle>\n                  </span>\n                </td>\n                <td class=\"text-start align-items-center fw-bold\">\n                  <span class=\"align-middle\">{{\"additional_devices.\" +\n                    miscellaneousSettings?.thirdPartyDeviceSettings[1].type | translate}} {{\n                    \"additional_devices.device_txt\" | translate }}\n                  </span>\n                </td>\n                <td>{{ miscellaneousSettings?.thirdPartyDeviceSettings[1]?.defaultDevice || '-' }}</td>\n                <td></td>\n                <td class=\"col-header fw-bold text-center\">\n                  {{\"additional_devices.interval\" | translate}}\n                </td>\n                <td class=\"align-middle text-center ontime-card\">\n                  <span *ngIf=\"!editInterval\">\n                    {{ miscellaneousSettings?.thirdPartyDeviceSettings[1].interval }} Mins\n                  </span>\n                  <span *ngIf=\"editInterval\" class=\"d-flex align-items-center justify-content-center\">\n                    <input (keypress)=\"numericsOnly($event)\" (paste)=\"checkForSpecialCharacters($event)\" matInput\n                      placeholder=\"Enter\" type=\"number\" min=\"1\" max=\"7200\" class=\"edit-box\"\n                      [(ngModel)]=\"miscellaneousSettings?.thirdPartyDeviceSettings[1].interval\" autocomplete=\"off\"\n                      (ngModelChange)=\"updated()\" />\n                    <div class=\"ms-1\"> Mins</div>\n                  </span>\n                </td>\n                <td class=\"text-start px-0 edit-Time\">\n                  <span *ngIf=\"!editInterval\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\" (click)=\"toggleInterval()\"\n                      [disabled]=\"!miscellaneousSettings?.thirdPartyDeviceSettings[1].isActive\"\n                      *ngIf=\"editAccessCFA ||(editAccessSC && !isBlank(miscellaneousSettings.groupId))\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  </span>\n                  <span *ngIf=\"editInterval\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                      *ngIf=\"invalidInt(miscellaneousSettings?.thirdPartyDeviceSettings[1].interval)\"\n                      (click)=\"toggleInterval()\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"!invalidInt(miscellaneousSettings?.thirdPartyDeviceSettings[1].interval)\">\n                      *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                  </span>\n                </td>\n                <td></td>\n                <td class=\"col-header fw-bold\" colspan=\"5\"></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"selectedTab === 'ecg'\">\n        <div class=\"table-container1 px-2 py-4 table-responsive-sm\">\n          <table class=\"mat-table\" style=\"padding-top: 20px !important\" aria-label=\"Table\">\n            <tbody>\n              <tr [ngClass]=\"\n                    !miscellaneousSettings.ecgFilterSettings.isActive\n                      ? 'row-disabled'\n                      : ''\n                  \">\n                <td class=\"text-start align-items-center ps-3 \">\n                  <span class=\"align-middle d-inline-flex\">\n                    <mat-slide-toggle *ngIf=\"\n                          editAccessCFA ||\n                          (editAccessSC &&\n                            !isBlank(miscellaneousSettings.groupId))\n                        \" (change)=\"updated()\" class=\"toggle-btn me-3\" [(ngModel)]=\"\n                          miscellaneousSettings.ecgFilterSettings.isActive\n                        \">\n                    </mat-slide-toggle>\n                  </span>\n                  <span class=\"align-middle mx-4 fw-bold\">{{\n                    \"additional_devices.ecg_filter\" | translate\n                    }}</span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-4\">\n                    <mat-select [disabled]=\"\n                        !miscellaneousSettings.ecgFilterSettings.isActive ||\n                        (!editAccessCFA &&\n                          (!editAccessSC ||\n                            isBlank(miscellaneousSettings.groupId)))\n                      \" placeholder=\"Settings\" class=\"mat-sel\" [(ngModel)]=\"\n                        miscellaneousSettings.ecgFilterSettings.ecgFilterSetting\n                      \" (ngModelChange)=\"updated()\">\n                      <mat-option *ngFor=\"let setting of ecgSettings\" [value]=\"setting\">\n                        {{ setting }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"selectedTab === 'biosensor'\">\n        <div class=\"table-container scroll-assist px-2 table-responsive-sm biosensor-table\">\n          <table class=\"mat-table\" aria-label=\"Table\">\n            <thead>\n              <tr>\n                <th scope=\"col\" class=\"fw-bold py-3\" *ngFor=\"let col of headerColumnsBiosensor\">\n                  {{ col | translate }}\n                </th>\n              </tr>\n            </thead>\n            <tbody style=\"padding-top: 10px !important; border: none\" *ngIf=\"!isBlank(miscellaneousSettings)\">\n              <tr *ngFor=\"\n                    let biosensorSetting of miscellaneousSettings.bioSensorConfigSettings\n                  \" [ngClass]=\"!biosensorSetting.isActive ? 'row-disabled' : ''\">\n                <td>\n                  <div class=\"text-start d-flex align-items-center togglestart\">\n                    <div *ngIf=\"editAccessCFA\" class=\"align-middle d-flex\">\n                      <mat-slide-toggle class=\"toggle-btn me-3\" [(ngModel)]=\"biosensorSetting.isActive\"\n                        (change)=\"disableEdit($event, 'biosensor', 0)\">\n                      </mat-slide-toggle>\n                    </div>\n                    <div *ngIf=\"editAccessCFA\" class=\"row-head align-middle fw-bold\">\n                      {{ \"additional_devices.biosensor_network_reconfiguration\" | translate }}\n                    </div>\n                    <div *ngIf=\"!editAccessCFA\" class=\"biosensor-row-head fw-bold\">\n                      <span *ngIf=\"biosensorSetting.isActive\">{{\n                        \"additional_devices.enabled_txt\" | translate\n                        }}</span><span *ngIf=\"!biosensorSetting.isActive\">{{\n                        \"additional_devices.disabled_txt\" | translate\n                        }}</span> {{ \"additional_devices.biosensor_network_reconfiguration\" | translate }}\n                    </div>\n                  </div>\n                </td>\n                <td>\n                  <div *ngIf=\"!editPass1\"><span\n                      class=\"biosensorSetting-card d-flex align-items-center justify-content-start\">{{\n                      biosensorSetting.relayPassword.replace(regex, \"*\") }}\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        [disabled]=\"!biosensorSetting.isActive\" *ngIf=\"editAccessCFA\" (click)=\"editPass1 = !editPass1;\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                  <div *ngIf=\"editPass1\" class=\"d-flex justify-content-start align-items-center\">\n                    <span class=\"biosensorSetting-card d-flex align-items-center justify-content-start\"><input matInput\n                        placeholder=\"Enter\" type=\"text\" maxlength=\"32\" class=\"edit-box1\"\n                        [(ngModel)]=\"biosensorSetting.relayPassword\" (ngModelChange)=\"updated()\" autocomplete=\"off\" />\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"editPass1 = !editPass1\">\n                        <mat-icon>done</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                </td>\n                <td>\n                  <div *ngIf=\"!editSsid2\"><span\n                      class=\"biosensorSetting-card d-flex align-items-center justify-content-start\">\n                      {{ biosensorSetting.hospitalSSID }}\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        [disabled]=\"!biosensorSetting.isActive\" *ngIf=\"editAccessCFA\" (click)=\"editSsid2 = !editSsid2;\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                  <div *ngIf=\"editSsid2\" class=\"d-flex justify-content-start align-items-center\">\n                    <span class=\"biosensorSetting-card d-flex align-items-center justify-content-start\"> <input matInput\n                        placeholder=\"Enter\" type=\"text\" maxlength=\"32\" class=\"edit-box2\"\n                        [(ngModel)]=\"biosensorSetting.hospitalSSID\" (ngModelChange)=\"updated()\" autocomplete=\"off\" />\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"editSsid2 = !editSsid2\">\n                        <mat-icon>done</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                </td>\n                <td>\n                  <div *ngIf=\"!editPass2\"><span\n                      class=\"biosensorSetting-card d-flex align-items-center justify-content-start\">\n                      {{ biosensorSetting.hospitalPassword.replace(regex, \"*\") }}\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        [disabled]=\"!biosensorSetting.isActive\" *ngIf=\"editAccessCFA\" (click)=\"editPass2 = !editPass2;\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                  <div *ngIf=\"editPass2\" class=\"d-flex justify-content-start align-items-center\">\n                    <span class=\"biosensorSetting-card d-flex align-items-center justify-content-start\"><input matInput\n                        placeholder=\"Enter\" type=\"text\" maxlength=\"32\" class=\"edit-box1\"\n                        [(ngModel)]=\"biosensorSetting.hospitalPassword\" (ngModelChange)=\"updated()\" autocomplete=\"off\" />\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"editPass2 = !editPass2\">\n                        <mat-icon>done</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"selectedTab === 'other'\">\n        <div class=\"table-container1 scroll-assist px-2 py-4 table-responsive-sm\">\n          <table class=\"mat-table\" aria-label=\"Table\">\n            <tbody>\n              <tr [ngClass]=\"\n                    !miscellaneousSettings.otherSettings.autoGeneratePatientId\n                      ? 'row-disabled'\n                      : ''\n                  \">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\" *ngIf=\"editAccessCFA\">\n                    {{\n                    \"additional_devices.auto_generation_of_patient_id\"\n                    | translate\n                    }}</span>\n                  <span *ngIf=\"!editAccessCFA\" class=\"biosensor-row-head d-flex align-items-center py-2\">\n                    {{\n                    \"additional_devices.auto_generation_of_patient_id\"\n                    | translate\n                    }}\n\n                    <span class=\"mx-1\" *ngIf=\"miscellaneousSettings.otherSettings.autoGeneratePatientId\">\n                      {{ \"additional_devices.enabled_txt\" | translate }}\n                    </span>\n                    <span class=\"mx-1\" *ngIf=\"!miscellaneousSettings.otherSettings.autoGeneratePatientId\">\n                      {{ \"additional_devices.disabled_txt\" | translate }}\n                    </span>\n                  </span>\n                </td>\n\n\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\"\n                    *ngIf=\"editAccessCFA\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\"\n                      [(ngModel)]=\"miscellaneousSettings.otherSettings.autoGeneratePatientId\">\n                      <mat-option *ngFor=\"let setting of settings\" [value]=\"setting.value\">\n                        {{ setting.option }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr [ngClass]=\"\n                    !miscellaneousSettings.otherSettings.enableAccessToSPPHY\n                      ? 'row-disabled'\n                      : 'row-enabled'\n                  \">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\" *ngIf=\"editAccessCFA\">\n                    {{\n                    \"additional_devices.access_to_service_provider_physician\"\n                    | translate\n                    }}</span>\n                  <span *ngIf=\"!editAccessCFA\" class=\"biosensor-row-head d-flex align-items-center py-2\">\n                    {{\n                    \"additional_devices.access_to_service_provider_physician\"\n                    | translate\n                    }}\n                    <span class=\"mx-1\" *ngIf=\"\n                          miscellaneousSettings.otherSettings.enableAccessToSPPHY\n                        \">{{ \"additional_devices.enabled_txt\" | translate }}</span>\n                    <span class=\"mx-1\" *ngIf=\"\n                          !miscellaneousSettings.otherSettings.enableAccessToSPPHY\n                        \">{{ \"additional_devices.disabled_txt\" | translate }}</span>\n                  </span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\"\n                    *ngIf=\"editAccessCFA\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\"\n                      [(ngModel)]=\"miscellaneousSettings.otherSettings.enableAccessToSPPHY\">\n                      <mat-option *ngFor=\"let setting of settings\" [value]=\"setting.value\">\n                        {{ setting.option }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"facility-name text-start ms-3 align-middle fw-bold\">\n                  {{ \"additional_devices.facility_name\" | translate }}\n                </td>\n                <td class=\"txt-input-container justify-content-end align-items-center\">\n                  <label *ngIf=\"invalidFacilityName()\" class=\"error-text my-1 d-block mx-3\">\n                    {{ \"additional_devices.invalid_name\" | translate }}\n                  </label>\n                  <span class=\"d-flex justify-content-end\">\n                    <input maxlength=\"40\" [placeholder]=\"'additional_devices.enter_text' | translate\"\n                      [disabled]=\"!editFacilityName\" type=\"text\" [(ngModel)]=\"facilityName\" class=\"text-input\"\n                      (keyup)=\"updated()\" (keypress)=\"charsOnly($event)\" (paste)=\"onPaste($event)\" />\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" *ngIf=\"editFacilityName\"\n                      (click)=\"editFacilityName = !editFacilityName;\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" *ngIf=\"!editFacilityName\"\n                      (click)=\"editFacilityName = !editFacilityName;\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"facility-name text-start fw-bold\">\n                  {{ \"additional_devices.customized_logo\" | translate }}\n                </td>\n                <td class=\"txt-input-container justify-content-end align-items-center\">\n                  <span class=\"d-flex justify-content-end\">\n                    <div>\n                      <label *ngIf=\"invalidFormat\" class=\"error-text my-2 d-block mx-4\">\n                        {{ \"additional_devices.\" + invalid_msg | translate }}\n                      </label>\n                    <input hidden placeholder=\"Choose File\" #fileInput type=\"file\" accept=\"image/*\" class=\"text-input\"\n                      (change)=\"upload($event)\" (click)=\"reload($event)\" /></div>\n                    <input *ngIf=\"isBlank(imgUrl)\" [placeholder]=\"'additional_devices.choose_file' | translate\"\n                      type=\"text\" [(ngModel)]=\"fileName\" class=\"text-input\" disabled />\n                    <img *ngIf=\"!isBlank(imgUrl)\" [src]=\"imgUrl\" alt=\"logo default\" height=\"32\" class=\"logo-default\" />\n                    <button *ngIf=\"isBlank(imgUrl)\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                      (click)=\"fileInput.click()\">\n                      <mat-icon>add</mat-icon>\n                    </button>\n                    <span *ngIf=\"!isBlank(imgUrl)\">\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"fileInput.click()\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" (click)=\"delete()\">\n                        <mat-icon>delete</mat-icon>\n                      </button>\n                    </span>\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"facility-name text-start fw-bold\">\n                  {{ \"additional_devices.patient_barcode_parsing\" | translate }}\n                </td>\n                <td class=\"txt-input-container justify-content-end align-items-center\">\n                  <span class=\"d-flex justify-content-end\">\n                    <input hidden placeholder=\"Choose File\" #fileInput type=\"file\" accept=\"image/*\"\n                      class=\"text-input\" />\n                    <input *ngIf=\"isBlank(patientBarCode)\" [placeholder]=\"'additional_devices.choose_file' | translate\"\n                      type=\"text\" class=\"text-input\" disabled />\n                    <img *ngIf=\"!isBlank(patientBarCode)\" [src]=\"patientBarCode\" alt=\"logo default\" height=\"32\"\n                      class=\"logo-default\" />\n                    <button *ngIf=\"isBlank(patientBarCode)\" mat-mini-fab color=\"primary\"\n                      class=\"btn-boxed btn-no-shadow mx-2\" (click)=\"fileInput.click()\" disabled>\n                      <mat-icon>add</mat-icon>\n                    </button>\n                    <span *ngIf=\"!isBlank(patientBarCode)\">\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"fileInput.click()\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" (click)=\"delete()\">\n                        <mat-icon>delete</mat-icon>\n                      </button>\n                    </span>\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\">\n                    {{\n                    \"additional_devices.patient_identification\" | translate}}\n                  </span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\" disabled>\n                      <mat-option *ngFor=\"let patientId of patientIdentification\" [value]=\"patientId\">\n                        {{ patientId }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\">\n                    {{\n                    \"additional_devices.mandatory_note_param_alert\" | translate}}\n                  </span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\" disabled>\n                      <mat-option *ngFor=\"let setting of settings\" [value]=\"setting.option\">\n                        {{ setting.value }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\"\n                [ngClass]=\"!miscellaneousSettings.otherSettings.emr ? 'row-disabled' : 'row-enabled'\">\n                <td class=\"text-start facility-name fw-bold\">\n                  {{ \"additional_devices.emr\" | translate }}\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\"\n                    *ngIf=\"editAccessCFA\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\"\n                      [(ngModel)]=\"miscellaneousSettings.otherSettings.emr\">\n                      <mat-option value=\"\">{{ \"additional_devices.none\" | translate }}</mat-option>\n                      <mat-option *ngFor=\"let emrId of emrList\" [value]=\"emrId\">\n                        {{ emrId }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <div *ngIf=\"miscellaneousSettings?.bioSensorConfigSettings\">\n        <span class=\"error-text m-3\" *ngIf=\"submitted &&\n          !(miscellaneousSettings?.bioSensorConfigSettings[0]?.relayPassword.trim() &&\n          miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalSSID.trim() &&\n          miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalPassword.trim() )\">\n          {{ \"additional_devices.messages.ssid_password_error_msg\" | translate }}\n        </span>\n      </div>\n      <div class=\"container-fluid\">\n        <div class=\"row my-2\" *ngIf=\"editAccessCFA || (editAccessSC && !isBlank(miscellaneousSettings.groupId)\n          && (selectedTab === 'spo2' || selectedTab === 'ecg'))\">\n          <div class=\"col-md-4\">\n            <button mat-flat-button class=\"reset-btn px-2 my-1\" (click)=\"confirmReset()\">\n              <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n              <span class=\"ps-1\">{{\n                \"additional_devices.reset_to_default\" | translate\n                }}</span>\n            </button>\n          </div>\n          <div class=\"col-md-8 text-center text-md-end\">\n            <span *ngIf=\"valuesUpdated\">\n              <button mat-flat-button class=\"px-4 fill-btn my-1\" color=\"warn\" (click)=\"cancel()\">\n                {{ \"additional_devices.cancel\" | translate }}\n              </button>\n              <button mat-flat-button [disabled]=\"invalidonoff() || invalidFormat\" class=\"px-4 fill-btn my-1\"\n                color=\"primary\" (click)=\"updateSettings()\">\n                {{ \"additional_devices.save\"| translate }}\n              </button> </span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"groups?.length === 0 && !loader && !editAccessCFA\" class=\"table-container\">\n      <div class=\"text-center my-4 py-4\">\n        {{\"alert_config_module.messages.no_groups\" | translate}}\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { delay, catchError } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport {\n  MiscellaneousData,\n  MiscSettings,\n  spo2ConfigData,\n  spo2Data,\n} from \"../../../interfaces/misc-settings.interface\";\n\n@Injectable()\nexport class MiscellaneousSettingsService {\n  constructor(private http: HttpClient) {}\n  getSettings(url) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http.get<MiscSettings>(environment.dataApiUrl + url, {\n      headers: authHeaders,\n    });\n  }\n\n  getEmrList() {\n    const url = \"info/emr/list\"\n    return this.http\n      .get(environment.dataApiUrl + url).pipe(delay(100), catchError(this.handleError));\n  }\n\n  getSpo2Settings(url) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http.get<spo2ConfigData>(environment.dataApiUrl + url, {\n      headers: authHeaders,\n    });\n  }\n\n  updateSettings(body: MiscellaneousData) {\n    const url = \"clinical-facilities/misc-settings\";\n    console.log(\"update\", body);\n    return this.http\n      .post<any>(environment.dataApiUrl + url, body)\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  updateSpo2Settings(body: spo2Data,url) {\n    console.log(\"update\", body);\n    return this.http\n      .post<any>(environment.dataApiUrl + url, body)\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  resetSettings(url) {\n    return this.http\n      .post<any>(environment.dataApiUrl + url, \"\")\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  resetSpo2Settings(url) {\n    return this.http\n      .post<any>(environment.dataApiUrl + url, \"\")\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getGroups(cfId) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    const url = \"clinical-facilities/\" + cfId + \"/groups?sortBy=name:asc\";\n    return this.http\n      .get<any>(environment.dataApiUrl + url, { headers: authHeaders })\n      .pipe(delay(100), catchError(this.handleError));\n  }\n  getSignedUrl(body) {\n    const url = \"files/upload-url\";\n    return this.http\n      .post<any>(environment.dataApiUrl + url, body)\n      .pipe(delay(100), catchError(this.handleError));\n  }\n  uploadImage(url, file) {\n    const authHeaders = new HttpHeaders({\n      \"x-amz-acl\": \"public-read\",\n    });\n    return this.http.put(url, file, { headers: authHeaders });\n  }\n  handleError(error: any) {\n    let errorMessage = \"\";\n    // Client-side error.\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n      // Server-side error.\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import * as MiscellaneousSettingsStoreActions from \"./miscellaneous-settings.actions\";\nimport * as MiscellaneousSettingsStoreSelectors from \"./miscellaneous-settings.selector\";\nimport * as MiscellaneousSettingsStoreState from \"./miscellaneous-settings.reducer\";\n\nexport {\n  MiscellaneousSettingsStoreActions,\n  MiscellaneousSettingsStoreSelectors,\n  MiscellaneousSettingsStoreState,\n};\n","import { Action } from \"@ngrx/store\";\nimport {\n  MiscellaneousData,\n  MiscSettings,\n  spo2ConfigData,\n} from \"../../../interfaces/misc-settings.interface\";\n\nexport enum ActionTypes {\n  LOAD_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Load miscellaneous settings request\",\n  LOAD_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Load miscellaneous settings Failure\",\n  LOAD_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Load miscellaneous settings Success\",\n\n  UPDATE_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings request\",\n  UPDATE_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Failure\",\n  UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Success\",\n\n  RESET_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings request\",\n  RESET_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Failure\",\n  RESET_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Success\",\n\n  LOAD_SPO2_SETTINGS_REQUEST = \"[SPO2ETTINGS] Load Spo2 settings request\",\n  LOAD_SPO2_SETTINGS_FAILURE = \"[SPO2ETTINGS] Load Spo2 settings Failure\",\n  LOAD_SPO2_SETTINGS_SUCCESS = \"[SPO2ETTINGS] Load Spo2 settings Success\",\n\n  UPDATE_SPO2_SETTINGS_REQUEST = \"[SPO2ETTINGS] Update Spo2 settings request\",\n  UPDATE_SPO2_SETTINGS_FAILURE = \"[SPO2ETTINGS] Update Spo2 settings Failure\",\n  UPDATE_SPO2_SETTINGS_SUCCESS = \"[SPO2ETTINGS] Update Spo2 settings Success\",\n\n}\n\n\nexport class loadSpo2SettingsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_SPO2_SETTINGS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadSpo2SettingsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_SPO2_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadSpo2SettingsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_SPO2_SETTINGS_SUCCESS;\n  constructor(public payload: { data: spo2ConfigData }) {}\n}\n\nexport class updateSpo2SettingsRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_SPO2_SETTINGS_REQUEST;\n  constructor(public payload: { data: spo2ConfigData ,url: string}) {}\n}\n\nexport class updateSpo2SettingsFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_SPO2_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateSpo2SettingsSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_SPO2_SETTINGS_SUCCESS;\n  constructor(public payload: { data: spo2ConfigData }) {}\n}\n\n\nexport class loadMiscellaneousSettingsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadMiscellaneousSettingsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadMiscellaneousSettingsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS;\n  constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class updateMiscellaneousSettingsRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST;\n  constructor(public payload: { data: MiscellaneousData }) {}\n}\n\nexport class updateMiscellaneousSettingsFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateMiscellaneousSettingsSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS;\n  constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class resetMiscellaneousSettingsRequestAction implements Action {\n  readonly type = ActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class resetMiscellaneousSettingsFailureAction implements Action {\n  readonly type = ActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class resetMiscellaneousSettingsSuccessAction implements Action {\n  readonly type = ActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS;\n  constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport type MiscellaneousSettingsActions =\n  | loadMiscellaneousSettingsFailureAction\n  | loadMiscellaneousSettingsSuccessAction\n  | loadMiscellaneousSettingsRequestAction\n  | updateMiscellaneousSettingsFailureAction\n  | updateMiscellaneousSettingsSuccessAction\n  | updateMiscellaneousSettingsRequestAction\n  | resetMiscellaneousSettingsFailureAction\n  | resetMiscellaneousSettingsSuccessAction\n  | resetMiscellaneousSettingsRequestAction\n  | loadSpo2SettingsFailureAction\n  | loadSpo2SettingsSuccessAction\n  | loadSpo2SettingsRequestAction\n  | updateSpo2SettingsFailureAction\n  | updateSpo2SettingsSuccessAction\n  | updateSpo2SettingsRequestAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { Observable, of as observableOf } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap } from \"rxjs/operators\";\nimport * as featureActions from \"./miscellaneous-settings.actions\";\nimport { MiscellaneousSettingsService } from \"../services/miscellaneous-settings.service\";\n\n@Injectable()\nexport class MiscellaneousSettingsEffects {\n  constructor(\n    private miscellaneousSettingsService: MiscellaneousSettingsService,\n    private actions$: Actions\n  ) {}\n\n\n  @Effect()\n  loadSpo2SettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.loadSpo2SettingsRequestAction>(\n      featureActions.ActionTypes.LOAD_SPO2_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService.getSpo2Settings(action.payload.url).pipe(\n        map(\n          (data) =>\n            new featureActions.loadSpo2SettingsSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.loadSpo2SettingsFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n\n\n  @Effect()\n  loadMiscellaneousSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.loadMiscellaneousSettingsRequestAction>(\n      featureActions.ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService.getSettings(action.payload.url).pipe(\n        map(\n          (data) =>\n            new featureActions.loadMiscellaneousSettingsSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.loadMiscellaneousSettingsFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n  @Effect()\n  updateSpo2SettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.updateSpo2SettingsRequestAction>(\n      featureActions.ActionTypes.UPDATE_SPO2_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService\n        .updateSpo2Settings(action.payload.data.data, action.payload.url)\n        .pipe(\n          map(\n            (data) =>\n              new featureActions.updateSpo2SettingsSuccessAction({\n                data,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.updateSpo2SettingsFailureAction({\n                error,\n              })\n            )\n          )\n        )\n    )\n  );\n  @Effect()\n  updateMiscellaneousSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.updateMiscellaneousSettingsRequestAction>(\n      featureActions.ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService\n        .updateSettings(action.payload.data)\n        .pipe(\n          map(\n            (data) =>\n              new featureActions.updateMiscellaneousSettingsSuccessAction({\n                data,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.updateMiscellaneousSettingsFailureAction({\n                error,\n              })\n            )\n          )\n        )\n    )\n  );\n  @Effect()\n  resetMiscellaneousSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.resetMiscellaneousSettingsRequestAction>(\n      featureActions.ActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService.resetSettings(action.payload.url).pipe(\n        map(\n          (data) =>\n            new featureActions.resetMiscellaneousSettingsSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.resetMiscellaneousSettingsFailureAction({\n              error,\n            })\n          )\n        )\n      )\n    )\n  );\n\n}\n","import { MiscellaneousData, spo2ConfigData } from \"../../../interfaces/misc-settings.interface\";\nimport {\n  MiscellaneousSettingsActions,\n  ActionTypes,\n} from \"./miscellaneous-settings.actions\";\n\nexport interface MiscellaneousSettingsState {\n  MISCELLANEOUS_SETTINGS_DATA: MiscellaneousData;\n  spo2ConfigData: spo2ConfigData;\n  error: string;\n  status: string;\n  message: string;\n  loaded: boolean;\n}\n\nexport const initialMiscellaneousSettingsState: MiscellaneousSettingsState = {\n  MISCELLANEOUS_SETTINGS_DATA: {\n    thirdPartyDeviceSettings: [],\n    ecgFilterSettings: {\n      ecgFilterSetting: \"\",\n      isActive: false,\n    },\n    bioSensorConfigSettings: [],\n    otherSettings: {\n      autoGeneratePatientId: false,\n      enableAccessToSPPHY: false,\n      facilityName: \"\",\n      facilityLogo: \"\",\n      emr: \"\"\n    },\n    facilityId: \"0\",\n    groupId: \"0\",\n    miscSettingsId: 0,\n  },\n  error: \"\",\n  status: \"\",\n  message: \"\",\n  loaded: false,\n  spo2ConfigData: {\n    data: {\n    Spo2ConfigId: \"\",\n    Setting: {\n        Enable: false,\n        Mode: \"\",\n        OnTime: 0,\n        OffTime: 0,\n        DutyCycle: 0\n    },\n    FacilityId: \"\",\n    FacilityName: \"\",\n    PatientId: \"\",\n    GroupId: \"\",\n    IsForPatient: false,\n    modifiedBy: \"\",\n    modifiedById: \"\",\n    modifiedDateTime: \"\"\n},\nmessage: \"\",\nstatus: \"\"\n  },\n};\n\n\nexport const miscellaneousSettingsFeatureKey = \"miscellaneousSettings\";\n\nexport function MiscellaneousSettingsReducer(\n  state: MiscellaneousSettingsState = initialMiscellaneousSettingsState,\n  action: MiscellaneousSettingsActions\n) {\n  switch (action.type) {\n\n    case ActionTypes.LOAD_SPO2_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n    case ActionTypes.LOAD_SPO2_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.LOAD_SPO2_SETTINGS_SUCCESS: {\n     // console.log(action.payload.data);\n      return {\n        ...state,\n        spo2ConfigData: action.payload.data,\n        message: \"\",\n        status: action.payload.data.status ,\n        loaded: true,\n      };\n    }\n\n    case ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n        message: \"\",\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n\n    case ActionTypes.UPDATE_SPO2_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.UPDATE_SPO2_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.UPDATE_SPO2_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        spo2ConfigData: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n\n    case ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n    case ActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  MiscellaneousSettingsState,\n  miscellaneousSettingsFeatureKey,\n} from \"./miscellaneous-settings.reducer\";\n\nconst getMiscellaneousSettingsState =\n  createFeatureSelector<MiscellaneousSettingsState>(\n    miscellaneousSettingsFeatureKey\n  );\n\nexport const getMiscellaneousSettings = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.MISCELLANEOUS_SETTINGS_DATA\n);\n\nexport const getSpo2Settings = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.spo2ConfigData\n);\n\nexport const getMiscellaneousError = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.error\n);\nexport const getMiscellaneousStatus = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.status\n);\nexport const getMiscellaneousMessage = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.message\n);\nexport const getLoaderStatus = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.loaded\n);\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./settings/settings.component\";\nimport {MiscellaneousComponent} from \"./miscellaneous/miscellaneous.component\";\nimport {ManageRelaysComponent} from \"./manage-relays/manage-relays/manage-relays.component\";\nimport {AlertConfigurationComponent} from \"./alert-configuration/alert-configuration.component\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {AuthGuard} from \"../guards/auth.guard\";\nimport {ManageUsersCFAComponent} from \"./manage-users/manage-users-cfa/manage-users-cfa.component\";\nimport {UserRoles} from \"../enum/roles.enum\";\nimport {RootComponent} from \"../shared/root/root.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: RootComponent,\n    children: [\n      {\n        path: \"\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n            UserRoles.PHYSICIAN,\n          ],\n        },\n      },\n      {\n        path: \"additional-devices\",\n        component: MiscellaneousComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n            UserRoles.PHYSICIAN,\n          ],\n        },\n      },\n      {\n        path: \"manage-users\",\n        component: ManageUsersCFAComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.SUPERVISORY_CLINICIAN,\n          ],\n        },\n      },\n      {\n        path: \"manage-relays\",\n        component: ManageRelaysComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n          ],\n        },\n      },\n      {\n        path: \"alert-configurations\",\n        component: AlertConfigurationComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n            UserRoles.PHYSICIAN,\n          ],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), MatToolbarModule],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { SettingsRoutingModule } from \"./settings-routing.module\";\nimport { AppDateAdapter, APP_DATE_FORMATS } from \"../services/date.adapter\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { MiscellaneousComponent } from \"./miscellaneous/miscellaneous.component\";\nimport { ProfileComponent } from \"../profile/profile.component\";\nimport { ManageRelaysComponent } from \"./manage-relays/manage-relays/manage-relays.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DialogsModule } from \"../dialogs/dialogs.module\";\nimport { AlertConfigurationComponent } from \"./alert-configuration/alert-configuration.component\";\nimport { ParameterAlertsComponent } from \"./alert-configuration/parameter-alerts/parameter-alerts.component\";\nimport { TechnicalAlertsComponent } from \"./alert-configuration/technical-alerts/technical-alerts.component\";\nimport { PriorityComponent } from \"./alert-configuration/priority/priority.component\";\nimport { AlertMessagesComponent } from \"./alert-configuration/alert-messages/alert-messages.component\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\nimport { MatDialogRef, MatDialogModule } from \"@angular/material/dialog\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromMiscellaneousSettings from \"./miscellaneous/store/miscellaneous-settings.reducer\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { MiscellaneousSettingsEffects } from \"./miscellaneous/store/miscellaneous-settings.effects\";\nimport { MiscellaneousSettingsService } from \"./miscellaneous/services/miscellaneous-settings.service\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\nimport { AlertConfigurationsService } from \"./alert-configuration/services/alert-configuration.service\";\nimport { AlertDestinationComponent } from \"./alert-configuration/alert-destination/alert-destination.component\";\nimport { DigitOnlyDirective } from \"../directive/digit-only.directive\";\nimport * as fromAlertConfigurations from \"./alert-configuration/store/alert-configuration.reducer\";\nimport { AlertConfigurationEffects } from \"./alert-configuration/store/alert-configuration.effects\";\nimport { ManageRelaysModule } from \"./manage-relays/manage-relays.module\";\nimport { ManageUsersModule } from \"./manage-users/manage-users.module\";\nimport { AdduserComponent } from \"./manage-users/adduser/adduser.component\";\nimport { EdituserComponent } from \"./manage-users/edituser/edituser.component\";\nimport { AddgroupComponent } from \"./manage-users/addgroup/addgroup.component\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatDividerModule} from '@angular/material/divider';\nimport {LifeSignalsModule} from \"../life-signals/life-signals.module\";\nimport { DestinationSettingsComponent } from './alert-configuration/destination-settings/destination-settings.component';\nimport { ArrhythmiaAlertsComponent } from './alert-configuration/arrhythmia-alerts/arrhythmia-alerts.component';\n\n@NgModule({\n  declarations: [\n    SettingsComponent,\n    MiscellaneousComponent,\n    ProfileComponent,\n    ManageRelaysComponent,\n    AlertConfigurationComponent,\n    ParameterAlertsComponent,\n    TechnicalAlertsComponent,\n    PriorityComponent,\n    AlertMessagesComponent,\n    AlertDestinationComponent,\n    DigitOnlyDirective,\n    DestinationSettingsComponent,\n    ArrhythmiaAlertsComponent,\n  ],\n    imports: [\n        CommonModule,\n        SettingsRoutingModule,\n        SharedModule,\n        MatDividerModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatMenuModule,\n        MatIconModule,\n        MatSlideToggleModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatInputModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogsModule,\n        I18nModule,\n        StoreModule.forFeature(\n            fromMiscellaneousSettings.miscellaneousSettingsFeatureKey,\n            fromMiscellaneousSettings.MiscellaneousSettingsReducer\n        ),\n        StoreModule.forFeature(\n            fromAlertConfigurations.alertConfigurationKey,\n            fromAlertConfigurations.AlertConfigurationReducer\n        ),\n\n        EffectsModule.forFeature([\n            MiscellaneousSettingsEffects,\n            AlertConfigurationEffects,\n        ]),\n        MatDialogModule,\n        ManageRelaysModule,\n        ManageUsersModule,\n        MatProgressSpinnerModule,\n        MatTableModule,\n        LifeSignalsModule,\n    ],\n  entryComponents: [AdduserComponent, EdituserComponent, AddgroupComponent],\n  exports: [],\n  providers: [\n    {\n      provide: DateAdapter,\n      useClass: AppDateAdapter,\n    },\n    {\n      provide: MAT_DATE_FORMATS,\n      useValue: APP_DATE_FORMATS,\n    },\n    {\n      provide: MiscellaneousSettingsService,\n      useClass: MiscellaneousSettingsService,\n    },\n    {\n      provide: AlertConfigurationsService,\n      useClass: AlertConfigurationsService,\n    },\n    {\n      provide: MatDialogRef,\n      useValue: { hasBackdrop: false },\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: KeycloakBearerInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class SettingsModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { BackendApiService } from \"../../services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"./settings.component.html\",\n  styleUrls: [\"./settings.component.scss\"],\n})\nexport class SettingsComponent implements OnInit {\n  settingsSummary: any = {\n    users: 0,\n  };\n  roles;\n  manageUsers = false;\n\n  constructor(\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService\n  ) {}\n  cfId: string;\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    if (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"SC\") > -1 || this.roles.indexOf(\"CFAC\") > -1) {\n      this.manageUsers = true;\n      this.getUsersCount({});\n    }\n  }\n\n  // Fetch Clinical facility summary page data\n  async getUsersCount(params: any) {\n    let url = \"clinical-facilities/\" + this.cfId + \"/users/count\";\n    const resp: any = await this.backendApiService\n      .callGetApi(environment.dataApiUrl + url, params)\n      .toPromise();\n    if (resp.status === \"OK\") {\n      this.settingsSummary.users = resp.data;\n    }\n  }\n  relayViewAccess(){\n   return (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"SC\") > -1 || this.roles.indexOf(\"CFAC\") > -1 || this.roles.indexOf(\"GC\") > -1)\n  }\n}\n","<div class=\"grid-fluid-container\">\r\n    <div class=\"container grid-aligning-summary pt-5 pb-5 mx-auto col-md-12 col-lg-10 col-xl-8 col-xxl-7\">\r\n        <div class=\"row justify-content-center align-items-center card-items\">\r\n            <app-setting-card [view]=\"manageUsers\" [showCount]=\"manageUsers\"\r\n                title=\"{{'home_alerts.label_manage_users'|translate}}\" subTitle=\"home_cards.card_sub_title_users\"\r\n                image=\"manageuser.png\" [count]=\"settingsSummary?.users\" routerUrl=\"/settings/manage-users\"\r\n                class=\"col-md-4 col-sm-12\">\r\n            </app-setting-card>\r\n            <app-setting-card title=\"{{'home_alerts.label_manage_groups'|translate}}\" image=\"managegroup.png\"\r\n                [routerUrl]=\"'manage-group'\" class=\"col-md-4 col-sm-12\">\r\n            </app-setting-card>\r\n            <app-setting-card [view]=\"relayViewAccess()\" class=\"col-md-4 col-sm-12\"\r\n                title=\"{{'home_alerts.label_manage_relays'|translate}}\" image=\"managerelay.png\"\r\n                routerUrl=\"/settings/manage-relays\"></app-setting-card>\r\n        </div>\r\n        <div class=\"row d-none d-md-block\">\r\n            <div [ngClass]=\"manageUsers ? 'col-sm-10 my-5 mx-auto' : 'col-sm-8 my-5 mx-auto'\">\r\n                <mat-divider></mat-divider>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-center align-items-center card-items\">\r\n            <!-- <app-setting-card title=\"{{'home_alerts.label_alert_configuration'|translate}}\" image=\"notif-icon.png\"\r\n                routerUrl=\"/settings/alert-configurations\" class=\"col-md-4 col-sm-12\"></app-setting-card> -->\r\n            <app-setting-card title=\"{{'home_alerts.label_miscellaneous'|translate}}\" image=\"miscelaneous.png\"\r\n                routerUrl=\"/settings/additional-devices\" class=\"col-md-4 col-sm-12\"></app-setting-card>\r\n            <app-setting-card class=\"col-md-4 col-sm-12\"></app-setting-card>\r\n            <app-setting-card class=\"col-md-4 col-sm-12\"></app-setting-card>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n"],"names":["parameterAlertItems","technicalAlertItems","priorityAlertItems","uiAccessRoles","AlertConfigurationStoreActions","AlertConfigurationStoreSelectors","ConfirmDialogComponent","environment","i0","ctx_r2","AlertConfigurationComponent","constructor","router","dialog","snackbar","backendApiService","commonService","autheticationService","store$","dispatch","setGroupAlertId","clinicalFacilityGroupId","getGroupAlertSettings","url","cfId","loadAlertConfigurationRequestAction","select","getAlertConfigurationError","subscribe","data","error","openSnackBar","getAlertDestinationSettings","getArrhythmiaSettings","resp","callGetApi","dataApiUrl","toPromise","status","groups","clinicalGroups","filter","g","type","locationGroups","roles","indexOf","unshift","groupId","name","length","parentGroups","grp","parent","_a","forEach","group","find","push","locationGroupId","_b","clinicalGroupId","loader","loadGroupAlertConfigurationRequestAction","loadArrhythmiaAlertConfigurationRequestAction","ngOnInit","getCfId","getRoles","facilityName","sessionStorage","getItem","some","ai","includes","isCfa","getSettings","groupsView","getClinicalFacilityGroups","editAccess","alertSettings$","getAlertConfigurations","alertDestinationSettings$","getDestinationAlertConfigurations","alertArrhythmiaSettings$","getArrhythmiaAlertConfigurations","alertSettingsStatus$","getAlertConfigurationStatus","alertSettingsMessage$","getAlertConfigurationMessage","loaderSubscription","getLoaderStatus","loaded","isShowResetButton","settingsAlertActionButtonsShow","isShow","showActionButtons","alertSettings","Object","alertId","AlertId","modifiedDateTime","selectedTab","alertDestinationSettings","isPHYGCUser","alertDestId","AlertDestId","alertArrhythmiaSettings","alertArrId","ArrhythmiaId","console","log","navigateUrl","navigate","then","selectTab","value","setSettingsAlertActionButtons","openDialog","SaveChanges","open","maxWidth","maxHeight","body","title","text","disableClose","afterClosed","handleFactoryReset","handleAlertSettingsEditCancel","setParameterAlertEditHide","setArrhythmiaParameterAlertEditHide","setTechnicalAlertEditHide","setPriorityAlertEditHide","setDestinationAlertEditHide","setNotificationAlertEditHide","setTimeout","responseMessage","post","openCustomSnackBar","handleAlertSettingsSave","setParameterAlertEditSubmit","setTechnicalAlertEditSubmit","setPriorityAlertEditSubmit","setNotificationAlertEditSubmit","setDestinationAlertEditSubmit","setArrhythmiaParameterAlertEditSubmit","getGroupAlertDestinationSettings","getArrhythmiaAlertGoupSettings","getAlertGoupSettings","loadDestinationAlertConfigurationRequestAction","loadGroupDestinationAlertConfigurationRequestAction","checkRole","allowedRoles","userRoles","isBlank","str","onLocationSelected","event","selectors","decls","vars","consts","template","ctx","EventEmitter","AlertMessagesComponent","iseditDisabled","alertDestinationSettingsCopy","JSON","parse","stringify","subscriptions","notificationAlertEditHide","isHide","notificationAlertEditSubmit","isSubmit","updateAlertNotification","ngOnDestroy","unsubscribe","updated","reloadData","emit","outputs","priorityColorCode","arrhythmiaAlertPriorityOptions","ArrhythmiaParameterAlertItems","isAllowedRole","postures","ctx_r25","ctx_r28","ctx_r20","ctx_r78","ctx_r79","ctx_r72","config_r70","ArrhythmiaAlertsComponent","userPreference","alertService","ALERT_CONFIGURATIONS","ARRHYTHMIA_PARAMETER","id","rowSelectEnabled","translate","translateKey","label","sortable","style","headerClass","cellClass","customization","timeFormat","userPreferenceUnit","getUserUnitSystem","tempConvFunction","convertFtoC","temp","timeZone","getUserTimeZone","parameterMinMax","getParameterMinMax","alertGroupId$","getAlertGroupId","hideParameterEdit","masterData","alerts","parameterAlert","element","i","Setting","key","settings","alert","unit","index","parameterAlertSettings","parameterAlertSettingsCopy","parameterAlertAccess","isEditAccess","arrhythmiaParameterAlertEditHide","arrhythmiaParameterAlertEditSubmit","updateParameterSettings","alertGroupId","showHideEdit","editThreshold","editPrior","editDelay","toggle","Enabled","Priority","LowThr","HighThr","Thr","CondDelay","parseInt","payload","GroupId","parameterThresholdChanged","minMax","keyMapping","range","numericsOnly","control","numericsOnlyPattern","test","preventDefault","DestinationSettingsComponent","fetchContactList","UserData","map","user","displayName","firstName","lastName","userId","destinationAlertEditSubmit","updateDestinationAlerts","valueUpdated","SettingTech","FacilityId","loadClinicalFacilityContactsRequestAction","alertPriorityOptions","ctx_r33","ctx_r24","config_r16","ctx_r39","ctx_r42","ctx_r98","ctx_r99","ctx_r90","config_r86","ParameterAlertsComponent","ALERT_PARAMETER","Param","PhyParam","setting","Math","round","convertCtoF","parameterAlertEditHide","parameterAlertEditSubmit","floor","limitChar","target","toString","substr","alertConfigMinMaxValues","ctx_r21","ctx_r22","ctx_r12","priorityAlertConfig_r10","ctx_r40","ctx_r41","ctx_r15","ctx_r67","ctx_r68","priorityAlertConfig_r56","ctx_r86","ctx_r87","PriorityComponent","ALERT_PRIORITY","priorityAlert","showExtraHeader","extraHeaderClass","hidePriorityAlertEdit","_c","_d","Common","_e","PhyCommon","percentage","priorityAlertSettings","priorityAlertSettingsCopy","priorityAlertAccess","priorityAlertEditHide","priorityAlertEditSubmit","updatePrioritySettings","editPriority","editPrio","editBreakThrough","editBreaksThrough","Frequency_UnAck","Frequency_Ack","Percentage_UnAck","Percentage_Ack","priorityParamInputChanged","technicalAlertConfig_r13","ctx_r44","ctx_r45","ctx_r18","ctx_r71","ctx_r62","TechnicalAlertsComponent","ALERT_TECHNICAL","technicalAlert","hideTechnicalAlertEdit","TechParam","TechCommon","units","technicalAlertSettings","technicalAlertSettingsCopy","technicalAlertAccess","technicalAlertEditHide","technicalAlertEditSubmit","updateTechnicalSettings","editAlertFrequency","editAlertFrequencyUnAck","editDelaytime","technicalParameter","technicalCommonParameter","technicalParamInputChanged","ManageRelaysSelectors","ManageRelaysStoreActions","ctx_r1","CareGiverAppComponent","actions","show","sort","active","direction","page","pageIndex","pageSize","paginator","hide","offline","relayIds","relayList$","getCGRelayList","pipe","res","r","lastActive","relayCount$","getCGRelayCount","num","config","ngOnChanges","changes","onSortChange","isSelected","row","selection","selected","s","relayId","param","size","sortOrder","sortBy","_f","searchText","searchString","LoadCGRelaysRequestAction","params","onPage","inputs","features","AddRelayComponent","SelectionModel","ctx_r26","MultiPatientRelaysComponent","relayService","columns","splice","getMPRelayList","list","l","clear","getMPRelayCount","relaysSelected","showEdit","editLocation","hideEdit","locationValid","location","regex","valid","loc","replace","getDate","timestamp","DateString","Date","date","toLocaleDateString","day","month","year","time","toLocaleTimeString","hour","minute","hour12","mpUrl","_g","_h","_j","_k","LoadMPRelaysRequestAction","onSelectChange","relay","deleteRelays","message","deleteSingleRelay","confirmDelete","confirm","width","height","minHeight","confirmSingleRelayDelete","save","updateRelay","response","addRelay","locationEdit","getStatus","onPaste","clipboardData","getData","charsOnlyPattern","resendOtp","SinglePatientRelaysComponent","getSPRelayList","getSPRelayCount","LoadSPRelaysRequestAction","onCheckboxChange","checked","relayid","ifChecked","delete","EdituserComponent","AdduserComponent","ManageUsersSelectors","ManageUsersStoreActions","RenameRolesComponent","user_r16","ManageUsersCFAComponent","usersService","isActive","role","userEditAccess","usersList$","getUsersList","getTableStatus","tableState","usersCount$","getUsersCount","addUser","Adduser","autoFocus","dialogueData","editUser","Edituser","getUser","userData","LoadAdminUsersRequestAction","search","changeUserStatus","enableUser","enable","err","disableUser","resetPassword","confirmResetPassword","confirmEnableDisable","renameRoles","MiscellaneousSettingsStoreSelectors","MiscellaneousSettingsStoreActions","$event","interval","ctx_r144","ctx_r147","ctx_r148","ctx_r182","_r181","_r196","ctx_r214","MiscellaneousComponent","miscellaneousService","option","getEmrList","emrList","editAccessCFA","editAccessSC","facility","getGroups","getMiscSettings","getSpo2Settings","miscellaneousSettings$","getMiscellaneousSettings","spo2Settings$","miscellaneousSettingsMessage$","getMiscellaneousMessage","spo2Subscription","spo2Settings","spo2SettingsCopy","settingSubscription","miscellaneousSettings","miscellaneousCopy","signedUrl","otherSettings","facilityLogo","setItem","getCustomizationLogo","imgUrl","closeEdit","submitted","errorSubscription","getMiscellaneousError","loadMiscellaneousSettingsRequestAction","loadSpo2SettingsRequestAction","getMiscSettingsGrp","updateSettings","invalidFormat","fileName","bioSensorConfigSettings","relayPassword","trim","hospitalSSID","hospitalPassword","updateSpo2Settings","factoryReset","spo2Url","invalidon","invalidoff","invalidInterval","Spo2ConfigId","resetMiscellaneousSettingsRequestAction","resetSpo2Settings","showEditOnTime","editOnTime","hideEditOnTime","showEditOffTime","editOffTime","hideEditOffTime","toggleInterval","editInterval","cancel","reload","editSsid1","editSsid2","editPass1","editPass2","valuesUpdated","editFacilityName","upload","fileInput","reader","FileReader","files","file","readAsDataURL","pattern","match","invalid_msg","img","Image","src","URL","createObjectURL","onload","result","filename","getSignedUrl","uploadImage","url_new","origin","pathname","onTimeValid","minOn","maxOn","offTimeValid","maxOff","OnTime","minOff","invalidInt","minOnOFF","maxOnOff","invalidonoff","OffTime","Mode","thirdPartyDeviceSettings","invalidFacilityName","disableEdit","tab","spo2ValueChange","DutyCycle","confirmReset","charsOnly","checkForSpecialCharacters","SettingsComponent","users","manageUsers","settingsSummary","relayViewAccess"],"sourceRoot":"webpack:///"}