{"version":3,"mappings":"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","names":["AppDateAdapter","value","indexOf","str","split","year","Number","month","date","Date","timestamp","parse","isNaN","displayFormat","day","getDate","getMonth","getFullYear","_to2digit","toDateString","n","_a","slice","_angular_material_core__WEBPACK_IMPORTED_MODULE_0__","t","factory","APP_DATE_FORMATS","dateInput","display","monthYearLabel","i0","ctx_r2","AlertConfigurationComponent","constructor","router","dialog","snackbar","backendApiService","commonService","autheticationService","store$","parameterAlertItems","technicalAlertItems","priorityAlertItems","uiAccessRoles","dispatch","AlertConfigurationStoreActions","clinicalFacilityGroupId","getGroupAlertSettings","url","cfId","select","AlertConfigurationStoreSelectors","subscribe","data","error","openSnackBar","getAlertDestinationSettings","getArrhythmiaSettings","_this","callGetApi","environment","toPromise","resp","status","groups","clinicalGroups","filter","g","type","locationGroups","roles","unshift","groupId","name","length","parentGroups","grp","parent","forEach","group","find","push","locationGroupId","_b","clinicalGroupId","loader","ngOnInit","getCfId","getRoles","facilityName","sessionStorage","getItem","some","ai","includes","isCfa","getSettings","groupsView","getClinicalFacilityGroups","editAccess","alertSettings$","alertDestinationSettings$","alertArrhythmiaSettings$","alertSettingsStatus$","alertSettingsMessage$","loaderSubscription","loaded","isShowResetButton","settingsAlertActionButtonsShow","isShow","showActionButtons","alertSettings","Object","alertId","AlertId","modifiedDateTime","selectedTab","alertDestinationSettings","isPHYGCUser","alertDestId","AlertDestId","alertArrhythmiaSettings","alertArrId","ArrhythmiaId","console","log","navigateUrl","navigate","then","selectTab","setSettingsAlertActionButtons","openDialog","SaveChanges","open","ConfirmDialogComponent","maxWidth","maxHeight","body","title","text","disableClose","afterClosed","handleFactoryReset","handleAlertSettingsEditCancel","setParameterAlertEditHide","setArrhythmiaParameterAlertEditHide","setTechnicalAlertEditHide","setPriorityAlertEditHide","setDestinationAlertEditHide","setNotificationAlertEditHide","setTimeout","responseMessage","_this2","post","openCustomSnackBar","handleAlertSettingsSave","setParameterAlertEditSubmit","setTechnicalAlertEditSubmit","setPriorityAlertEditSubmit","setNotificationAlertEditSubmit","setDestinationAlertEditSubmit","setArrhythmiaParameterAlertEditSubmit","getGroupAlertDestinationSettings","getArrhythmiaAlertGoupSettings","getAlertGoupSettings","checkRole","allowedRoles","userRoles","isBlank","onLocationSelected","event","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_8__","i_r14","$event","ctx_r20","i_r29","ctx_r35","i_r44","ctx_r50","i_r59","ctx_r65","ctx_r0","AlertDestinationComponent","formBuilder","_utils_helpers__WEBPACK_IMPORTED_MODULE_1__","id","rowSelectEnabled","translate","translateKey","label","sortable","style","headerClass","alertDestinationForm","smsContactList","array","whatsAppContactList","emailContactList","caregiverAppContactList","setDefaultData","destinationAlertAccess","isEditAccess","contactLists$","_store__WEBPACK_IMPORTED_MODULE_0__","subscriptions","destinationAlertEditHide","isHide","JSON","stringify","alertDestinationSettingsCopy","updateDestination","emit","setDefaultContactListData","contactLists","map","x","displayName","firstName","lastName","activeContactLists","isActive","activePhoneNoLists","user","phoneNo","activeEmailLists","email","changes","updated","index","src_app_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_2__","removeContactSelected","ids","list","contactListsSMS","contactListsWhatsApp","contactListsEMAIL","contactListsCaregiverApp","element","userId","get","isDefault","controls","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","selectedSmsContact","e","removeAt","selectedEmailContact","selectedWhatsappContact","_c","selectedCaregiverContact","_d","addContactDropdownList","splice","setting","Array","isArray","AlertSMS","contact","userData","AlertWhatsApp","AlertEmail","AlertCaregiverApp","destinationSettings","getUrserIds","searchString","_dialogs_notifications_component_store__WEBPACK_IMPORTED_MODULE_3__","inputs","alertType","outputs","reloadData","features","AlertMessagesComponent","EventEmitter","iseditDisabled","notificationAlertEditHide","notificationAlertEditSubmit","isSubmit","updateAlertNotification","ngOnDestroy","unsubscribe","ctx_r25","ctx_r28","ctx_r78","ctx_r79","ctx_r72","config_r70","ArrhythmiaAlertsComponent","userPreference","alertService","priorityColorCode","arrhythmiaAlertPriorityOptions","ArrhythmiaParameterAlertItems","cellClass","postures","userPreferenceUnit","getUserUnitSystem","tempConvFunction","convertFtoC","temp","timeZone","getUserTimeZone","parameterMinMax","getParameterMinMax","alertGroupId$","hideParameterEdit","masterData","alerts","parameterAlert","i","Setting","key","settings","alert","unit","parameterAlertSettings","parameterAlertSettingsCopy","isAllowedRole","parameterAlertAccess","arrhythmiaParameterAlertEditHide","arrhythmiaParameterAlertEditSubmit","updateParameterSettings","alertGroupId","showHideEdit","editThreshold","editPrior","editDelay","toggle","Enabled","Priority","LowThr","HighThr","Thr","CondDelay","parseInt","payload","GroupId","parameterThresholdChanged","minMax","keyMapping","range","numericsOnly","control","numericsOnlyPattern","test","preventDefault","DestinationSettingsComponent","fetchContactList","UserData","destinationAlertEditSubmit","updateDestinationAlerts","valueUpdated","SettingTech","FacilityId","ctx_r33","ctx_r24","config_r16","ctx_r39","ctx_r42","ctx_r98","ctx_r99","ctx_r90","config_r86","ParameterAlertsComponent","alertPriorityOptions","Param","PhyParam","Math","round","convertCtoF","parameterAlertEditHide","parameterAlertEditSubmit","floor","limitChar","target","toString","substr","ctx_r21","ctx_r22","ctx_r12","priorityAlertConfig_r10","ctx_r40","ctx_r41","ctx_r15","ctx_r67","ctx_r68","priorityAlertConfig_r56","ctx_r86","ctx_r87","PriorityComponent","alertConfigMinMaxValues","showExtraHeader","extraHeaderClass","hidePriorityAlertEdit","priorityAlert","Common","_e","PhyCommon","percentage","priorityAlertSettings","priorityAlertSettingsCopy","priorityAlertAccess","priorityAlertEditHide","priorityAlertEditSubmit","updatePrioritySettings","editPriority","editPrio","editBreakThrough","editBreaksThrough","Frequency_UnAck","Frequency_Ack","Percentage_UnAck","Percentage_Ack","priorityParamInputChanged","AlertConfigurationsService","http","authHeaders","_angular_common_http__WEBPACK_IMPORTED_MODULE_1__","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","headers","pipe","handleError","errorMessage","ErrorEvent","message","clipboardData","getData","charsOnlyPattern","units","HR","MIN","MAX","RR","SPO2","BODYTEMP","BPSYS","BPDIA","BP","PR","SKINTEMP","POSTURE_ALERT","SINUS_BRADYCARDIA","SINUS_TACHYCARDIA","VENTRICULAR_FLUTTER","VENTRICULAR_TACHYCARDIA","IDIOVENTRICULAR_RYTHM","SUPRAVENTRICULAR_TACHYCARDIA","AFIB_FLUTTER","JUNCTIONAL_TACHYCARDIA","FIRST_DEGREE_AV_BLOCK","SECOND_DEGREE_AV_BLOCK_TYPE_I","SECOND_DEGREE_AV_BLOCK_TYPE_II","PAUSE","V_COUPLET","V_BIGEMINY","V_TRIGEMINY","PVC_RATE","PAC_RATE","PVC","PAC","_angular_core__WEBPACK_IMPORTED_MODULE_4__","loadAlertConfigurationRequestAction","_alert_configuration_types__WEBPACK_IMPORTED_MODULE_0__","loadAlertConfigurationFailureAction","loadAlertConfigurationSuccessAction","updateAlertConfigurationRequestAction","updateAlertConfigurationFailureAction","updateAlertConfigurationSuccessAction","resetAlertConfigurationRequestAction","resetAlertConfigurationFailureAction","resetAlertConfigurationSuccessAction","loadDestinationAlertConfigurationSuccessAction","loadDestinationAlertConfigurationFailureAction","loadDestinationAlertConfigurationRequestAction","loadGroupAlertConfigurationRequestAction","loadGroupAlertConfigurationFailureAction","loadGroupAlertConfigurationSuccessAction","loadArrhythmiaAlertConfigurationRequestAction","loadArrhythmiaAlertConfigurationFailureAction","loadArrhythmiaAlertConfigurationSuccessAction","loadGroupDestinationAlertConfigurationSuccessAction","loadGroupDestinationAlertConfigurationFailureAction","loadGroupDestinationAlertConfigurationRequestAction","setGroupAlertId","loadClinicalFacilityContactsRequestAction","loadClinicalFacilityContactsFailureAction","loadClinicalFacilityContactsSuccessAction","AlertConfigurationEffects","alertConfigurationService","actions$","action","getAlertSettings","_alert_configuration_actions__WEBPACK_IMPORTED_MODULE_1__","getArrhythmiaGroupAlertSettings","getClinicalFacilityContacts","initialAlertConfigurationState","arrhythmiaConfigurations","HighUnit","LowUnit","FacilityName","PatientId","IsForPatient","createdDateTime","alert_configurations","CardiacStandStill","TechParam","LEAD_OFF","BIOSENSOR_DISCONNECTED","RELAY_DISCONNECTED","LOW_BATTERY","COMPUTE_HR_ERROR","COMPUTE_RR_ERROR","COMPUTE_SPO2_ERROR","COMPUTE_BODY_TEMP_ERROR","HIGH","MEDIUM","LOW","TechCommon","auditloginfotype","CreatedBy","CreatedById","ModifiedBy","ModifiedById","CreatedDateTime","ModifiedDateTime","alert_destinations","AlertSMSEnabled","AlertWhatsAppEnabled","AlertEmailEnabled","AlertCaregiverAppEnabled","NotificationMessage","groupIdSelected","contacts","alertConfigurationKey","AlertConfigurationReducer","state","getAlertConfigurationsState","_alert_configuration_reducer__WEBPACK_IMPORTED_MODULE_0__","getAlertConfigurations","getArrhythmiaAlertConfigurations","getDestinationAlertConfigurations","getAlertConfigurationError","getAlertConfigurationStatus","getAlertConfigurationMessage","getAlertGroupId","getLoaderStatus","AlertConfigurationActionTypes","technicalAlertConfig_r13","ctx_r44","ctx_r45","ctx_r18","ctx_r71","ctx_r62","TechnicalAlertsComponent","hideTechnicalAlertEdit","technicalAlert","technicalAlertSettings","technicalAlertSettingsCopy","technicalAlertAccess","technicalAlertEditHide","technicalAlertEditSubmit","updateTechnicalSettings","editAlertFrequency","editAlertFrequencyUnAck","editDelaytime","technicalParameter","technicalCommonParameter","technicalParamInputChanged","_angular_core__WEBPACK_IMPORTED_MODULE_1__","AddRelayComponent","dialogRef","service","submitted","location","locationValid","close","input","replace","regex","valid","loc","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__","ctx_r1","CareGiverAppComponent","actions","show","sort","active","direction","page","pageIndex","pageSize","paginator","hide","offline","relayIds","relayList$","ManageRelaysSelectors","res","r","lastActive","relayCount$","num","config","ngOnChanges","getCGRelayList","onSortChange","isSelected","row","selection","selected","s","relayId","param","size","sortOrder","sortBy","_f","searchText","ManageRelaysStoreActions","params","onPage","ManageRelaysModule","provide","_services_manage_relays_service__WEBPACK_IMPORTED_MODULE_7__","useClass","imports","_angular_common__WEBPACK_IMPORTED_MODULE_12__","_ngrx_store__WEBPACK_IMPORTED_MODULE_13__","_store_manage_relays_reducer__WEBPACK_IMPORTED_MODULE_0__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_14__","_store_manage_relays_effects__WEBPACK_IMPORTED_MODULE_1__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_15__","_angular_material_input__WEBPACK_IMPORTED_MODULE_16__","_angular_forms__WEBPACK_IMPORTED_MODULE_17__","_angular_material_select__WEBPACK_IMPORTED_MODULE_18__","_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_19__","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_5__","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_20__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_6__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_21__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_22__","_angular_material_button__WEBPACK_IMPORTED_MODULE_23__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_24__","_angular_material_card__WEBPACK_IMPORTED_MODULE_25__","_angular_material_table__WEBPACK_IMPORTED_MODULE_26__","src_app_life_signals_life_signals_module__WEBPACK_IMPORTED_MODULE_9__","declarations","_single_patient_relays_single_patient_relays_component__WEBPACK_IMPORTED_MODULE_2__","_multi_patient_relays_multi_patient_relays_component__WEBPACK_IMPORTED_MODULE_3__","_relay_configuration_relay_configuration_component__WEBPACK_IMPORTED_MODULE_4__","_add_relay_add_relay_component__WEBPACK_IMPORTED_MODULE_8__","_care_giver_app_care_giver_app_component__WEBPACK_IMPORTED_MODULE_10__","exports","_angular_core__WEBPACK_IMPORTED_MODULE_7__","ctx_r9","ctx_r10","ManageRelaysComponent","relaySelected","role","editAccessSPR","editAccessMPR","editAccessRelayConfiguration","DateString","toLocaleDateString","time","toLocaleTimeString","hour","minute","hour12","_dialogs_manage_relays_send_otp_qr_send_otp_qr_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","backdropClass","multiPatientRelayComponent","addRelay","document","getElementById","singlePatientRelayComponent","confirmDelete","viewQuery","_single_patient_relays_single_patient_relays_component__WEBPACK_IMPORTED_MODULE_1__","_multi_patient_relays_multi_patient_relays_component__WEBPACK_IMPORTED_MODULE_2__","ctx_r26","MultiPatientRelaysComponent","relayService","SelectionModel","columns","l","clear","getMPRelayList","relaysSelected","showEdit","editLocation","hideEdit","mpUrl","_g","_h","_j","_k","onSelectChange","relay","deleteRelays","deleteSingleRelay","confirm","minHeight","confirmSingleRelayDelete","save","updateRelay","response","locationEdit","getStatus","onPaste","resendOtp","_angular_core__WEBPACK_IMPORTED_MODULE_3__","RelayConfigurationComponent","relayConfig$","configSubscription","relayConfiguration","getRelayConfiguration","updateRelayConif","updateRelayConfiguration","sprDeletionDate","relayConfigId","SinglePatientRelaysComponent","getSPRelayList","onCheckboxChange","checked","relayid","ifChecked","delete","ActionTypes","LoadSPRelaysRequestAction","LOAD_SINGLE_PATIENT_RELAYS_REQUEST","LoadSPRelaysFailureAction","LOAD_SINGLE_PATIENT_RELAYS_FAILURE","LoadSPRelaysSuccessAction","LOAD_SINGLE_PATIENT_RELAYS_SUCCESS","LoadMPRelaysRequestAction","LOAD_MULTI_PATIENT_RELAYS_REQUEST","LoadMPRelaysFailureAction","LOAD_MULTI_PATIENT_RELAYS_FAILURE","LoadMPRelaysSuccessAction","LOAD_MULTI_PATIENT_RELAYS_SUCCESS","LoadRelayConfigurationRequestAction","LOAD_RELAY_CONFIGURATION_REQUEST","LoadRelayConfigurationFailureAction","LOAD_RELAY_CONFIGURATION_FAILURE","LoadRelayConfigurationSuccessAction","LOAD_RELAY_CONFIGURATION_SUCCESS","LoadCGRelaysRequestAction","LOAD_CARE_GIVER_RELAYS_REQUEST","LoadCGRelaysFailureAction","LOAD_CARE_GIVER_RELAYS_FAILURE","LoadCGRelaysSuccessAction","LOAD_CARE_GIVER_RELAYS_SUCCESS","ManageRelaysEffects","manageRelayService","_manage_relays_actions__WEBPACK_IMPORTED_MODULE_0__","getRelayConif","initialManageRelayState","SINGLE_PATIENT_RELAYS","SP_RELAY_COUNT","MULTI_PATIENT_RELAYS","MP_RELAY_COUNT","RELAY_CONFIGURATION","CARE_GIVER_RELAYS","CG_RELAY_COUNT","manageRelaysFeatureKey","ManageRelaysReducer","items","total","getManageRelaysState","_manage_relays_reducer__WEBPACK_IMPORTED_MODULE_0__","getError","getSPRelayCount","getMPRelayCount","getCGRelayCount","AddgroupComponent","manageUserService","selGroups","selectedGroups","getGroups","ancestor","selectedLocationGroup","selectedClinicalGroup","clinicalGroupExists","locationGroupExists","selectedgroups","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__","AdduserComponent","_angular_material_core__WEBPACK_IMPORTED_MODULE_9__","ngx_intl_tel_input__WEBPACK_IMPORTED_MODULE_10__","facilityId","serviceProviderId","getSPId","userGroups","addUserForm","first_name","_angular_forms__WEBPACK_IMPORTED_MODULE_11__","last_name","mobile","_validators_phone_no_validator__WEBPACK_IMPORTED_MODULE_4__","validator","_store__WEBPACK_IMPORTED_MODULE_2__","addGroup","_addgroup_addgroup_component__WEBPACK_IMPORTED_MODULE_0__","newGroups","Ancestors","invalid","markAllAsTouched","groupIds","showAssignGroup","formData","userRoles1","w","c","toUpperCase","parsedValue","number","facility_id","country_code","unit_system","time_zone","enable","addUserData","code","_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_3__","valuesUpdated","rolesArray","source","item","usr_r15","EdituserComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","ngx_intl_tel_input__WEBPACK_IMPORTED_MODULE_9__","editUserForm","user_Id","disabled","_validators_phone_no_validator__WEBPACK_IMPORTED_MODULE_3__","getUser","usrData","phoneNum","userRole","scrollIntoView","behavior","editUser","editGroups","AddGroup","_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_2__","SaveChanges1","patchValue","onRoleChange","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__","user_r16","ManageUsersCFAComponent","usersService","userEditAccess","usersList$","ManageUsersSelectors","getUsersList","tableState","usersCount$","addUser","Adduser","autoFocus","dialogueData","Edituser","ManageUsersStoreActions","search","changeUserStatus","enableUser","err","disableUser","resetPassword","confirmResetPassword","confirmEnableDisable","renameRoles","RenameRolesComponent","ManageUsersModule","_services_manage_users_service__WEBPACK_IMPORTED_MODULE_8__","_store_manage_users_reducer__WEBPACK_IMPORTED_MODULE_2__","_store_manage_users_effects__WEBPACK_IMPORTED_MODULE_3__","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_0__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_21__","_angular_material_radio__WEBPACK_IMPORTED_MODULE_23__","ngx_intl_tel_input__WEBPACK_IMPORTED_MODULE_24__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_25__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_27__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_28__","_angular_material_button__WEBPACK_IMPORTED_MODULE_29__","_angular_material_card__WEBPACK_IMPORTED_MODULE_30__","_manage_users_cfa_manage_users_cfa_component__WEBPACK_IMPORTED_MODULE_4__","_adduser_adduser_component__WEBPACK_IMPORTED_MODULE_5__","_edituser_edituser_component__WEBPACK_IMPORTED_MODULE_6__","_addgroup_addgroup_component__WEBPACK_IMPORTED_MODULE_7__","_rename_roles_rename_roles_component__WEBPACK_IMPORTED_MODULE_10__","current","rolesdata","_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_0__","editStatus","editCurrent","LoadAdminUsersRequestAction","LOAD_ADMIN_USERS_REQUEST","LoadAdminUsersFailureAction","LOAD_ADMIN_USERS_FAILURE","LoadAdminUsersSuccessAction","LOAD_ADMIN_USERS_SUCCESS","AddUserRequestAction","ADD_USER_REQUEST","AddUserFailureAction","ADD_USER_FAILURE","AddUserSuccessAction","ADD_USER_SUCCESS","EditUserRequestAction","EDIT_USER_REQUEST","EditUserFailureAction","EDIT_USER_FAILURE","EditUserSuccessAction","EDIT_USER_SUCCESS","ManageUsersEffects","manageUsersService","_manage_users_actions__WEBPACK_IMPORTED_MODULE_0__","getAdminUsersList","initialManageUsersState","USERS_LIST","src_app_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_0__","usersCount","manageUsersFeatureKey","ManageUsersReducer","_manage_users_actions__WEBPACK_IMPORTED_MODULE_1__","updatedlist","getUsersState","_manage_users_reducer__WEBPACK_IMPORTED_MODULE_0__","getUsersError","getUsersStatus","getUsersCode","getTableStatus","getUsersCount","interval","ctx_r144","ctx_r147","ctx_r148","ctx_r182","_r181","_r196","ctx_r214","MiscellaneousComponent","miscellaneousService","option","getEmrList","emrList","editAccessCFA","editAccessSC","facility","getMiscSettings","getSpo2Settings","miscellaneousSettings$","MiscellaneousSettingsStoreSelectors","spo2Settings$","miscellaneousSettingsMessage$","spo2Subscription","spo2Settings","spo2SettingsCopy","settingSubscription","miscellaneousSettings","miscellaneousCopy","signedUrl","otherSettings","facilityLogo","setItem","getCustomizationLogo","imgUrl","closeEdit","errorSubscription","MiscellaneousSettingsStoreActions","getMiscSettingsGrp","updateSettings","invalidFormat","fileName","bioSensorConfigSettings","relayPassword","trim","hospitalSSID","hospitalPassword","updateSpo2Settings","factoryReset","spo2Url","invalidon","invalidoff","invalidInterval","Spo2ConfigId","resetSpo2Settings","showEditOnTime","editOnTime","hideEditOnTime","showEditOffTime","editOffTime","hideEditOffTime","toggleInterval","editInterval","cancel","reload","editSsid1","editSsid2","editPass1","editPass2","editFacilityName","upload","fileInput","reader","FileReader","files","file","readAsDataURL","pattern","match","invalid_msg","img","Image","src","URL","createObjectURL","onload","result","filename","getSignedUrl","uploadImage","url_new","origin","pathname","onTimeValid","minOn","maxOn","offTimeValid","maxOff","OnTime","minOff","invalidInt","minOnOFF","maxOnOff","invalidonoff","OffTime","Mode","thirdPartyDeviceSettings","invalidFacilityName","disableEdit","tab","spo2ValueChange","DutyCycle","confirmReset","charsOnly","checkForSpecialCharacters","MiscellaneousSettingsService","put","_angular_core__WEBPACK_IMPORTED_MODULE_5__","loadSpo2SettingsRequestAction","LOAD_SPO2_SETTINGS_REQUEST","loadSpo2SettingsFailureAction","LOAD_SPO2_SETTINGS_FAILURE","loadSpo2SettingsSuccessAction","LOAD_SPO2_SETTINGS_SUCCESS","updateSpo2SettingsRequestAction","UPDATE_SPO2_SETTINGS_REQUEST","updateSpo2SettingsFailureAction","UPDATE_SPO2_SETTINGS_FAILURE","updateSpo2SettingsSuccessAction","UPDATE_SPO2_SETTINGS_SUCCESS","loadMiscellaneousSettingsRequestAction","LOAD_MISCELLANEOUS_SETTINGS_REQUEST","loadMiscellaneousSettingsFailureAction","LOAD_MISCELLANEOUS_SETTINGS_FAILURE","loadMiscellaneousSettingsSuccessAction","LOAD_MISCELLANEOUS_SETTINGS_SUCCESS","updateMiscellaneousSettingsRequestAction","UPDATE_MISCELLANEOUS_SETTINGS_REQUEST","updateMiscellaneousSettingsFailureAction","UPDATE_MISCELLANEOUS_SETTINGS_FAILURE","updateMiscellaneousSettingsSuccessAction","UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS","resetMiscellaneousSettingsRequestAction","RESET_MISCELLANEOUS_SETTINGS_REQUEST","resetMiscellaneousSettingsFailureAction","RESET_MISCELLANEOUS_SETTINGS_FAILURE","resetMiscellaneousSettingsSuccessAction","RESET_MISCELLANEOUS_SETTINGS_SUCCESS","MiscellaneousSettingsEffects","miscellaneousSettingsService","_miscellaneous_settings_actions__WEBPACK_IMPORTED_MODULE_0__","resetSettings","initialMiscellaneousSettingsState","MISCELLANEOUS_SETTINGS_DATA","ecgFilterSettings","ecgFilterSetting","autoGeneratePatientId","enableAccessToSPPHY","emr","miscSettingsId","spo2ConfigData","Enable","modifiedBy","modifiedById","miscellaneousSettingsFeatureKey","MiscellaneousSettingsReducer","getMiscellaneousSettingsState","_miscellaneous_settings_reducer__WEBPACK_IMPORTED_MODULE_0__","getMiscellaneousSettings","getMiscellaneousError","getMiscellaneousStatus","getMiscellaneousMessage","routes","path","canActivate","_guards_auth_guard__WEBPACK_IMPORTED_MODULE_4__","component","_shared_root_root_component__WEBPACK_IMPORTED_MODULE_7__","children","_settings_settings_component__WEBPACK_IMPORTED_MODULE_0__","_enum_roles_enum__WEBPACK_IMPORTED_MODULE_6__","_miscellaneous_miscellaneous_component__WEBPACK_IMPORTED_MODULE_1__","_manage_users_manage_users_cfa_manage_users_cfa_component__WEBPACK_IMPORTED_MODULE_5__","_manage_relays_manage_relays_manage_relays_component__WEBPACK_IMPORTED_MODULE_2__","_alert_configuration_alert_configuration_component__WEBPACK_IMPORTED_MODULE_3__","SettingsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_9__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_10__","SettingsModule","_angular_material_core__WEBPACK_IMPORTED_MODULE_28__","_services_date_adapter__WEBPACK_IMPORTED_MODULE_2__","useValue","_miscellaneous_services_miscellaneous_settings_service__WEBPACK_IMPORTED_MODULE_16__","_alert_configuration_services_alert_configuration_service__WEBPACK_IMPORTED_MODULE_17__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_29__","hasBackdrop","_angular_common_http__WEBPACK_IMPORTED_MODULE_30__","keycloak_angular__WEBPACK_IMPORTED_MODULE_31__","multi","_angular_common__WEBPACK_IMPORTED_MODULE_32__","_settings_routing_module__WEBPACK_IMPORTED_MODULE_1__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_angular_material_divider__WEBPACK_IMPORTED_MODULE_33__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_34__","_angular_material_button__WEBPACK_IMPORTED_MODULE_35__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_36__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_37__","_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_38__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_39__","_angular_material_select__WEBPACK_IMPORTED_MODULE_40__","_angular_material_input__WEBPACK_IMPORTED_MODULE_41__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_42__","_angular_forms__WEBPACK_IMPORTED_MODULE_43__","_dialogs_dialogs_module__WEBPACK_IMPORTED_MODULE_7__","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_13__","_ngrx_store__WEBPACK_IMPORTED_MODULE_44__","_miscellaneous_store_miscellaneous_settings_reducer__WEBPACK_IMPORTED_MODULE_14__","_alert_configuration_store_alert_configuration_reducer__WEBPACK_IMPORTED_MODULE_20__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_45__","_miscellaneous_store_miscellaneous_settings_effects__WEBPACK_IMPORTED_MODULE_15__","_alert_configuration_store_alert_configuration_effects__WEBPACK_IMPORTED_MODULE_21__","_manage_relays_manage_relays_module__WEBPACK_IMPORTED_MODULE_22__","_manage_users_manage_users_module__WEBPACK_IMPORTED_MODULE_23__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_46__","_angular_material_table__WEBPACK_IMPORTED_MODULE_47__","_life_signals_life_signals_module__WEBPACK_IMPORTED_MODULE_24__","_settings_settings_component__WEBPACK_IMPORTED_MODULE_3__","_miscellaneous_miscellaneous_component__WEBPACK_IMPORTED_MODULE_4__","_profile_profile_component__WEBPACK_IMPORTED_MODULE_5__","_manage_relays_manage_relays_manage_relays_component__WEBPACK_IMPORTED_MODULE_6__","_alert_configuration_alert_configuration_component__WEBPACK_IMPORTED_MODULE_8__","_alert_configuration_parameter_alerts_parameter_alerts_component__WEBPACK_IMPORTED_MODULE_9__","_alert_configuration_technical_alerts_technical_alerts_component__WEBPACK_IMPORTED_MODULE_10__","_alert_configuration_priority_priority_component__WEBPACK_IMPORTED_MODULE_11__","_alert_configuration_alert_messages_alert_messages_component__WEBPACK_IMPORTED_MODULE_12__","_alert_configuration_alert_destination_alert_destination_component__WEBPACK_IMPORTED_MODULE_18__","_directive_digit_only_directive__WEBPACK_IMPORTED_MODULE_19__","_alert_configuration_destination_settings_destination_settings_component__WEBPACK_IMPORTED_MODULE_25__","_alert_configuration_arrhythmia_alerts_arrhythmia_alerts_component__WEBPACK_IMPORTED_MODULE_26__","SettingsComponent","users","manageUsers","settingsSummary","relayViewAccess"],"sources":["webpack:///src/app/services/date.adapter.ts","webpack:///src/app/settings/alert-configuration/alert-configuration.component.html","webpack:///src/app/settings/alert-configuration/alert-configuration.component.ts","webpack:///src/app/settings/alert-configuration/alert-destination/alert-destination.component.html","webpack:///src/app/settings/alert-configuration/alert-destination/alert-destination.component.ts","webpack:///src/app/settings/alert-configuration/alert-messages/alert-messages.component.html","webpack:///src/app/settings/alert-configuration/alert-messages/alert-messages.component.ts","webpack:///src/app/settings/alert-configuration/arrhythmia-alerts/arrhythmia-alerts.component.html","webpack:///src/app/settings/alert-configuration/arrhythmia-alerts/arrhythmia-alerts.component.ts","webpack:///src/app/settings/alert-configuration/destination-settings/destination-settings.component.ts","webpack:///src/app/settings/alert-configuration/destination-settings/destination-settings.component.html","webpack:///src/app/settings/alert-configuration/parameter-alerts/parameter-alerts.component.html","webpack:///src/app/settings/alert-configuration/parameter-alerts/parameter-alerts.component.ts","webpack:///src/app/settings/alert-configuration/priority/priority.component.html","webpack:///src/app/settings/alert-configuration/priority/priority.component.ts","webpack:///src/app/settings/alert-configuration/services/alert-configuration.service.ts","webpack:///src/app/settings/alert-configuration/store/alert-configuration.actions.ts","webpack:///src/app/settings/alert-configuration/store/alert-configuration.effects.ts","webpack:///src/app/settings/alert-configuration/store/alert-configuration.reducer.ts","webpack:///src/app/settings/alert-configuration/store/alert-configuration.selector.ts","webpack:///src/app/settings/alert-configuration/store/alert-configuration.types.ts","webpack:///src/app/settings/alert-configuration/technical-alerts/technical-alerts.component.html","webpack:///src/app/settings/alert-configuration/technical-alerts/technical-alerts.component.ts","webpack:///src/app/settings/manage-relays/add-relay/add-relay.component.html","webpack:///src/app/settings/manage-relays/add-relay/add-relay.component.ts","webpack:///src/app/settings/manage-relays/care-giver-app/care-giver-app.component.html","webpack:///src/app/settings/manage-relays/care-giver-app/care-giver-app.component.ts","webpack:///src/app/settings/manage-relays/manage-relays.module.ts","webpack:///src/app/settings/manage-relays/manage-relays/manage-relays.component.html","webpack:///src/app/settings/manage-relays/manage-relays/manage-relays.component.ts","webpack:///src/app/settings/manage-relays/multi-patient-relays/multi-patient-relays.component.html","webpack:///src/app/settings/manage-relays/multi-patient-relays/multi-patient-relays.component.ts","webpack:///src/app/settings/manage-relays/relay-configuration/relay-configuration.component.html","webpack:///src/app/settings/manage-relays/relay-configuration/relay-configuration.component.ts","webpack:///src/app/settings/manage-relays/single-patient-relays/single-patient-relays.component.html","webpack:///src/app/settings/manage-relays/single-patient-relays/single-patient-relays.component.ts","webpack:///src/app/settings/manage-relays/store/manage-relays.actions.ts","webpack:///src/app/settings/manage-relays/store/manage-relays.effects.ts","webpack:///src/app/settings/manage-relays/store/manage-relays.reducer.ts","webpack:///src/app/settings/manage-relays/store/manage-relays.selector.ts","webpack:///src/app/settings/manage-users/addgroup/addgroup.component.html","webpack:///src/app/settings/manage-users/addgroup/addgroup.component.ts","webpack:///src/app/settings/manage-users/adduser/adduser.component.html","webpack:///src/app/settings/manage-users/adduser/adduser.component.ts","webpack:///src/app/settings/manage-users/edituser/edituser.component.html","webpack:///src/app/settings/manage-users/edituser/edituser.component.ts","webpack:///src/app/settings/manage-users/manage-users-cfa/manage-users-cfa.component.html","webpack:///src/app/settings/manage-users/manage-users-cfa/manage-users-cfa.component.ts","webpack:///src/app/settings/manage-users/manage-users.module.ts","webpack:///src/app/settings/manage-users/rename-roles/rename-roles.component.html","webpack:///src/app/settings/manage-users/rename-roles/rename-roles.component.ts","webpack:///src/app/settings/manage-users/store/manage-users.actions.ts","webpack:///src/app/settings/manage-users/store/manage-users.effects.ts","webpack:///src/app/settings/manage-users/store/manage-users.reducer.ts","webpack:///src/app/settings/manage-users/store/manage-users.selector.ts","webpack:///src/app/settings/miscellaneous/miscellaneous.component.html","webpack:///src/app/settings/miscellaneous/miscellaneous.component.ts","webpack:///src/app/settings/miscellaneous/services/miscellaneous-settings.service.ts","webpack:///src/app/settings/miscellaneous/store/miscellaneous-settings.actions.ts","webpack:///src/app/settings/miscellaneous/store/miscellaneous-settings.effects.ts","webpack:///src/app/settings/miscellaneous/store/miscellaneous-settings.reducer.ts","webpack:///src/app/settings/miscellaneous/store/miscellaneous-settings.selector.ts","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings/settings.component.ts","webpack:///src/app/settings/settings/settings.component.html"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { NativeDateAdapter } from \"@angular/material/core\";\n\n@Injectable()\nexport class AppDateAdapter extends NativeDateAdapter {\n  parse(value: any): Date | null {\n    if (typeof value === \"string\" && value.indexOf(\"/\") > -1) {\n      const str = value.split(\"/\");\n      const year = Number(str[2]);\n      const month = Number(str[1]) - 1;\n      const date = Number(str[0]);\n      return new Date(year, month, date);\n    }\n    const timestamp = typeof value === \"number\" ? value : Date.parse(value);\n    return isNaN(timestamp) ? null : new Date(timestamp);\n  }\n  format(date: Date, displayFormat: string): string {\n    if (displayFormat === \"input\") {\n      const day = date.getDate();\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      return this._to2digit(day) + \"/\" + this._to2digit(month) + \"/\" + year;\n    } else if (displayFormat === \"inputMonth\") {\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      return this._to2digit(month) + \"/\" + year;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return (\"00\" + n)?.slice(-2);\n  }\n}\n\nexport const APP_DATE_FORMATS = {\n  parse: {\n    dateInput: { month: \"short\", year: \"numeric\", day: \"numeric\" },\n  },\n  display: {\n    // dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\n    dateInput: \"input\",\n    // monthYearLabel: { month: 'short', year: 'numeric', day: 'numeric' },\n    monthYearLabel: \"inputMonth\"//,\n    // dateA11yLabel: { year: \"numeric\", month: \"long\", day: \"numeric\" },\n    // monthYearA11yLabel: { year: \"numeric\", month: \"long\" },\n  },\n};\n","<ls-page-header type=\"alert_configuration\">\n</ls-page-header>\n<div class=\"container-fluid\">\n  <div class=\"justify-content-between align-items-center my-2 mt-3\">\n    <div class=\"mx-md-2 mb-3 d-md-flex align-items-center\">\n      <span class=\"pe-3 head-setting\" *ngIf=\"(!isBlank(alertSettings?.FacilityName) || !isCfa)\">\n        {{ \"alert_config_module.alert_configuration\" | translate }} :\n      </span>\n      <span class=\"head-setting-right\" *ngIf=\"\n        checkRole(\n          accessRoles.ALERT_CONFIGURATIONS.ALERT_NOTIFICATIONS.PAGE_VIEW,\n          roles\n        )\n      \">\n        {{ alertSettings?.FacilityName }}\n      </span>\n      <span class=\"selectfilter-dropdown justify-content-md-start justify-content-between d-flex\" *ngIf=\"groupsView\">\n        <!-- <mat-form-field appearance=\"fill\" class=\"whiteselect drop-down-selectfilter selectfilter\">\n          <mat-select placeholder=\"Clinical Condition\" class=\"drop-down\"\n            (selectionChange)=\"getGroupAlertSettings()\" [(ngModel)]=\"clinicalFacilityGroupId\">\n            <mat-option *ngFor=\"let group of clinicalFacilityGroups\" [value]=\"group.groupId\">\n              {{ group.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter me-2 me-md-0  mx-md-2\" [selectedValue]=\"locationGroupId\" key=\"groupId\" displayKey=\"name\"\n                                     [label]=\"'alert_config_module.location' | translate\" (selected)=\"onLocationSelected($event, 'LOCATION')\"\n                                     [options]=\"locationGroups\" [noSelection]=\"true\">\n        </app-nested-dropdown>\n        <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter mx-md-2\" [selectedValue]=\"clinicalGroupId\" key=\"groupId\" displayKey=\"name\"\n                             [label]=\"'alert_config_module.medical_condition' | translate\" (selected)=\"onLocationSelected($event, 'CLINICAL')\"\n                             [options]=\"clinicalGroups\" [noSelection]=\"true\">\n        </app-nested-dropdown>\n      </span>\n    </div>\n    <div class=\"my-0 button-card-area alert-configuration-button \">\n      <button mat-button [ngClass]=\"\n        selectedTab === 'parameter' ? 'select-btn-active' : 'alert_btn'\n      \" (click)=\"selectTab('parameter')\">\n        {{ \"alert_config_module.parameter_alert\" | translate }}\n      </button>\n      <!-- <button mat-button (click)=\"selectTab('arrhythmia')\"\n        [ngClass]=\"selectedTab === 'arrhythmia' ? 'select-btn-active' : 'alert_btn'\">\n        {{ \"alert_config_module.arrhythmia_alert\" | translate }}\n      </button> -->\n      <button mat-button [ngClass]=\"\n        selectedTab === 'technical' ? 'select-btn-active' : 'alert_btn'\n      \" (click)=\"selectTab('technical')\">\n        {{ \"alert_config_module.technical_alert\" | translate }}\n      </button>\n\n      <button mat-button [ngClass]=\"selectedTab === 'priority' ? 'select-btn-active' : 'alert_btn'\"\n        (click)=\"selectTab('priority')\">\n        {{ \"alert_config_module.priority_alert\" | translate }}\n      </button>\n      <button mat-button [ngClass]=\"\n        selectedTab === 'destination' ? 'select-btn-active' : 'alert_btn'\n      \" (click)=\"selectTab('destination')\">\n        <span>{{ \"alert_config_module.alert_destinations\" | translate }}</span>\n      </button>\n\n      <button *ngIf=\"\n        checkRole(\n          accessRoles.ALERT_CONFIGURATIONS.ALERT_NOTIFICATIONS.PAGE_VIEW,\n          roles\n        )\n      \" class=\"btn4\" mat-button [ngClass]=\"selectedTab === 'message' ? 'select-btn-active' : 'alert_btn'\"\n        (click)=\"selectTab('message')\">\n        <span>{{ \"alert_config_module.alert_notifications\" | translate }}</span>\n      </button>\n    </div>\n    <div class=\"loading-indicator\" *ngIf=\"loader\">\n      <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <div class=\"table-container  bg-thead-color with-tab-table-low table-responsive-md px-2 comman-table-users head-border\" *ngIf=\"!loader\">\n      <div *ngIf=\"locationGroups?.length || clinicalGroups?.length || this.isCfa\">\n        <ng-template [ngIf]=\"selectedTab === 'parameter'\">\n          <app-parameter-alerts (reloadData)=\"getSettings()\"></app-parameter-alerts>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'technical'\">\n          <app-technical-alerts (reloadData)=\"getSettings()\"></app-technical-alerts>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'arrhythmia'\">\n          <app-arrhythmia-alerts (reloadData)=\"getSettings()\"></app-arrhythmia-alerts>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'priority'\">\n          <app-priority (reloadData)=\"getSettings()\"></app-priority>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'message'\">\n          <app-alert-messages (reloadData)=\"getSettings()\"></app-alert-messages>\n        </ng-template>\n\n        <ng-template [ngIf]=\"selectedTab === 'destination'\">\n          <app-destination-settings (reloadData)=\"getSettings()\"></app-destination-settings>\n        </ng-template>\n      </div>\n      <div class=\"text-center my-4 py-4\" *ngIf=\"clinicalGroups?.length === 0 && locationGroups?.length === 0 && !isCfa\">\n        {{\"alert_config_module.messages.no_groups\" | translate}}\n      </div>\n    </div>\n    <div class=\"row py-2 px-2\" *ngIf=\"!loader && (clinicalGroups?.length || locationGroups?.length || this.isCfa)\">\n      <div class=\"col-md-6 my-1\">\n        <button mat-flat-button color=\"primary\" class=\"reset_btn_bg\" (click)=\"openDialog()\" *ngIf=\"isShowResetButton\">\n          <mat-icon>refresh</mat-icon>\n          <span class=\"ps-2\">{{ \"alert_config_module.reset_to_default\" | translate }}</span>\n        </button>\n      </div>\n      <div class=\"col-md-6 text-center text-md-end my-1\">\n        <ng-template [ngIf]=\"showActionButtons\">\n          <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"handleAlertSettingsEditCancel()\">\n            <span>{{ \"alert_config_module.cancel\" | translate }}</span>\n          </button>\n          <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"handleAlertSettingsSave()\">\n            <span>{{ \"alert_config_module.save\" | translate }}</span>\n          </button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  parameterAlertItems,\n  technicalAlertItems,\n  priorityAlertItems,\n  uiAccessRoles,\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"./store\";\nimport { Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { ConfirmDialogComponent } from \"../../shared/confirm-dialog/confirm-dialog.component\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-alert-configuration\",\n  templateUrl: \"./alert-configuration.component.html\",\n  styleUrls: [\"./alert-configuration.component.scss\"],\n})\nexport class AlertConfigurationComponent implements OnInit {\n  selectedTab = \"parameter\";\n  error: string;\n  alertSettings: any = {};\n  alertDestinationSettings: any = {};\n  alertArrhythmiaSettings: any = {};\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  alertArrhythmiaSettings$: Observable<AlertConfigurationModels.ArrhythmiaAlertConfigurationData>;\n  alertSettingsStatus$: Observable<string>;\n  alertSettingsMessage$: Observable<string>;\n  parameterAlert = parameterAlertItems;\n  technicalAlert = technicalAlertItems;\n  priorityAlert = priorityAlertItems;\n  showActionButtons: boolean = false;\n  isShowResetButton: boolean = false;\n  isPHYGCUser: boolean = false;\n  cfId: string = \"\";\n  alertId: any = null;\n  roles: string[];\n  accessRoles: any = uiAccessRoles;\n  clinicalGroups: Group[] = [];\n  locationGroups: Group[] = [];\n  clinicalFacilityGroupId: any = null;\n  clinicalGroupId;\n  locationGroupId;\n  alertDestId: string = null;\n  alertArrId: string = null;\n  loader = true;\n  loaderSubscription: any;\n  isCfa = false;\n  facilityName;\n  editAccess;\n  groupsView = false;\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    private snackbar: SnackbarService,\n    private backendApiService: BackendApiService,\n    private commonService: CommonService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>\n  ) {}\n\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.facilityName = sessionStorage.getItem(\"facilityName\") || '';\n    if ([\"CFA\", \"CFAC\"].some((ai) => this.roles.includes(ai))) {\n      this.isCfa = true;\n      this.getSettings();\n    }\n    if([\"SC\", \"GC\", \"PHY\"].some((ai) => this.roles.includes(ai))) {\n      this.groupsView = true;\n      this.getClinicalFacilityGroups();\n    }\n    if ([\"CFA\", \"CFAC\", \"SC\"].some((ai) => this.roles.includes(ai))) {\n      this.editAccess = true;\n    }\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertDestinationSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertArrhythmiaSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getArrhythmiaAlertConfigurations\n    );\n    this.alertSettingsStatus$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationStatus\n    );\n    this.alertSettingsMessage$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurationMessage\n    );\n    this.loaderSubscription = this.store$\n      .select(AlertConfigurationStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        if (loaded) {\n          this.loader = false;\n        }\n      });\n\n    // if ([\"PHY\", \"GC\"].some((ai) => this.roles.includes(ai))) {\n    //   this.isPHYGCUser = true;\n    //   this.isShowResetButton = false;\n    // }\n    if(this.editAccess) {\n      this.isShowResetButton = true;\n    }\n\n    this.commonService.settingsAlertActionButtonsShow.subscribe((isShow) => {\n      if (this.showActionButtons !== isShow) {\n        this.showActionButtons = isShow;\n      }\n    });\n\n    this.alertSettings$.subscribe((data) => {\n      //this.loader = false;\n      this.alertSettings = { ...data };\n      this.alertId = this.alertSettings.AlertId;\n      if (\n        this.alertSettings.modifiedDateTime &&\n        this.selectedTab !== \"destination\"\n      ) {\n        this.editAccess\n          ? (this.isShowResetButton = true)\n          : (this.isShowResetButton = false);\n      }\n    });\n\n    this.alertDestinationSettings$.subscribe((data) => {\n      this.alertDestinationSettings = { ...data };\n      if (this.alertDestinationSettings.modifiedDateTime){\n        this.isPHYGCUser\n          ? (this.isShowResetButton = false)\n          : (this.isShowResetButton = true);\n      }\n      this.alertDestId = this.alertDestinationSettings.AlertDestId;\n    });\n\n    this.alertArrhythmiaSettings$.subscribe((data) => {\n      this.alertArrhythmiaSettings = { ...data };\n      if (this.alertArrhythmiaSettings.modifiedDateTime){\n        this.isPHYGCUser\n          ? (this.isShowResetButton = false)\n          : (this.isShowResetButton = true);\n      }\n      this.alertArrId = this.alertArrhythmiaSettings.ArrhythmiaId;\n      console.log(this.alertArrhythmiaSettings.ArrhythmiaId);\n    });\n  }\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n\n  selectTab(value: string) {\n    if (this.selectedTab !== value) {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    this.isShowResetButton = this.editAccess;\n    this.selectedTab = value;\n  }\n  openDialog() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.handleFactoryReset();\n      }\n    });\n  }\n\n  // Fetch alert settings - API Call\n  getSettings = () => {\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.setGroupAlertId(\n            this.clinicalFacilityGroupId\n        )\n    );\n    if (this.clinicalFacilityGroupId) {\n      this.getGroupAlertSettings();\n    } else {\n      let url = \"alert-settings/root/\" + this.cfId;\n      this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadAlertConfigurationRequestAction({\n          url,\n        })\n      );\n      this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data) => {\n          if (data) {\n            this.error = data;\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n          }\n        });\n      this.getAlertDestinationSettings();\n      this.getArrhythmiaSettings();\n    }\n  };\n\n  // Clinical Facility Groups list\n  getClinicalFacilityGroups = async () => {\n    let url = \"clinical-facilities/\" + this.cfId + \"/groups?sortBy=name:asc\";\n    try {\n      const resp: any = await this.backendApiService\n        .callGetApi(environment.dataApiUrl + url)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        let groups = resp.data;\n        this.clinicalGroups = groups.filter(g => g.type === \"CLINICAL\");\n        this.locationGroups = groups.filter(g => g.type === \"PHYSICAL\");\n        if (this.roles.indexOf('CFAC') > -1) {\n          this.clinicalGroups.unshift({ groupId: null, name: 'None' });\n          this.locationGroups.unshift({ groupId: null, name: 'None' });\n        } else {\n          if (this.locationGroups.length > 0) {\n            let parentGroups = this.locationGroups.filter(grp => grp.parent === 'ROOT');\n            this.locationGroups?.forEach(group => {\n              if (group.parent !== 'ROOT' && !(this.locationGroups.find(grp => grp.groupId === group.parent))) {\n                parentGroups.push(group);\n              }\n            });\n            this.clinicalFacilityGroupId = parentGroups[0].groupId;\n            this.locationGroupId = parentGroups[0].groupId;\n            this.getGroupAlertSettings();\n          } else if (this.clinicalGroups.length > 0) {\n            let parentGroups = this.clinicalGroups.filter(grp => grp.parent === 'ROOT');\n            this.locationGroups?.forEach(group => {\n              if (group.parent !== 'ROOT' && !(this.clinicalGroups.find(grp => grp.groupId === group.parent))) {\n                parentGroups.push(group);\n              }\n            });\n            this.clinicalFacilityGroupId = parentGroups[0].groupId;\n            this.clinicalGroupId = parentGroups[0].groupId;\n            this.getGroupAlertSettings();\n          } else {\n            this.loader = false;\n          }\n        }\n      }\n    } catch (error) {}\n  };\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsEditCancel() {\n    this.commonService.setSettingsAlertActionButtons(false);\n    switch (this.selectedTab) {\n      case \"parameter\":\n        this.commonService.setParameterAlertEditHide(true);\n        break;\n      case \"arrhythmia\":\n        this.commonService.setArrhythmiaParameterAlertEditHide(true);\n        break;\n      case \"technical\":\n        this.commonService.setTechnicalAlertEditHide(true);\n        break;\n      case \"priority\":\n        this.commonService.setPriorityAlertEditHide(true);\n        break;\n      case \"destination\":\n        this.commonService.setDestinationAlertEditHide(true);\n        break;\n      case \"message\": {\n        this.loader = true;\n        this.commonService.setNotificationAlertEditHide(true);\n        setTimeout(() => {\n          this.loader = false;\n        }, 300)\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  // Handle alert setting factory reset action\n  async handleFactoryReset() {\n    let responseMessage = \"\";\n    let url = \"\";\n    switch (this.selectedTab) {\n      case \"arrhythmia\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"arrhythmia-alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"arrhythmia-alert-settings/factory-reset/\" +\n            this.cfId + \"/\" + this.alertArrId;\n        }\n        responseMessage = \"Arrhythmia Alerts Settings Factory Reset Done\";\n        break;\n      case \"parameter\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/factory-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.alertId +\n            \"/param-alert-settings\";\n        }\n        responseMessage = \"Clinical Alerts Settings Factory Reset Done\";\n        break;\n      case \"technical\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/factory-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.alertId +\n            \"/tech-alert-settings\";\n        }\n        responseMessage = \"Technical Alerts Settings Factory Reset Done\";\n        break;\n      case \"priority\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/factory-reset/\" +\n            this.cfId +\n            \"/\" +\n            this.alertId +\n            \"/priority-alert-settings\";\n        }\n        responseMessage = \"Priority Alerts Settings Factory Reset Done\";\n        break;\n      case \"destination\":\n        if (this.clinicalFacilityGroupId) {\n          url =\n            \"alert-settings/group-reset/alert-destination-settings/\" +\n            this.cfId +\n            \"/\" +\n            this.clinicalFacilityGroupId;\n        } else {\n          url =\n            \"alert-settings/root/\" +\n            this.cfId +\n            \"/\" +\n            this.alertDestId +\n            \"/alert-destination-settings/factory-reset\";\n        }\n        responseMessage = \"Destination Alerts Settings Factory Reset Done\";\n        break;\n      case \"message\":\n        this.loader = true;\n        url =\n          \"alert-settings/root/\" +\n          this.cfId +\n          \"/\" +\n          this.alertDestId +\n          \"/alert-destination-settings/factory-reset\";\n        responseMessage = \"Alert Notifications Factory Reset Done\";\n        break;\n      default:\n        break;\n    }\n    try {\n      const resp: any = await this.backendApiService\n        .post(environment.dataApiUrl + url, {})\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(responseMessage, 'bottom', 'center');\n        if (this.selectedTab === \"message\") {\n          this.getAlertDestinationSettings();\n        } else {\n          if (this.clinicalFacilityGroupId) {\n            this.getGroupAlertSettings();\n          } else {\n            this.getSettings();\n          }\n        }\n      }\n    } catch (error) {\n      this.loader = false;\n      if (error) {\n        this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n      }\n    }\n  }\n\n  // Handle Alert Settings Edit Cancel Button\n  handleAlertSettingsSave() {\n    switch (this.selectedTab) {\n      case \"parameter\":\n        this.commonService.setParameterAlertEditSubmit(true);\n        break;\n      case \"technical\":\n        this.commonService.setTechnicalAlertEditSubmit(true);\n        break;\n      case \"priority\":\n        this.commonService.setPriorityAlertEditSubmit(true);\n        break;\n      case \"message\":\n        this.commonService.setNotificationAlertEditSubmit(true);\n        break;\n      case \"destination\":\n        this.commonService.setDestinationAlertEditSubmit(true);\n        break;\n      case \"arrhythmia\":\n        this.commonService.setArrhythmiaParameterAlertEditSubmit(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Group Alert Settings\n  getGroupAlertSettings() {\n    this.loader = true;\n    this.getGroupAlertDestinationSettings();\n    this.getArrhythmiaAlertGoupSettings();\n    this.getAlertGoupSettings();\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.setGroupAlertId(\n        this.clinicalFacilityGroupId\n      )\n    );\n  }\n\n  // Group Alert Settings\n  getAlertGoupSettings = () => {\n    let url =\n      \"alert-settings/group/\" + this.cfId + \"/\" + this.clinicalFacilityGroupId;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadGroupAlertConfigurationRequestAction(\n        { url }\n      )\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };\n\n  //Arrhythmia alert setting\n  getArrhythmiaAlertGoupSettings = () => {\n    let url = \"arrhythmia-alert-settings/group/\" + this.cfId + \"/\" + this.clinicalFacilityGroupId;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadArrhythmiaAlertConfigurationRequestAction(\n        { url }\n      )\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  };\n\n  // root Alert Destination Settings\n  getAlertDestinationSettings() {\n    let url = \"alert-settings/root/\" + this.cfId + \"/alert-destination-settings\";\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadDestinationAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        if (data) {\n          this.error = data;\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n        }\n      });\n  }\n\n  // root  Arrhythmia Alert Settings\n  getArrhythmiaSettings() {\n    let url = \"arrhythmia-alert-settings/root/\" + this.cfId;\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadArrhythmiaAlertConfigurationRequestAction({\n        url,\n      })\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        if (data) {\n          this.error = data;\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\n        }\n      });\n  }\n\n  // group Alert Destination Settings\n  getGroupAlertDestinationSettings() {\n    const url =\n      \"alert-settings/group/\" +\n      this.cfId +\n      \"/\" +\n      this.clinicalFacilityGroupId +\n      \"/alert-destination-settings\";\n    this.store$.dispatch(\n      new AlertConfigurationStoreActions.loadGroupDestinationAlertConfigurationRequestAction(\n        { url }\n      )\n    );\n    this.store$\n      .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n      .subscribe((data) => {\n        this.error = data;\n      });\n  }\n\n  checkRole(allowedRoles: any, userRoles: any) {\n    if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  onLocationSelected(event, type) {\n    this.clinicalFacilityGroupId = event;\n    if(this.clinicalFacilityGroupId) {\n      this.editAccess = [\"SC\"].some((ai) => this.roles.includes(ai));\n      if (type === 'CLINICAL') {\n        this.locationGroupId = null;\n        this.clinicalGroupId = event;\n      } else {\n        this.clinicalGroupId = null;\n        this.locationGroupId = event;\n      }\n      this.getGroupAlertSettings();\n    } else {\n      if ([\"CFA\", \"CFAC\"].some((ai) => this.roles.includes(ai))) {\n        this.editAccess = true;\n      }\n      this.loader = true;\n      this.getSettings();\n    }\n  }\n}\n","<table class=\"table destination-table\" *ngIf=\"alertDestinationSettings?.toString()\" aria-label=\"Table\">\n    <thead>\n    <tr><th colspan=\"3\" class=\"ps-4\">{{alertType}}</th></tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n                [(ngModel)]=\"alertDestinationSettings.AlertSMSEnabled\"></mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.sms\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsSMS; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertSMSEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\" matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('sms',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsSMS.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center py-1\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"smsContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of smsContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertSMSEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('sms', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('sms')\"  [disabled]=\"!alertDestinationSettings.AlertSMSEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n                [(ngModel)]=\"alertDestinationSettings.AlertWhatsAppEnabled\">\n              </mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.whatsapp\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsWhatsApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertWhatsAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive === false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\" matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('whatsapp',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsWhatsApp.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"whatsAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of whatsAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"me-3 msg-select\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertWhatsAppEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activePhoneNoLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('whatsapp', $event)\" [items]=\"activePhoneNoLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('whatsapp')\"  [disabled]=\"!alertDestinationSettings.AlertWhatsAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\"\n                [(ngModel)]=\"alertDestinationSettings.AlertEmailEnabled\"></mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.email\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsEMAIL; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertEmailEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive===false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\"  matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('email',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsEMAIL.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"emailContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"let product of emailContactList.controls; let i = index\" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertEmailEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activeEmailLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('email', $event)\" [items]=\"activeEmailLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('email')\" [disabled]=\"!alertDestinationSettings.AlertEmailEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"d-flex align-items-center py-2\">\n              <mat-slide-toggle [disabled]=\"!isEditAccess\" class=\"mx-3\" (change)=\"toggle($event)\" [(ngModel)]=\"\n              alertDestinationSettings.AlertCaregiverAppEnabled\n            \">\n              </mat-slide-toggle>\n              <span class=\"fw-700\">{{ \"alert-destination.capp\" | translate }}</span>\n            </div>\n          </td>\n          <td class=\"text-end pt-1\">\n            <span *ngFor=\"let contact of contactListsCaregiverApp; let i = index\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\"\n                [ngClass]=\"!alertDestinationSettings.AlertCaregiverAppEnabled? 'disabled':''\">\n                <mat-label *ngIf=\"contact?.isActive===false\">{{\"alert-destination.user_disabled\" | translate}}</mat-label>\n                <input class=\"text-truncate\"  matInput disabled [value]=\"contact.displayName\" />\n                <mat-icon (click)=\"openDialog('caregiver',i)\" *ngIf=\"isEditAccess\" class=\"mr-1\" matSuffix>delete_outline\n                </mat-icon>\n              </mat-form-field>\n            </span>\n            <span *ngIf=\"contactListsCaregiverApp.length === 0 && !isEditAccess\">\n              <mat-form-field class=\"input-icon-field me-2 mb-1\" appearance=\"fill\">\n                <input matInput disabled value=\"No User Selected\" />\n              </mat-form-field>\n            </span>\n          </td>\n          <td *ngIf=\"isEditAccess\" class=\"text-center\">\n            <form [formGroup]=\"alertDestinationForm\">\n              <div formArrayName=\"caregiverAppContactList\" class=\"d-flex align-items-center justify-content-end\">\n                <span *ngFor=\"\n                  let product of caregiverAppContactList.controls;\n                  let i = index\n                \" [formGroupName]=\"i\">\n<!--                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--                    <mat-select [placeholder]=\"'alert-destination.select_user'| translate\" class=\"msg-select me-3\" formControlName=\"user\"-->\n<!--                      [disabled]=\"!alertDestinationSettings.Setting.AlertCaregiverAppEnabled\">-->\n<!--                      <mat-option *ngFor=\"let contact of activeContactLists\" [value]=\"contact\">-->\n<!--                        {{ contact.displayName }}-->\n<!--                      </mat-option>-->\n<!--                    </mat-select>-->\n<!--                  </mat-form-field>-->\n                  <div class=\"msg-select me-3\" [class.disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <app-matselect-withsearch class=\"destination-search-filter me-2\" [placeholder]=\"'alert-destination.select_user'\" [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\" [key]=\"'displayName'\"\n                                            (valueUpdated)=\"userSelected('caregiver', $event)\" [items]=\"activeContactLists\" [backendSearch]=\"true\" (reload)=\"reloadContactList($event)\"></app-matselect-withsearch>\n                  </div>\n                </span>\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow me-3\"\n                  (click)=\"addContactDropdownList('caregiver')\" [disabled]=\"!alertDestinationSettings.AlertCaregiverAppEnabled\">\n                  <mat-icon>add</mat-icon>\n                </button>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n","import {\n  Component,\n  EventEmitter, Input, OnChanges,\n  OnInit,\n  Output, SimpleChanges\n} from \"@angular/core\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { CommonService } from \"@services/common.service\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { isAllowedRole, uiAccessRoles } from \"@utils/helpers\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray\n} from \"@angular/forms\";\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"src/app/shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {AlertConfigurationStoreActions} from \"../../../dialogs/notifications-component/store\";\n\n@Component({\n  selector: \"app-alert-destination\",\n  templateUrl: \"./alert-destination.component.html\",\n  styleUrls: [\"./alert-destination.component.scss\"],\n})\nexport class AlertDestinationComponent implements OnInit, OnChanges {\n  @Output() reloadData = new EventEmitter<any>(true);\n  @Input() alertDestinationSettings;\n  @Input() alertDestinationSettingsCopy;\n  @Input() alertType;\n  @Input() userData;\n  @Output() updateDestination = new EventEmitter<string>();\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  private subscriptions: Subscription[] = [];\n  cfId: string = \"\";\n  alertGroupId: any = null;\n\n  roles: string[];\n  destinationAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_DESTINATIONS;\n  isEditAccess: boolean = false;\n\n  contactLists: any = [];\n  activeContactLists: any = [];\n  activePhoneNoLists: any = [];\n  activeEmailLists: any = [];\n  contactLists$: Observable<AlertConfigurationModels.ClinicalFacilityContactListData>;\n\n  alertDestinationForm: FormGroup;\n  contactListsSMS: any = [];\n  contactListsWhatsApp: any = [];\n  contactListsEMAIL: any = [];\n  contactListsCaregiverApp: any = [];\n  selectedSmsContact;\n  selectedEmailContact;\n  selectedWhatsappContact;\n  selectedCaregiverContact;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 100px\",\n    },\n    {\n      id: \"alert_type\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"width: 200px\",\n    },\n    {\n      id: \"alert_dest\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n    },\n    {\n      id: \"alert_select\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n    },\n  ];\n  constructor(\n    private commonService: CommonService,\n    private autheticationService: AuthenticationService,\n    private snackbar: SnackbarService,\n    public dialog: MatDialog,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.alertDestinationForm = this.formBuilder.group({\n      smsContactList: this.formBuilder.array([]),\n      whatsAppContactList: this.formBuilder.array([]),\n      emailContactList: this.formBuilder.array([]),\n      caregiverAppContactList: this.formBuilder.array([]),\n    });\n    this.setDefaultData();\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n\n    if (isAllowedRole(this.destinationAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n\n    this.contactLists$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getClinicalFacilityContacts\n    );\n\n    this.subscriptions.push(\n      this.commonService.destinationAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.alertDestinationSettings = JSON.parse(\n            JSON.stringify(this.alertDestinationSettingsCopy)\n            \n          );\n          this.updateDestination.emit(JSON.stringify(this.alertDestinationSettings));\n          this.setDefaultContactListData(this.alertDestinationSettings);\n        }\n      })\n    );\n    this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    ).subscribe(data => {\n      this.setDefaultContactListData(this.alertDestinationSettings);\n    });\n\n\n    this.contactLists$.subscribe((data:any) => {\n      this.contactLists = data.map((x) => {\n        return {\n          ...x,\n          displayName: `${x.firstName} ${x.lastName}`,\n        };\n      });\n      this.activeContactLists = this.contactLists.filter(user => user?.isActive === true);\n      this.activePhoneNoLists = this.activeContactLists.filter(user => user?.phoneNo);\n      this.activeEmailLists = this.activeContactLists.filter(user => user?.email);\n    });\n    this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n  ngOnChanges(changes: SimpleChanges){\n    //this.setDefaultContactListData(this.alertDestinationSettings);\n  }\n\n\n  toggle(event: MatSlideToggleChange) {\n    this.updated();\n  }\n  openDialog(type: string, index: number) {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"95vw\",\n      maxHeight: \"95vh\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_delete\",\n        },\n      },\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      if (data) {\n        this.removeContactSelected(type, index);\n      }\n    });\n  }\n  getUrserIds(type: any) {\n    const ids = [];\n    let list = [];\n    switch (type) {\n      case \"sms\":\n        list = this.contactListsSMS;\n        break;\n      case \"whatsapp\":\n        list = this.contactListsWhatsApp;\n        break;\n      case \"email\":\n        list = this.contactListsEMAIL;\n        break;\n      case \"caregiver\":\n        list = this.contactListsCaregiverApp;\n        break;\n      default:\n        break;\n    }\n    for (let index = 0; index < list.length; index++) {\n      const element: any = list[index];\n      ids.push(element.userId);\n    }\n    return ids;\n  }\n\n  get smsContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"smsContactList\");\n  }\n\n  get whatsAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"whatsAppContactList\");\n  }\n\n  get emailContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"emailContactList\");\n  }\n\n  get caregiverAppContactList(): FormArray {\n    return <FormArray>this.alertDestinationForm.get(\"caregiverAppContactList\");\n  }\n\n  addContactDropdownList(type: string, isDefault: boolean = false) {\n    switch (type) {\n      case \"sms\":\n        const smsContactList = this.alertDestinationForm.controls\n            .smsContactList as FormArray;\n        if (isDefault) {\n          smsContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (this.selectedSmsContact) {\n            if (\n                !this.contactListsSMS?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedSmsContact.userId\n                  );\n                })\n            ) {\n              this.contactListsSMS.push(\n                  this.selectedSmsContact\n              );\n              smsContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              smsContactList.removeAt(0);\n              this.selectedSmsContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      case \"email\":\n        const emailContactList = this.alertDestinationForm.controls\n            .emailContactList as FormArray;\n        if (isDefault) {\n          emailContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (\n              this.selectedEmailContact\n          ) {\n            if (\n                !this.contactListsEMAIL?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedEmailContact.userId\n                  );\n                })\n            ) {\n              this.contactListsEMAIL.push(this.selectedEmailContact);\n              emailContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              emailContactList.removeAt(0);\n              this.selectedEmailContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      case \"whatsapp\":\n        const whatsAppContactList = this.alertDestinationForm.controls\n            .whatsAppContactList as FormArray;\n        if (isDefault) {\n          whatsAppContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (this.selectedWhatsappContact) {\n            if (\n                !this.contactListsWhatsApp?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedWhatsappContact.userId);\n                })\n            ) {\n              this.contactListsWhatsApp.push(this.selectedWhatsappContact);\n              whatsAppContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              whatsAppContactList.removeAt(0);\n              this.selectedWhatsappContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      case \"caregiver\":\n        const caregiverAppContactList = this.alertDestinationForm.controls\n            .caregiverAppContactList as FormArray;\n        if (isDefault) {\n          caregiverAppContactList.push(\n              this.formBuilder.group({\n                user: [\"\", [Validators.required]],\n              })\n          );\n        } else {\n          if (this.selectedCaregiverContact) {\n            if (\n                !this.contactListsCaregiverApp?.find((e: any) => {\n                  return (\n                      e.userId === this.selectedCaregiverContact.userId);\n                })\n            ) {\n              this.contactListsCaregiverApp.push(this.selectedCaregiverContact);\n              caregiverAppContactList.push(\n                  this.formBuilder.group({\n                    user: [\"\", [Validators.required]],\n                  })\n              );\n              caregiverAppContactList.removeAt(0);\n              this.selectedCaregiverContact = '';\n              this.updated();\n            } else {\n              this.snackbar.openCustomSnackBar(\"User already added\", 'bottom', 'center')\n            }\n          } else {\n            this.snackbar.openCustomSnackBar(\"Please select user\", 'bottom', 'center')\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  userSelected(type, value) {\n    switch(type) {\n      case 'sms' : {\n        this.selectedSmsContact = value;\n        break;\n      }\n      case 'whatsapp' : {\n        this.selectedWhatsappContact = value;\n        break;\n      }\n      case 'email': {\n        this.selectedEmailContact = value;\n        break;\n      }\n      case \"caregiver\": {\n        this.selectedCaregiverContact = value;\n        break\n      }\n      default: break;\n    }\n\n  }\n\n  setDefaultData() {\n    this.addContactDropdownList(\"sms\", true);\n    this.addContactDropdownList(\"email\", true);\n    this.addContactDropdownList(\"whatsapp\", true);\n    this.addContactDropdownList(\"caregiver\", true);\n  }\n\n  removeContactSelected(type: string, index: number) {\n    switch (type) {\n      case \"sms\":\n        this.contactListsSMS.splice(index, 1);\n        break;\n      case \"whatsapp\":\n        this.contactListsWhatsApp.splice(index, 1);\n        break;\n      case \"email\":\n        this.contactListsEMAIL.splice(index, 1);\n        break;\n      case \"caregiver\":\n        this.contactListsCaregiverApp.splice(index, 1);\n        break;\n      default:\n        break;\n    }\n    this.updated();\n  }\n\n  setDefaultContactListData(setting: any) {\n    if (setting && Array.isArray(setting.AlertSMS)) {\n      this.contactListsSMS = [];\n      setting.AlertSMS.forEach((element) => {\n        const contact = this.userData?.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsSMS.push(contact);\n        }\n      });\n    } else {\n      this.contactListsSMS = [];\n    }\n    if (setting && Array.isArray(setting.AlertWhatsApp)) {\n      this.contactListsWhatsApp = [];\n      setting.AlertWhatsApp.forEach((element) => {\n        const contact = this.userData.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsWhatsApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsWhatsApp = [];\n    }\n    if (setting && Array.isArray(setting.AlertEmail)) {\n      this.contactListsEMAIL = [];\n      setting.AlertEmail.forEach((element) => {\n        const contact = this.userData.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsEMAIL.push(contact);\n        }\n      });\n    } else {\n      this.contactListsEMAIL = [];\n    }\n    if (setting && Array.isArray(setting.AlertCaregiverApp)) {\n      this.contactListsCaregiverApp = [];\n      setting.AlertCaregiverApp.forEach((element) => {\n        const contact = this.userData.find((e: any) => {\n          return e.userId === element;\n        });\n        if (contact) {\n          this.contactListsCaregiverApp.push(contact);\n        }\n      });\n    } else {\n      this.contactListsCaregiverApp = [];\n    }\n  }\n  updated() {\n    let destinationSettings = JSON.parse(\n        JSON.stringify(this.alertDestinationSettings));\n    destinationSettings.AlertCaregiverApp =\n        this.getUrserIds(\"caregiver\");\n    destinationSettings.AlertEmail =\n        this.getUrserIds(\"email\");\n    destinationSettings.AlertSMS = this.getUrserIds(\"sms\");\n    destinationSettings.AlertWhatsApp =\n        this.getUrserIds(\"whatsapp\");\n    this.updateDestination.emit(JSON.stringify(destinationSettings));\n  }\n  reloadContactList(searchString) {\n    let url = `clinical-facilities/contacts?size=1000&page=1&searchText=${searchString}`;\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            {url}\n        )\n    );\n  }\n}\n","<div class=\"table-container table-responsive-sm\">\n    <table>\n        <tbody>\n            <tr>\n                <td class=\"alert_msg my-2\">\n                    <br>\n                    <mat-label class=\"matlabel mx-2 py-2 pb-2\"> {{ \"alert_config_module.notification\" | translate }}:\n                    </mat-label>\n                    <mat-form-field class=\"notification-textarea\">\n                        <textarea matInput cdkTextareaAutosize class=\"p-2\" [(ngModel)]=\"alertDestinationSettings.NotificationMessage\" [disabled]=\"iseditDisabled\" (keyup)=\"updated()\">\n                        </textarea>\n                        <button *ngIf=\"iseditDisabled\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow msgbtn\" (click)=\"\n                iseditDisabled = !iseditDisabled;\" matSuffix>\n                    <mat-icon>edit</mat-icon>\n                </button>\n                        <button *ngIf=\"!iseditDisabled\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow msgbtn\" (click)=\"iseditDisabled = !iseditDisabled\" matSuffix>\n                    <mat-icon>done</mat-icon>\n                </button>\n                    </mat-form-field>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-alert-messages\",\n  templateUrl: \"./alert-messages.component.html\",\n  styleUrls: [\"./alert-messages.component.scss\"],\n})\nexport class AlertMessagesComponent implements OnInit {\n  @Output() reloadData = new EventEmitter<any>(true);\n  private subscriptions: Subscription[] = [];\n  iseditDisabled: boolean;\n  alertDestinationSettings: any = {};\n  alertDestinationSettingsCopy: any = {};\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  cfId: string = \"\";\n\n  constructor(\n    private commonService: CommonService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private snackbar: SnackbarService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>\n  ) {}\n\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.iseditDisabled = true;\n    this.alertDestinationSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertDestinationSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.iseditDisabled = true;\n      this.alertDestinationSettings = { ...data };\n      this.alertDestinationSettingsCopy = JSON.parse(\n        JSON.stringify(this.alertDestinationSettings)\n      );\n    });\n\n    this.subscriptions.push(\n      this.commonService.notificationAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.iseditDisabled = true;\n          this.alertDestinationSettings = JSON.parse(\n            JSON.stringify(this.alertDestinationSettingsCopy)\n          );\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.commonService.notificationAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateAlertNotification();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  showActionButtons(isShow: boolean) {\n    this.updated();\n  }\n\n  async updateAlertNotification() {\n    try {\n      const url =\n        \"alert-settings/root/\" + this.cfId + \"/alert-destination-settings\";\n      const resp: any = await this.backendApiService\n        .post(\n          environment.dataApiUrl + url,\n          this.alertDestinationSettings\n        )\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setNotificationAlertEditSubmit(false);\n        this.iseditDisabled = true;\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center')\n      }\n    } catch (error) {}\n  }\n  updated() {\n    if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","<ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"parameterAlertSettings\">\n  <ng-template lsWidgetName=\"enabled\" let-config>\n    <span class=\"d-flex align-items-center\">\n      <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n        [disabled]=\"!isEditAccess\">\n      </mat-slide-toggle>\n    </span>\n  </ng-template>\n<ng-template lsWidgetName=\"alerts\" let-config>\n  {{ config.alert }}\n  <span class=\"fw-normal\"\n    *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n    ({{ config.unit }})</span>\n</ng-template>\n<ng-template lsWidgetName=\"threshold\" let-config>\n  <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n    <span *ngIf=\"!editThreshold[config?.index]\">\n      {{ config.LowThr }}\n    </span>\n    <span *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n      <input (keypress)=\"numericsOnly(config.key, $event)\" matInput digitOnly\n        class=\"text-input-box py-1 me-1\" (paste)=\"alertService.checkForSpecialCharacters($event)\"\n        [(ngModel)]=\"config.LowThr\" autocomplete=\"off\"\n        (change)=\"parameterThresholdChanged(config.index,'LowThr',parameterMinMax[config.key])\" type=\"number\"\n        [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\" [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\" />\n    </span>\n  </span>\n  <span *ngIf=\"!['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">-</span>\n</ng-template>\n\n<ng-template lsWidgetName=\"editThreshold\" let-config>\n  <span *ngIf=\"['SINUS_TACHYCARDIA','SINUS_BRADYCARDIA','PVC_RATE','PAC_RATE'].includes(config.key)\">\n    <span *ngIf=\"!editThreshold[config?.index]\">\n      <button *ngIf=\"!editThreshold[config?.index] && isEditAccess\" mat-mini-fab color=\"primary\"\n        class=\"btn-boxed btn-no-shadow\" [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config?.index, 'threshold')\">\n        <mat-icon>edit</mat-icon>\n      </button>\n    </span>\n    <span *ngIf=\"editThreshold[config?.index]\">\n      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n        (click)=\"showHideEdit(config?.index, 'threshold')\">\n        <mat-icon>done</mat-icon>\n      </button>\n    </span>\n  </span>\n</ng-template>\n\n<ng-template lsWidgetName=\"priority\" let-config>\n  <span class=\"me-2\">\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\" />\n      <circle *ngIf=\"config.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n        [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\" />\n    </svg>\n    &nbsp; <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n    <span *ngIf=\"editPrior[config.index]\">\n      <mat-select placeholder=\"Select\" class=\"priority-drop-down\" [(ngModel)]=\"config.Priority\"\n        (selectionChange)=\"updated()\">\n        <mat-option *ngFor=\"let priority of alertPriority\" [value]=\"priority.value\">\n          {{ priority.label }}\n        </mat-option>\n      </mat-select>\n    </span>\n  </span>\n</ng-template>\n<ng-template lsWidgetName=\"editPriority\" let-config>\n  <ng-container>\n    <span>\n      <span *ngIf=\"!editPrior[config.index]\">\n        <button *ngIf=\"isEditAccess\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n          (click)=\"showHideEdit(config.index, 'priority')\" [disabled]=\"!config.Enabled\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </span>\n      <span *ngIf=\"editPrior[config.index]\">\n        <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n          (click)=\"showHideEdit(config.index, 'priority')\">\n          <mat-icon>done</mat-icon>\n        </button>\n      </span>\n    </span>\n  </ng-container>\n</ng-template>\n<!--Delay time column-->\n<ng-template lsWidgetName=\"delayTime\" let-config>\n  <div class=\"d-flex justify-content-around align-items-center\">\n    <div class=\"d-flex ack-column justify-content-center align-items-center\">\n      <div class=\"nowrap-align d-flex justify-content-center align-items-center\">\n        <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n          {{ config.CondDelay }} <span>{{'alert_config_module.secs' |\n            translate}}</span>\n        </div>\n        <div *ngIf=\"editDelay[config.index]\">\n          <input (keypress)=\"numericsOnly(config.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\" matInput autocomplete=\"off\" type=\"number\"\n            digitOnly class=\"text-input-box py-1\" size=\"4\" (change)=\"\n          parameterThresholdChanged(\n            config.index,\n            'CondDelay',\n            parameterMinMax[config.key]\n          )\" [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n            [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\" [(ngModel)]=\"config.CondDelay\" />\n        </div>\n        <ng-container *ngIf=\"isEditAccess\">\n          <div class=\"ms-2 edit\">\n            <button *ngIf=\"!editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n              [disabled]=\"!config.Enabled\" (click)=\"showHideEdit(config.index, 'delay')\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button *ngIf=\"editDelay[config.index]\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n              (click)=\"showHideEdit(config.index, 'delay')\">\n              <mat-icon>done</mat-icon>\n            </button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<!--Modified column-->\n<ng-template lsWidgetName=\"modified\" let-config>\n  <span *ngIf=\"masterData?.modifiedDateTime\">\n    {{ masterData.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt : timeZone }}\n  </span>\n  <br />\n  <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n</ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  priorityColorCode,\n  arrhythmiaAlertPriorityOptions,\n  uiAccessRoles,\n  ArrhythmiaParameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { element } from \"angular\";\n\n@Component({\n  selector: 'app-arrhythmia-alerts',\n  templateUrl: './arrhythmia-alerts.component.html',\n  styleUrls: ['./arrhythmia-alerts.component.scss']\n})\nexport class ArrhythmiaAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = arrhythmiaAlertPriorityOptions;\n  parameterAlert = ArrhythmiaParameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ARRHYTHMIA_PARAMETER;\n  isEditAccess: boolean = false;\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  alertSettings$: Observable<AlertConfigurationModels.ArrhythmiaAlertConfigurationData>;\n  userPreferenceUnit;\n  postures;\n\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width: 60px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 250px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n      // style: \"width: 40px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      //style: \"width: 150px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n      //style: \"width: 40px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      //style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 20px\"\n    },\n  ];\n\n  constructor(\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    public alertService: AlertConfigurationsService,\n  ) { }\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.parameterMinMax = this.alertService.getParameterMinMax();\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getArrhythmiaAlertConfigurations\n    );\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      let alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if (data?.Setting[element.key]) {\n            const settings = data?.Setting[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i,\n            });\n          }\n        }\n      );\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.arrhythmiaParameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateParameterSettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n    // this.commonService.setSettingsAlertActionButtons(true);\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n\n  async updateParameterSettings() {\n    let parameterAlert: any = {};\n    let settings = [...this.parameterAlertSettings];\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        Thr: element.Thr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let url = \"arrhythmia-alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setArrhythmiaParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n      }\n    } catch (error) { }\n  }\n\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n      Thr: \"invalid_threshold\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    console.log(key);\n    console.log(control);\n    if (control === 'BODYTEMP' || control === 'SKINTEMP') {\n      return true\n    } else {\n      if (numericsOnlyPattern.test(key)) {\n        return true;\n      } else {\n        event.preventDefault();\n        return false;\n      }\n    }\n  }\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreActions,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState\n} from \"../store\";\nimport {Observable, Subscription} from \"rxjs\";\nimport {CommonService} from \"@services/common.service\";\nimport {BackendApiService} from \"@services/backendapi.service\";\nimport {AuthenticationService} from \"@services/authentication.service\";\nimport {SnackbarService} from \"@services/snackbar.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {Store} from \"@ngrx/store\";\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-destination-settings',\n  templateUrl: './destination-settings.component.html',\n  styleUrls: ['./destination-settings.component.scss']\n})\nexport class DestinationSettingsComponent implements OnInit {\n\n  constructor(private commonService: CommonService,\n              private backendApiService: BackendApiService,\n              private autheticationService: AuthenticationService,\n              private snackbar: SnackbarService,\n              public dialog: MatDialog,\n              private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,) { }\n  alertDestinationSettings$: Observable<AlertConfigurationModels.AlertDestinationConfigData>;\n  alertDestinationSettings;\n  alertDestinationSettingsCopy;\n  cfId: string = \"\";\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  ngOnInit(): void {\n    this.cfId = this.autheticationService.getCfId();\n    this.fetchContactList();\n    this.alertGroupId$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n    this.alertDestinationSettings$ = this.store$.select(\n        AlertConfigurationStoreSelectors.getDestinationAlertConfigurations\n    );\n    this.alertDestinationSettings$.subscribe((data) => {\n      this.alertDestinationSettings = { ...data };\n      this.alertDestinationSettings.UserData = this.alertDestinationSettings?.UserData?.map(user => {\n        return {\n          ...user,\n          displayName: `${user?.firstName} ${user?.lastName}`,\n          userId: user.id\n        }\n      });\n      this.alertDestinationSettingsCopy = JSON.parse(\n          JSON.stringify(this.alertDestinationSettings)\n      );\n    });\n    this.subscriptions.push(\n        this.commonService.destinationAlertEditSubmit.subscribe((isSubmit) => {\n          if (isSubmit) {\n            this.updateDestinationAlerts();\n          }\n        })\n    );\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n  valueUpdated(event, type) {\n    if(type=== 'clinical') {\n      this.alertDestinationSettings.Setting = JSON.parse(event);\n    } else {\n      this.alertDestinationSettings.SettingTech = JSON.parse(event);\n    }\n    if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  async updateDestinationAlerts() {\n    try {\n      let resp;\n      if(this.alertGroupId) {\n        if(this.alertDestinationSettings.GroupId === 'ROOT') {\n          this.alertDestinationSettings.AlertDestId = '';\n        }\n        this.alertDestinationSettings = {\n          ...this.alertDestinationSettings,\n          GroupId: this.alertGroupId,\n          FacilityId: this.cfId\n        };\n        const url = \"alert-settings/group-edit/alert-destination-settings\";\n         resp = await this.backendApiService\n            .post(\n                environment.dataApiUrl + url,\n                this.alertDestinationSettings\n            )\n            .toPromise();\n      } else {\n        const url =\n            \"alert-settings/root/\" + this.cfId + \"/alert-destination-settings\";\n         resp = await this.backendApiService\n            .post(\n                environment.dataApiUrl + url,\n                this.alertDestinationSettings\n            )\n            .toPromise();\n      }\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center')\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setDestinationAlertEditSubmit(false);\n      }\n    } catch (error) {}\n  }\n  fetchContactList() {\n    let url = \"clinical-facilities/contacts?page=1&size=1000\";\n    this.store$.dispatch(\n        new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction(\n            { url }\n        )\n    );\n    this.store$\n        .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n        .subscribe((data) => {});\n  }\n  ngOnDestroy() {\n    this.reloadData.emit();\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n}\n","<div class=\"px-2 py-3 \">\n    <div class=\"table-container alert-destination-table table-responsive-sm\">\n        <app-alert-destination [alertType]=\"'Clinical'\" [alertDestinationSettings]=\"alertDestinationSettings.Setting\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.Setting\" (updateDestination)=\"valueUpdated($event, 'clinical')\"\n                               [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n        <app-alert-destination [alertType]=\"'Technical'\" [alertDestinationSettings]=\"alertDestinationSettings.SettingTech\" [alertDestinationSettingsCopy]=\"alertDestinationSettingsCopy.SettingTech\" (updateDestination)=\"valueUpdated($event, 'tech')\"\n                               [userData]=\"alertDestinationSettings?.UserData\"></app-alert-destination>\n    </div>\n</div>\n","<ls-table\n        [(config)]=\"config\"\n        [columns]=\"columns\"\n        [data]=\"parameterAlertSettings\"\n>\n  <ng-template lsWidgetName=\"enabled\" let-config>\n      <span class=\"d-flex align-items-center\">\n        <mat-slide-toggle\n                [(ngModel)]=\"config.Enabled\"\n                class=\"ms-1 me-2\"\n                (change)=\"toggle(config?.index)\"\n                [disabled]=\"!isEditAccess\"\n        >\n        </mat-slide-toggle>\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"alerts\" let-config>\n      {{ config.alert }} <span class=\"fw-normal\" *ngIf=\"config.key !== 'POSTURE_ALERT'\">({{ config.unit }})</span>\n  </ng-template>\n  <ng-template lsWidgetName=\"threshold\" let-config>\n      <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\"\n              >{{ config.LowThr }} &lt;\n            <span *ngIf=\"config.key !== 'SPO2'\">\n            <span class=\"fw-700\">\n              {{ \"alert_config_module.or\" | translate }} </span\n            >&gt; {{ config.HighThr }}\n            </span>\n          </span>\n        <div *ngIf=\"editThreshold[config?.index]\" class=\"d-flex align-items-center justify-content-center\">\n            <input\n            (keypress)=\"numericsOnly(config.key, $event)\"\n                     (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                    matInput\n                    digitOnly\n                    autocomplete=\"off\"\n                    class=\"text-input-box py-1\"\n                    [(ngModel)]=\"config.LowThr\"\n                    (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'LowThr',\n                  parameterMinMax[config.key]\n                )\n              \"\n                    type=\"number\"\n                    [min]=\"parameterMinMax[config.key]['MIN']['LowThr']\"\n                    [max]=\"parameterMinMax[config.key]['MAX']['LowThr']\"\n                    (keydown)=\"limitChar(config.key, $event)\"\n                    [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"\n            />\n            <span class=\"ms-1\"><</span>\n            <span *ngIf=\"config.key !== 'SPO2'\">\n            <span class=\"me-1\">{{ \"alert_config_module.or\" | translate }}&gt;</span>\n            <input\n                    (keypress)=\"numericsOnly(config.key, $event)\"\n                    (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                    matInput\n                    digitOnly\n                    autocomplete=\"off\"\n                    class=\"text-input-box py-1\"\n                    [(ngModel)]=\"config.HighThr\"\n                    type=\"number\"\n                    (keydown)=\"limitChar(config.key, $event)\"\n                    [min]=\"parameterMinMax[config.key]['MIN']['HighThr']\"\n                    [max]=\"parameterMinMax[config.key]['MAX']['HighThr']\"\n                    [step]=\"config.key === 'BODYTEMP' || config.key === 'SKINTEMP' ? config.unit === '°C' ? 0.1 : 0.2 : 1\"\n                    (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'HighThr',\n                  parameterMinMax[config.key]\n                )\n              \"\n            />\n            </span>\n          </div>\n      </span>\n      <span  *ngIf=\"config.key === 'POSTURE_ALERT'\">\n<!--        <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter posture-select\">-->\n<!--          <mat-select [(ngModel)]=\"config.HighThr\" class=\"mat-sel\" [disabled]=\"!isEditAccess || !config.Enabled\" (selectionChange)=\"updated()\">-->\n<!--              <mat-option *ngFor=\"let posture of postures;let i=index\" [value]=\"i\"> {{posture}}</mat-option>-->\n<!--          </mat-select>-->\n<!--        </mat-form-field>-->\n          -\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"editThreshold\" let-config>\n      <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">\n        <span *ngIf=\"!editThreshold[config?.index]\">\n            <button\n                    *ngIf=\"!editThreshold[config?.index] && isEditAccess\"\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    [disabled]=\"!config.Enabled\"\n                    (click)=\"showHideEdit(config?.index, 'threshold')\"\n            >\n              <mat-icon>edit</mat-icon>\n            </button>\n          </span>\n        <span *ngIf=\"editThreshold[config?.index]\">\n            <button\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config?.index, 'threshold')\"\n            >\n              <mat-icon>done</mat-icon>\n            </button>\n          </span>\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"priority\" let-config>\n      <span class=\"me-1 priority-card \">\n              <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[config.Priority]\"/>\n                <circle *ngIf=\"config?.Priority?.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\" [attr.stroke]=\"priorityHexCode[config.Priority]\" stroke-width=\"2\" stroke-dasharray=\"4 4\"/>\n              </svg>\n              &nbsp;   <span *ngIf=\"!editPrior[config.index]\">{{ config.Priority }}</span>\n                  <span *ngIf=\"editPrior[config.index]\">\n                  <mat-select\n                    placeholder=\"Select\"\n                    class=\"priority-drop-down\"\n                    [(ngModel)]=\"config.Priority\"\n                    (selectionChange)=\"updated()\">\n                    <mat-option\n                      *ngFor=\"let priority of alertPriority\"\n                      [value]=\"priority.value\"\n              >\n                {{ priority.label }}\n              </mat-option>\n                    </mat-select>\n                  </span>\n      </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"editPriority\" let-config>\n      <ng-container>\n                      <span>\n                          <span *ngIf=\"!editPrior[config.index]\">\n            <button\n                    *ngIf=\"isEditAccess\"\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config.index, 'priority')\"\n                    [disabled]=\"!config.Enabled\"\n            >\n              <mat-icon>edit</mat-icon>\n            </button>\n          </span>\n                          <span *ngIf=\"editPrior[config.index]\">\n            <button\n                    mat-mini-fab\n                    color=\"primary\"\n                    class=\"btn-boxed btn-no-shadow\"\n                    (click)=\"showHideEdit(config.index, 'priority')\"\n            >\n              <mat-icon>done</mat-icon>\n            </button>\n          </span>\n                      </span>\n      </ng-container>\n  </ng-template>\n  <ng-template lsWidgetName=\"delayTime\" let-config>\n      <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key !== 'BPSYS' && config.key !== 'BPDIA' && config.key !=='BP'\">\n          <div class=\"d-flex ack-column justify-content-center align-items-center\">\n              <div class=\"d-flex justify-content-center align-items-center\">\n                  <div *ngIf=\"!editDelay[config.index]\" class=\"text-value align-items-center justify-content-end\">\n                      {{ config.CondDelay }} <span *ngIf=\"config.key !== 'POSTURE_ALERT'\">{{'alert_config_module.secs' | translate}}</span>\n                      <span *ngIf=\"config.key === 'POSTURE_ALERT'\">{{'alert_config_module.hrs' | translate}}</span>\n                  </div>\n                  <div *ngIf=\"editDelay[config.index]\">\n                     <input\n                     (keypress)=\"numericsOnly(config.key, $event)\"\n                     (paste)=\"alertService.checkForSpecialCharacters($event)\"\n                    matInput\n                    autocomplete=\"off\"\n                    type=\"number\"\n                    digitOnly\n                    class=\"text-input-box py-1\"\n                    size=\"4\"\n                    (change)=\"\n                parameterThresholdChanged(\n                  config.index,\n                  'CondDelay',\n                  parameterMinMax[config.key]\n                )\n              \"\n                    [min]=\"parameterMinMax[config.key]['MIN']['CondDelay']\"\n                    [max]=\"parameterMinMax[config.key]['MAX']['CondDelay']\"\n                    [(ngModel)]=\"config.CondDelay\"\n            />\n                  </div>\n                  <ng-container *ngIf=\"isEditAccess\">\n                      <div class=\"ms-2 edit\">\n                          <button\n                                  *ngIf=\"!editDelay[config.index]\"\n                                  mat-mini-fab\n                                  color=\"primary\"\n                                  class=\"btn-boxed btn-no-shadow\"\n                                  [disabled]=\"!config.Enabled\"\n                                  (click)=\"showHideEdit(config.index, 'delay')\"\n                          >\n                              <mat-icon>edit</mat-icon>\n                          </button>\n                          <button\n                                  *ngIf=\"editDelay[config.index]\"\n                                  mat-mini-fab\n                                  color=\"primary\"\n                                  class=\"btn-boxed btn-no-shadow\"\n                                  (click)=\"showHideEdit(config.index, 'delay')\"\n                          >\n                              <mat-icon>done</mat-icon>\n                          </button>\n                      </div>\n                  </ng-container>\n              </div>\n          </div>\n      </div>\n      <div class=\"d-flex justify-content-around align-items-center\" *ngIf=\"config.key === 'BPSYS' || config.key === 'BPDIA' || config.key ==='BP'\">\n          -\n      </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"modified\" let-config>\n    <span *ngIf=\"masterData?.modifiedDateTime\">\n      {{ masterData?.modifiedDateTime+ '+0000' | date : \"MMM dd, yyyy \" + timeFmt : timeZone }}\n    </span><br />\n    <span *ngIf=\"!isBlank(masterData?.modifiedBy)\"\n    >by {{ masterData?.modifiedBy }}</span\n    >\n  </ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>\n","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  priorityColorCode,\n  alertPriorityOptions,\n  uiAccessRoles,\n  parameterAlertItems,\n  isAllowedRole,\n  postures\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\nimport {AlertConfigurationsService} from \"../services/alert-configuration.service\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-parameter-alerts\",\n  templateUrl: \"./parameter-alerts.component.html\",\n  styleUrls: [\"./parameter-alerts.component.scss\"],\n})\nexport class ParameterAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = alertPriorityOptions;\n  parameterAlert = parameterAlertItems;\n  parameterAlertSettings: any = [];\n  parameterAlertSettingsCopy: any = [];\n  masterData: any = {};\n  roles: string[];\n  parameterAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_PARAMETER;\n  isEditAccess: boolean = false;\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n  userPreferenceUnit;\n  postures;\n\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n     style: \"width: 60px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n     style: \"min-width: 250px\",\n    },\n    {\n      id: \"threshold\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      style: \"width: 160px\"\n    },\n    {\n      id: \"editThreshold\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n     // style: \"width: 40px\"\n    },\n    {\n      id: \"priority\",\n      sortable: false,\n      headerClass: [\"align-right\"],\n      //style: \"width: 150px;\",\n      cellClass: [\"text-end\", \"d-flex\", \"justify-content-end\"],\n    },\n    {\n      id: \"editPriority\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"px-0\"],\n      //style: \"width: 40px\"\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      //style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 20px\"\n    },\n  ];\n\n  constructor(\n    private commonService: CommonService,\n    private userPreference: UserPreferenceService,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    public alertService: AlertConfigurationsService,\n  ) {}\n\n  private tempConvFunction: (value: number) => number;\n\n  editThreshold = [false];\n  editPrior = [false];\n  editDelay = [false];\n  parameterMinMax;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  ngOnInit() {\n    this.postures = postures;\n    this.roles = this.autheticationService.getRoles();\n    this.userPreferenceUnit = this.userPreference.getUserUnitSystem();\n    if (this.userPreferenceUnit === 'IS') {\n      this.tempConvFunction = this.userPreference.convertFtoC;\n    } else {\n      this.tempConvFunction = (temp: number) => temp;\n    }\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.parameterMinMax = this.alertService.getParameterMinMax() ;\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.hideParameterEdit();\n      this.masterData = { ...data };\n      let alerts = [];\n      this.parameterAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any }, i) => {\n          if(data?.Setting?.Param?.PhyParam[element.key]) {\n            const settings = data?.Setting.Param.PhyParam[element.key];\n            alerts.push({\n              ...settings,\n              alert: element.alerts,\n              unit: element.unit,\n              key: element.key,\n              index: i,\n            });\n          }\n        }\n      );\n      if (this.userPreferenceUnit === 'SI') {\n        alerts.forEach(setting => {\n          if((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = Math.round(setting.LowThr/100)/10;\n            setting.HighThr = Math.round(setting.HighThr/100)/10;\n            setting.unit = \"°C\";\n          }\n              });\n      } else {\n        alerts.forEach(setting => {\n          if((setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP')) {\n            setting.LowThr = this.userPreference.convertCtoF(setting.LowThr/1000);\n            setting.HighThr = this.userPreference.convertCtoF(setting.HighThr/1000);\n            setting.unit = \"°F\";\n          }\n        });\n      }\n      this.parameterAlertSettings = alerts;\n      this.parameterAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n    if (isAllowedRole(this.parameterAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.parameterAlertSettings = JSON.parse(\n            JSON.stringify(this.parameterAlertSettingsCopy)\n          );\n          this.hideParameterEdit();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.commonService.parameterAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateParameterSettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"threshold\":\n        this.editThreshold[index] = !this.editThreshold[index];\n        break;\n      case \"priority\":\n        this.editPrior[index] = !this.editPrior[index];\n        break;\n      case \"delay\":\n        this.editDelay[index] = !this.editDelay[index];\n        break;\n      default:\n        break;\n    }\n    // this.commonService.setSettingsAlertActionButtons(true);\n  }\n\n  // Hide all active edit buttons\n  hideParameterEdit() {\n    this.editThreshold = [false];\n    this.editPrior = [false];\n    this.editDelay = [false];\n  }\n\n  toggle(i: number) {\n    this.editThreshold[i] = false;\n    this.editPrior[i] = false;\n    this.editDelay[i] = false;\n    this.updated();\n  }\n\n  async updateParameterSettings() {\n    let parameterAlert: any = {};\n    console.log(this.parameterAlertSettings);\n    let settings = [...this.parameterAlertSettings];\n    settings = settings.map(setting =>\n        setting.key === 'BODYTEMP' || setting.key === 'SKINTEMP'\n            ? { ...setting, LowThr: Math.floor(this.tempConvFunction(setting.LowThr)*1000),\n              HighThr:  Math.floor(this.tempConvFunction(setting.HighThr)*1000),}\n            : setting\n    );\n    // settings = settings.map(setting =>\n    //     setting.key === 'POSTURE_ALERT' ? { ...setting, LowThr: setting.HighThr} : setting\n    // );\n    settings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Enabled: element.Enabled,\n        Priority: element.Priority,\n        LowThr: element.LowThr,\n        HighThr: element.HighThr,\n        CondDelay: parseInt(element.CondDelay)\n      };\n    });\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"PhyParam\"] = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let url = \"alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setParameterAlertEditSubmit(false);\n        this.hideParameterEdit();\n      }\n    } catch (error) {}\n  }\n\n  // Threshold input filed validation\n  parameterThresholdChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      LowThr: \"invalid_low_threshold\",\n      HighThr: \"invalid_high_threshold\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n      this.parameterAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.parameterAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.parameterAlertSettings[index][key] =\n        this.parameterAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n      // to do specific error message\n    }\n\n    if (key === \"LowThr\") {\n      if (\n        this.parameterAlertSettings[index][key] >=\n        this.parameterAlertSettings[index][\"HighThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_low_threshold\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"HighThr\") {\n      if (\n        this.parameterAlertSettings[index][key] <=\n        this.parameterAlertSettings[index][\"LowThr\"]\n      ) {\n        this.parameterAlertSettings[index][key] =\n          this.parameterAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_high_threshold\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  limitChar(control, event) {\n    if(control === 'BODYTEMP' || control === 'SKINTEMP') {\n      if(event.target.value.toString().length>5){\n        event.target.value = event.target.value.substr(0, 5);\n      }\n    } else {\n      if(event.key==='.'){\n        event.preventDefault();\n      }\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.parameterAlertSettings) !== JSON.stringify(this.parameterAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    console.log(key);\n    console.log(control);\n    if(control === 'BODYTEMP' || control === 'SKINTEMP') {\n      return true\n    } else {\n      if (numericsOnlyPattern.test(key)) {\n        return true;\n      } else {\n        event.preventDefault();\n        return false;\n      }\n    }\n  }\n}\n","<ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"priorityAlertSettings\" class=\"head-border fixed-header-relative\">\n  <ng-template lsWidgetName=\"alerts\" let-priorityAlertConfig>\n    <span class=\"mx-3\">\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"16\" cy=\"16\" r=\"8\" [attr.fill]=\"priorityHexCode[priorityAlertConfig.alert.toUpperCase()]\" />\n        <circle *ngIf=\"priorityAlertConfig.alert.toUpperCase() !== 'LOW'\" cx=\"16\" cy=\"16\" r=\"12\"\n          [attr.stroke]=\"priorityHexCode[priorityAlertConfig.alert.toUpperCase()]\" stroke-width=\"2\"\n          stroke-dasharray=\"4 4\" />\n      </svg>\n    </span>\n    <span>\n      {{ priorityAlertConfig.alert }}\n    </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freqExtraHeader\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column align-items-center text-center\">\n        {{ \"alert_config_module.acknowledge\" | translate }}\n      </div>\n      <div class=\"d-flex ack-column align-items-center text-center\">\n        {{ \"alert_config_module.unacknowledge\" | translate }}\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freq\" let-priorityAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\" d-flex align-items-center\">\n          <div *ngIf=\"!editPriority[priorityAlertConfig?.index]\"\n            class=\"text-value align-items-center\">\n\n            {{ priorityAlertConfig.Frequency_Ack }} {{ (priorityAlertConfig.unit !== 'Mins') ?\n            ('alert_config_module.mins' | translate) : priorityAlertConfig.unit}}\n          </div>\n          <div *ngIf=\"editPriority[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly type=\"number\" matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Frequency_Ack',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Frequency_Ack'\n                ]\n              \" [max]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MAX'][\n                  'Frequency_Ack'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Frequency_Ack\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <span *ngIf=\"!editPriority[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityACK')\">\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </span>\n              <span *ngIf=\"editPriority[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityACK')\">\n                  <mat-icon>done</mat-icon>\n                </button>\n              </span>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\" d-flex align-items-center\">\n          <div *ngIf=\"!editPrio[priorityAlertConfig?.index]\" class=\"text-value align-items-center\">\n\n            {{ priorityAlertConfig.Frequency_UnAck }} {{ (priorityAlertConfig.unit !== 'Mins') ?\n            ('alert_config_module.mins' | translate) : priorityAlertConfig.unit }}\n          </div>\n          <div *ngIf=\"editPrio[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" type=\"number\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Frequency_UnAck',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Frequency_UnAck'\n                ]\n              \" [max]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MAX'][\n                  'Frequency_UnAck'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Frequency_UnAck\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <span *ngIf=\"!editPrio[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityNACK')\">\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </span>\n              <span *ngIf=\"editPrio[priorityAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(priorityAlertConfig?.index, 'priorityNACK')\">\n                  <mat-icon>done</mat-icon>\n                </button>\n              </span>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_breakthroughExtraHeader\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column align-items-center justify-content-center\">\n        {{ \"alert_config_module.acknowledge\" | translate }}\n      </div>\n      <div class=\"d-flex ack-column align-items-center justify-content-center\">\n        {{ \"alert_config_module.unacknowledge\" | translate }}\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_breakthrough\" let-priorityAlertConfig>\n    <div class=\"d-flex align-items-center justify-content-center\">\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\" d-flex align-items-center\">\n          <div *ngIf=\"!editBreakThrough[priorityAlertConfig?.index]\"\n            class=\"text-value align-items-center\">\n            <span>&#177; </span>\n            {{ priorityAlertConfig.Percentage_Ack }} {{ priorityAlertConfig.percentage }}\n          </div>\n          <div *ngIf=\"editBreakThrough[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" type=\"number\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Percentage_Ack',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Percentage_Ack'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Percentage_Ack\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <button *ngIf=\"!editBreakThrough[priorityAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughACK')\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button *ngIf=\"editBreakThrough[priorityAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughACK')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"d-flex ack-column  align-items-center\">\n        <div class=\"d-flex align-items-center\">\n          <div *ngIf=\"!editBreaksThrough[priorityAlertConfig?.index]\"\n            class=\"text-value align-items-center\">\n            <span>&#177; </span>\n            {{ priorityAlertConfig.Percentage_UnAck }} {{ priorityAlertConfig.percentage }}\n          </div>\n          <div *ngIf=\"editBreaksThrough[priorityAlertConfig?.index]\">\n            <input  (keypress)=\"numericsOnly(priorityAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n              digitOnly matInput autocomplete=\"off\" class=\"text-input-box text-center py-1\" type=\"number\" (change)=\"\n                priorityParamInputChanged(\n                  priorityAlertConfig?.index,\n                  'Percentage_UnAck',\n                  priorityAlertMinMax[priorityAlertConfig.key]\n                )\n              \" [min]=\"\n                priorityAlertMinMax[priorityAlertConfig.key]['MIN'][\n                  'Percentage_UnAck'\n                ]\n              \" [(ngModel)]=\"priorityAlertConfig.Percentage_UnAck\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <span class=\"ms-2\">\n              <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughNACK')\"\n                *ngIf=\"!editBreaksThrough[priorityAlertConfig?.index]\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button *ngIf=\"editBreaksThrough[priorityAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(priorityAlertConfig?.index, 'breakThroughNACK')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport {\n  priorityColorCode,\n  alertPriorityOptions,\n  uiAccessRoles,\n  priorityAlertItems,\n  isAllowedRole,\n  alertConfigMinMaxValues,\n} from \"@utils/helpers\";\nimport { CommonService } from \"@services/common.service\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-priority\",\n  templateUrl: \"./priority.component.html\",\n  styleUrls: [\"./priority.component.scss\"],\n})\nexport class PriorityComponent implements OnInit, OnDestroy {\n  @Output() reloadData = new EventEmitter<any>(true);\n  private subscriptions: Subscription[] = [];\n  priorityHexCode: any = priorityColorCode;\n  alertPriority: any = alertPriorityOptions;\n\n  priorityAlert = priorityAlertItems;\n  masterData: any = {};\n  priorityAlertSettings: any = [];\n  priorityAlertSettingsCopy: any = [];\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n\n  roles: string[];\n  priorityAlertAccess: any = uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_PRIORITY;\n  isEditAccess: boolean = false;\n\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  priorityAlertMinMax = alertConfigMinMaxValues.priorityAlert;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n    showExtraHeader: true\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 150px\",\n    },\n    {\n      id: \"alert_freq\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-end\"],\n      style: \"width: 460px;\",\n    },\n    {\n      id: \"alert_breakthrough\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-end\"],\n      style: \"width: 460px;\",\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"min-width: 50px\"\n    },\n  ];\n  constructor(\n    private commonService: CommonService,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    public alertService : AlertConfigurationsService\n  ) {}\n\n  editPriority = [false];\n  editPrio = [false];\n\n  editBreakThrough = [false];\n  editBreaksThrough = [false];\n\n  ngOnInit() {\n    this.roles = this.autheticationService.getRoles();\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setParameterAlertEditSubmit(false);\n      this.hidePriorityAlertEdit();\n      this.masterData = { ...data };\n      const alerts = [];\n      this.priorityAlert.forEach(\n        (element: {\n          key: string | number;\n          alerts: any;\n          unit: any;\n          percentage: any;\n        }, i) => {\n          const settings = (data?.Setting?.Param?.PhyParam || {})[element.key];\n          alerts.push({\n            ...settings,\n            ...((this.masterData?.Setting?.Common?.PhyCommon || {})[\n              element.key\n            ] || {}),\n            alert: element.alerts,\n            unit: element.unit,\n            key: element.key,\n            percentage: element.percentage,\n            index: i\n          });\n        }\n      );\n      this.priorityAlertSettings = alerts;\n      this.priorityAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n\n    if (isAllowedRole(this.priorityAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n    this.subscriptions.push(\n      this.commonService.priorityAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.priorityAlertSettings = JSON.parse(\n            JSON.stringify(this.priorityAlertSettingsCopy)\n          );\n          this.hidePriorityAlertEdit();\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.commonService.priorityAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updatePrioritySettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n      console.log('groupId', this.alertGroupId);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"priorityACK\":\n        this.editPriority[index] = !this.editPriority[index];\n        break;\n      case \"priorityNACK\":\n        this.editPrio[index] = !this.editPrio[index];\n        break;\n      case \"breakThroughACK\":\n        this.editBreakThrough[index] = !this.editBreakThrough[index];\n        break;\n      case \"breakThroughNACK\":\n        this.editBreaksThrough[index] = !this.editBreaksThrough[index];\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Hide all active edit buttons\n  hidePriorityAlertEdit() {\n    this.editPriority = [false];\n    this.editPrio = [false];\n    this.editBreakThrough = [false];\n    this.editBreaksThrough = [false];\n  }\n\n  // To update priority alert settings\n  async updatePrioritySettings() {\n    const parameterAlert: any = {};\n    this.priorityAlertSettings.forEach((element) => {\n      parameterAlert[element.key] = {\n        Frequency_UnAck: parseInt(element.Frequency_UnAck),\n        Frequency_Ack: parseInt(element.Frequency_Ack),\n        Percentage_UnAck: parseInt(element.Percentage_UnAck),\n        Percentage_Ack: parseInt(element.Percentage_Ack),\n      };\n    });\n    const payload: any = { ...this.masterData } || {};\n    payload.Setting = payload?.Setting || {};\n    payload.Setting.Common = payload?.Setting?.Common || {};\n    payload.Setting.Common.PhyCommon = parameterAlert;\n    delete payload[\"auditloginfotype\"];\n    let url = \"alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setPriorityAlertEditSubmit(false);\n        this.hidePriorityAlertEdit();\n      }\n    } catch (error) { }\n  }\n\n  priorityParamInputChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      Frequency_Ack: \"invalid_alertfreq_ack\",\n      Frequency_UnAck: \"invalid_alertfreq_unack\",\n      Percentage_Ack: \"invalid_alertbreak_ack\",\n      Percentage_UnAck: \"invalid_alertbreak_unack\",\n    };\n    this.updated();\n\n    if (\n      this.priorityAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.priorityAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.priorityAlertSettings[index][key] =\n        this.priorityAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\" + keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n\n    if (key === \"Frequency_Ack\") {\n      if (\n        this.priorityAlertSettings[index][key] <=\n        this.priorityAlertSettings[index][\"Frequency_UnAck\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Frequency_UnAck\") {\n      if (\n        this.priorityAlertSettings[index][key] >=\n        this.priorityAlertSettings[index][\"Frequency_Ack\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Percentage_Ack\") {\n      if (\n        this.priorityAlertSettings[index][key] <=\n        this.priorityAlertSettings[index][\"Percentage_UnAck\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertbreak_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Percentage_UnAck\") {\n      if (\n        this.priorityAlertSettings[index][key] >=\n        this.priorityAlertSettings[index][\"Percentage_Ack\"]\n      ) {\n        this.priorityAlertSettings[index][key] =\n          this.priorityAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertbreak_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.priorityAlertSettings) !== JSON.stringify(this.priorityAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport {\n  AlertConfiguration,\n  AlertDestinationConfiguration,\n  ArrhythmiaAlertConfiguration,\n  ClinicalFacilityContactList,\n} from \"../store/alert-configuration.models\";\n\n@Injectable()\nexport class AlertConfigurationsService {\n  constructor(private http: HttpClient) { }\n\n  // Root alert settings fetch api\n  getAlertSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertConfiguration>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  // Root destination alert fetch api\n  getAlertDestinationSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertDestinationConfiguration>(\n        environment.dataApiUrl + url,\n        { headers: authHeaders }\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  getGroupAlertSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertConfiguration>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  getArrhythmiaGroupAlertSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<ArrhythmiaAlertConfiguration>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  getGroupAlertDestinationSettings(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<AlertDestinationConfiguration>(\n        environment.dataApiUrl + url,\n        { headers: authHeaders }\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  getClinicalFacilityContacts(url: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http\n      .get<ClinicalFacilityContactList>(environment.dataApiUrl + url, {\n        headers: authHeaders,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(error: any) {\n    let errorMessage = \"\";\n    // Client-side error.\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n      // Server-side error.\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n\n  checkForSpecialCharacters(event: ClipboardEvent){\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[0-9]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n\n  getParameterMinMax() {\n    let userPreferenceUnit = JSON.parse(sessionStorage.getItem('userPreference'))?.units;\n    return {\n      HR: {\n        MIN: {\n          HighThr: 60,\n          CondDelay: 5,\n          LowThr: 30,\n        },\n        MAX: {\n          HighThr: 250,\n          CondDelay: 300,\n          LowThr: 160,\n        },\n      },\n      RR: {\n        MIN: {\n          HighThr: 10,\n          CondDelay: 30,\n          LowThr: 6,\n        },\n        MAX: {\n          HighThr: 60,\n          CondDelay: 300,\n          LowThr: 55,\n        },\n      },\n      SPO2: {\n        MIN: {\n          HighThr: 95,\n          CondDelay: 60,\n          LowThr: 70,\n        },\n        MAX: {\n          HighThr: 100,\n          CondDelay: 300,\n          LowThr: 95,\n        },\n      },\n      BODYTEMP: {\n        MIN: {\n          HighThr: userPreferenceUnit === 'SI'? 37 : 98.6,\n          CondDelay: 20,\n          LowThr: userPreferenceUnit === 'SI'? 32: 89.6,\n        },\n        MAX: {\n          HighThr: userPreferenceUnit === 'SI'? 43 : 109.4,\n          CondDelay: 300,\n          LowThr: userPreferenceUnit === 'SI'? 36 : 96.8,\n        },\n      },\n      BPSYS: {\n        MIN: {\n          HighThr: 75,\n          CondDelay: 1,\n          LowThr: 35,\n        },\n        MAX: {\n          HighThr: 240,\n          LowThr: 150,\n          CondDelay: 300,\n        },\n      },\n      BPDIA: {\n        MIN: {\n          HighThr: 50,\n          LowThr: 15,\n          CondDelay: 1,\n        },\n        MAX: {\n          HighThr: 180,\n          LowThr: 50,\n          CondDelay: 300,\n        },\n      },\n      BP: {\n        MIN: {\n          HighThr: 70,\n          LowThr: 25,\n          CondDelay: 1,\n        },\n        MAX: {\n          HighThr: 200,\n          LowThr: 125,\n          CondDelay: 300,\n        },\n      },\n      PR: {\n        MIN: {\n          HighThr: 60,\n          CondDelay: 20,\n          LowThr: 30,\n        },\n        MAX: {\n          HighThr: 250,\n          CondDelay: 300,\n          LowThr: 120,\n        },\n      },\n      SKINTEMP: {\n        MIN: {\n          HighThr: userPreferenceUnit === 'SI'? 20: 68,\n          CondDelay: 20,\n          LowThr: userPreferenceUnit === 'SI'? 15: 59,\n        },\n        MAX: {\n          HighThr: userPreferenceUnit=== 'SI'? 45: 113,\n          CondDelay: 300,\n          LowThr: userPreferenceUnit === 'SI'? 34.4: 94,\n        },\n      },\n      POSTURE_ALERT: {\n        MIN: {\n          HighThr: '',\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: '',\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SINUS_BRADYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 1,\n          LowThr: 30,\n        },\n        MAX: {\n          HighThr: 50,\n          CondDelay: 168,\n          LowThr: 60,\n        },\n      },\n      SINUS_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: 100,\n        },\n        MAX: {\n          HighThr: 100,\n          CondDelay: 168,\n          LowThr: 250,\n        },\n      },\n      VENTRICULAR_FLUTTER: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      VENTRICULAR_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      IDIOVENTRICULAR_RYTHM: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SUPRAVENTRICULAR_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      AFIB_FLUTTER: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      JUNCTIONAL_TACHYCARDIA: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      FIRST_DEGREE_AV_BLOCK: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      PAUSE: {\n        MIN: {\n          HighThr: 20,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      V_COUPLET: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      V_BIGEMINY: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      V_TRIGEMINY: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      PVC_RATE: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: 1,\n        },\n        MAX: {\n          HighThr: 10,\n          CondDelay: 168,\n          LowThr: 99,\n        },\n      },\n      PAC_RATE: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: 1,\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: 99,\n        },\n      },\n      PVC: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr: 20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n      PAC: {\n        MIN: {\n          HighThr: 0,\n          CondDelay: 2,\n          LowThr: '',\n        },\n        MAX: {\n          HighThr:20,\n          CondDelay: 168,\n          LowThr: '',\n        },\n      },\n    }\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport { AlertConfigurationActionTypes } from \"./alert-configuration.types\";\nimport {\n  AlertConfiguration,\n  ArrhythmiaAlertConfiguration,\n  AlertConfigurationData,\n  AlertDestinationConfiguration,\n  ClinicalFacilityContactList,\n} from \"./alert-configuration.models\";\n\nexport class loadAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class loadAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class updateAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { data: AlertConfigurationData }) {}\n}\nexport class updateAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.UPDATE_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class resetAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class resetAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class resetAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.RESET_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n\nexport class loadDestinationAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertDestinationConfiguration }) {}\n}\nexport class loadDestinationAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadDestinationAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadGroupAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class loadGroupAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadGroupAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertConfiguration }) {}\n}\n// Arrhythmia group alert\nexport class loadArrhythmiaAlertConfigurationRequestAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\nexport class loadArrhythmiaAlertConfigurationFailureAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadArrhythmiaAlertConfigurationSuccessAction implements Action {\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: ArrhythmiaAlertConfiguration }) {}\n}\n//----\nexport class loadGroupDestinationAlertConfigurationSuccessAction\n  implements Action\n{\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: AlertDestinationConfiguration }) {}\n}\nexport class loadGroupDestinationAlertConfigurationFailureAction\n  implements Action\n{\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadGroupDestinationAlertConfigurationRequestAction\n  implements Action\n{\n  readonly type =\n    AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class setGroupAlertId implements Action {\n  readonly type = AlertConfigurationActionTypes.SET_GROUP_ALERT_ID;\n  constructor(public payload: { groupId: string }) {}\n}\n\nexport class loadClinicalFacilityContactsRequestAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadClinicalFacilityContactsFailureAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadClinicalFacilityContactsSuccessAction implements Action {\n  readonly type = AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS;\n  constructor(public payload: { data: ClinicalFacilityContactList }) {}\n}\n\nexport type AlertConfigurationActions =\n  | loadAlertConfigurationFailureAction\n  | loadAlertConfigurationSuccessAction\n  | loadAlertConfigurationRequestAction\n  | updateAlertConfigurationFailureAction\n  | updateAlertConfigurationSuccessAction\n  | updateAlertConfigurationRequestAction\n  | resetAlertConfigurationFailureAction\n  | resetAlertConfigurationSuccessAction\n  | resetAlertConfigurationRequestAction\n  | loadDestinationAlertConfigurationSuccessAction\n  | loadDestinationAlertConfigurationFailureAction\n  | loadDestinationAlertConfigurationRequestAction\n  | loadGroupDestinationAlertConfigurationSuccessAction\n  | loadGroupDestinationAlertConfigurationFailureAction\n  | loadGroupDestinationAlertConfigurationRequestAction\n  | loadGroupAlertConfigurationRequestAction\n  | loadGroupAlertConfigurationFailureAction\n  | loadGroupAlertConfigurationSuccessAction\n  | loadArrhythmiaAlertConfigurationRequestAction\n  | loadArrhythmiaAlertConfigurationFailureAction\n  | loadArrhythmiaAlertConfigurationSuccessAction\n  | setGroupAlertId\n  | loadClinicalFacilityContactsRequestAction\n  | loadClinicalFacilityContactsFailureAction\n  | loadClinicalFacilityContactsSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { Observable, of as observableOf } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap } from \"rxjs/operators\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { AlertConfigurationActionTypes } from \"./alert-configuration.types\";\nimport {\n  loadAlertConfigurationRequestAction,\n  loadAlertConfigurationSuccessAction,\n  loadAlertConfigurationFailureAction,\n  loadDestinationAlertConfigurationFailureAction,\n  loadDestinationAlertConfigurationRequestAction,\n  loadDestinationAlertConfigurationSuccessAction,\n  loadGroupDestinationAlertConfigurationRequestAction,\n  loadGroupDestinationAlertConfigurationFailureAction,\n  loadGroupDestinationAlertConfigurationSuccessAction,\n  loadGroupAlertConfigurationFailureAction,\n  loadGroupAlertConfigurationRequestAction,\n  loadGroupAlertConfigurationSuccessAction,\n  loadClinicalFacilityContactsRequestAction,\n  loadClinicalFacilityContactsSuccessAction,\n  loadClinicalFacilityContactsFailureAction,\n  loadArrhythmiaAlertConfigurationRequestAction,\n  loadArrhythmiaAlertConfigurationSuccessAction,\n  loadArrhythmiaAlertConfigurationFailureAction,\n} from \"./alert-configuration.actions\";\n\n@Injectable()\nexport class AlertConfigurationEffects {\n  constructor(\n    private alertConfigurationService: AlertConfigurationsService,\n    private actions$: Actions\n  ) {}\n\n  @Effect()\n  loadAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService.getAlertSettings(action.payload.url).pipe(\n        map((data) => new loadAlertConfigurationSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new loadAlertConfigurationFailureAction({ error }))\n        )\n      )\n    )\n  );\n\n  @Effect()\n  loadGroupAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadGroupAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getGroupAlertSettings(action.payload.url)\n        .pipe(\n          map((data) => new loadGroupAlertConfigurationSuccessAction({ data })),\n          catchError((error) =>\n            observableOf(\n              new loadGroupAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadArrhythmiaGroupAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadArrhythmiaAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getArrhythmiaGroupAlertSettings(action.payload.url)\n        .pipe(\n          map((data) => new loadArrhythmiaAlertConfigurationSuccessAction({ data })),\n          catchError((error) =>\n            observableOf(\n              new loadArrhythmiaAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadDestinationAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadDestinationAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getAlertDestinationSettings(action.payload.url)\n        .pipe(\n          map(\n            (data) =>\n              new loadDestinationAlertConfigurationSuccessAction({ data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new loadDestinationAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadGroupDestinationAlertSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<loadGroupDestinationAlertConfigurationRequestAction>(\n      AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getGroupAlertDestinationSettings(action.payload.url)\n        .pipe(\n          map(\n            (data) =>\n              new loadGroupDestinationAlertConfigurationSuccessAction({ data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new loadGroupDestinationAlertConfigurationFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadClinicalFacilityContactsRequestEffect$ = this.actions$.pipe(\n    ofType<loadClinicalFacilityContactsRequestAction>(\n      AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST\n    ),\n    mergeMap((action) =>\n      this.alertConfigurationService\n        .getClinicalFacilityContacts(action.payload.url)\n        .pipe(\n          map(\n            (data) => new loadClinicalFacilityContactsSuccessAction({ data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new loadClinicalFacilityContactsFailureAction({ error })\n            )\n          )\n        )\n    )\n  );\n}\n","import { AlertConfigurationActions } from \"./alert-configuration.actions\";\nimport {\n  AlertConfigurationData,\n  AlertDestinationConfigData,\n  ClinicalFacilityContactListData,ArrhythmiaAlertConfigurationData,\n} from \"./alert-configuration.models\";\nimport { AlertConfigurationActionTypes } from \"./alert-configuration.types\";\n\nexport interface AlertConfigurationState {\n  alert_configurations: AlertConfigurationData;\n  arrhythmiaConfigurations: ArrhythmiaAlertConfigurationData;\n  error: string;\n  status: string;\n  message: string;\n  loaded: boolean\n  alert_destinations: AlertDestinationConfigData;\n  groupIdSelected: string;\n  contacts: ClinicalFacilityContactListData;\n}\n\nexport const initialAlertConfigurationState: AlertConfigurationState = {\n  arrhythmiaConfigurations: {\n    ArrhythmiaId: \"\",\n    Setting: {\n      SINUS_BRADYCARDIA: {\n        Enabled: true,\n        Priority: \"HIGH\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SINUS_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    VENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    IDIOVENTRICULAR_RYTHM: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SUPRAVENTRICULAR_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    AFIB_FLUTTER: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    JUNCTIONAL_TACHYCARDIA: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    FIRST_DEGREE_AV_BLOCK: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_I: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    SECOND_DEGREE_AV_BLOCK_TYPE_II: {\n      Enabled: true,\n      Priority: \"\",\n      LowThr: 0,\n      HighThr: 0,\n      CondDelay: 0,\n      HighUnit: \"\",\n      LowUnit: \"\",\n      Thr: 0,\n  },\n    PAUSE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_COUPLET: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_BIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    V_TRIGEMINY: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC_RATE: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PVC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    PAC: {\n        Enabled: true,\n        Priority: \"\",\n        LowThr: 0,\n        HighThr: 0,\n        CondDelay: 0,\n        HighUnit: \"\",\n        LowUnit: \"\",\n        Thr: 0,\n    },\n    },\n    FacilityId: \"\",\n    FacilityName: \"\",\n    PatientId: \"\",\n    GroupId: \"\",\n    IsForPatient: true,\n    createdDateTime: \"\",\n    modifiedDateTime: \"\",\n  },\n  alert_configurations: {\n    AlertId: \"\",\n    FacilityId: \"\",\n    FacilityName: \"\",\n    GroupId: \"\",\n    IsForPatient: false,\n    PatientId: \"\",\n    Setting: {\n      Param: {\n        PhyParam: {\n          HR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          RR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          PR: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SPO2: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPSYS: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BPDIA: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          SKINTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          BODYTEMP: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n          CardiacStandStill: {\n            Enabled: false,\n            Priority: \"\",\n            LowThr: 0,\n            HighThr: 0,\n            CondDelay: 0\n          },\n        },\n        TechParam: {\n          LEAD_OFF: {\n            Enabled: false,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            Enabled: false,\n          },\n          RELAY_DISCONNECTED: {\n            Enabled: false,\n          },\n          LOW_BATTERY: {\n            Enabled: false,\n          },\n          /* TEMPERATURE_CALIBRATION:{\n            Enabled: false,\n          }, */\n          COMPUTE_HR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_RR_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_SPO2_ERROR: {\n            Enabled: false,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            Enabled: false,\n          },\n        },\n      },\n      Common: {\n        PhyCommon: {\n          HIGH: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          MEDIUM: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n          LOW: {\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n            Percentage_UnAck: 0,\n            Percentage_Ack: 0,\n          },\n        },\n        TechCommon: {\n          LEAD_OFF: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          BIOSENSOR_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          RELAY_DISCONNECTED: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          LOW_BATTERY: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          /* TEMPERATURE_CALIBRATION:{\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          }, */\n          COMPUTE_HR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_RR_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_SPO2_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n          COMPUTE_BODY_TEMP_ERROR: {\n            CondDelay: 0,\n            Frequency_UnAck: 0,\n            Frequency_Ack: 0,\n          },\n        },\n      },\n    },\n    auditloginfotype: {\n      CreatedBy: \"\",\n      CreatedById: \"\",\n      ModifiedBy: \"\",\n      ModifiedById: \"\",\n      CreatedDateTime: \"\",\n      ModifiedDateTime: \"\",\n    },\n  },\n  error: \"\",\n  status: \"\",\n  message: \"\",\n  loaded: false,\n  alert_destinations: {\n    AlertDestId: \"\",\n    FacilityId: \"\",\n    GroupId: \"\",\n    PatientId: \"\",\n    Setting: {\n      AlertSMS: \"\",\n      AlertWhatsApp: \"\",\n      AlertEmail: \"\",\n      AlertCaregiverApp: \"\",\n      AlertSMSEnabled: false,\n      AlertWhatsAppEnabled: false,\n      AlertEmailEnabled: false,\n      AlertCaregiverAppEnabled: false,\n    },\n    SettingTech: {\n      AlertSMS: \"\",\n      AlertWhatsApp: \"\",\n      AlertEmail: \"\",\n      AlertCaregiverApp: \"\",\n      AlertSMSEnabled: false,\n      AlertWhatsAppEnabled: false,\n      AlertEmailEnabled: false,\n      AlertCaregiverAppEnabled: false,\n    },\n    UserData: [],\n    auditloginfotype: {\n      CreatedBy: \"\",\n      CreatedById: \"\",\n      ModifiedBy: \"\",\n      ModifiedById: \"\",\n      CreatedDateTime: \"\",\n      ModifiedDateTime: \"\",\n    },\n    NotificationMessage: \"\",\n  },\n  groupIdSelected: null,\n  contacts: [],\n};\n\nexport const alertConfigurationKey = \"alertConfiguration\";\n\nexport function AlertConfigurationReducer(\n  state: AlertConfigurationState = initialAlertConfigurationState,\n  action: AlertConfigurationActions\n) {\n  switch (action.type) {\n    case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_configurations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_destinations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_destinations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_GROUP_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        alert_configurations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false\n      };\n    }\n\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        arrhythmiaConfigurations: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true\n      };\n    }\n    case AlertConfigurationActionTypes.SET_GROUP_ALERT_ID: {\n      return {\n        ...state,\n        groupIdSelected: action.payload,\n      };\n    }\n    case AlertConfigurationActionTypes.CF_CONATCT_LIST_SUCCESS: {\n      return {\n        ...state,\n        contacts: action.payload.data.data,\n      };\n    }\n    case AlertConfigurationActionTypes.CF_CONATCT_LIST_REQUEST: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case AlertConfigurationActionTypes.CF_CONATCT_LIST_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\n\nimport {\n  AlertConfigurationState,\n  alertConfigurationKey,\n} from \"./alert-configuration.reducer\";\n\nconst getAlertConfigurationsState =\n  createFeatureSelector<AlertConfigurationState>(alertConfigurationKey);\n\nexport const getAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_configurations\n);\n\nexport const getArrhythmiaAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.arrhythmiaConfigurations\n);\n\nexport const getDestinationAlertConfigurations = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.alert_destinations\n);\n\nexport const getAlertConfigurationError = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.error\n);\nexport const getAlertConfigurationStatus = createSelector(\n  getAlertConfigurationsState,\n  (state) => state.status\n);\nexport const getAlertConfigurationMessage = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.message\n);\n\nexport const getAlertGroupId = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.groupIdSelected\n);\n\nexport const getClinicalFacilityContacts = createSelector(\n  getAlertConfigurationsState,\n  (state) => state?.contacts\n);\nexport const getLoaderStatus = createSelector(\n    getAlertConfigurationsState,\n    (state) => state?.loaded\n);\n","export enum AlertConfigurationActionTypes {\n  LOAD_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Alert Configuration Request\",\n  LOAD_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Alert Configuration Failure\",\n  LOAD_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Alert Configuration Success\",\n\n  UPDATE_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Update Alert Configuration Request\",\n  UPDATE_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Update Alert Configuration Failure\",\n  UPDATE_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Update Alert Configuration Success\",\n\n  RESET_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Reset Alert Configuration Request\",\n  RESET_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Reset Alert Configuration Failure\",\n  RESET_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Reset Alert Configuration Success\",\n\n  LOAD_DESTINATION_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Success\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Request\",\n  LOAD_DESTINATION_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Destination Alert Configuration Failure\",\n\n  LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Group Destination Alert Configuration Success\",\n  LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Group Destination Alert Configuration Request\",\n  LOAD_GROUP_DESTINATION_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Group Destination Alert Configuration Failure\",\n\n  LOAD_GROUP_ALERT_CONFIGURATION_REQUEST = \"[ALERTSCONFIGURATION] Load Group Alert Configuration Request\",\n  LOAD_GROUP_ALERT_CONFIGURATION_FAILURE = \"[ALERTSCONFIGURATION] Load Group Alert Configuration Failure\",\n  LOAD_GROUP_ALERT_CONFIGURATION_SUCCESS = \"[ALERTSCONFIGURATION] Load Group Alert Configuration Success\",\n\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_REQUEST = \"[ARRHYTHMIAALERTSCONFIGURATION] Load Arrhythmia Alert Configuration Request\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_FAILURE = \"[ARRHYTHMIAALERTSCONFIGURATION] Load Arrhythmia Alert Configuration Failure\",\n  LOAD_ARRHYTHMIA_ALERT_CONFIGURATION_SUCCESS = \"[ARRHYTHMIAALERTSCONFIGURATION] Load Arrhythmia Alert Configuration Success\",\n\n  SET_GROUP_ALERT_ID = \"[ALERTSCONFIGURATION] Set Group Alert Id\",\n\n  CF_CONATCT_LIST_REQUEST = \"[ALERTSCONFIGURATION] CF Contact list Request\",\n  CF_CONATCT_LIST_FAILURE = \"[ALERTSCONFIGURATION] CF Contact list Failure\",\n  CF_CONATCT_LIST_SUCCESS = \"[ALERTSCONFIGURATION] CF Contact list Success\",\n}\n","<ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"technicalAlertSettings\" class=\"head-border fixed-header-relative\">\n  <ng-template lsWidgetName=\"enabled\" let-config>\n    <span class=\"d-flex align-items-center\">\n    <mat-slide-toggle [(ngModel)]=\"config.Enabled\" class=\"ms-1 me-2\" (change)=\"toggle(config?.index)\"\n      [disabled]=\"!isEditAccess\">\n    </mat-slide-toggle>\n    </span>\n  </ng-template>\n  <ng-template lsWidgetName=\"alerts\" let-config>\n    {{ config.alert }}\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freqExtraHeader\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center\">\n      <div class=\"d-flex ack-column align-items-center text-start\">\n        {{ \"alert_config_module.acknowledge\" | translate }}\n      </div>\n      <div class=\"d-flex ack-column align-items-center text-start\">\n        {{ \"alert_config_module.unacknowledge\" | translate }}\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"alert_freq\" let-technicalAlertConfig>\n    <div class=\"d-flex align-items-center\">\n      <div class=\"d-flex ack-column text-start align-items-center\">\n        <div class=\"d-flex align-items-center\">\n          <div *ngIf=\"!editAlertFrequency[technicalAlertConfig?.index]\" class=\"text-value align-items-center\">\n            {{ technicalAlertConfig.Frequency_Ack }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins' | translate) : technicalAlertConfig.units }}\n          </div>\n          <div *ngIf=\"editAlertFrequency[technicalAlertConfig?.index] && isEditAccess\">\n            <input autocomplete=\"off\"\n            (keypress)=\"numericsOnly(technicalAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            type=\"number\" matInput class=\"text-input-box py-1\" digitOnly (change)=\"technicalParamInputChanged(\n                  technicalAlertConfig?.index,\n                  'Frequency_Ack',\n                  technicalAlertMinMax[technicalAlertConfig.key]\n                )\" [min]=\"technicalAlertMinMax[technicalAlertConfig.key]['MIN']['Frequency_Ack']\"\n              [max]=\"technicalAlertMinMax[technicalAlertConfig.key]['MAX']['Frequency_Ack']\"\n              [(ngModel)]=\"technicalAlertConfig.Frequency_Ack\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <div class=\"ms-2 edit\">\n              <div *ngIf=\"!editAlertFrequency[technicalAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyACK')\"\n                  [disabled]=\"!technicalAlertConfig.Enabled\">\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </div>\n              <div class=\"align-middle\" *ngIf=\"editAlertFrequency[technicalAlertConfig?.index]\">\n                <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                  (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyACK')\">\n                  <mat-icon>done</mat-icon>\n                </button>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"d-flex ack-column justify-content-center align-items-center\">\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <div *ngIf=\"!editAlertFrequencyUnAck[technicalAlertConfig?.index]\" class=\"text-value align-items-center\">\n            {{ technicalAlertConfig.Frequency_UnAck }} {{ (technicalAlertConfig.units !== 'Mins') ? ('alert_config_module.mins' | translate) : technicalAlertConfig.units }}\n          </div>\n          <div *ngIf=\"editAlertFrequencyUnAck[technicalAlertConfig?.index]\">\n            <input autocomplete=\"off\"\n            (keypress)=\"numericsOnly(technicalAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            matInput class=\"text-input-box py-1\" digitOnly type=\"number\" (change)=\"\n                technicalParamInputChanged(\n                  technicalAlertConfig?.index,\n                  'Frequency_UnAck',\n                  technicalAlertMinMax[technicalAlertConfig.key]\n                )\n              \" [min]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MIN'][\n                  'Frequency_UnAck'\n                ]\n              \" [max]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MAX'][\n                  'Frequency_UnAck'\n                ]\n              \" [(ngModel)]=\"technicalAlertConfig.Frequency_UnAck\" />\n          </div>\n          <ng-container *ngIf=\"isEditAccess\">\n            <div class=\"ms-2 edit\">\n              <button *ngIf=\"!editAlertFrequencyUnAck[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyNACK')\"\n                [disabled]=\"!technicalAlertConfig.Enabled\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button *ngIf=\"editAlertFrequencyUnAck[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n                class=\"btn-boxed btn-no-shadow\"\n                (click)=\"showHideEdit(technicalAlertConfig?.index, 'alertFrequencyNACK')\">\n                <mat-icon>done</mat-icon>\n              </button>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"delayTime\" let-technicalAlertConfig>\n    <div class=\"d-flex justify-content-around align-items-center\">\n      <div class=\"d-flex ack-column justify-content-center align-items-center\">\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <div *ngIf=\"!editDelaytime[technicalAlertConfig?.index]\" class=\"text-value align-items-center\">\n            {{ technicalAlertConfig.CondDelay }} {{ (technicalAlertConfig.unit !== 'Secs') ? ('alert_config_module.secs' | translate) : technicalAlertConfig.unit }}\n          </div>\n          <div *ngIf=\"editDelaytime[technicalAlertConfig?.index]\">\n            <input autocomplete=\"off\"\n            (keypress)=\"numericsOnly(technicalAlertConfig.key, $event)\"\n            (paste)=\"alertService.checkForSpecialCharacters($event)\"\n            type=\"number\" matInput class=\"text-input-box py-1\" digitOnly [(ngModel)]=\"technicalAlertConfig.CondDelay\"\n          (change)=\"\n                technicalParamInputChanged(\n                  technicalAlertConfig?.index,\n                  'CondDelay',\n                  technicalAlertMinMax[technicalAlertConfig.key]\n                )\n              \" [min]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MIN'][\n                  'CondDelay'\n                ]\n              \" [max]=\"\n                technicalAlertMinMax[technicalAlertConfig.key]['MAX'][\n                  'CondDelay'\n                ]\n              \" />\n           </div>\n          <ng-container *ngIf=\"isEditAccess\">\n      <div class=\"ms-2 edit\">\n      <button *ngIf=\"!editDelaytime[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n              class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(technicalAlertConfig?.index, 'delay')\"\n              [disabled]=\"!technicalAlertConfig.Enabled\">\n        <mat-icon>edit</mat-icon>\n      </button>\n      <button *ngIf=\"editDelaytime[technicalAlertConfig?.index]\" mat-mini-fab color=\"primary\"\n              class=\"btn-boxed btn-no-shadow\" (click)=\"showHideEdit(technicalAlertConfig?.index, 'delay')\">\n        <mat-icon>done</mat-icon>\n      </button>\n      </div>\n    </ng-container>\n        </div>\n    </div>\n    </div>\n  </ng-template>\n  <ng-template lsWidgetName=\"modified\" let-config>\n    <span *ngIf=\"masterData?.modifiedDateTime\">\n      {{ masterData?.modifiedDateTime+ '+0000' | date: \"MMM dd, yyyy \" + timeFmt  :timeZone }}\n    </span><br />\n    <span *ngIf=\"!isBlank(masterData.modifiedBy)\">by {{ masterData.modifiedBy }}</span>\n  </ng-template>\n  <ng-template lsWidgetName=\"spacer\">\n  </ng-template>\n</ls-table>\n","import {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n  OnDestroy,\n} from \"@angular/core\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { Subscription, Observable } from \"rxjs\";\nimport {\n  uiAccessRoles,\n  technicalAlertItems,\n  isAllowedRole,\n  alertConfigMinMaxValues,\n} from \"src/app/utils/helpers\";\nimport {\n  AlertConfigurationModels,\n  AlertConfigurationStoreSelectors,\n  AlertConfigurationStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { LSColumn, LSTableConfig } from \"../../../life-signals/_models/ls-column.model\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { CommonService } from \"@services/common.service\";\nimport { environment } from \"src/environments/environment\";\nimport { AlertConfigurationsService } from \"../services/alert-configuration.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-technical-alerts\",\n  templateUrl: \"./technical-alerts.component.html\",\n  styleUrls: [\"./technical-alerts.component.scss\"],\n})\nexport class TechnicalAlertsComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  @Output() reloadData = new EventEmitter<any>(true);\n  loading = false;\n  config: LSTableConfig = {\n    id: \"alert_config_module\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"alert_config_module\",\n    showExtraHeader: true,\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"enabled\",\n      label: \"\",\n      sortable: false,\n      style: \"width:60px\",\n    },\n    {\n      id: \"alerts\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      cellClass: [\"fw-700\"],\n      style: \"min-width: 250px\"\n    },\n    {\n      id: \"alert_freq\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      cellClass: [\"text-center\"],\n      extraHeaderClass: [\"text-end\"],\n      //style: \"width: 360px;\",\n    },\n    {\n      id: \"delayTime\",\n      sortable: false,\n      headerClass: [\"align-center\"],\n      //style: \"width: 180px;\",\n      cellClass: [\"text-end\"],\n    },\n    {\n      id: \"modified\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"width: 200px\",\n      cellClass: [\"text-start\"],\n    },\n    {\n      id: \"spacer\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      //style: \"min-width: 20px\"\n    },\n  ];\n  constructor(\n    private userPreference: UserPreferenceService,\n    private commonService: CommonService,\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService,\n    private store$: Store<AlertConfigurationStoreState.AlertConfigurationState>,\n    private snackbar: SnackbarService,\n    public alertService : AlertConfigurationsService\n  ) { }\n\n  editAlertFrequency = [false];\n  editAlertFrequencyUnAck = [false];\n  editDelaytime = [false];\n\n  roles: string[];\n  technicalAlertAccess: any =\n    uiAccessRoles.ALERT_CONFIGURATIONS.ALERT_TECHNICAL;\n  isEditAccess: boolean = false;\n\n  technicalAlert = technicalAlertItems;\n  masterData: any = {};\n  technicalAlertSettings: any = [];\n  technicalAlertSettingsCopy: any = [];\n  alertSettings$: Observable<AlertConfigurationModels.AlertConfigurationData>;\n\n  alertGroupId: any = null;\n  alertGroupId$: Observable<string>;\n  technicalAlertMinMax = alertConfigMinMaxValues.technicalAlert;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  ngOnInit() {\n    this.roles = this.autheticationService.getRoles();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.alertSettings$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertConfigurations\n    );\n\n    this.alertGroupId$ = this.store$.select(\n      AlertConfigurationStoreSelectors.getAlertGroupId\n    );\n\n    this.alertSettings$.subscribe((data) => {\n      this.commonService.setSettingsAlertActionButtons(false);\n      this.commonService.setTechnicalAlertEditSubmit(false);\n      this.hideTechnicalAlertEdit();\n      this.masterData = { ...data };\n      const alerts = [];\n      this.technicalAlert.forEach(\n        (element: { key: string | number; alerts: any; unit: any; units: any }, i) => {\n          const settings = data?.Setting?.Param.TechParam[element.key];\n          if(settings) {\n            alerts.push({\n              ...settings,\n              ...this.masterData?.Setting?.Common?.TechCommon[element.key],\n              alert: element.alerts,\n              unit: element.unit,\n              units: element.units,\n              key: element.key,\n              index: i\n            });\n          }\n        }\n      );\n      this.technicalAlertSettings = alerts;\n      this.technicalAlertSettingsCopy = JSON.parse(JSON.stringify(alerts));\n    });\n\n    if (isAllowedRole(this.technicalAlertAccess[\"EDIT\"], this.roles)) {\n      this.isEditAccess = true;\n    }\n\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditHide.subscribe((isHide) => {\n        if (isHide) {\n          this.technicalAlertSettings = JSON.parse(\n            JSON.stringify(this.technicalAlertSettingsCopy)\n          );\n          this.hideTechnicalAlertEdit();\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.commonService.technicalAlertEditSubmit.subscribe((isSubmit) => {\n        if (isSubmit) {\n          this.updateTechnicalSettings();\n        }\n      })\n    );\n\n    this.alertGroupId$.subscribe((data) => {\n      this.alertGroupId = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n  }\n\n  // Show and Hide Table Edit fields\n  showHideEdit(index: number, type: string) {\n    switch (type) {\n      case \"alertFrequencyACK\":\n        this.editAlertFrequency[index] = !this.editAlertFrequency[index];\n        break;\n      case \"alertFrequencyNACK\":\n        this.editAlertFrequencyUnAck[index] =\n          !this.editAlertFrequencyUnAck[index];\n        break;\n      case \"delay\":\n        this.editDelaytime[index] = !this.editDelaytime[index];\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Hide all active edit buttons\n  hideTechnicalAlertEdit() {\n    this.editAlertFrequency = [false];\n    this.editDelaytime = [false];\n    this.editAlertFrequencyUnAck = [false];\n  }\n\n  toggle(i: number) {\n    this.editAlertFrequency[i] = false;\n    this.editDelaytime[i] = false;\n    this.editAlertFrequencyUnAck[i] = false;\n    this.updated();\n  }\n\n  async updateTechnicalSettings() {\n    const technicalParameter: any = {};\n    const technicalCommonParameter: any = {};\n    this.technicalAlertSettings.forEach(\n      (element: {\n        key: string | number;\n        Enabled: any;\n        CondDelay: string;\n        Frequency_Ack: any;\n        Frequency_UnAck: any;\n      }) => {\n        technicalParameter[element.key] = {\n          Enabled: element.Enabled,\n        };\n        technicalCommonParameter[element.key] = {\n          CondDelay: parseInt(element.CondDelay),\n          Frequency_UnAck: parseInt(element.Frequency_UnAck),\n          Frequency_Ack: parseInt(element.Frequency_Ack),\n        };\n      }\n    );\n\n    const payload = { ...this.masterData };\n    payload[\"Setting\"][\"Param\"][\"TechParam\"] = technicalParameter;\n    payload.Setting = payload?.Setting || {};\n    payload.Setting.Common = payload.Setting?.Common || {};\n    payload.Setting.Common.TechCommon = technicalCommonParameter;\n    delete payload[\"auditloginfotype\"];\n    let url = \"alert-settings/\";\n    if (this.alertGroupId) {\n      payload.GroupId = this.alertGroupId;\n      url += \"group-edit\";\n    } else {\n      url += \"root-edit\";\n    }\n\n    try {\n      const resp = await this.backendApiService\n        .post(environment.dataApiUrl + url, payload)\n        .toPromise();\n      if (resp.status === \"OK\") {\n        this.reloadData.emit();\n        this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n        this.commonService.setSettingsAlertActionButtons(false);\n        this.commonService.setTechnicalAlertEditSubmit(false);\n        this.hideTechnicalAlertEdit();\n      }\n    } catch (error) { }\n  }\n\n  // input filed validation\n  technicalParamInputChanged(index: number, key: string, minMax: any) {\n    const keyMapping = {\n      Frequency_Ack: \"invalid_alertfreq_ack\",\n      Frequency_UnAck: \"invalid_alertfreq_unack\",\n      CondDelay: \"invalid_delay_time\",\n    };\n    this.updated();\n    if (\n      this.technicalAlertSettings[index][key] < minMax[\"MIN\"][key] ||\n      this.technicalAlertSettings[index][key] > minMax[\"MAX\"][key]\n    ) {\n      this.technicalAlertSettings[index][key] =\n        this.technicalAlertSettingsCopy[index][key];\n      let range = `${minMax[\"MIN\"][key]} & ${minMax[\"MAX\"][key]}`;\n      this.snackbar.openCustomSnackBar(\"alert_config_module.messages.\"+keyMapping[key], 'bottom', 'center', true, '', range);\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n    if (key === \"Frequency_Ack\") {\n      if (\n        this.technicalAlertSettings[index][key] <=\n        this.technicalAlertSettings[index][\"Frequency_UnAck\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n          this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_ack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n    if (key === \"Frequency_UnAck\") {\n      if (\n        this.technicalAlertSettings[index][key] >=\n        this.technicalAlertSettings[index][\"Frequency_Ack\"]\n      ) {\n        this.technicalAlertSettings[index][key] =\n          this.technicalAlertSettingsCopy[index][key];\n        this.snackbar.openCustomSnackBar(\"alert_config_module.messages.incorrect_alertfreq_unack\", 'bottom', 'center', true);\n        this.commonService.setSettingsAlertActionButtons(false);\n      }\n    }\n  }\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  numericsOnly(control: string, event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9_]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  updated() {\n    if (JSON.stringify(this.technicalAlertSettings) !== JSON.stringify(this.technicalAlertSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n}\n","<div id=\"addRelay\">\n<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ \"manage_relays_module.add_relay\" | translate }}\n  </h1>\n  <!--<button mat-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>-->\n</mat-card>\n<mat-dialog-content class=\"py-2 mat-dialog-popup\">\n  <div class=\"dialog-form addRelayForm\">\n    <mat-label class=\"matlabel\"\n    >{{ \"manage_relays_module.location_label\" | translate }}\n      <span class=\"required-star\">* </span>\n  </mat-label>\n    \n    <mat-form-field class=\"formfield-control mt-2\" appearance=\"fill\" >\n<!--      <mat-label>{{-->\n<!--        \"manage_relays_module.location_label\" | translate-->\n<!--      }}</mat-label>-->\n      <input\n        matInput autocomplete=\"off\"\n        maxlength=\"32\"\n        type=\"text\"\n        placeholder=\"Location\"\n        [(ngModel)]=\"location\" #location_ctrl=\"ngModel\"\n        (keypress)=\"service.alphaNumericsOnly($event)\" (paste)=\"onPaste($event)\"\n      />\n    </mat-form-field>\n    <mat-error  *ngIf=\"submitted && !location_ctrl?.value\" class=\"d-block mt-n2 \">\n      {{ \"manage_relays_module.add_location\" | translate }}\n    </mat-error>\n    <mat-error *ngIf=\"!locationValid(location) && location_ctrl.touched && location_ctrl?.value\">\n        {{ \"manage_relays_module.invalid_location\" | translate }}\n    </mat-error>\n  </div>\n</mat-dialog-content>\n<div matDialogActions align=\"right\">\n  <button\n    mat-flat-button\n    mat-dialog-close\n    class=\"fill-btn\"\n    color=\"warn\"\n  >\n    {{ \"manage_users_module.addgroup.cancelbutton\" | translate }}\n  </button>\n  <button\n    mat-flat-button\n    class=\"fill-btn\"\n    (click)=\"save()\"\n    color=\"primary\"\n  >\n    {{ \"manage_relays_module.create_relay\" | translate }}\n  </button>\n</div>\n</div>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport {ManageRelaysService} from \"../services/manage-relays.service\";\n\n@Component({\n  selector: \"app-add-relay\",\n  templateUrl: \"./add-relay.component.html\",\n  styleUrls: [\"./add-relay.component.scss\"],\n})\nexport class AddRelayComponent {\n  constructor(\n    private dialogRef: MatDialogRef<MatDialogRef<any>>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public service: ManageRelaysService\n  ) {}\n  location : string = '';\n  submitted = false;\n  groupExists = false;\n  save() {\n    this.submitted = true;\n    if (this.isBlank(this.location)  || !this.locationValid(this.location)) {\n      return;\n    } else {\n      this.dialogRef.close({ data: this.location });\n    }\n  }\n  isBlank(str) {\n    let input = str.replace(/\\s/g, \"\");\n    return (\n      !input ||\n      0 === input.length ||\n      input === \" \" ||\n      input === \"null\" ||\n      input === \"undefined\"\n    );\n  }\n  locationValid(location) {\n    let regex = /^[a-zA-Z0-9]{1}[a-zA-Z0-9-_ ]*$/;\n    let valid = regex.test(location);\n    let loc = location.replace(/\\s/g, \"\");\n    return loc.length > 0 && valid;\n  }\n\n  onPaste(event: ClipboardEvent) {\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[a-zA-Z0-9-_ ]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n}\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n\n<div *ngIf=\"!loader\" class=\"bg-thead-color with-tab-table comman-table-users head-border\">\n    <ls-table [config]=\"config\" [columns]=\"columns\" (page)=\"onPage($event)\" (sortChange)=\"onSortChange($event)\" [data]=\"relayList$ | async\" [isSelected]=\"isSelected\" [Id]=\"'relayId'\">\n        <ng-template lsWidgetName=\"cgId\" let-data>\n            <div class=\"mx-1\">{{data.relayId}}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"firstName\" let-data>\n            {{data.firstName}}\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-data>\n            <div class=\"mx-3\">\n                <small class=\"pt-1\">{{ data?.email }}</small><br>\n                <small class=\"pt-1\">{{ data?.phoneNo }}</small>\n            </div>\n        </ng-template>\n\n        <ng-template lsWidgetName=\"biosensorID\" let-row>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"me-2 biosensor-id\">\n                    {{ row.activePatch || \"-\" }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdDateTime\" let-row>\n            {{ row?.createdDateTime | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"fw-bold\">{{ row?.createdDateTime | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"lastActive\" let-row>\n            {{ row?.lastActive | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"fw-bold\">{{ row?.lastActive | date: timeFmt : timeZone }}</span>\n        </ng-template>\n    </ls-table>\n</div>\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport {Store} from \"@ngrx/store\";\r\nimport {ManageRelaysSelectors, ManageRelaysStoreActions, ManageRelaysStoreState} from \"../store\";\r\nimport {Observable} from \"rxjs\";\r\nimport {SinglePatientRelay} from \"../../../interfaces/manage-relays.interface\";\r\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Sort} from \"@angular/material/sort\";\r\nimport {QueryParams} from \"../../../interfaces/manage-users.interface\";\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {SelectionModel} from \"@angular/cdk/collections\";\r\nimport { UserPreferenceService } from '@services/user-preference.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-care-giver-app',\r\n  templateUrl: './care-giver-app.component.html',\r\n  styleUrls: ['./care-giver-app.component.scss']\r\n})\r\nexport class CareGiverAppComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  constructor(\r\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\r\n    private userPreference: UserPreferenceService\r\n  ) { }\r\n  @Input() searchString: string;\r\n  relayList$: Observable<SinglePatientRelay[]>;\r\n  relayCount$: Observable<number>;\r\n  CGRelayList: SinglePatientRelay[];\r\n  cfId: string;\r\n  careGiverRelayList: SinglePatientRelay[];\r\n  loader = true;\r\n  loaderSubscription: any;\r\n  relayIds = [];\r\n  config: LSTableConfig = {\r\n    id: \"manage_relays_module\",\r\n    rowSelectEnabled: false,\r\n    actions: {\r\n      show: false,\r\n    },\r\n    sort: {\r\n      active: null,\r\n      direction: null,\r\n    },\r\n    page: {\r\n      pageIndex: 0,\r\n      pageSize: 10,\r\n    },\r\n    paginator: {\r\n      hide: false,\r\n      offline: false,\r\n    },\r\n    translate: true,\r\n    translateKey: \"manage_relays_module\",\r\n  }\r\n\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"cgId\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"firstName\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"email\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"createdDateTime\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"lastActive\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n  ];\r\n  timeZone: string;\r\n  readonly timeFmt: string = environment.customization.timeFormat;\r\n  ngOnInit(): void {\r\n    this.timeZone = this.userPreference.getUserTimeZone();\r\n    this.relayIds = [];\r\n    this.relayList$ = this.store$\r\n        .select(ManageRelaysSelectors.getCGRelayList)\r\n        .pipe(\r\n            map((res: any) => {\r\n              return res?.map(r => {\r\n                return {\r\n                  ...r,\r\n                  lastActive: r.lastActive * 1000\r\n                }\r\n              });\r\n            })\r\n        );\r\n    this.relayCount$ = this.store$.select(\r\n        ManageRelaysSelectors.getCGRelayCount\r\n    );\r\n    this.relayCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n    this.loaderSubscription = this.store$\r\n        .select(ManageRelaysSelectors.getLoaderStatus)\r\n        .subscribe((loader) => {\r\n          if (loader) {\r\n            this.loader = false;\r\n          }\r\n        });\r\n    //this.getCGRelayList();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.loader = true;\r\n    if(this.config) this.config.page.pageIndex = 0;\r\n    this.getCGRelayList();\r\n  }\r\n  onSortChange(sort: Sort) {\r\n    // this.loader = true;\r\n    // this.config.page.pageIndex = 0;\r\n    this.config.sort = {\r\n      ...sort,\r\n    };\r\n    this.getCGRelayList();\r\n  }\r\n  isSelected(row, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.relayId).includes(row.relayId);\r\n  }\r\n  getCGRelayList() {\r\n    let url = \"\";\r\n    let param: QueryParams = {\r\n      url: url,\r\n      page: this.config.page.pageIndex + 1,\r\n      size: this.config.page.pageSize,\r\n      sortOrder:\"asc\",\r\n      sortBy: this.config?.sort?.direction? `${this.config?.sort?.active || \"\"}:${\r\n          this.config?.sort?.direction || \"\"\r\n      }`: \"\",\r\n      searchText: this.searchString,\r\n    };\r\n    this.store$.dispatch(\r\n        new ManageRelaysStoreActions.LoadCGRelaysRequestAction({ params: param })\r\n    );\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n        !str ||\r\n        0 === str.length ||\r\n        str === \" \" ||\r\n        str === \"null\" ||\r\n        str === \"undefined\"\r\n    );\r\n  }\r\n  onPage(event: PageEvent) {\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getCGRelayList();\r\n  }\r\n  ngOnDestroy() {\r\n    this.loaderSubscription.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromManageRelays from \"./store/manage-relays.reducer\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { ManageRelaysEffects } from \"./store/manage-relays.effects\";\nimport { SinglePatientRelaysComponent } from \"./single-patient-relays/single-patient-relays.component\";\nimport { MultiPatientRelaysComponent } from \"./multi-patient-relays/multi-patient-relays.component\";\nimport { RelayConfigurationComponent } from \"./relay-configuration/relay-configuration.component\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { I18nModule } from \"../../i18n/i18n.module\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { ManageRelaysService } from \"./services/manage-relays.service\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { AddRelayComponent } from \"./add-relay/add-relay.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { PaginatePipe } from \"ngx-pagination\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { LifeSignalsModule } from \"src/app/life-signals/life-signals.module\";\nimport { CareGiverAppComponent } from './care-giver-app/care-giver-app.component';\n\n@NgModule({\n  declarations: [\n    SinglePatientRelaysComponent,\n    MultiPatientRelaysComponent,\n    RelayConfigurationComponent,\n    AddRelayComponent,\n    CareGiverAppComponent,\n  ],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\n      fromManageRelays.manageRelaysFeatureKey,\n      fromManageRelays.ManageRelaysReducer\n    ),\n    EffectsModule.forFeature([ManageRelaysEffects]),\n    MatCheckboxModule,\n    MatInputModule,\n    FormsModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    I18nModule,\n    MatPaginatorModule,\n    SharedModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n\n    MatTableModule,\n\n    LifeSignalsModule,\n  ],\n    exports: [\n        SinglePatientRelaysComponent,\n        MultiPatientRelaysComponent,\n        RelayConfigurationComponent,\n        CareGiverAppComponent,\n    ],\n  providers: [\n    {\n      provide: ManageRelaysService,\n      useClass: ManageRelaysService,\n    },\n  ],\n})\nexport class ManageRelaysModule {}\n","<ls-page-header type=\"manage_relays\">\n    <ng-container page-actions>\n        <div class=\"d-flex justify-content-end me-4\">\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group\">\n              <button class=\"me-2\" mat-flat-button color=\"primary\" *ngIf=\"selectedTab === 'sprelay'\" (click)=\"openQrDialog()\">\n                {{ \"manage_relays_module.send_otp_qr\" | translate }}\n              </button>\n              <button class=\"me-2\" mat-flat-button  color=\"primary\" *ngIf=\"selectedTab === 'mprelay' && editAccessMPR\" (click)=\"addRelay()\">\n                {{\"manage_relays_module.add_relay\" | translate}}\n              </button>\n              <button class=\"delete-btn\" mat-flat-button [disabled]=\"!relaySelected\" color=\"primary\" *ngIf=\"(selectedTab === 'sprelay' && editAccessSPR) || (selectedTab === 'mprelay' && editAccessMPR)\" (click)=\"deleteRelays()\">\n                {{ \"manage_relays_module.delete\" | translate }}\n              </button>\n            </div>\n            <div class=\"d-block d-lg-none my-2 \">\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\" *ngIf=\"selectedTab === 'sprelay' ||(selectedTab === 'mprelay' && editAccessMPR)\">\n                <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\n                  <button mat-menu-item class=\"me-2\" color=\"primary\" *ngIf=\"selectedTab === 'sprelay'\" (click)=\"openQrDialog()\">\n                    {{ \"manage_relays_module.send_otp_qr\" | translate }}\n                  </button>\n                  <button class=\"me-2\" mat-menu-item  color=\"primary\" *ngIf=\"selectedTab === 'mprelay' && editAccessMPR\" (click)=\"addRelay()\">\n                    {{\"manage_relays_module.add_relay\" | translate}}\n                  </button>\n                  <button mat-menu-item [disabled]=\"!relaySelected\" color=\"primary\" *ngIf=\"(selectedTab === 'sprelay' && editAccessSPR) || (selectedTab === 'mprelay' && editAccessMPR)\" (click)=\"deleteRelays()\">\n                    {{ \"manage_relays_module.delete\" | translate }}\n                  </button>\n                </mat-menu>\n            </div>\n        </div>\n    </ng-container>\n</ls-page-header>\n<div class=\"sc-el-1 mt-2 px-3 custom-position-pagination\">\n    <div class=\"row mt-3 mb-3 mx-n1 \">\n        <div class=\"col-sm-7 px-1\">\n            <mat-form-field class=\"search-form-field\" appearance=\"fill\" *ngIf=\"selectedTab !== 'configurations'\">\n                <mat-label>{{ \"manage_users_module.search\" | translate }} </mat-label>\n                <input matInput id=\"search\" (keyup.enter)=\"search()\" [(ngModel)]=\"searchString\" autocomplete=\"off\"/>\n                <mat-icon  class=\"clear-icon\" *ngIf=\"searchString\" (click)=\"clear()\">close\n                </mat-icon>\n                <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-5 px-1 d-flex justify-content-sm-end\">\n\n        </div>\n    </div>\n    <div class=\"my-0 button-card-area\">\n        <button mat-button [ngClass]=\"\n          selectedTab === 'sprelay' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('sprelay')\">\n      {{ \"manage_relays_module.single_patient_relay\" | translate }}\n    </button>\n        <button mat-button [ngClass]=\"\n          selectedTab === 'mprelay' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('mprelay')\">\n      {{ \"manage_relays_module.multi_patient_relay\" | translate }}\n    </button>\n        <button mat-button [ngClass]=\"\n          selectedTab === 'configurations' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('configurations')\">\n      {{ \"manage_relays_module.relay_configurations\" | translate }}\n    </button>\n        <button mat-button [ngClass]=\"\n          selectedTab === 'careGiverApp' ? 'select-btn-active' : 'select-btn'\n        \" (click)=\"selectTab('careGiverApp')\">\n      {{ \"manage_relays_module.caregiver_app\" | translate }}\n    </button>\n    </div>\n    <div class=\"table-container table-responsive-md px-2\">\n        <app-single-patient-relays *ngIf=\"selectedTab === 'sprelay'\" (selected)=\"relaysSelected($event)\" [searchString]=\"searchString\" [editAccess]=\"editAccessSPR\"></app-single-patient-relays>\n        <app-multi-patient-relays *ngIf=\"selectedTab === 'mprelay'\" (selected)=\"relaysSelected($event)\" [searchString]=\"searchString\" [editAccess]=\"editAccessMPR\"></app-multi-patient-relays>\n        <span class=\"py-4\">\n      <app-relay-configuration *ngIf=\"selectedTab === 'configurations'\" [editAccess]=\"editAccessRelayConfiguration\">\n      </app-relay-configuration>\n    </span>\n        <app-care-giver-app *ngIf=\"selectedTab === 'careGiverApp'\" [searchString]=\"searchString\"></app-care-giver-app>\n    </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SendOtpQrComponent } from \"../../../dialogs/manage-relays/send-otp-qr/send-otp-qr.component\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { SinglePatientRelaysComponent } from \"../single-patient-relays/single-patient-relays.component\";\nimport { MultiPatientRelaysComponent } from \"../multi-patient-relays/multi-patient-relays.component\";\nimport { AddRelayComponent } from \"../add-relay/add-relay.component\";\n\n@Component({\n  selector: \"app-manage-relays\",\n  templateUrl: \"./manage-relays.component.html\",\n  styleUrls: [\"./manage-relays.component.scss\"],\n})\nexport class ManageRelaysComponent implements OnInit {\n  @ViewChild(SinglePatientRelaysComponent)\n  private singlePatientRelayComponent: SinglePatientRelaysComponent;\n  @ViewChild(MultiPatientRelaysComponent)\n  private multiPatientRelayComponent: MultiPatientRelaysComponent;\n  selectedTab = \"sprelay\";\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    private autheticationService: AuthenticationService\n  ) {}\n  searchString = \"\";\n  cfId = \"\";\n  roles = [];\n  role = \"\";\n  editAccessSPR = false;\n  editAccessMPR = false;\n  editAccessRelayConfiguration = false;\n  relaySelected: boolean;\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    this.relaySelected = false;\n    if (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"CFAC\") > -1) {\n      this.role = \"CFA\";\n      this.editAccessSPR = true;\n      this.editAccessMPR = true;\n      this.editAccessRelayConfiguration = true;\n    } else if (this.roles.indexOf(\"SC\") > -1) {\n      this.role = \"SC\";\n      this.editAccessSPR = true;\n    } else {\n      this.role = this.roles[0];\n    }\n    console.log(this.relaySelected);\n  }\n  selectTab(value) {\n    this.searchString = \"\";\n    this.selectedTab = value;\n  }\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n  getDate(timestamp) {\n    let DateString = new Date(timestamp * 1000);\n    let date = DateString.toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n    });\n    let time = DateString.toLocaleTimeString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n    return date + \" / \" + time;\n  }\n  openQrDialog() {\n    const dialogRef = this.dialog.open(SendOtpQrComponent, {\n      width: \"400px\",\n      maxWidth: \"90vw\",\n      height: \"auto\",\n      maxHeight: \"90vh\",\n      panelClass: \"custom-modal-managerelay\",\n      // disableClose: true,\n      backdropClass: \"backdropBackground\",\n    });\n  }\n\n  addRelay() {\n    this.multiPatientRelayComponent.addRelay();\n  }\n  search() {\n    this.searchString = (<HTMLInputElement>(\n      document.getElementById(\"search\")\n    )).value;\n  }\n  clear(){\n    this.searchString = \"\";\n  }\n  deleteRelays() {\n    if (this.selectedTab === \"sprelay\") {\n      this.singlePatientRelayComponent.confirmDelete();\n    } else if (this.selectedTab === \"mprelay\") {\n      this.multiPatientRelayComponent.confirmDelete();\n    }\n  }\n  relaysSelected(event) {\n    this.relaySelected = event;\n  }\n}\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n\n<div *ngIf=\"!loader\" class=\"scrolltab-height bg-thead-color comman-table-users head-border\">\n    <ls-table [config]=\"config\" [columns]=\"columns\" (page)=\"onPage($event)\" (sortChange)=\"onSortChange($event)\"\n        [data]=\"relayList$ | async\" (selected)=\"relaysSelected($event)\" [isSelected]=\"isSelected\" [Id]=\"'relayId'\">\n        <ng-template lsWidgetName=\"relayId\" let-data>\n            <div class=\"py-2\">{{ data?.relayId }}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"contactInfo\" let-data>\n            <div class=\"pt-1\">{{ data?.email }}</div>\n            <div class=\"pt-1\">{{ data?.phoneNo }}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdBy\" let-data>\n            {{data?.createdBy}}\n        </ng-template>\n        <ng-template lsWidgetName=\"location\" let-data>\n            <div class=\"d-flex align-items-center  location-info \">\n            <ng-container>\n                \n                <span class=\"text-truncate\" *ngIf=\"!editLocation[data?.index]\">\n                    {{ data.location }}\n                </span>\n                <span class=\"location-info\" *ngIf=\"editLocation[data?.index]\">\n                    <mat-form-field class=\"location-input-field\">\n                        <input matInput autocomplete=\"off\" placeholder=\"Location\" [(ngModel)]=\"data.location\"\n                            maxlength=\"32\" (ngModelChange)=\"locationEdit(data?.index)\" class=\"text-center\"\n                            (keypress)=\"relayService.alphaNumericsOnly($event)\" (paste)=\"onPaste($event)\" />\n                    </mat-form-field>\n                    <mat-error *ngIf=\"!locationValid(data.location)\">\n                        *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                </span>\n           \n            </ng-container>\n            <ng-container *ngIf=\"editAccess\">\n                <span class=\"ms-2\">\n                    <span *ngIf=\"!editLocation[data?.index]\">\n                        <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                            (click)=\"showEdit(data?.index)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                    </span>\n                    <span *ngIf=\"editLocation[data?.index]\">\n                        <button mat-mini-fab color=\"primary\" *ngIf=\"locationValid(data.location)\"\n                            class=\"btn-boxed btn-no-shadow\" (click)=\"save(data)\">\n                            <mat-icon>check</mat-icon>\n                        </button>\n                    </span>\n                </span>\n            </ng-container>\n        </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"editLocation\" let-data>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdBy\" let-row>\n            {{row?.createdBy}}\n            <mat-icon fontSet=\"material-icons-outlined\" style=\"cursor: pointer;\">info</mat-icon>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdDateTime\" let-row>\n            {{ row?.createdDateTime | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"bold-text\">{{ row?.createdDateTime+ '+0000' | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"lastActive\" let-row>\n            {{ row?.lastActive | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"fw-bold\">{{ row?.lastActive | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"status\" let-data>\n            <span class=\"text-capitalize\">{{ data?.status?.toLowerCase() }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"actions_col\" let-data *ngIf=\"editAccess\">\n            <button mat-mini-fab color=\"primary\" class=\"btn-no-shadow btn-boxed mx-auto me-2\" (click)=\"confirmSingleRelayDelete(data.relayId)\">\n               <mat-icon>delete_outline</mat-icon>\n            </button>\n            <button mat-mini-fab  mat-flat-button color=\"primary\"  class=\"btn-boxed download-btn mx-auto btn-no-shadow\"\n                    (click)=\"resendOtp(data)\">\n                <img class=\"downloadicon\" src=\"assets/icons/download-icon.svg\" alt=\"Download\" />\n            </button>\n\n        </ng-template>\n    </ls-table>\n</div>\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  MultiPatientRelay,\r\n  UpdateRelay,\r\n} from \"../../../interfaces/manage-relays.interface\";\r\nimport {\r\n  ManageRelaysSelectors,\r\n  ManageRelaysStoreActions,\r\n  ManageRelaysStoreState,\r\n} from \"../store\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { QueryParams } from \"../../../interfaces/manage-users.interface\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport { AddRelayComponent } from \"../add-relay/add-relay.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UserPreferenceService } from \"@services/user-preference.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-multi-patient-relays\",\r\n  templateUrl: \"./multi-patient-relays.component.html\",\r\n  styleUrls: [\"./multi-patient-relays.component.scss\"],\r\n})\r\nexport class MultiPatientRelaysComponent\r\n  implements OnInit, OnDestroy, OnChanges\r\n{\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"relayId\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\", \"px-3\"],\r\n      cellClass: [\"align-left\",\"fw-bold\", \"bold-text\", \"px-2\"],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      sortable: true,\r\n      headerClass: [\"align-right\"],\r\n      cellClass: [\"d-flex\", \"justify-content-end\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"createdBy\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"createdDateTime\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"status\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n    }\r\n  ];\r\n  constructor(\r\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\r\n    public relayService: ManageRelaysService,\r\n    private snackbar: SnackbarService,\r\n    private dialog: MatDialog,\r\n    private userPreference: UserPreferenceService\r\n  ) { }\r\n  @Input() searchString: string;\r\n  @Output() selected = new EventEmitter<boolean>();\r\n  @Input() public editAccess = false;\r\n  config: LSTableConfig;\r\n  relayList$: Observable<MultiPatientRelay[]>;\r\n  relayCount$: Observable<number>;\r\n  MPRelayList: MultiPatientRelay[];\r\n  cfId: string;\r\n  role: string;\r\n  roles: string[];\r\n  selection: SelectionModel<any> = new SelectionModel<any[]>();\r\n  loader = true;\r\n  loaderSubscription: any;\r\n  editLocation = {};\r\n  valueUpdated = {};\r\n  timeZone: string;\r\n  readonly timeFmt: string = environment.customization.timeFormat;\r\n  ngOnInit(): void {\r\n    this.timeZone = this.userPreference.getUserTimeZone();\r\n    console.log(this.timeZone);\r\n    this.config = {\r\n      id: \"manage_relays_module\",\r\n      rowSelectEnabled: this.editAccess,\r\n      // actions: {\r\n      //   show: this.editAccess,\r\n      //   headerLabel: \"Actions\",\r\n      //   style: \"text-align:center!important;\"\r\n      // },\r\n      sort: {\r\n        active: null,\r\n        direction: null,\r\n      },\r\n      page: {\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n      },\r\n      paginator: {\r\n        hide: false,\r\n        offline: false,\r\n      },\r\n      \r\n      translate: true,\r\n      translateKey: \"manage_relays_module\",\r\n    };\r\n    console.log(this.editAccess);\r\n    if(this.editAccess) {\r\n    this.columns.push({\r\n        id: \"actions_col\",\r\n        sortable: false,\r\n        headerClass: [\"align-center\"],\r\n        cellClass: [\"text-center\"],\r\n      });\r\n      this.columns.splice(2, 0, {\r\n        id: \"editLocation\",\r\n        sortable: false,\r\n        headerClass: [\"align-center\"],\r\n        cellClass: [\"text-center\"],\r\n        style: \"min-width:40px\"\r\n      })\r\n    } else {\r\n      this.columns[1] = {\r\n        id: \"location\",\r\n        sortable: true,\r\n        headerClass: [\"align-left\",\"gc-left\"],\r\n        cellClass: [\"text-start\",\"gc-left\"],\r\n      };\r\n    }\r\n    this.selected.emit(false);\r\n    this.relayList$ = this.store$\r\n      .select(ManageRelaysSelectors.getMPRelayList)\r\n      .pipe(\r\n        map((list: any[]) => {\r\n          return [\r\n            ...(list || []).map((l, i) => {\r\n              return {\r\n                ...l,\r\n                index: i,\r\n                lastActive: l.lastActive * 1000\r\n              };\r\n            }),\r\n          ];\r\n        })\r\n      );\r\n    this.relayList$.subscribe(res => {\r\n      this.selection.clear();\r\n    });\r\n    this.relayCount$ = this.store$.select(\r\n      ManageRelaysSelectors.getMPRelayCount\r\n    );\r\n    this.relayCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n    this.loaderSubscription = this.store$\r\n      .select(ManageRelaysSelectors.getLoaderStatus)\r\n      .subscribe((loader) => {\r\n        if (loader) {\r\n          this.loader = false;\r\n        }\r\n      });\r\n    //this.getMPRelayList();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.loader = true;\r\n    if(this.config) this.config.page.pageIndex = 0;\r\n    this.getMPRelayList();\r\n  }\r\n  relaysSelected(event: SelectionModel<any[]>) {\r\n    console.log(event);\r\n    this.selection = event;\r\n    if (this.selection.selected.length > 0) {\r\n      this.selected.emit(true);\r\n    } else {\r\n      this.selected.emit(false);\r\n    }\r\n  }\r\n  onSortChange(sort: Sort) {\r\n    // this.loader = true;\r\n    this.config.sort = {\r\n      ...sort,\r\n    };\r\n    this.getMPRelayList();\r\n  }\r\n  showEdit(index) {\r\n    this.editLocation[index] = true;\r\n  }\r\n  hideEdit(index) {\r\n    this.editLocation[index] = false;\r\n  }\r\n  locationValid(location) {\r\n    let regex = /^[a-zA-Z0-9]{1}[a-zA-Z0-9-_ ]*$/;\r\n    let valid = regex.test(location);\r\n    let loc = location.replace(/\\s/g, \"\");\r\n    return loc.length > 0 && valid;\r\n  }\r\n  getDate(timestamp) {\r\n    // const DateString = new Date(timestamp * 1000);\r\n    const DateString = new Date(timestamp);\r\n    const date = DateString.toLocaleDateString(\"en-US\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n    const time = DateString.toLocaleTimeString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      hour12: true,\r\n    });\r\n    return date + \" / \" + \"<b>\" + time + \"</b>\";\r\n  }\r\n  isSelected(row, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.relayId).includes(row.relayId);\r\n  }\r\n  getMPRelayList() {\r\n    let mpUrl = \"\";\r\n    let param: QueryParams = {\r\n      url: mpUrl,\r\n      page: this.config?.page?.pageIndex + 1,\r\n      size: this.config?.page?.pageSize,\r\n      sortOrder:\"asc\",\r\n      sortBy: (this.config?.sort?.direction)? `${this.config?.sort?.active || \"\"}:${\r\n        this.config?.sort?.direction || \"\"\r\n      }` : \"\",\r\n      searchText: this.searchString,\r\n    };\r\n    this.store$.dispatch(\r\n      new ManageRelaysStoreActions.LoadMPRelaysRequestAction({ params: param })\r\n    );\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  onPage(event: PageEvent) {\r\n    console.log(event);\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getMPRelayList();\r\n  }\r\n  onSelectChange(event, relay) {}\r\n  deleteRelays() {\r\n    let body = {\r\n      relayId: this.selection.selected.map((s) => s.relayId),\r\n    };\r\n    this.relayService.deleteRelays(body).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res.status === \"OK\") {\r\n        this.loader = true;\r\n        this.selection.clear();\r\n        this.config.page.pageIndex = 0;\r\n        this.getMPRelayList();\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\"+res.message, 'bottom', 'center', true);\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.operation_failed\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  deleteSingleRelay(relayId) {\r\n    let body = {\r\n      relayId: [relayId],\r\n    };\r\n    this.relayService.deleteRelays(body).subscribe((res: any) => {\r\n      if (res.status === \"OK\") {\r\n        this.loader = true;\r\n        this.config.page.pageIndex = 0;\r\n        this.getMPRelayList();\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\"+res.message, 'bottom', 'center', true);\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.operation_failed\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  confirmDelete() {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_relays_module.delete_relays\",\r\n          text: \"manage_relays_module.delete_relays_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.deleteRelays();\r\n      }\r\n    });\r\n  }\r\n  confirmSingleRelayDelete(relayId) {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_relays_module.delete_relays\",\r\n          text: \"manage_relays_module.delete_relay_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.deleteSingleRelay(relayId);\r\n      }\r\n    });\r\n  }\r\n  save(relay) {\r\n    this.editLocation[relay?.index] = false;\r\n    if (this.valueUpdated[relay?.index]) {\r\n      this.relayService\r\n        .updateRelay(relay)\r\n        .subscribe((response: UpdateRelay) => {\r\n          this.valueUpdated[relay?.index] = false;\r\n          if (response.status === \"OK\") {\r\n            this.snackbar.openCustomSnackBar(\"manage_relays_module.relay_updated\", 'bottom', 'center', true);\r\n          }\r\n        });\r\n    }\r\n  }\r\n  addRelay() {\r\n    const addRelay = this.dialog.open(AddRelayComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {},\r\n      disableClose: true,\r\n    });\r\n    addRelay.afterClosed().subscribe((data) => {\r\n      console.log(data.data);\r\n      if (!this.isBlank(data.data)) {\r\n        this.loader = true;\r\n        let location = { location: data.data };\r\n        this.relayService.addRelay(location).subscribe((response) => {\r\n          console.log(response);\r\n          if (response.status === \"OK\") {\r\n            this.getMPRelayList();\r\n          } else {\r\n            this.loader = false;\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        }, error => {\r\n          this.loader = false;\r\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  locationEdit(index) {\r\n    this.valueUpdated[index] = true;\r\n  }\r\n  getStatus(lastActive) {\r\n    return lastActive > 0 ? \"Active\" : \"Inactive\";\r\n  }\r\n  onPaste(event: ClipboardEvent) {\r\n    let clipboardData = event.clipboardData;\r\n    let key = clipboardData.getData('text');\r\n    let charsOnlyPattern = /^[a-zA-Z0-9-_ ]+$/;\r\n    if (charsOnlyPattern.test(key)) {\r\n        return true;\r\n    } else {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n  }\r\n  resendOtp(relay) {\r\n    if(relay?.location) {\r\n      let body = {\r\n        location: relay?.location,\r\n        relayId: relay?.relayId\r\n      }\r\n      this.relayService.addRelay(body).subscribe(res => {\r\n        if(res.status === 'OK') {\r\n          this.snackbar.openCustomSnackBar(\"manage_relays_module.otp_sent\", 'bottom', 'center', true);\r\n        } else {\r\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n        }\r\n      }, (error) => {\r\n        if(error.error.message === 'RELAY_ALREADY_ACTIVE') {\r\n          this.snackbar.openCustomSnackBar(\"manage_relays_module.relay_already_active\", 'bottom', 'center', true);\r\n        } else {\r\n          this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n        }\r\n      })\r\n    } else {\r\n      this.snackbar.openSnackBar(\"manage_relays_module.location_invalid\", 'bottom', 'center', true);\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.loaderSubscription.unsubscribe();\r\n  }\r\n  \r\n}\r\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n  <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n<div *ngIf=\"!loader\">\n  <div class=\"table-responsive-md py-4\">\n    <table class=\"table\" aria-label=\"Table\">\n      <tbody class=\"border-0\">\n        <tr class=\"m-0\">\n          <td>\n            <div class=\"row\">\n              <div class=\"col-6 col-md-8 text-start d-flex align-items-center\">\n                <mat-slide-toggle\n                        class=\"px-2\"\n                        *ngIf=\"editAccess\"\n                        [(ngModel)]=\"relayConfiguration.sprDeletionDate.isActive\"\n                        (change)=\"updateSettings()\"\n                >\n                  {{\n                  \"manage_relays_module.single_patient_relay_auto_deletion_date\"\n                          | translate\n                  }}\n                </mat-slide-toggle>\n                <span *ngIf=\"!editAccess\">\n              <span *ngIf=\"relayConfiguration.sprDeletionDate.isActive\">\n                {{\n                \"manage_relays_module.single_patient_relay_auto_deletion_date\"\n                        | translate\n                }}\n                {{ \"additional_devices.enabled_txt\" | translate }}\n              </span>\n              <span *ngIf=\"!relayConfiguration.sprDeletionDate.isActive\">\n                {{\n                \"manage_relays_module.single_patient_relay_auto_deletion_date\"\n                        | translate\n                }}\n                {{ \"additional_devices.disabled_txt\" | translate }}\n              </span>\n            </span>\n              </div>\n              <div class=\"col-6 col-md-4 text-end\">\n                <mat-select\n                        (ngModelChange)=\"updateSettings()\"\n                        placeholder=\"Settings\"\n                        class=\"mat-sel select text-start p-2 m-0\"\n                        [(ngModel)]=\"relayConfiguration.sprDeletionDate.value\"\n                        [disabled]=\"\n                !relayConfiguration.sprDeletionDate.isActive || !editAccess\n              \"\n                >\n                  <mat-option\n                          *ngFor=\"let setting of settings\"\n                          [value]=\"setting.value.toString()\"\n                  >\n                    {{ setting.name }}\n                  </mat-option>\n                </mat-select>\n              </div>\n            </div>\n\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\nimport { RelayConfiguration } from \"../../../interfaces/manage-relays.interface\";\nimport { Observable } from \"rxjs\";\nimport {\n  ManageRelaysSelectors,\n  ManageRelaysStoreActions,\n  ManageRelaysStoreState,\n} from \"../store\";\nimport { Store } from \"@ngrx/store\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-relay-configuration\",\n  templateUrl: \"./relay-configuration.component.html\",\n  styleUrls: [\"./relay-configuration.component.scss\"],\n})\nexport class RelayConfigurationComponent implements OnInit, OnDestroy {\n  constructor(\n    private service: ManageRelaysService,\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\n    private snackbar: SnackbarService\n  ) {}\n  settings = [];\n  @Input() public editAccess;\n  loader = true;\n  loaderSubscription: any;\n  configSubscription: any;\n  relayConfig$: Observable<RelayConfiguration>;\n  relayConfiguration: RelayConfiguration;\n  ngOnInit(): void {\n    for (let i = 30; i <= 180; i++) {\n      this.settings.push({\n        name: i + \"  days\",\n        value: i * 24 * 60,\n      });\n    }\n    this.relayConfig$ = this.store$.select(\n      ManageRelaysSelectors.getRelayConfiguration\n    );\n    this.configSubscription = this.relayConfig$.subscribe((response) => {\n      console.log(response);\n      this.relayConfiguration = response;\n    });\n    this.loaderSubscription = this.store$\n      .select(ManageRelaysSelectors.getLoaderStatus)\n      .subscribe((loader) => {\n        if (loader) {\n          this.loader = false;\n        }\n      });\n    this.getRelayConfiguration();\n  }\n  getRelayConfiguration() {\n    this.store$.dispatch(\n      new ManageRelaysStoreActions.LoadRelayConfigurationRequestAction({})\n    );\n  }\n  updateRelayConfiguration(config) {\n    this.service.updateRelayConif(config).subscribe((res) => {\n      if (res.status === \"OK\") {\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\" + res.message, 'bottom', 'center', true);\n      }\n    });\n  }\n  updateSettings() {\n    this.updateRelayConfiguration({\n      sprDeletionDate: this.relayConfiguration.sprDeletionDate,\n      relayConfigId: this.relayConfiguration.relayConfigId,\n    });\n  }\n  ngOnDestroy() {\n    this.loaderSubscription.unsubscribe();\n    this.configSubscription.unsubscribe();\n  }\n}\n","<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n\n<div *ngIf=\"!loader\" class=\"scrolltab-height bg-thead-color comman-table-users head-border\">\n    <ls-table [config]=\"config\" [columns]=\"columns\" (page)=\"onPage($event)\" (sortChange)=\"onSortChange($event)\" [data]=\"relayList$ | async\" (selected)=\"relaysSelected($event)\" [isSelected]=\"isSelected\" [Id]=\"'relayId'\">\n\n\n        <ng-template lsWidgetName=\"relayId\" let-data>\n            <div class=\"py-2\">{{ data?.relayId }}</div>\n        </ng-template>\n        <ng-template lsWidgetName=\"firstName\" let-data>\n            {{data.firstName || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-data>\n            <div class=\"pe-3\">\n                <small class=\"pt-1\">{{ data?.email }}</small><br>\n                <small class=\"pt-1\">{{ data?.phoneNo }}</small>\n            </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"biosensorIDHeading\">\n            <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" /> {{'manage_relays_module.biosensorID' | translate}}\n        </ng-template>\n        <ng-template lsWidgetName=\"biosensorID\" let-row>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <img class=\"patch-icon\" src=\"assets/icons/biosensor.svg\" />\n                <div class=\"biosensor-id\">\n                    {{ row.biosensorID || \"-\" }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template lsWidgetName=\"createdDateTime\" let-row>\n            {{ row?.createdDateTime | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"bold-text\">{{ row?.createdDateTime+ '+0000' | date: timeFmt : timeZone }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"lastActive\" let-row>\n            <span *ngIf=\"row?.lastActive\">{{ row?.lastActive | date: \"MMM d, yyyy\" : timeZone }} /\n            <span class=\"bold-text\">{{ row?.lastActive | date: timeFmt : timeZone }}</span>\n            </span>\n            <span *ngIf=\"!row?.lastActive\"> - </span>\n        </ng-template>\n    </ls-table>\n</div>\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport {\r\n  ManageRelaysSelectors,\r\n  ManageRelaysStoreState,\r\n  ManageRelaysStoreActions,\r\n} from \"../store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SinglePatientRelay } from \"../../../interfaces/manage-relays.interface\";\r\nimport { QueryParams } from \"../../../interfaces/manage-users.interface\";\r\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { UserPreferenceService } from \"@services/user-preference.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-single-patient-relays\",\r\n  templateUrl: \"./single-patient-relays.component.html\",\r\n  styleUrls: [\"./single-patient-relays.component.scss\"],\r\n})\r\nexport class SinglePatientRelaysComponent\r\n  implements OnInit, OnChanges, OnDestroy\r\n{\r\n  constructor(\r\n    private store$: Store<ManageRelaysStoreState.ManageRelaysState>,\r\n    private relayService: ManageRelaysService,\r\n    private snackbar: SnackbarService,\r\n    private dialog: MatDialog,\r\n    private userPreference: UserPreferenceService\r\n  ) {}\r\n  @Input() searchString: string;\r\n  @Input() private delete!: EventEmitter<boolean>;\r\n  @Input() public editAccess = false;\r\n  @Output() selected = new EventEmitter<boolean>();\r\n  relayList$: Observable<SinglePatientRelay[]>;\r\n  relayCount$: Observable<number>;\r\n  SPRelayList: SinglePatientRelay[];\r\n  cfId: string;\r\n  role: string;\r\n  roles: string[];\r\n  singlePatientRelayList: SinglePatientRelay[];\r\n  loader = true;\r\n  loaderSubscription: any;\r\n  relayIds = [];\r\n  selection: SelectionModel<any>= new SelectionModel<any[]>();\r\n  config: LSTableConfig = {\r\n    id: \"manage_relays_module\",\r\n    rowSelectEnabled: false,\r\n    actions: {\r\n      show: false,\r\n    },\r\n    sort: {\r\n      active: null,\r\n      direction: null,\r\n    },\r\n    page: {\r\n      pageIndex: 0,\r\n      pageSize: 10,\r\n    },\r\n    paginator: {\r\n      hide: false,\r\n      offline: false,\r\n    },\r\n    translate: true,\r\n    translateKey: \"manage_relays_module\",\r\n  }\r\n\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"relayId\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\", \"px-3\"],\r\n      cellClass: [\"align-left\",\"bold-text\", \"px-2\"],\r\n    },\r\n    {\r\n      id: \"biosensorID\",\r\n      headerClass: [\"text-start\", \"px-4\"],\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-left\", \"px-3\"],\r\n    },\r\n    {\r\n      id: \"firstName\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"email\",\r\n      label:\"email\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"createdDateTime\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n    {\r\n      id: \"lastActive\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"align-left\"],\r\n    },\r\n  ];\r\n  timeZone: string;\r\n  readonly timeFmt: string = environment.customization.timeFormat;\r\n  ngOnInit(): void {\r\n    this.config.rowSelectEnabled = this.editAccess;\r\n    this.timeZone = this.userPreference.getUserTimeZone();\r\n    this.relayIds = [];\r\n    this.selected.emit(false);\r\n    this.relayList$ = this.store$\r\n      .select(ManageRelaysSelectors.getSPRelayList)\r\n      .pipe(\r\n        map((res: any) => {\r\n          return res?.map(r => {\r\n            return {\r\n              ...r,\r\n              lastActive: r.lastActive * 1000\r\n            }\r\n          });\r\n        })\r\n      );\r\n    this.relayList$.subscribe(res => {\r\n      this.selection.clear();\r\n    });\r\n    this.relayCount$ = this.store$.select(\r\n      ManageRelaysSelectors.getSPRelayCount\r\n    );\r\n    this.relayCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n    this.loaderSubscription = this.store$\r\n      .select(ManageRelaysSelectors.getLoaderStatus)\r\n      .subscribe((loader) => {\r\n        if (loader) {\r\n          this.loader = false;\r\n        }\r\n      });\r\n    //this.getSPRelayList();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.loader = true;\r\n    if(this.config) this.config.page.pageIndex = 0;\r\n    this.getSPRelayList();\r\n  }\r\n  relaysSelected(event) {\r\n    console.log(event);\r\n    this.selection = event;\r\n    if (this.selection.selected.length > 0) {\r\n      this.selected.emit(true);\r\n    } else {\r\n      this.selected.emit(false);\r\n    }\r\n  }\r\n  onSortChange(sort: Sort) {\r\n    // this.loader = true;\r\n    // this.config.page.pageIndex = 0;\r\n    this.config.sort = {\r\n      ...sort,\r\n    };\r\n    this.getSPRelayList();\r\n  }\r\n  getDate(timestamp) {\r\n    // const DateString = new Date(timestamp * 1000);\r\n    const DateString = new Date(timestamp);\r\n    const date = DateString.toLocaleDateString(\"en-US\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n    const time = DateString.toLocaleTimeString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    });\r\n    return `${date} / ${time}`;\r\n  }\r\n  isSelected(row, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.relayId).includes(row.relayId);\r\n  }\r\n  getSPRelayList() {\r\n    let url = \"relays/sprlist\";\r\n    let param: QueryParams = {\r\n      url: url,\r\n      page: this.config.page.pageIndex + 1,\r\n      size: this.config.page.pageSize,\r\n      sortOrder: \"asc\",\r\n      sortBy: (this.config?.sort?.direction)? `${this.config?.sort?.active || \"\"}:${\r\n        this.config?.sort?.direction || \"\"\r\n      }`: \"\",\r\n      searchText: this.searchString,\r\n    };\r\n    this.store$.dispatch(\r\n      new ManageRelaysStoreActions.LoadSPRelaysRequestAction({ params: param })\r\n    );\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  onPage(event: PageEvent) {\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getSPRelayList();\r\n  }\r\n  ngOnDestroy() {\r\n    this.loaderSubscription.unsubscribe();\r\n  }\r\n  onCheckboxChange(event, relayId) {\r\n    if (event.checked) {\r\n      this.relayIds.push(relayId);\r\n    } else {\r\n      this.relayIds = this.relayIds.filter((relayid) => relayid !== relayId);\r\n    }\r\n  }\r\n  deleteRelays() {\r\n    let body = {\r\n      relayId: this.selection.selected.map((s) => s.relayId),\r\n    };\r\n    this.relayService.deleteRelays(body).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res.status === \"OK\") {\r\n        this.loader = true;\r\n        this.relayIds = [];\r\n        this.config.page.pageIndex = 0;\r\n        this.getSPRelayList();\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.\" + res.message, 'bottom', 'center', true);\r\n\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_relays_module.operation_failed\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  ifChecked(relayId) {\r\n    return this.relayIds.indexOf(relayId) > -1;\r\n  }\r\n  confirmDelete() {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"90vw\",\r\n      height: \"auto\",\r\n      minHeight: \"100px\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_relays_module.delete_relays\",\r\n          text: \"manage_relays_module.delete_relays_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.deleteRelays();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Action } from \"@ngrx/store\";\nimport {\n  MPRelayList,\n  RelayConfigurationResponse,\n  SinglePatientRelay,\n  SPRelayList,\n} from \"../../../interfaces/manage-relays.interface\";\nimport { QueryParams } from \"../../../interfaces/manage-users.interface\";\n\nexport enum ActionTypes {\n  LOAD_SINGLE_PATIENT_RELAYS_REQUEST = \"[MANAGERELAYS] Load SP Relay List Request\",\n  LOAD_SINGLE_PATIENT_RELAYS_FAILURE = \"[MANAGERELAYS] Load SP Relay List Failure\",\n  LOAD_SINGLE_PATIENT_RELAYS_SUCCESS = \"[MANAGERELAYS] Load SP Relay List Success\",\n  LOAD_MULTI_PATIENT_RELAYS_REQUEST = \"[MANAGERELAYS] Load MP Relay List Request\",\n  LOAD_MULTI_PATIENT_RELAYS_FAILURE = \"[MANAGERELAYS] Load MP Relay List Failure\",\n  LOAD_MULTI_PATIENT_RELAYS_SUCCESS = \"[MANAGERELAYS] Load MP Relay List Success\",\n  LOAD_RELAY_CONFIGURATION_REQUEST = \"[MANAGERELAYS] Load Relay Configuration Request\",\n  LOAD_RELAY_CONFIGURATION_FAILURE = \"[MANAGERELAYS] Load Relay Configuration Failure\",\n  LOAD_RELAY_CONFIGURATION_SUCCESS = \"[MANAGERELAYS] Load Relay Configuration Success\",\n  LOAD_CARE_GIVER_RELAYS_REQUEST = \"[MANAGERELAYS] Load CG Relay List Request\",\n  LOAD_CARE_GIVER_RELAYS_FAILURE = \"[MANAGERELAYS] Load CG Relay List Failure\",\n  LOAD_CARE_GIVER_RELAYS_SUCCESS = \"[MANAGERELAYS] Load CG Relay List Success\",\n}\nexport class LoadSPRelaysRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadSPRelaysFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadSPRelaysSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_SUCCESS;\n  constructor(public payload: { data: SPRelayList }) {}\n}\nexport class LoadMPRelaysRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_MULTI_PATIENT_RELAYS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadMPRelaysFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_MULTI_PATIENT_RELAYS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadMPRelaysSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_MULTI_PATIENT_RELAYS_SUCCESS;\n  constructor(public payload: { data: MPRelayList }) {}\n}\nexport class LoadRelayConfigurationRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_RELAY_CONFIGURATION_REQUEST;\n  constructor(public payload: {}) {}\n}\n\nexport class LoadRelayConfigurationFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_RELAY_CONFIGURATION_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadRelayConfigurationSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_RELAY_CONFIGURATION_SUCCESS;\n  constructor(public payload: { data: RelayConfigurationResponse }) {}\n}\nexport class LoadCGRelaysRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_CARE_GIVER_RELAYS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadCGRelaysFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_CARE_GIVER_RELAYS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadCGRelaysSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_CARE_GIVER_RELAYS_SUCCESS;\n  constructor(public payload: { data: SPRelayList }) {}\n}\nexport type ManageRelaysActions =\n  | LoadSPRelaysRequestAction\n  | LoadSPRelaysFailureAction\n  | LoadSPRelaysSuccessAction\n  | LoadMPRelaysRequestAction\n  | LoadMPRelaysFailureAction\n  | LoadMPRelaysSuccessAction\n  | LoadRelayConfigurationRequestAction\n  | LoadRelayConfigurationFailureAction\n  | LoadRelayConfigurationSuccessAction\n  | LoadCGRelaysRequestAction\n  | LoadCGRelaysFailureAction\n  | LoadCGRelaysSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { Observable, of as observableOf } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap } from \"rxjs/operators\";\nimport * as featureActions from \"./manage-relays.actions\";\nimport { ManageRelaysService } from \"../services/manage-relays.service\";\n\n@Injectable()\nexport class ManageRelaysEffects {\n  constructor(\n    private manageRelayService: ManageRelaysService,\n    private actions$: Actions\n  ) {}\n\n  @Effect()\n  loadSPRelayListRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadSPRelaysRequestAction>(\n      featureActions.ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageRelayService.getSPRelayList(action.payload.params).pipe(\n        map((data) => new featureActions.LoadSPRelaysSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.LoadSPRelaysFailureAction({ error }))\n        )\n      )\n    )\n  );\n  @Effect()\n  loadMPRelayListRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadMPRelaysRequestAction>(\n      featureActions.ActionTypes.LOAD_MULTI_PATIENT_RELAYS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageRelayService.getMPRelayList(action.payload.params).pipe(\n        map((data) => new featureActions.LoadMPRelaysSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.LoadMPRelaysFailureAction({ error }))\n        )\n      )\n    )\n  );\n  @Effect()\n  loadRelayConfigurationEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadRelayConfigurationRequestAction>(\n      featureActions.ActionTypes.LOAD_RELAY_CONFIGURATION_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageRelayService.getRelayConif().pipe(\n        map(\n          (data) =>\n            new featureActions.LoadRelayConfigurationSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.LoadRelayConfigurationFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n  @Effect()\n  loadCGRelayListRequestEffect$ = this.actions$.pipe(\n      ofType<featureActions.LoadCGRelaysRequestAction>(\n          featureActions.ActionTypes.LOAD_CARE_GIVER_RELAYS_REQUEST\n      ),\n      mergeMap((action) =>\n          this.manageRelayService.getCGRelayList(action.payload.params).pipe(\n              map((data) => new featureActions.LoadCGRelaysSuccessAction({ data })),\n              catchError((error) =>\n                  observableOf(new featureActions.LoadCGRelaysFailureAction({ error }))\n              )\n          )\n      )\n  );\n}\n","import {\n  MultiPatientRelay,\n  RelayConfiguration,\n  SinglePatientRelay,\n} from \"../../../interfaces/manage-relays.interface\";\nimport { ActionTypes, ManageRelaysActions } from \"./manage-relays.actions\";\n\nexport interface ManageRelaysState {\n  SINGLE_PATIENT_RELAYS: SinglePatientRelay[];\n  SP_RELAY_COUNT: number;\n  MULTI_PATIENT_RELAYS: MultiPatientRelay[];\n  MP_RELAY_COUNT: number;\n  RELAY_CONFIGURATION: RelayConfiguration;\n  CARE_GIVER_RELAYS: SinglePatientRelay[];\n  CG_RELAY_COUNT: number;\n  error: string;\n  loaded: boolean;\n}\n\nconst initialManageRelayState: ManageRelaysState = {\n  SINGLE_PATIENT_RELAYS: [],\n  SP_RELAY_COUNT: 0,\n  MULTI_PATIENT_RELAYS: [],\n  MP_RELAY_COUNT: 0,\n  RELAY_CONFIGURATION: {\n    sprDeletionDate: {\n      isActive: true,\n      value: \"\",\n    },\n    relayConfigId: \"\",\n  },\n  CARE_GIVER_RELAYS: [],\n  CG_RELAY_COUNT: 0,\n  error: \"\",\n  loaded: false,\n};\n\nexport const manageRelaysFeatureKey = \"managerelays\";\n\nexport function ManageRelaysReducer(\n  state: ManageRelaysState = initialManageRelayState,\n  action: ManageRelaysActions\n) {\n  switch (action.type) {\n    case ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_SINGLE_PATIENT_RELAYS_SUCCESS: {\n      return {\n        ...state,\n        SINGLE_PATIENT_RELAYS: action.payload.data.data.items,\n        SP_RELAY_COUNT: action.payload.data.data.total,\n        loaded: true,\n      };\n    }\n    case ActionTypes.LOAD_MULTI_PATIENT_RELAYS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_MULTI_PATIENT_RELAYS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_MULTI_PATIENT_RELAYS_SUCCESS: {\n      return {\n        ...state,\n        MULTI_PATIENT_RELAYS: action.payload.data.data.items,\n        MP_RELAY_COUNT: action.payload.data.data.total,\n        loaded: true,\n      };\n    }\n    case ActionTypes.LOAD_RELAY_CONFIGURATION_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_RELAY_CONFIGURATION_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_RELAY_CONFIGURATION_SUCCESS: {\n      return {\n        ...state,\n        RELAY_CONFIGURATION: action.payload.data.data,\n        loaded: true,\n      };\n    }\n    case ActionTypes.LOAD_CARE_GIVER_RELAYS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_CARE_GIVER_RELAYS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n      };\n    }\n\n    case ActionTypes.LOAD_CARE_GIVER_RELAYS_SUCCESS: {\n      return {\n        ...state,\n        CARE_GIVER_RELAYS: action.payload.data.data.items,\n        CG_RELAY_COUNT: action.payload.data.data.total,\n        loaded: true,\n      };\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  ManageRelaysState,\n  manageRelaysFeatureKey,\n} from \"./manage-relays.reducer\";\n\nconst getManageRelaysState = createFeatureSelector<ManageRelaysState>(\n  manageRelaysFeatureKey\n);\n\nexport const getSPRelayList = createSelector(\n  getManageRelaysState,\n  (state) => state?.SINGLE_PATIENT_RELAYS\n);\n\nexport const getError = createSelector(\n  getManageRelaysState,\n  (state) => state?.error\n);\nexport const getSPRelayCount = createSelector(\n  getManageRelaysState,\n  (state) => state?.SP_RELAY_COUNT\n);\nexport const getLoaderStatus = createSelector(\n  getManageRelaysState,\n  (state) => state?.loaded\n);\nexport const getMPRelayList = createSelector(\n  getManageRelaysState,\n  (state) => state?.MULTI_PATIENT_RELAYS\n);\nexport const getMPRelayCount = createSelector(\n  getManageRelaysState,\n  (state) => state?.MP_RELAY_COUNT\n);\nexport const getRelayConfiguration = createSelector(\n  getManageRelaysState,\n  (state) => state?.RELAY_CONFIGURATION\n);\nexport const getCGRelayList = createSelector(\n    getManageRelaysState,\n    (state) => state?.CARE_GIVER_RELAYS\n);\nexport const getCGRelayCount = createSelector(\n    getManageRelaysState,\n    (state) => state?.CG_RELAY_COUNT\n);\n","<div id=\"addGroup\">\r\n  <mat-card class=\"dialog-header\">\r\n    <h1 mat-dialog-title>\r\n      {{ \"manage_users_module.addgroup.add_group\" | translate }}\r\n    </h1>\r\n   <!--<button mat-icon-button mat-dialog-close>\r\n      <mat-icon>close</mat-icon>\r\n    </button>--> \r\n  </mat-card>\r\n  <mat-dialog-content class=\"mat-dialog-popup\">\r\n    <div class=\"dialog-form\">\r\n      <div class=\"row mx-n2\">\r\n        <div class=\"col-sm-6 px-2 mb-2 mb-md-0\">\r\n<!--          <mat-form-field appearance=\"fill\" class=\"formfield-control\">-->\r\n<!--            <mat-select placeholder=\"Location\" [(ngModel)]=\"selectedLocationGroup\" (ngModelChange)=\"groupChange()\">-->\r\n<!--              <mat-option *ngFor=\"let location of locationGroups\" [value]=\"location\">-->\r\n<!--                {{ location.name }}-->\r\n<!--              </mat-option>-->\r\n<!--            </mat-select>-->\r\n<!--          </mat-form-field>-->\r\n          <app-nested-dropdown class=\"nested-selectfilter select toplabel-no\" [selectedValue]=\"selectedLocationGroup\" key=\"groupId\" displayKey=\"name\"\r\n                               [label]=\"'alert_config_module.location' | translate\" (selected)=\"groupChange($event, 'LOCATION')\"\r\n                               [options]=\"locationGroups\" [showSelect]=\"true\" [assignGroup]=\"true\">\r\n          </app-nested-dropdown>\r\n          <mat-error class=\"required my-2\" *ngIf=\"locationGroupExists\">\r\n            {{ \"manage_users_module.addgroup.location_group_exits\" | translate }}\r\n          </mat-error>\r\n        </div>\r\n        <!--  <div class=\"col-sm-6 px-2 mb-2 mb-md-0\">  -->\r\n<!--          <mat-form-field appearance=\"fill\" class=\"formfield-control\">-->\r\n<!--            <mat-select placeholder=\"Clinical condition\" [(ngModel)]=\"selectedClinicalGroup\" (ngModelChange)=\"groupChange()\">-->\r\n<!--              <mat-option *ngFor=\"let group of clinicalGroups\" [value]=\"group\">-->\r\n<!--                {{ group.name }}-->\r\n<!--              </mat-option>-->\r\n<!--            </mat-select>-->\r\n<!--          </mat-form-field>-->\r\n<!--vishnu-->\r\n          <!-- <app-nested-dropdown class=\"nested-selectfilter select toplabel-no\" [selectedValue]=\"selectedClinicalGroup\" key=\"groupId\" displayKey=\"name\"\r\n                               [label]=\"'alert_config_module.medical_condition' | translate\" (selected)=\"groupChange($event, 'CLINICAL')\"\r\n                               [options]=\"clinicalGroups\" [showSelect]=\"true\" [assignGroup]=\"true\">\r\n          </app-nested-dropdown>\r\n\r\n          <mat-error class=\"required my-2\" *ngIf=\"clinicalGroupExists\">\r\n            {{ \"manage_users_module.addgroup.clinical_group_exits\" | translate }}\r\n          </mat-error>\r\n        </div> -->\r\n        <!--vishnu-->\r\n      </div>\r\n      <mat-error *ngIf=\"submitted && isBlank(selectedClinicalGroup) && isBlank(selectedLocationGroup)\" class=\"required\">\r\n        {{ \"manage_users_module.addgroup.error_group_required\" | translate }}\r\n      </mat-error>\r\n    </div>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-flat-button mat-dialog-close class=\"fill-btn\" color=\"warn\">\r\n      {{ \"manage_users_module.addgroup.cancelbutton\" | translate }}\r\n    </button>\r\n    <button mat-flat-button class=\"fill-btn\" [disabled]=\"clinicalGroupExists || locationGroupExists\" (click)=\"save()\" color=\"primary\"\r\n    [class.disabled]=\"clinicalGroupExists || locationGroupExists\">\r\n      {{ \"manage_users_module.addgroup.addbutton\" | translate }}\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { ManageUsersService } from \"../services/manage-users.service\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\n\r\ninterface Location {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n@Component({\r\n  selector: \"app-addgroup\",\r\n  templateUrl: \"./addgroup.component.html\",\r\n  styleUrls: [\"./addgroup.component.scss\"],\r\n})\r\nexport class AddgroupComponent implements OnInit {\r\n  constructor(\r\n    private autheticationService: AuthenticationService,\r\n    private manageUserService: ManageUsersService,\r\n    private dialogRef: MatDialogRef<MatDialogRef<any>>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n  cfId: string;\r\n  groups: Group[];\r\n  clinicalGroups: Group[];\r\n  locationGroups: Group[];\r\n  selectedClinicalGroup;\r\n  selectedLocationGroup;\r\n  submitted = false;\r\n  selGroups: Group[] = [];\r\n  clinicalGroupExists = false;\r\n  locationGroupExists = false;\r\n  ngOnInit() {\r\n    this.selGroups = this.data.data?.selectedGroups;\r\n    console.log(this.selGroups);\r\n    this.cfId = this.autheticationService.getCfId();\r\n    this.manageUserService.getGroups(this.cfId).subscribe((response) => {\r\n      console.log(response);\r\n      // if (response.status === \"OK\") { vishnu removed\r\n        this.groups = response.data;\r\n        this.selGroups.forEach(group => {\r\n          this.groups = this.groups.filter(grp => group.groupId !== grp.groupId);\r\n          this.groups = this.groups.filter(grp =>  grp?.ancestor?.indexOf(group.groupId) == -1 );\r\n        })\r\n        this.clinicalGroups = this.groups.filter(group => group.type === 'clinical')\r\n        this.locationGroups = this.groups.filter(group => group.type === 'physical');\r\n      // }  vishnu removed\r\n    });\r\n  }\r\n  groupChange(groupId, type) {\r\n    if (type === 'LOCATION') {\r\n      this.selectedLocationGroup = groupId;\r\n    \r\n      } else if (type === 'clinical') {\r\n      this.selectedClinicalGroup = groupId;\r\n    }\r\n    this.clinicalGroupExists = false;\r\n    this.locationGroupExists = false;\r\n    this.selGroups.forEach((group) => {\r\n      if (group.groupId === this.selectedClinicalGroup) {\r\n        this.clinicalGroupExists = true;\r\n      }\r\n      if (group.groupId === this.selectedLocationGroup) {\r\n        this.locationGroupExists = true;\r\n      }\r\n    });\r\n  }\r\n  save() {\r\n    this.clinicalGroupExists = false;\r\n    this.locationGroupExists = false;\r\n    this.submitted = true;\r\n    if (this.isBlank(this.selectedClinicalGroup) && this.isBlank(this.selectedLocationGroup)) {\r\n      return;\r\n    }\r\n    let selectedgroups = [];\r\n    if (this.selectedLocationGroup) {\r\n\r\n      selectedgroups.push(this.selectedLocationGroup);\r\n  \r\n    }\r\n    if (this.selectedClinicalGroup) {\r\n      selectedgroups.push(this.selectedClinicalGroup);\r\n    }\r\n    this.dialogRef.close({ data: selectedgroups });\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n}\r\n","<div id=\"addUser\">\r\n    <mat-card class=\"dialog-header\">\r\n        <h1 mat-dialog-title>\r\n            {{ \"manage_users_module.adduser.add_user\" | translate }}\r\n        </h1>\r\n        <!--<button mat-icon-button mat-dialog-close>\r\n      <mat-icon>close</mat-icon>\r\n    </button>-->\r\n    </mat-card>\r\n    <mat-dialog-content class=\"mat-dialog-popup\">\r\n        <div class=\"loading-indicator\" *ngIf=\"loader\">\r\n            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n        </div>\r\n        <form [formGroup]=\"addUserForm\" class=\"dialog-form\" autocomplete=\"off\">\r\n            <!--            <div class=\"row\">-->\r\n            <!--                <div class=\"col-md-6\">-->\r\n            <!--                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.user_Id\" | translate }}-->\r\n            <!--                    </mat-label>-->\r\n            <!--                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">-->\r\n            <!--                        <input matInput type=\"text\" formControlName=\"user_Id\" class=\"form-control\" id=\"firstName\" autocomplete=\"off\" />-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.firstname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\"\r\n                        [ngClass]=\"addUserForm.get('first_name').hasError('pattern') && addUserForm.get('first_name').touched ? 'error-msg': ''\">\r\n                        <input matInput type=\"text\" formControlName=\"first_name\" class=\"form-control first_name\"\r\n                            id=\"firstname\" autocomplete=\"off\" placeholder=\"First Name\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.first_name.errors }\"\r\n                            (keypress)=\"charsOnly('first_name', $event)\" maxlength=\"25\" />\r\n                        <mat-error *ngIf=\"f.first_name?.errors?.required && submitted\">\r\n                            {{ \"manage_users_module.adduser.firstname_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"!f.first_name?.errors?.required && f.first_name?.errors?.pattern\">\r\n                            {{ \"manage_users_module.adduser.firstname_invalid\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error\r\n                            *ngIf=\"f.first_name?.errors?.maxlength && !f.first_name?.errors?.required && !f.first_name?.errors?.pattern\">\r\n                            {{'error_message.err_first_name_range' | translate}}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"lastname\" class=\"matlabel\">{{ \"manage_users_module.adduser.lastname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\"\r\n                        [ngClass]=\"addUserForm.get('last_name').hasError('pattern') && addUserForm.get('last_name').touched ? 'error-msg': ''\">\r\n                        <input matInput formControlName=\"last_name\" type=\"text\" class=\"form-control firstName\"\r\n                            id=\"lastname\" autocomplete=\"off\" placeholder=\"Last Name\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.last_name.errors }\"\r\n                            (keypress)=\"charsOnly('last_name', $event)\" maxlength=\"25\" />\r\n                        <mat-error *ngIf=\"f.last_name?.errors?.required && submitted\">\r\n                            {{ \"manage_users_module.adduser.lastname_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"!f.last_name?.errors?.required && f.last_name?.errors?.pattern\">\r\n                            {{ \"manage_users_module.adduser.lastname_invalid\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error\r\n                            *ngIf=\"f.last_name?.errors?.maxlength && !f.last_name?.errors?.required && !f.last_name?.errors?.pattern\">\r\n                            {{'error_message.err_last_name_range' | translate}}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"email\" class=\"matlabel\">{{ \"manage_users_module.adduser.emailid\" | translate }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                        <input matInput type=\"email\" formControlName=\"email\" [maxlength]=\"320\" id=\"email\"\r\n                            autocomplete=\"off\" placeholder=\"Email\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                        <mat-error *ngIf=\"f.email?.errors?.required\">\r\n                            {{ \"manage_users_module.adduser.email_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.email?.invalid\">\r\n                            {{ \"manage_users_module.adduser.invalid_email\" | translate }}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <mat-label for=\"phonenumber\" class=\"matlabel\">{{ \"manage_users_module.adduser.phoneno\" | translate\r\n                        }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <!--        <ngx-intl-tel-input-->\r\n                    <!--          formControlName=\"phoneNo\"-->\r\n                    <!--          class=\"iti-phone2 form-control\"-->\r\n                    <!--          id=\"phonenumber\"-->\r\n                    <!--          placeholder=\"Phone number\"-->\r\n                    <!--          [ngClass]=\"{ 'is-invalid': submitted && f.phoneNo.errors }\"-->\r\n                    <!--          [selectedCountryISO]=\"CountryISO.India\"-->\r\n                    <!--        ></ngx-intl-tel-input>-->\r\n                    <app-tel-input [formControl]=\"addUserForm?.controls?.mobile\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\"></app-tel-input>\r\n                    <mat-error *ngIf=\"f.mobile?.errors?.required\" class=\"mt-2 required\">\r\n                        {{ \"manage_users_module.adduser.phoneno_required\" | translate }}\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"!f.mobile?.errors?.required && !f.mobile?.valid\" class=\"mt-2 required\">\r\n                        {{ \"manage_users_module.adduser.invalid_phoneno\" | translate }}\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <mat-error *ngIf=\"!isBlank(error)\" class=\"required\">\r\n                {{ \"manage_users_module.adduser.\" + error | translate }}\r\n            </mat-error>\r\n            <mat-error *ngIf=\"\r\n        submitted &&\r\n        isBlank(addUserForm.getRawValue().email) &&\r\n        isBlank(addUserForm.getRawValue().mobile)\r\n      \" class=\"required\">\r\n                {{ \"manage_users_module.edituser.message1\" | translate }}\r\n            </mat-error>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group my-3\">\r\n                        <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.select_role\" | translate }}\r\n                            <label class=\"required\"> *</label>\r\n                        </mat-label>\r\n                        <div *ngFor=\"let role of roles\" class=\"d-flex flex-column mt-1\">\r\n                            <mat-checkbox class=\"my-1\" [value]=\"role.value\" (change)=\"onRoleChange($event)\">\r\n                                <span> {{ role.name }}</span>\r\n                            </mat-checkbox>\r\n                        </div>\r\n                        <ng-container *ngIf=\"submitted && f.roles.errors\">\r\n                            <mat-error *ngIf=\"f.roles.errors.required\" class=\"my-1\">\r\n                                {{ \"manage_users_module.adduser.role_required\" | translate }}\r\n                            </mat-error>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"my-3\" *ngIf=\"showAssignGroup()\">\r\n                        <label class=\"matlabel\">{{ \"manage_users_module.adduser.groups\" | translate }} </label>\r\n                        <div *ngFor=\"let group of userGroups; let i = index\" class=\"d-flex align-items-center my-2\">\r\n                            <span class=\"text-truncate lh-base\">{{ i + 1 }}. {{ group.name }} </span>\r\n                            <mat-icon fontSet=\"material-icons-outlined\" class=\"ms-2 cursor-pointer\"\r\n                                (click)=\"saveChanges(group.groupId)\">\r\n                                delete</mat-icon>\r\n                        </div>\r\n                        <!--      <div *ngIf=\"submitted && isBlank(groups)\">-->\r\n                        <!--        <mat-error class=\"required-text my-1\">-->\r\n                        <!--          {{ \"manage_users_module.adduser.group_required\" | translate }}-->\r\n                        <!--        </mat-error>-->\r\n                        <!--      </div>-->\r\n                    </div>\r\n                    <button mat-flat-button (click)=\"addGroup()\" color=\"primary\" *ngIf=\"showAssignGroup()\">\r\n                        {{ \"manage_users_module.adduser.groupbutton\" | translate }}\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"mt-4\">\r\n                <label class=\"required\">\r\n                    {{ \"manage_users_module.adduser.required\" | translate }}</label><br />\r\n                <label class=\"required\">\r\n                    {{ \"manage_users_module.adduser.message\" | translate }}</label>\r\n            </div>\r\n        </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions *ngIf=\"!loader\" class=\"mx-4\">\r\n        <button mat-flat-button (click)=\"close()\" class=\"fill-btn\" color=\"warn\">\r\n            {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\r\n        </button>\r\n        <button mat-flat-button type=\"submit\" class=\"fill-btn\" (click)=\"onSubmit()\" color=\"primary\">\r\n            {{ \"manage_users_module.adduser.savebutton\" | translate }}\r\n        </button>\r\n    </mat-dialog-actions>\r\n</div>","import { AddgroupComponent } from \"../addgroup/addgroup.component\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  FormArray,\r\n  FormBuilder, FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { CountryISO } from \"ngx-intl-tel-input\";\r\nimport {\r\n  ManageUsersSelectors,\r\n  ManageUsersStoreActions,\r\n  ManageUsersStoreState,\r\n} from \"../store\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { _validatePhoneNumberInput } from \"../../../validators/phone-no.validator\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\nimport {ManageUsersService} from \"../services/manage-users.service\";\r\n@Component({\r\n  selector: \"app-adduser\",\r\n  templateUrl: \"./adduser.component.html\",\r\n  styleUrls: [\"./adduser.component.scss\"],\r\n})\r\nexport class AdduserComponent implements OnInit {\r\n  \r\n  addUserForm: FormGroup;\r\n  matcher = new ErrorStateMatcher();\r\n  groups: Group[] = [];\r\n  selectedRole = [];\r\n  facilityId: string;\r\n  serviceProviderId: string;\r\n  userGroups = [];\r\n   \r\n  // roles = [\r\n  //   { name: \"Admin\", value: \"SC\"},\r\n  //   { name: \"General clinician\", value: \"GC1\" },\r\n  //   { name: \"Physician\", value: \"PHY\" },\r\n    \r\n  // ];\r\n  roles = [\r\n    { name: \"Admin\", value: \"admin\"},\r\n    { name: \"Prescribing Physician\", value: \"prescriber\" },\r\n    { name: \"Interpreting Physician\", value: \"interpreter\" },\r\n    { name: \"Nurse/ clinician\", value: \"clinician\" },\r\n    { name: \"ECG Technician\", value: \"ecg_technician\" }\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<MatDialogRef<any>>,\r\n    private autheticationService: AuthenticationService,\r\n    private store$: Store<ManageUsersStoreState.ManageUsersState>,\r\n    private manageUserService: ManageUsersService\r\n  ) { }\r\n  submitted = false;\r\n  CountryISO = CountryISO;\r\n  error: string;\r\n  valuesUpdated = false;\r\n  loaderSubscription;\r\n  loader = false;\r\n  public config = {\r\n    id: \"0\",\r\n    title: \"Are you sure? \",\r\n    text: \"manage_users_module.savechanges.text1\",\r\n  };\r\n  ngOnInit() {\r\n    this.facilityId = this.autheticationService.getCfId();\r\n    if (this.autheticationService.getRoles().indexOf('CFA') > -1) {\r\n      this.roles.unshift({ name: \"Admin\", value: \"CFAC\" });\r\n    }\r\n    this.serviceProviderId = this.autheticationService.getSPId();\r\n    this.userGroups = [];\r\n    this.manageUserService.getGroups(this.facilityId).subscribe((res) => {\r\n      // if (res.status === \"OK\") {\r\n        this.groups = res.data;\r\n      // }\r\n    });\r\n    this.addUserForm = this.formBuilder.group(\r\n      {\r\n        // user_Id : [\"\"],\r\n        first_name: [\r\n          \"\",\r\n          [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n        ],\r\n        last_name: [\r\n          \"\",\r\n          [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n        ],\r\n        email: [\r\n          \"\",\r\n          [ Validators.email,],\r\n        ],\r\n        mobile: [\"\", [_validatePhoneNumberInput.bind(this)]],\r\n        roles: this.formBuilder.array([], Validators.required),\r\n      },\r\n      { validator: atLeastOne(Validators.required, [\"email\", \"mobile\"]) }\r\n    );\r\n    // this.addUserForm.valueChanges.pipe(debounceTime(200)).subscribe((value) => {\r\n    //   console.log(\"values updated\");\r\n    //   this.valuesUpdated = true;\r\n    // });\r\n    // setTimeout(() => {\r\n    //   this.valuesUpdated = false;\r\n    // }, 500);\r\n    this.loaderSubscription = this.store$\r\n      .select(ManageUsersSelectors.getLoaderStatus)\r\n      .subscribe((loaded) => {\r\n        if (loaded) {\r\n          this.loader = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  addGroup() {\r\n    const addGroup = this.dialog.open(AddgroupComponent, {\r\n      width: \"90vw\",\r\n      maxWidth: \"600px\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: { data: { selectedGroups: this.userGroups } },\r\n      disableClose: true,\r\n    });\r\n    addGroup.afterClosed().subscribe((data) => {\r\n      if (data?.data) {\r\n        let newGroups = data?.data;\r\n        newGroups.forEach((groupId) => {\r\n          if (this.groups.find((group) => group.groupId === groupId)) {\r\n            this.userGroups.push(\r\n                this.groups.find((group) => group.groupId === groupId)\r\n            );\r\n            this.userGroups = this.userGroups.filter(group => group.Ancestors.indexOf(groupId) == -1);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  get f() {\r\n    return this.addUserForm.controls;\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addUserForm.value);\r\n    console.log(this.addUserForm)\r\n    this.submitted = true;\r\n    if (this.addUserForm.invalid) {\r\n      this.addUserForm.markAllAsTouched();\r\n      return;\r\n    } else {\r\n      let groupIds = [];\r\n      if (this.showAssignGroup()) {\r\n        this.userGroups.forEach((group) => {\r\n          groupIds.push(group.groupId);\r\n        });\r\n      }\r\n      let formData = this.addUserForm.value;\r\n      let userRoles = [];\r\n      let userRoles1 =  {\r\n        \"admin\": 0,\r\n        \"prescriber\": 0,\r\n        \"interpreter\": 0,\r\n        \"ecg_technician\": 0,\r\n        \"clinician\": 0\r\n    }\r\n  \r\n      this.roles.forEach(role => {\r\n        if(formData?.roles.indexOf(role.value) > -1) {\r\n          userRoles.push(role.value)\r\n        }\r\n      });\r\n      let i;\r\n      for (i = 0; i < userRoles.length; i++) {\r\n        userRoles1[userRoles[i]] = 1\r\n      }\r\n \r\n      formData.roles = userRoles1;\r\n\r\n      formData.first_name = formData?.first_name ? formData?.first_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      formData.last_name = formData?.last_name ? formData?.last_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      if (!this.isBlank(formData.mobile)) {\r\n        const parsedValue = parsePhoneNumberFromString(formData.mobile);\r\n        formData.mobile = parsedValue.number.toString();\r\n        // formData.mobile = formData.mobile.e164Number;\r\n      }\r\n      console.log(\"form\"+formData);\r\n      let userData = {\r\n        // serviceProviderId: this.serviceProviderId,\r\n        // facilityId: this.facilityId,\r\n        facility_id: \"CFPI8P\",\r\n        country_code: \"+91\",\r\n        unit_system: \"metric\",\r\n        time_zone: \"IND\",\r\n        enable: true,\r\n        group: groupIds,\r\n        // isActive: true,\r\n      };\r\n      let addUserData = { ...formData, ...userData };\r\n      console.log(\"addUserData in popup\", addUserData);\r\n      // this.userService.addUser(addUserData)\r\n      //     .subscribe(response => {\r\n      //         console.log(response);\r\n      //     });\r\n      this.loader = true;\r\n      this.store$.dispatch(\r\n        new ManageUsersStoreActions.AddUserRequestAction({ data: addUserData })\r\n      );\r\n      this.store$\r\n        .select(ManageUsersSelectors.getUsersError)\r\n        .subscribe((data) => {\r\n          if(data) {\r\n            if (data === 'EMAIL_OR_PHONE_ALREADY_EXIST') {\r\n              this.error = data;\r\n            } else {\r\n              this.error = 'err_generic_message';\r\n            }\r\n            if (!this.isBlank(this.error)) {\r\n              return;\r\n            }\r\n          }\r\n        });\r\n      this.store$\r\n        .select(ManageUsersSelectors.getUsersCode)\r\n        .subscribe((code) => {\r\n          this.dialogRef.close(true);\r\n          if (code === 201) {\r\n            this.dialogRef.close(true);\r\n          }\r\n        });\r\n    }\r\n  }\r\n  remove(groupId) {\r\n    this.userGroups = this.userGroups.filter((group) => group.groupId !== groupId);\r\n  }\r\n  saveChanges(groupId) {\r\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"645px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vw\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.savechanges.title\",\r\n          text: \"manage_users_module.savechanges.text1\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    SaveChanges.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.userGroups = this.userGroups.filter((group) => group.groupId !== groupId);\r\n      }\r\n    });\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  close() {\r\n    if (this.valuesUpdated) {\r\n      const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        width: \"auto\",\r\n        height: \"auto\",\r\n        maxHeight: \"80vh\",\r\n        data: {\r\n          body: {\r\n            title: \"manage_users_module.cancel_title\",\r\n            text: \"manage_users_module.cancel_text\",\r\n          },\r\n        },\r\n        disableClose: true,\r\n      });\r\n      confirm.afterClosed().subscribe((data) => {\r\n        if (data) {\r\n          this.dialogRef.close();\r\n        }\r\n      });\r\n    } else {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n  charsOnly(control: string, event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  numericsOnly(control: string, event: KeyboardEvent) {\r\n    let numericsOnlyPattern = /^[0-9]$/;\r\n    let key = event.key;\r\n    if (numericsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  showAssignGroup() {\r\n    return this.addUserForm.value.roles.indexOf('prescriber') > -1 || this.addUserForm.value.roles.indexOf('interpreter') > -1 || this.addUserForm.value.roles.indexOf('ecg_technician') > -1 || this.addUserForm.value.roles.indexOf('clinician') > -1;\r\n  }\r\n  onRoleChange(e) {\r\n    const rolesArray: FormArray = this.addUserForm.get('roles') as FormArray;\r\n    if (e?.checked) {\r\n      rolesArray.push(new FormControl(e.source.value));\r\n    } else {\r\n      let i: number = 0;\r\n      rolesArray.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.source.value) {\r\n          rolesArray.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div id=\"editUser\">\r\n    <mat-card class=\"dialog-header\">\r\n        <h1 mat-dialog-title>\r\n            {{ \"manage_users_module.edituser.edit_user\" | translate }}\r\n        </h1>\r\n        <!--<button mat-icon-button mat-dialog-close>\r\n    <mat-icon>close</mat-icon>\r\n  </button>-->\r\n    </mat-card>\r\n    <mat-dialog-content class=\"mat-dialog-popup\">\r\n        <div class=\"loading-indicator\" *ngIf=\"loader\">\r\n            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n        </div>\r\n        <form [formGroup]=\"editUserForm\" class=\"dialog-form\" *ngIf=\"!loader\" autocomplete=\"off\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.user_Id\" | translate }}\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">\r\n                        <input matInput type=\"text\" formControlName=\"user_Id\" class=\"form-control\" id=\"userId\" autocomplete=\"off\" [(ngModel)]=\"usrData.id\" />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.firstname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">\r\n                        <input matInput type=\"text\" formControlName=\"first_name\" maxlength=\"30\" class=\"form-control firstName\" id=\"firstname\" autocomplete=\"off\" placeholder=\"First Name\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" [(ngModel)]=\"usrData.first_name\"\r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"lastname\" class=\"matlabel\">{{ \"manage_users_module.adduser.lastname\" | translate }}\r\n                        <span class=\"required-star\">* </span>\r\n                    </mat-label>\r\n                    <mat-form-field class=\"formfield-control\" appearance=\"fill\">\r\n                        <input matInput formControlName=\"last_name\" maxlength=\"30\" type=\"text\" class=\"form-control firstName\" id=\"lastname\" placeholder=\"Last Name\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" [(ngModel)]=\"usrData.last_name\" />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"email\" class=\"matlabel\">{{ \"manage_users_module.adduser.emailid\" | translate }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                        <input matInput type=\"email\" formControlName=\"email\" [maxlength]=\"320\" id=\"email\" placeholder=\"Email\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" [(ngModel)]=\"usrData.email\" />\r\n                        <mat-error *ngIf=\"editUserForm.get('email').hasError('required')\">\r\n                            {{ \"manage_users_module.adduser.email_required\" | translate }}\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"editUserForm.get('email').hasError('email')\">\r\n                            {{ \"manage_users_module.adduser.invalid_email\" | translate }}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-label for=\"phonenumber\" class=\"matlabel\">{{ \"manage_users_module.adduser.phoneno\" | translate }}\r\n                        <label class=\"required\"> **</label>\r\n                    </mat-label>\r\n                    <!--        <ngx-intl-tel-input-->\r\n                    <!--          formControlName=\"phoneNo\"-->\r\n                    <!--          class=\"iti-phone2 form-control\"-->\r\n                    <!--          id=\"phonenumber\"-->\r\n                    <!--          placeholder=\"Phone number\"-->\r\n                    <!--          [ngClass]=\"{ 'is-invalid': submitted && f.phoneNo.errors }\"-->\r\n                    <!--          [selectedCountryISO]=\"CountryISO.India\"-->\r\n                    <!--          [(ngModel)]=\"phoneNum\"-->\r\n                    <!--        ></ngx-intl-tel-input>-->\r\n                    <app-tel-input formControlName=\"phoneNo\" [ngClass]=\"{ 'is-invalid': submitted && f.phoneNo.errors }\" [(ngModel)]=\"phoneNum\" [disabled]=\"!editAccess\" [class.disabled]=\"!editAccess\"></app-tel-input>\r\n                    <div *ngIf=\"f.phoneNo.errors\" class=\"required-text mt-1\">\r\n                        <mat-error *ngIf=\"!f.phoneNo.errors.required && !f.phoneNo.valid\">\r\n                            {{ \"manage_users_module.adduser.invalid_phoneno\" | translate }}\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <mat-error *ngIf=\"!isBlank(error)\" class=\"required\">\r\n                {{ \"manage_users_module.adduser.\" + error | translate }}\r\n            </mat-error>\r\n            <mat-error *ngIf=\"\r\n        submitted &&\r\n        isBlank(editUserForm.value.email) &&\r\n        isBlank(editUserForm.value.phoneNo) && editAccess\r\n      \" class=\"required\">\r\n                {{ \"manage_users_module.edituser.message1\" | translate }}\r\n            </mat-error>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group my-3\">\r\n                        <mat-label class=\"matlabel\">{{ \"manage_users_module.adduser.select_role\" | translate }}\r\n                            <label class=\"required\"> *</label>\r\n                        </mat-label>\r\n                        <div *ngFor=\"let role of roles\" class=\"d-flex flex-column mt-1\" [class.disabled]=\"!editAccess\">\r\n                            <div *ngFor=\"let usr of userRole\">\r\n                            <!-- <mat-checkbox class=\"my-1\" [value]=\"role.value\" (change)=\"onRoleChange($event)\" [checked]=\"editUserForm?.value?.roles?.indexOf(role.value) !== -1\"> -->\r\n                                <mat-checkbox class=\"my-1\" [value]=\"role.value\" (change)=\"onRoleChange($event)\" [checked]=\"usr[role.value] == 1\">\r\n                                <span> {{ role.name }}</span>\r\n                            </mat-checkbox>\r\n                            </div>\r\n                        </div>\r\n                        <ng-container *ngIf=\"submitted && f.roles.errors\" class=\"required-text\">\r\n                            <mat-error *ngIf=\"f.roles.errors.required\">\r\n                                {{ \"manage_users_module.adduser.role_required\" | translate }}\r\n                            </mat-error>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"my-4\" *ngIf=\"showAssignGroup()\" id=\"add-group\">\r\n                        <label class=\"matlabel\">{{ \"manage_users_module.adduser.assign_group\" | translate }} </label\r\n          >\r\n          <div\r\n                  *ngFor=\"let group of userGroups; let i = index\"\r\n                  class=\"d-flex align-items-center my-2\"\r\n          >\r\n            <span class=\"text-truncate lh-base\">{{ i + 1 }}. {{ group.name }} </span>\r\n            <mat-icon\r\n                    fontSet=\"material-icons-outlined\"\r\n                    class=\"ms-2 cursor-pointer\"\r\n                    (click)=\"saveChanges(group.groupId)\"\r\n            >\r\n              delete</mat-icon\r\n            >\r\n          </div>\r\n          <!--      <div *ngIf=\"submitted && isBlank(userGroups)\">-->\r\n          <!--        <mat-error class=\"required-text my-1\">-->\r\n          <!--          {{ \"manage_users_module.adduser.group_required\" | translate }}-->\r\n          <!--        </mat-error>-->\r\n          <!--      </div>-->\r\n        </div>\r\n        <button mat-flat-button (click)=\"addGroup()\" color=\"primary\" *ngIf=\"showAssignGroup()\">\r\n          {{ \"manage_users_module.adduser.groupbutton\" | translate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-4\">\r\n      <label class=\"required\">\r\n        {{ \"manage_users_module.edituser.required\" | translate }} </label\r\n      ><br />\r\n      <label class=\"required\">\r\n        {{ \"manage_users_module.edituser.message1\" | translate }}</label\r\n      ><br />\r\n    </div>\r\n            </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions *ngIf=\"!loader\" class=\"mx-4\">\r\n  <button\r\n    mat-flat-button\r\n    (click)=\"close()\"\r\n    class=\"fill-btn\"\r\n    color=\"warn\"\r\n  >\r\n    {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    type=\"submit\"\r\n    class=\"fill-btn\"\r\n    (click)=\"onSubmit()\"\r\n    color=\"primary\"\r\n  >\r\n    {{ \"manage_users_module.adduser.savebutton\" | translate }}\r\n  </button>\r\n</mat-dialog-actions>\r\n</div>\r\n","import {Component, Inject, InjectionToken, Input, OnInit} from \"@angular/core\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { AddgroupComponent } from \"../addgroup/addgroup.component\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport {\r\n  FormArray,\r\n  FormBuilder, FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { CountryISO } from \"ngx-intl-tel-input\";\r\nimport { ManageUsersService } from \"../services/manage-users.service\";\r\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\n\r\n@Component({\r\n  selector: \"app-edituser\",\r\n  templateUrl: \"./edituser.component.html\",\r\n  styleUrls: [\"./edituser.component.scss\"],\r\n})\r\n\r\nexport class EdituserComponent implements OnInit {\r\n  editUserForm = new FormGroup({});\r\n  groups: Group[] = [];\r\n   \r\n   \r\n  userGroups: Group[] = [];\r\n  cfId: string;\r\n  usrData: any;\r\n  userId;\r\n  usrDataCopy: any;\r\n  selGroups: Group[];\r\n  error: string;\r\n  editAccess;\r\n  constructor(\r\n    private manageUserService: ManageUsersService,\r\n    private autheticationService: AuthenticationService,\r\n    private dialog: MatDialog,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<MatDialogRef<EdituserComponent>>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n  submitted = false;\r\n  CountryISO = CountryISO;\r\n  phoneNum;\r\n  loader = true;\r\n  valuesUpdated = false;\r\n  userRole;\r\n  // roles = [\r\n  //   { name: \"Supervisory clinician\", value: \"SC\" },\r\n  //   { name: \"General clinician\", value: \"GC\" },\r\n  //   { name: \"Physician\", value: \"PHY\" },\r\n  // ];\r\n  roles = [\r\n    { name: \"Admin\", value: \"admin\"},\r\n    { name: \"Prescribing Physician\", value: \"prescriber\" },\r\n    { name: \"Interpreting Physician\", value: \"interpreter\" },\r\n    { name: \"Nurse/ clinician\", value: \"clinician\" },\r\n    { name: \"ECG Technician\", value: \"ecg_technician\" }\r\n  ];\r\n\r\n\r\n  ngOnInit() {\r\n   \r\n    this.groups = [];\r\n    this.userId = this.data.userData;\r\n    if (this.autheticationService.getRoles().indexOf('CFA') > -1) {\r\n      this.roles.unshift({ name: \"Admin\", value: \"CFAC\" });\r\n    }\r\n    this.editAccess = this.data.editAccess;\r\n    this.editUserForm = this.formBuilder.group(\r\n        {\r\n          user_Id : [{value: \"\", disabled: true}],\r\n          first_name: [{value: \"\", disabled: true}, [Validators.required]],\r\n          last_name: [{value: \"\", disabled: true}, [Validators.required]],\r\n          email: [\r\n            {value: \"\", disabled: !this.editAccess},\r\n            [Validators.email],\r\n          ],\r\n          phoneNo: [\"\", [_validatePhoneNumberInput.bind(this)]],\r\n          roles: this.formBuilder.array([], Validators.required),\r\n        },\r\n        { validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\r\n    );\r\n    this.manageUserService.getUser(this.userId).subscribe((response: any) => {\r\n      this.usrData = response.data;\r\n      this.loader = false;\r\n      this.phoneNum = this.usrData.mobile;\r\n      this.userRole = this.usrData.roles;\r\n      \r\n      let roles = this.editUserForm?.get('roles') as FormArray;\r\n      for (let i=0; i<this.usrData?.roles?.length; i++) {\r\n        roles.push(new FormControl(this.usrData.roles[i]));\r\n      }\r\n      this.valuesUpdated = false;\r\n      this.manageUserService.getGroups(this.cfId).subscribe((res) => {\r\n        // if (res.status === \"OK\") {\r\n          this.groups = res.data;\r\n          this.usrData.group.forEach((groupId) => {\r\n            if (this.groups.find((grp) => grp.groupId === groupId)) {\r\n              this.userGroups.push(\r\n                  this.groups.find((grp) => grp.groupId === groupId)\r\n              );\r\n            }\r\n          });\r\n          console.log(this.groups);\r\n          this.valuesUpdated = false;\r\n        // }\r\n      });\r\n    });\r\n    this.cfId = this.autheticationService.getCfId();\r\n    // this.editUserForm.valueChanges\r\n    //   .pipe(debounceTime(200))\r\n    //   .subscribe((value) => {\r\n    //     console.log(\"values updated\");\r\n    //     this.valuesUpdated = true;\r\n    //   });\r\n    // this.valuesUpdated = false;\r\n    setTimeout(()=> {\r\n      if(!this.editAccess) {\r\n        const element = document.getElementById('add-group');\r\n        element.scrollIntoView({behavior: 'smooth'});\r\n      }\r\n    }, 500)\r\n  }\r\n  get f() {\r\n    return this.editUserForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.editUserForm.invalid) {\r\n      this.editUserForm.markAllAsTouched();\r\n      console.log(\"invalid\");\r\n      return;\r\n    } else {\r\n      let groupIds = [];\r\n      if(this.showAssignGroup()) {\r\n        this.userGroups.forEach((group) => {\r\n          groupIds.push(group.groupId);\r\n        });\r\n      }\r\n      let formData = this.editUserForm.value;\r\n      console.log(formData);\r\n      this.usrData.group = groupIds;\r\n      let userRoles = [];\r\n    //   let userRoles1 =  {\r\n    //     \"admin\": 0,\r\n    //     \"prescriber\": 0,\r\n    //     \"interpreter\": 0,\r\n    //     \"ecg_technician\": 0,\r\n    //     \"clinician\": 0\r\n    // }\r\n     let userRoles1=this.userRole;\r\n    console.log(userRoles1);\r\n      this.roles.forEach(role => {\r\n        if(formData?.roles.indexOf(role.value) > -1) {\r\n          userRoles.push(role.value)\r\n        }\r\n      })\r\n      let i;\r\n      for (i = 0; i < userRoles.length; i++) {\r\n        this.userRole[0][userRoles[i]] = 1\r\n      }\r\n      console.log(userRoles1);\r\n      this.usrData.roles = this.userRole[0];\r\n      if (!this.isBlank(this.phoneNum)) {\r\n        const parsedValue = parsePhoneNumberFromString(formData.phoneNo);\r\n        this.usrData.mobile = parsedValue.number.toString();\r\n        // this.usrData.phoneNo = this.phoneNum.e164Number;\r\n      } else {\r\n        this.usrData.phoneNo = \"\";\r\n      }\r\n      console.log(this.usrData);\r\n      this.usrData.first_name = this.usrData?.first_name ? this.usrData?.first_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      this.usrData.last_name = this.usrData?.last_name ? this.usrData?.last_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))): '';\r\n      if(this.editAccess) {\r\n        this.manageUserService.editUser(this.usrData).subscribe(\r\n            (response) => {\r\n              console.log(response);\r\n              // if (response.status === \"OK\") {\r\n                this.dialogRef.close(true);\r\n              // }\r\n            },\r\n            (error) => {\r\n              if(error === 'EMAIL_OR_PHONE_ALREADY_EXIST') {\r\n                this.error = error;\r\n              } else {\r\n                this.error = 'err_generic_message';\r\n              }\r\n              if (!this.isBlank(this.error)) {\r\n                return;\r\n              }\r\n            }\r\n        );\r\n      } else {\r\n        this.manageUserService.editGroups(this.usrData).subscribe(\r\n            (response) => {\r\n              console.log(response);\r\n              // if (response.status === \"OK\") {\r\n                this.dialogRef.close(true);\r\n              // }\r\n            },\r\n            (error) => {\r\n              if(error === 'EMAIL_OR_PHONE_ALREADY_EXIST') {\r\n                this.error = error;\r\n              } else {\r\n                this.error = 'err_generic_message';\r\n              }\r\n              if (!this.isBlank(this.error)) {\r\n                return;\r\n              }\r\n            }\r\n        );\r\n      }\r\n      // this.store$.dispatch(new ManageUsersStoreActions.EditUserRequestAction({data: this.usrData}));\r\n      // this.store$.select(ManageUsersSelectors.getUsersError)\r\n      //     .subscribe(data => {\r\n      //       this.error = data;\r\n      //       console.log(this.error);\r\n      //       if (!this.isBlank(this.error)) {\r\n      //         return;\r\n      //       }\r\n      //     });\r\n      // this.store$.select(ManageUsersSelectors.getUsersStatus)\r\n      //     .subscribe(status => {\r\n      //       if (status === 'OK') {\r\n      //         this.dialogRef.close();\r\n      //       }\r\n      //     });\r\n    }\r\n  }\r\n\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n\r\n  addGroup() {\r\n    console.log(\"iam in\");\r\n    this.valuesUpdated = true;\r\n    const AddGroup = this.dialog.open(AddgroupComponent, {\r\n      width: \"90vw\",\r\n      maxWidth: \"600px\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: { data: { selectedGroups: this.userGroups } },\r\n      disableClose: true,\r\n    });\r\n    AddGroup.afterClosed().subscribe((data) => {\r\n      if (data?.data) {\r\n        let newGroups = data?.data;\r\n        newGroups.forEach((groupId) => {\r\n          if (this.groups.find((group) => group.groupId === groupId)) {\r\n            this.userGroups.push(\r\n                this.groups.find((group) => group.groupId === groupId)\r\n            );\r\n            this.userGroups = this.userGroups.filter(group => group.ancestor.indexOf(groupId) == -1);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  saveChanges(groupId) {\r\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"645px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vw\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.savechanges.delete_title\",\r\n          text: \"manage_users_module.savechanges.text1\",\r\n        },\r\n      },\r\n      \r\n      disableClose: true,\r\n    });\r\n    SaveChanges.afterClosed().subscribe((data) => {\r\n      console.log(data);\r\n      if (data) {\r\n        this.valuesUpdated = true;\r\n        this.userGroups = this.userGroups.filter(\r\n          (group) => group.groupId !== groupId\r\n        );\r\n      }\r\n    });\r\n  }\r\n  saveRole(e) {\r\n    const SaveChanges1 = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"645px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vw\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.savechanges.change_role_title\",\r\n          text: \"manage_users_module.savechanges.text2\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    SaveChanges1.afterClosed().subscribe((data) => {\r\n      if (!data) {\r\n        let roles = this.editUserForm?.get('roles') as FormArray;\r\n        while (roles.length !== 0) {\r\n          roles.removeAt(0)\r\n        }\r\n        this.editUserForm.patchValue({'role': []});\r\n        for (let i=0; i<this.userRole.length; i++) {\r\n          roles.push(new FormControl(this.usrData.roles[i]));\r\n        }\r\n      } else {\r\n        this.onRoleChange(e);\r\n      }\r\n      console.log(this.editUserForm);\r\n    });\r\n  }\r\n  close() {\r\n    if (this.valuesUpdated) {\r\n      const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        width: \"auto\",\r\n        height: \"auto\",\r\n        maxHeight: \"80vh\",\r\n        data: {\r\n          body: {\r\n            title: \"manage_users_module.cancel_title\",\r\n            text: \"manage_users_module.cancel_text\",\r\n          },\r\n        },\r\n        disableClose: true,\r\n      });\r\n      confirm.afterClosed().subscribe((data) => {\r\n        if (data) {\r\n          this.dialogRef.close();\r\n        }\r\n      });\r\n    } else {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n  // onRoleChange(e) {\r\n  //   const rolesArray: FormArray = this.editUserForm.get('roles') as FormArray;\r\n   \r\n  //   if (e?.checked) {\r\n  //     rolesArray.push(new FormControl(e.source.value));\r\n     \r\n  //     } \r\n  //     else {\r\n  //     console.log(\"keri\")\r\n  //     let i: number = 0;\r\n  //     rolesArray.controls.forEach((item: FormControl) => {\r\n  //       console.log(item);\r\n  //       if (item.value == e.source.value) {\r\n  //         rolesArray.removeAt(i);\r\n  //         console.log(rolesArray);\r\n  //         this.userRole.removeAt(i);\r\n  //         console.log(this.userRole(i))\r\n  //         return;\r\n  //       }\r\n        \r\n  //       i++;\r\n  //     });\r\n  //   }\r\n  // }\r\nonRoleChange(e) {\r\n    const rolesArray: FormArray = this.editUserForm.get('roles') as FormArray;\r\n   \r\n    if (e?.checked) {\r\n      rolesArray.value[0][e.source.value]=1;\r\n      } \r\n      else {\r\n        rolesArray.value[0][e.source.value]=0;\r\n       }\r\n  }\r\n\r\n  \r\n  showAssignGroup(){\r\n    return this.userRole[0][\"admin\"]==1 || this.userRole[0][\"prescriber\"]==1 || this.userRole[0][\"clinician\"]==1|| this.userRole[0][\"ecg_technician\"]==1;\r\n    // return this.editUserForm.value.roles.indexOf('GC') > -1 || this.editUserForm.value.roles.indexOf('PHY') > -1;\r\n  }\r\n}\r\n","<ls-page-header type=\"manage_users\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group my-2\" *ngIf=\"userEditAccess\">\r\n                <button mat-flat-button color=\"primary\" type=\"button\" class=\"mx-2\" (click)=\"renameRoles()\" [disabled]=\"true\">\r\n                    {{ \"manage_users_module.rename_roles_button\" | translate }}\r\n                </button>\r\n                <button mat-flat-button color=\"accent\" type=\"button\" class=\"mx-2\" (click)=\"addUser()\">\r\n                    {{ \"manage_users_module.add_user_button\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\" *ngIf=\"userEditAccess\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <button mat-menu-item (click)=\"renameRoles()\" [disabled]=\"true\">\r\n                        {{ \"manage_users_module.rename_roles_button\" | translate }}\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"addUser()\">\r\n                        {{ \"manage_users_module.add_user_button\" | translate }}\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"table-container table-responsive-md px-3\">\r\n\r\n    <div class=\"table-scroll comman-table-users without-tab-table head-border\">\r\n        <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"usersList$ | async\" (sortChange)=\"sort($event)\" (page)=\"onPage($event)\">\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row\">\r\n                    <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">\r\n                            <mat-label>{{ \"manage_users_module.search\" | translate }}</mat-label>\r\n                            <input [(ngModel)]=\"searchText\" matInput [placeholder]=\"'manage_users_module.search' | translate\" type=\"search\" (keyup)=\"search()\" id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchText\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template lsWidgetName=\"enabled\" let-user>\r\n                <span class=\"d-flex align-items-center\">\r\n                    <mat-slide-toggle [checked]=\"user?.enable\" (change)=\"confirmEnableDisable(user, $event)\"\r\n                        [(ngModel)]=\"user.enable\" [disabled]=\"!userEditAccess\">\r\n                    </mat-slide-toggle>\r\n                </span>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"userId\" let-user>\r\n                {{ user?.id }}\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"first_name\" let-user>\r\n                <div class=\"d-flex\"><span   [matTooltip]=\"user?.first_name\" matTooltipPosition=\"below\" class=\"text-truncate d-block pe-1\" [matTooltipDisabled]=\"user?.first_name?.length < 15 \">{{ user?.first_name }}</span>\r\n                <span [matTooltip]=\"user.last_name\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"user?.last_name?.length < 15 \">{{ user?.last_name }}</span></div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"email\" let-user>\r\n                {{ user?.email || \"-\"}}\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"phoneNo\"  let-user>\r\n                {{ user?.mobile || \"-\"}}\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"roles\" let-user>\r\n                <span *ngFor=\"let role of user?.roles\">\r\n                <label *ngIf=\"role['admin'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(244, 237, 211, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">Admin</span></label>\r\n                <label *ngIf=\"role['prescriber'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(160, 207, 180, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">prescriber</span></label>\r\n                <label *ngIf=\"role['interpreter'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(212, 228, 244, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">interpreter</span></label>\r\n                <label *ngIf=\"role['ecg_technician'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(225, 202, 255, 1) !important\"><span class=\"roleslabelscontent\">\r\n                    ecg technician</span></label>\r\n                <label *ngIf=\"role['clinician'] === 1\" class=\"roleslabels me-2\" style=\"background: rgba(237, 218, 218, 1) !important\"><span\r\n                        class=\"roleslabelscontent\">nurse/Clinician</span></label>       \r\n                <!-- <label *ngIf=\"role!== 'GC' && role !== 'SC' && role !== 'PHY' && role !== 'CFAC'\" class=\"roleslabels me-2\" style=\"background: rgba(222, 210, 78, 0.56) !important\">\r\n                    <span class=\"roleslabelscontent\">{{ role}}</span></label> -->\r\n                </span>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"actions_col\" let-user>\r\n                <span *ngIf=\"userEditAccess\">\r\n                    <button mat-mini-fab class=\"me-3 btn-boxed btn-no-shadow\" color=\"primary\"\r\n                        (click)=\"editUser(user.id)\">\r\n                        <mat-icon>edit</mat-icon>\r\n                    </button>\r\n                    <button mat-flat-button color=\"primary\" class=\"me-2 reset-btn\" [disabled]=\"!user.isActive\"\r\n                        (click)=\"confirmResetPassword(user.id)\">\r\n                        <mat-icon>refresh</mat-icon>\r\n                        {{ \"manage_users_module.reset_password\" | translate }}\r\n                    </button>\r\n                </span>\r\n                <span *ngIf=\"!userEditAccess\">\r\n                    <button mat-flat-button color=\"primary\" class=\"me-2\" [disabled]=\"!user.isActive || (user?.roles?.indexOf('SC')>-1)\"\r\n                        (click)=\"editUser(user.id)\">\r\n                        {{ \"manage_users_module.manage_group\" | translate }}\r\n                    </button>\r\n                </span>\r\n            </ng-template>\r\n        </ls-table>\r\n    </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { EdituserComponent } from \"src/app/settings/manage-users/edituser/edituser.component\";\r\nimport { AdduserComponent } from \"src/app/settings/manage-users/adduser/adduser.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  CFUser,\r\n  QueryParams,\r\n} from \"../../../interfaces/manage-users.interface\";\r\nimport {\r\n  ManageUsersSelectors,\r\n  ManageUsersStoreState,\r\n  ManageUsersStoreActions,\r\n} from \"../store\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { ManageUsersService } from \"../services/manage-users.service\";\r\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { RenameRolesComponent } from \"../rename-roles/rename-roles.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-manage-users-cfa\",\r\n  templateUrl: \"./manage-users-cfa.component.html\",\r\n  styleUrls: [\"./manage-users-cfa.component.scss\"],\r\n})\r\nexport class ManageUsersCFAComponent implements OnInit, OnDestroy {\r\n  userEditAccess = false;\r\n  config: LSTableConfig = {\r\n    id: \"manage_users_module.table\",\r\n    rowSelectEnabled: false,\r\n    // actions: {\r\n    //   show: true,\r\n    //   class: [\"d-flex\", \"align-items-center\", \"justify-content-start\"],\r\n    //   headerLabel: \"Actions\",\r\n    //   header: {\r\n    //     style: \"width: 250px\",\r\n    //   },\r\n    // },\r\n    page: {\r\n      pageIndex: 0,\r\n      pageSize: 10,\r\n    },\r\n    paginator: {\r\n      hide: false,\r\n      offline: false,\r\n    },\r\n    sort: {\r\n      active: null,\r\n      direction: null,\r\n    },\r\n    translate: true,\r\n    translateKey: \"manage_users_module.table\",\r\n    isActive: (user) => {\r\n      return user.isActive;\r\n    },\r\n  };\r\n  columns: LSColumn[] = [\r\n    {\r\n      id: \"enabled\",\r\n      label: \"\",\r\n      sortable: false,\r\n    },\r\n    {\r\n      id: \"id\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"]\r\n    },\r\n    {\r\n      id: \"first_name\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"font-size-16\"],\r\n      style: \"max-width: 300px; width: 300px;\",\r\n    },\r\n    {\r\n      id: \"email\",\r\n      sortable: true,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-left\",\"text-truncate\"],\r\n      style: \"max-width: 220px; width: 220px;\",\r\n    },\r\n    {\r\n      id: \"phoneNo\",\r\n      sortable: false,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-left\"]\r\n    },\r\n    {\r\n      id: \"roles\",\r\n      sortable: false,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-left\"],\r\n      style: \"min-width: 150px\",\r\n    },\r\n    {\r\n      id: \"actions_col\",\r\n      sortable: false,\r\n      headerClass: [\"align-left\"],\r\n      cellClass: [\"text-start\"],\r\n      style: \"width: 250px\",\r\n    }\r\n  ];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private store$: Store<ManageUsersStoreState.ManageUsersState>,\r\n    private autheticationService: AuthenticationService,\r\n    private usersService: ManageUsersService,\r\n    private snackbar: SnackbarService\r\n  ) { }\r\n\r\n  usersList$: Observable<CFUser[]>;\r\n  cfId: string;\r\n  role: string;\r\n  roles: string[];\r\n  loader = true;\r\n  searchText = \"\";\r\n  adminUsersList: CFUser[];\r\n  usersCount$;\r\n  loaderSubscription;\r\n  ngOnInit() {\r\n    this.cfId = this.autheticationService.getCfId();\r\n    this.roles = this.autheticationService.getRoles() || [];\r\n    if (this.roles?.indexOf(\"CFA\") > -1 || this.roles?.indexOf(\"CFAC\") > -1) {\r\n      this.role = \"CFA\";\r\n      this.userEditAccess = true;\r\n    } else if (this.roles?.indexOf(\"SC\") > -1) {\r\n      this.role = \"SC\";\r\n    } else {\r\n      this.role = this.roles[0];\r\n    }\r\n    this.usersList$ = this.store$.select(ManageUsersSelectors.getUsersList);\r\n    this.getUsersList();\r\n    this.store$.select(ManageUsersSelectors.getTableStatus)\r\n      .subscribe(tableState => {\r\n        this.config = {\r\n          ...this.config,\r\n          tableState\r\n        }\r\n      });\r\n    this.usersCount$ = this.store$.select(ManageUsersSelectors.getUsersCount);\r\n    this.usersCount$.subscribe((num) => {\r\n      this.config.page.length = num;\r\n    });\r\n  }\r\n  addUser() {\r\n    const Adduser = this.dialog.open(AdduserComponent, {\r\n      autoFocus: false,\r\n      maxWidth: \"90vw\",\r\n      width: \"700px\",\r\n      height: \"auto\",\r\n      maxHeight: \"95vh\",\r\n      data: { dialogueData: {} },\r\n      disableClose: true,\r\n    });\r\n    Adduser.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.loader = true;\r\n        this.config.page.pageIndex = 0;\r\n        this.getUsersList();\r\n      }\r\n    });\r\n  }\r\n\r\n  editUser(userId) {\r\n    let Edituser;\r\n    this.usersService.getUser(userId).subscribe((res: any) => {\r\n      if (res.data.isActive || this.userEditAccess) {\r\n        Edituser = this.dialog.open(EdituserComponent, {\r\n          maxWidth: \"90vw\",\r\n          width: \"700px\",\r\n          height: \"auto\",\r\n          maxHeight: \"95vh\",\r\n          data: { userData: userId, editAccess: this.userEditAccess },\r\n          disableClose: true,\r\n        });\r\n        Edituser.afterClosed().subscribe((data) => {\r\n          if (data) {\r\n            this.getUsersList();\r\n          }\r\n        });\r\n      } else {\r\n        this.snackbar.openCustomSnackBar(\"manage_users_module.user_disabled\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  getUsersList() {\r\n    console.log(this.config);\r\n    let url = \"clinical-facilities/\" + this.cfId + \"/users\";\r\n    let param: QueryParams = {\r\n      url: url,\r\n      page: this.config?.page?.pageIndex + 1,\r\n      size: this.config?.page?.pageSize,\r\n      sortBy: (this.config?.sort?.direction) ? `${this.config?.sort?.active}` : \"\",\r\n      searchText: this.searchText,\r\n      sortOrder:this.config?.sort?.direction\r\n    };\r\n    console.log(param);\r\n    this.store$.dispatch(\r\n      new ManageUsersStoreActions.LoadAdminUsersRequestAction({ params: param })\r\n    );\r\n  }\r\n  sort(event: Sort) {\r\n    this.config.sort = {\r\n      ...event,\r\n    };\r\n    this.getUsersList();\r\n  }\r\n  search() {\r\n    this.loader = true;\r\n    this.config.page.pageIndex = 0;\r\n    this.getUsersList();\r\n  }\r\n  clear() {\r\n    this.searchText = '';\r\n    this.search();\r\n  }\r\n  isBlank(str) {\r\n    return (\r\n      !str ||\r\n      0 === str.length ||\r\n      str === \" \" ||\r\n      str === \"null\" ||\r\n      str === \"undefined\"\r\n    );\r\n  }\r\n  changeUserStatus(user, event) {\r\n    if (event.checked) {\r\n      this.usersService.enableUser(user.id).subscribe(\r\n        (res: any) => {\r\n          user.enable = true;\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.\"+res.message, 'bottom', 'center', true);\r\n        },\r\n        (err) => {\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.update_failed\", 'bottom', 'center', true);\r\n          user.enable = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.usersService.disableUser(user).subscribe(\r\n        (res: any) => {\r\n          user.enable = false;\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.\"+res.message, 'bottom', 'center', true);\r\n        },\r\n        (err) => {\r\n          this.snackbar.openCustomSnackBar(\"manage_users_module.update_failed\", 'bottom', 'center', true);\r\n          user.enable = true;\r\n        }\r\n      );\r\n    }\r\n  }\r\n  resetPassword(userId) {\r\n    this.usersService.resetPassword(userId).subscribe((response: any) => {\r\n      if (response.status === \"OK\") {\r\n        this.snackbar.openCustomSnackBar(\"manage_users_module.Reset_success\", 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n  confirmResetPassword(userId) {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"85vw\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.reset_password\",\r\n          text: \"manage_users_module.reset_password_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      console.log(data);\r\n      if (data) {\r\n        this.resetPassword(userId);\r\n      }\r\n    });\r\n  }\r\n  confirmEnableDisable(user, event) {\r\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"85vw\",\r\n      height: \"auto\",\r\n      maxHeight: \"90vh\",\r\n      data: {\r\n        body: {\r\n          title: \"manage_users_module.change_status\",\r\n          text: \"manage_users_module.change_status_confirm_message\",\r\n        },\r\n      },\r\n      disableClose: true,\r\n    });\r\n    confirm.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.changeUserStatus(user, event);\r\n      } else {\r\n        user.isActive = !event.checked;\r\n      }\r\n    });\r\n  }\r\n  onPage(event: PageEvent) {\r\n    // this.loader = true;\r\n    this.config.page = {\r\n      ...event,\r\n    };\r\n    this.getUsersList();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.loaderSubscription)\r\n      this.loaderSubscription.unsubscribe();\r\n  }\r\n  renameRoles() {\r\n    const renameRoles = this.dialog.open(RenameRolesComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"900px\",\r\n      height: \"auto\",\r\n      maxHeight: \"95vh\",\r\n      disableClose: true,\r\n    });\r\n    renameRoles.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.loader = true;\r\n        this.getUsersList();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { I18nModule } from \"../../i18n/i18n.module\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport * as fromManageUsers from \"./store/manage-users.reducer\";\nimport { ManageUsersEffects } from \"./store/manage-users.effects\";\nimport { ManageUsersCFAComponent } from \"./manage-users-cfa/manage-users-cfa.component\";\nimport { AdduserComponent } from \"./adduser/adduser.component\";\nimport { EdituserComponent } from \"./edituser/edituser.component\";\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { AddgroupComponent } from \"./addgroup/addgroup.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { ManageUsersService } from \"./services/manage-users.service\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { NgxIntlTelInputModule } from \"ngx-intl-tel-input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { LifeSignalsModule } from \"src/app/life-signals/life-signals.module\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport {MatMenuModule} from '@angular/material/menu';\nimport { RenameRolesComponent } from './rename-roles/rename-roles.component';\n\n@NgModule({\n  declarations: [\n    ManageUsersCFAComponent,\n    AdduserComponent,\n    EdituserComponent,\n    AddgroupComponent,\n    RenameRolesComponent,\n  ],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\n      fromManageUsers.manageUsersFeatureKey,\n      fromManageUsers.ManageUsersReducer\n    ),\n    EffectsModule.forFeature([ManageUsersEffects]),\n    MatCheckboxModule,\n    MatInputModule,\n    FormsModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    I18nModule,\n    MatPaginatorModule,\n    SharedModule,\n    MatMenuModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    NgxIntlTelInputModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatButtonModule,\n    LifeSignalsModule,\n    MatCardModule,\n  ],\n  providers: [\n    {\n      provide: ManageUsersService,\n      useClass: ManageUsersService,\n    },\n  ],\n  exports: [],\n})\nexport class ManageUsersModule {}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{ \"manage_users_module.rename_roles_button\" | translate }}\n    </h1>\n</mat-card>\n<mat-dialog-content class=\"mat-dialog-popup rename-roleModal\">\n    <ls-table [(config)]=\"config\" [columns]=\"columns\" [data]=\"rolesdata\">\n        <ng-template lsWidgetName=\"default\" let-role>\n            <span class=\"mx-2\">{{ role?.default }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"current\" let-role>\n            <div class=\"d-flex align-items-center\">\n            <input matInput type=\"text\" [(ngModel)]=\"role.current\" class=\"input-field fw-bold\"\n            [disabled]=\"!editCurrent[role?.index]\" [ngClass]=\"{'disabled' : !editCurrent[role?.index]}\">\n            <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n            *ngIf=\"editCurrent[role?.index]\" (click)=\"editRole(role?.index, false)\">\n                <mat-icon>done</mat-icon>\n            </button>\n            <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                    *ngIf=\"!editCurrent[role?.index]\" (click)=\"editRole(role?.index, true)\">\n                <mat-icon>edit</mat-icon>\n            </button>\n            </div>\n        </ng-template>\n    </ls-table>\n</mat-dialog-content>\n<mat-dialog-actions class=\"mx-4\">\n    <button\n            mat-flat-button\n            (click)=\"close()\"\n            class=\"fill-btn\"\n            color=\"warn\"\n    >\n        {{ \"manage_users_module.adduser.cancelbutton\" | translate }}\n    </button>\n    <button\n            mat-flat-button\n            type=\"submit\"\n            [disabled]=\"!valuesUpdated\"\n            class=\"fill-btn\"\n            (click)=\"onSubmit()\"\n            color=\"primary\"\n    >\n        {{ \"manage_users_module.adduser.savebutton\" | translate }}\n    </button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {ConfirmDialogComponent} from \"../../../shared/confirm-dialog/confirm-dialog.component\";\nimport {LSColumn, LSTableConfig} from \"../../../life-signals/_models/ls-column.model\";\n\n@Component({\n  selector: 'app-rename-roles',\n  templateUrl: './rename-roles.component.html',\n  styleUrls: ['./rename-roles.component.scss']\n})\nexport class RenameRolesComponent implements OnInit {\n  valuesUpdated = false;\n  editCurrent = [false];\n  constructor(private dialogRef: MatDialogRef<MatDialogRef<RenameRolesComponent>>,\n              private dialog: MatDialog) { }\n  rolesdata = [\n    {\n      role: \"CFA\",\n      default: \"Admin\",\n      current: \"Administrator\"\n    },\n    {\n      role: \"SC\",\n      default: \"Supervisory Nurse\",\n      current: \"Staff Nurse\"\n    },\n    {\n      role: \"GC\",\n      default: \"General Nurse\",\n      current: \"Nurse\"\n    },\n    {\n      role: \"PHY\",\n      default: \"Physician\",\n      current: \"Doctor\"\n    }\n\n  ]\n  config: LSTableConfig = {\n    id: \"manage_users_module.rename_roles\",\n    rowSelectEnabled: false,\n    translate: true,\n    translateKey: \"manage_users_module.rename_roles\",\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"default\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n      style: \"min-width: 450px\",\n    },\n    {\n      id: \"current\",\n      sortable: false,\n      headerClass: [\"align-left\"],\n    }\n  ];\n  ngOnInit(): void {\n    let roles = [];\n    this.rolesdata.forEach((role, i) => {\n      roles.push({\n        ...role,\n        index: i\n      })\n    });\n    this.rolesdata = roles;\n  }\n  close() {\n    if (this.valuesUpdated) {\n      const confirm = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: \"90vw\",\n        width: \"auto\",\n        height: \"auto\",\n        maxHeight: \"80vh\",\n        data: {\n          body: {\n            title: \"manage_users_module.cancel_title\",\n            text: \"manage_users_module.cancel_text\",\n          },\n        },\n        disableClose: true,\n      });\n      confirm.afterClosed().subscribe((data) => {\n        if (data) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n  onSubmit(){\n    this.dialogRef.close();\n  }\n  editRole(index, editStatus) {\n    this.editCurrent[index] = editStatus;\n  }\n\n}\n","import { Action } from \"@ngrx/store\";\nimport {\n  AddUser,\n  CFUser,\n  CFUserList,\n  QueryParams,\n} from \"../../../interfaces/manage-users.interface\";\n\nexport enum ActionTypes {\n  LOAD_ADMIN_USERS_REQUEST = \"[MANAGEUSERS] Load Admin Users List Request\",\n  LOAD_ADMIN_USERS_FAILURE = \"[MANAGEUSERS] Load Admin Users List Failure\",\n  LOAD_ADMIN_USERS_SUCCESS = \"[MANAGEUSERS] Load Admin Users List Success\",\n  ADD_USER_REQUEST = \"[MANAGEUSERS] Add User Request\",\n  ADD_USER_FAILURE = \"[MANAGEUSERS] Add User Failure\",\n  ADD_USER_SUCCESS = \"[MANAGEUSERS] Add User Success\",\n  EDIT_USER_REQUEST = \"[MANAGEUSERS] Add User Request\",\n  EDIT_USER_FAILURE = \"[MANAGEUSERS] Add User Failure\",\n  EDIT_USER_SUCCESS = \"[MANAGEUSERS] Add User Success\",\n}\nexport class LoadAdminUsersRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_ADMIN_USERS_REQUEST;\n  constructor(public payload: { params: QueryParams }) {}\n}\n\nexport class LoadAdminUsersFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_ADMIN_USERS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadAdminUsersSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_ADMIN_USERS_SUCCESS;\n  constructor(public payload: { data: CFUserList }) {}\n}\nexport class AddUserRequestAction implements Action {\n  readonly type = ActionTypes.ADD_USER_REQUEST;\n  constructor(public payload: { data: CFUser }) {}\n}\nexport class AddUserFailureAction implements Action {\n  readonly type = ActionTypes.ADD_USER_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class AddUserSuccessAction implements Action {\n  readonly type = ActionTypes.ADD_USER_SUCCESS;\n  constructor(public payload: { data: AddUser }) {}\n}\nexport class EditUserRequestAction implements Action {\n  readonly type = ActionTypes.EDIT_USER_REQUEST;\n  constructor(public payload: { data: CFUser }) {}\n}\nexport class EditUserFailureAction implements Action {\n  readonly type = ActionTypes.EDIT_USER_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class EditUserSuccessAction implements Action {\n  readonly type = ActionTypes.EDIT_USER_SUCCESS;\n  constructor(public payload: { data: AddUser }) {}\n}\nexport type ManageUsersActions =\n  | LoadAdminUsersRequestAction\n  | LoadAdminUsersFailureAction\n  | LoadAdminUsersSuccessAction\n  | AddUserFailureAction\n  | AddUserSuccessAction\n  | AddUserRequestAction\n  | EditUserRequestAction\n  | EditUserFailureAction\n  | EditUserSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport {  of as observableOf } from \"rxjs\";\nimport { catchError, map,  mergeMap } from \"rxjs/operators\";\nimport * as featureActions from \"./manage-users.actions\";\nimport { ManageUsersService } from \"../services/manage-users.service\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\n@Injectable()\nexport class ManageUsersEffects {\n  constructor(\n    private manageUsersService: ManageUsersService,\n    private actions$: Actions,\n   \n  ) {}\n\n  @Effect()\n  loadAdminUsersRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.LoadAdminUsersRequestAction>(\n      featureActions.ActionTypes.LOAD_ADMIN_USERS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageUsersService.getAdminUsersList(action.payload.params).pipe(\n        map((data) => new featureActions.LoadAdminUsersSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(\n            new featureActions.LoadAdminUsersFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n  @Effect()\n  AddUserRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.AddUserRequestAction>(\n      featureActions.ActionTypes.ADD_USER_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageUsersService.addUser(action.payload.data).pipe(\n        map((data) => new featureActions.AddUserSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.AddUserFailureAction({ error }))\n        )\n      )\n    )\n  );\n\n  // @Effect({dispatch: false})\n  EditUserRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.EditUserRequestAction>(\n      featureActions.ActionTypes.EDIT_USER_REQUEST\n    ),\n    mergeMap((action) =>\n      this.manageUsersService.editUser(action.payload.data).pipe(\n        map((data) => new featureActions.EditUserSuccessAction({ data })),\n        catchError((error) =>\n          observableOf(new featureActions.EditUserFailureAction({ error }))\n        )\n      )\n    )\n  );\n}\n","import { TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { CFUser } from \"../../../interfaces/manage-users.interface\";\r\nimport { ActionTypes, ManageUsersActions } from \"./manage-users.actions\";\r\n\r\nexport interface ManageUsersState {\r\n  USERS_LIST: CFUser[];\r\n  error: string;\r\n  status: string;\r\n  loaded: boolean;\r\n  code:number;\r\n  tableState: TableState;\r\n  usersCount: number;\r\n}\r\n\r\nconst initialManageUsersState: ManageUsersState = {\r\n  USERS_LIST: [],\r\n  error: \"\",\r\n  status: \"\",\r\n  code:0,\r\n  loaded: false,\r\n  tableState: TableState.DEFAULT,\r\n  usersCount: 0,\r\n};\r\n\r\nexport const manageUsersFeatureKey = \"manageusers\";\r\n\r\nexport function ManageUsersReducer(\r\n  state: ManageUsersState = initialManageUsersState,\r\n  action: ManageUsersActions\r\n) {\r\n  switch (action.type) {\r\n    case ActionTypes.LOAD_ADMIN_USERS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loaded: false,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ADMIN_USERS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ADMIN_USERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        USERS_LIST: action.payload.data.data.items,\r\n        loaded: true,\r\n        usersCount: action.payload.data.data.total,\r\n        tableState: TableState.SUCCESS\r\n      };\r\n    }\r\n    case ActionTypes.ADD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        status: null,\r\n        loaded: false,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ADD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loaded: true,\r\n        tableState: TableState.FAILURE\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ADD_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        USERS_LIST: [action.payload.data.data, ...state.USERS_LIST],\r\n        status: action.payload.data.status,\r\n        loaded: true,\r\n        tableState: TableState.SUCCESS\r\n      };\r\n    }\r\n    case ActionTypes.EDIT_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        status: null,\r\n        loaded: false,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.EDIT_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loaded: true,\r\n        tableState: TableState.FAILURE\r\n      };\r\n    }\r\n\r\n    case ActionTypes.EDIT_USER_SUCCESS: {\r\n      const updatedlist = state.USERS_LIST.map((user) => {\r\n        return action.payload.data.data.id === user.id\r\n          ? action.payload.data.data\r\n          : user;\r\n      });\r\n      return {\r\n        ...state,\r\n        USERS_LIST: updatedlist,\r\n        status: action.payload.data.status,\r\n        loaded: true,\r\n        tableState: TableState.SUCCESS\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport {\r\n  ManageUsersState,\r\n  manageUsersFeatureKey,\r\n} from \"./manage-users.reducer\";\r\n\r\nconst getUsersState = createFeatureSelector<ManageUsersState>(\r\n  manageUsersFeatureKey\r\n);\r\n\r\nexport const getUsersList = createSelector(\r\n  getUsersState,\r\n  (state) => state?.USERS_LIST\r\n);\r\n\r\nexport const getUsersError = createSelector(\r\n  getUsersState,\r\n  (state) => state?.error\r\n);\r\nexport const getUsersStatus = createSelector(\r\n  getUsersState,\r\n  (state) => state?.status\r\n);\r\nexport const getUsersCode = createSelector(\r\n  getUsersState,\r\n  (state) => state?.code\r\n);\r\nexport const getLoaderStatus = createSelector(\r\n  getUsersState,\r\n  (state) => state?.loaded\r\n);\r\nexport const getTableStatus = createSelector(\r\n  getUsersState,\r\n  (state) => state?.tableState\r\n);\r\nexport const getUsersCount = createSelector(\r\n  getUsersState,\r\n  (state) => state?.usersCount\r\n);\r\n","<ls-page-header type=\"additional_devices\"></ls-page-header>\n<div class=\"px-3 my-2 mt-3\">\n  <div class=\"mx-md-2 mb-3 d-md-flex align-items-center\">\n    <span class=\"pe-3  me-0 fw-bold settings-txt head-setting\">\n      {{ \"additional_devices.settings_for\" | translate }} :\n    </span>\n    <span class=\"mx-2 head-setting-right\" *ngIf=\"this.role === 'CFA'\">\n      {{ facility }}\n    </span>\n    <!--            <mat-select disabled=\"true\" placeholder=\"Location\" class=\"mat-sel1\">-->\n    <!--                <mat-option *ngFor=\"let setting of settings\" [value]=\"setting\">-->\n    <!--                    {{setting}}-->\n    <!--                </mat-option>-->\n    <!--            </mat-select>-->\n    <!--      <mat-form-field appearance=\"fill\" class=\"whiteselect drop-down-selectfilter selectfilter\">-->\n    <!--      <mat-select (selectionChange)=\"getMiscSettingsGrp()\"-->\n    <!--        [placeholder]=\"'additional_devices.medical_condition' | translate\" class=\"\"-->\n    <!--        [(ngModel)]=\"miscellaneousSettings.groupId\">-->\n    <!--        <mat-option *ngFor=\"let group of groups\" [value]=\"group.groupId\">-->\n    <!--          {{ group.name }}-->\n    <!--        </mat-option>-->\n    <!--      </mat-select>-->\n    <!--    </mat-form-field>-->\n    <div class=\"justify-content-md-start justify-content-between d-flex selectfilter-comman \">\n      <app-nested-dropdown *ngIf=\"groupsView\" class=\"nested-selectfilter bg-selectfilter me-2 me-md-0 mx-md-2\"\n        [selectedValue]=\"locationGroupId\" key=\"groupId\" displayKey=\"name\"\n        [label]=\"'alert_config_module.location' | translate\" (selected)=\"getMiscSettingsGrp($event, 'LOCATION')\"\n        [options]=\"locationGroups\" [noSelection]=\"true\">\n      </app-nested-dropdown>\n      <app-nested-dropdown *ngIf=\"groupsView\" class=\"nested-selectfilter bg-selectfilter mx-md-2\"\n        [selectedValue]=\"clinicalGroupId\" key=\"groupId\" displayKey=\"name\"\n        [label]=\"'alert_config_module.medical_condition' | translate\"\n        (selected)=\"getMiscSettingsGrp($event, 'CLINICAL')\" [options]=\"clinicalGroups\" [noSelection]=\"true\">\n      </app-nested-dropdown>\n    </div>\n  </div>\n  <div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n  <div *ngIf=\"!loader\">\n    <div class=\"my-0 button-card-area\">\n      <button mat-button class=\"btn\" [ngClass]=\"\n            selectedTab === 'spo2' ? 'select-btn-active' : 'select-btn'\n          \" (click)=\"selectTab('spo2')\">\n        {{ \"additional_devices.spo2_bp_settings\" | translate }}\n      </button>\n      <button mat-button class=\"btn\" [ngClass]=\"selectedTab === 'ecg' ? 'select-btn-active' : 'select-btn'\"\n        (click)=\"selectTab('ecg')\">\n        {{ \"additional_devices.ecg_filter\" | translate }}\n      </button>\n      <button mat-button class=\"btn\" [ngClass]=\"\n            selectedTab === 'biosensor' ? 'select-btn-active' : 'select-btn'\n          \" (click)=\"selectTab('biosensor')\">\n        {{ \"additional_devices.biosensor_reconfiguration\" | translate }}\n      </button>\n      <button mat-button class=\"btn\" [ngClass]=\"\n            selectedTab === 'other' ? 'select-btn-active' : 'select-btn'\n          \" (click)=\"selectTab('other')\">\n        {{ \"additional_devices.other_settings\" | translate }}\n      </button>\n    </div>\n\n\n    <div class=\"additional-table bg-thead-color tab-table-low comman-table-users head-border\"\n      *ngIf=\"groups?.length || editAccessCFA\">\n      <ng-template [ngIf]=\"selectedTab === 'spo2'\">\n        <div class=\"table-container scroll-assist   table-responsive-sm px-2\">\n          <table class=\"mat-table custom-table\" aria-label=\"Table\">\n            <thead>\n              <tr>\n                <th scope=\"col\" class=\"col-header fw-bold py-3 pe-2\"></th>\n                <th class=\"col-header fw-bold py-3 px-2 text-start\">\n                  {{ \"additional_devices.settings\" | translate }}\n                </th>\n                <th class=\"col-header fw-bold py-3 pe-2\">{{ \"additional_devices.default_devices\" | translate }}</th>\n                <th class=\"col-header fw-bold py-3 pe-2\" [colSpan]=\"3\"></th>\n                <th></th>\n                <th class=\"col-header fw-bold py-3 pe-2\" [colSpan]=\"3\"></th>\n                <th class=\"col-header fw-bold py-3 pe-2\" [colSpan]=\"2\"></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody class=\"border-0\">\n              <tr *ngIf=\"spo2Settings?.Setting\"\n                [ngClass]=\"!spo2Settings.Setting.Enable ? 'row-disabled' : ''\">\n                <td class=\"vw-5\">\n                  <span class=\"align-middle\">\n                    <mat-slide-toggle *ngIf=\"editAccessCFA ||(editAccessSC &&!isBlank(miscellaneousSettings.groupId))\"\n                      class=\"align-middle me-3\" [(ngModel)]=\"spo2Settings.Setting.Enable\"\n                      (change)=\"disableEdit($event, 'spo2', 'SPO2')\">\n                    </mat-slide-toggle>\n                  </span>\n                </td>\n                <td class=\"text-start align-items-center fw-bold\">\n                  <span class=\"align-middle\">\n                    {{ \"additional_devices.SPO2\"| translate }}\n                    {{ \"additional_devices.device_txt\" | translate }}\n                  </span>\n                </td>\n                <td>{{ '-' }}</td>\n                <td class=\"align-middle text-center\" >\n                  <mat-select  style=\"width: 120px\" [(ngModel)] =\"spo2Settings.Setting.Mode\" (ngModelChange)=\"updated(true)\"\n                    [disabled]=\"!spo2Settings?.Setting?.Enable && !editOnTime && !editOnTime\">\n                      <mat-option value=\"Continuous\">CONTINUOUS</mat-option>\n                      <mat-option value=\"Periodic\">INTERVAL</mat-option>\n                  </mat-select>\n                  <!-- <mat-error *ngIf=\"newPatientForm.get('gender').hasError('required') && submitted\">\n                      {{\"active-patients-module.errors.required\" | translate}}\n                  </mat-error> -->\n                 </td>\n                <td class=\"col-header fw-bold text-center\">\n                  {{\"additional_devices.on_time\" | translate}}\n                </td>\n                <td class=\"align-middle text-center ontime-card\">\n                  <span *ngIf=\"!editOnTime\">\n                    {{ (spo2Settings.Setting.Mode === 'Periodic') ? spo2Settings?.Setting?.OnTime : ' -- ' }} Mins\n                  </span>\n                  <span *ngIf=\"editOnTime\" class=\"d-flex align-items-center justify-content-center\">\n                    <input (keypress)=\"numericsOnly($event)\" (paste)=\"checkForSpecialCharacters($event)\" matInput\n                      placeholder=\"Enter\" type=\"number\" [min]=\"minOn\" [max]=\"maxOn\" class=\"edit-box\"\n                      [(ngModel)]=\"spo2Settings.Setting.OnTime\" autocomplete=\"off\"\n                      (ngModelChange)=\"updated()\" />\n                    <div class=\"ms-1\"> Mins</div>\n                  </span>\n                </td>\n                <td class=\"text-start px-0 edit-Time\">\n                  <span *ngIf=\"!editOnTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\" (click)=\"showEditOnTime()\"\n                      [disabled]=\"!spo2Settings.Setting.Enable || spo2Settings.Setting.Mode=='Continuous'\"\n                      *ngIf=\"editAccessCFA || (editAccessSC && !isBlank(miscellaneousSettings.groupId))\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  </span>\n                  <span *ngIf=\"editOnTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                      *ngIf=\"onTimeValid(spo2Settings?.Setting?.OnTime)\"\n                      (click)=\"hideEditOnTime()\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"!onTimeValid(spo2Settings?.Setting?.OnTime)\">\n                      *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                  </span>\n                </td>\n                <td></td>\n                <td class=\"col-header fw-bold text-end\">{{ \"additional_devices.off_time\" | translate }}</td>\n                <td class=\"align-middle text-center ontime-card\">\n                  <span *ngIf=\"!editOffTime\">\n                    {{ (spo2Settings.Setting.Mode === 'Periodic') ? spo2Settings?.Setting?.OffTime : ' -- ' }} Mins\n                  </span>\n                  <span *ngIf=\"editOffTime\" class=\"d-flex justify-content-center align-items-center\">\n                    <input (keypress)=\"numericsOnly($event)\" (paste)=\"checkForSpecialCharacters($event)\" matInput\n                      placeholder=\"Enter\" type=\"number\" [min]=\"minOff\" [max]=\"maxOff\" class=\"edit-box\"\n                      [(ngModel)]=\"spo2Settings.Setting.OffTime\" autocomplete=\"off\"\n                      (ngModelChange)=\"updated()\" />\n                    <div class=\"ms-1\"> Mins</div>\n                  </span>\n                </td>\n                <td class=\"text-start px-0 edit-Time\">\n                  <span *ngIf=\"!editOffTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\" (click)=\"showEditOffTime()\"\n                      [disabled]=\"!spo2Settings.Setting.Enable || spo2Settings.Setting.Mode=='Continuous'\"\n                      *ngIf=\"editAccessCFA || (editAccessSC && !isBlank(miscellaneousSettings.groupId))\">\n                      <mat-icon class=\"fw-normal\">edit</mat-icon>\n                    </button>\n                  </span>\n                  <span *ngIf=\"editOffTime\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                      *ngIf=\"offTimeValid(spo2Settings?.Setting?.OffTime)\"\n                      (click)=\"hideEditOffTime()\">\n                      <mat-icon class=\"fw-normal\">done</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"!offTimeValid(spo2Settings?.Setting?.OffTime)\">\n                      *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                  </span>\n                </td>\n                <td class=\"col-header fw-bold text-end\">{{\"additional_devices.duty_cycle\" | translate}}</td>\n                <td class=\"align-middle text-center\">\n                  {{ spo2Settings?.Setting?.DutyCycle }}%\n                </td>\n              </tr>\n              <tr *ngIf=\"miscellaneousSettings?.thirdPartyDeviceSettings[1]\"\n                [ngClass]=\"!miscellaneousSettings.thirdPartyDeviceSettings[1]?.isActive ? 'row-disabled' : ''\">\n                <td class=\"vw-5\">\n                  <span class=\"align-middle\">\n                    <mat-slide-toggle *ngIf=\"editAccessCFA ||(editAccessSC &&!isBlank(miscellaneousSettings.groupId))\"\n                      class=\"align-middle me-3\" [(ngModel)]=\"miscellaneousSettings.thirdPartyDeviceSettings[1].isActive\"\n                      (change)=\"disableEdit($event, 'spo2', 'BP')\">\n                    </mat-slide-toggle>\n                  </span>\n                </td>\n                <td class=\"text-start align-items-center fw-bold\">\n                  <span class=\"align-middle\">{{\"additional_devices.\" +\n                    miscellaneousSettings?.thirdPartyDeviceSettings[1].type | translate}} {{\n                    \"additional_devices.device_txt\" | translate }}\n                  </span>\n                </td>\n                <td>{{ miscellaneousSettings?.thirdPartyDeviceSettings[1]?.defaultDevice || '-' }}</td>\n                <td></td>\n                <td class=\"col-header fw-bold text-center\">\n                  {{\"additional_devices.interval\" | translate}}\n                </td>\n                <td class=\"align-middle text-center ontime-card\">\n                  <span *ngIf=\"!editInterval\">\n                    {{ miscellaneousSettings?.thirdPartyDeviceSettings[1].interval }} Mins\n                  </span>\n                  <span *ngIf=\"editInterval\" class=\"d-flex align-items-center justify-content-center\">\n                    <input (keypress)=\"numericsOnly($event)\" (paste)=\"checkForSpecialCharacters($event)\" matInput\n                      placeholder=\"Enter\" type=\"number\" min=\"1\" max=\"7200\" class=\"edit-box\"\n                      [(ngModel)]=\"miscellaneousSettings?.thirdPartyDeviceSettings[1].interval\" autocomplete=\"off\"\n                      (ngModelChange)=\"updated()\" />\n                    <div class=\"ms-1\"> Mins</div>\n                  </span>\n                </td>\n                <td class=\"text-start px-0 edit-Time\">\n                  <span *ngIf=\"!editInterval\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\" (click)=\"toggleInterval()\"\n                      [disabled]=\"!miscellaneousSettings?.thirdPartyDeviceSettings[1].isActive\"\n                      *ngIf=\"editAccessCFA ||(editAccessSC && !isBlank(miscellaneousSettings.groupId))\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  </span>\n                  <span *ngIf=\"editInterval\">\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow\"\n                      *ngIf=\"invalidInt(miscellaneousSettings?.thirdPartyDeviceSettings[1].interval)\"\n                      (click)=\"toggleInterval()\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"!invalidInt(miscellaneousSettings?.thirdPartyDeviceSettings[1].interval)\">\n                      *{{ \"additional_devices.invalid\" | translate }}\n                    </mat-error>\n                  </span>\n                </td>\n                <td></td>\n                <td class=\"col-header fw-bold\" colspan=\"5\"></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"selectedTab === 'ecg'\">\n        <div class=\"table-container1 px-2 py-4 table-responsive-sm\">\n          <table class=\"mat-table\" style=\"padding-top: 20px !important\" aria-label=\"Table\">\n            <tbody>\n              <tr [ngClass]=\"\n                    !miscellaneousSettings.ecgFilterSettings.isActive\n                      ? 'row-disabled'\n                      : ''\n                  \">\n                <td class=\"text-start align-items-center ps-3 \">\n                  <span class=\"align-middle d-inline-flex\">\n                    <mat-slide-toggle *ngIf=\"\n                          editAccessCFA ||\n                          (editAccessSC &&\n                            !isBlank(miscellaneousSettings.groupId))\n                        \" (change)=\"updated()\" class=\"toggle-btn me-3\" [(ngModel)]=\"\n                          miscellaneousSettings.ecgFilterSettings.isActive\n                        \">\n                    </mat-slide-toggle>\n                  </span>\n                  <span class=\"align-middle mx-4 fw-bold\">{{\n                    \"additional_devices.ecg_filter\" | translate\n                    }}</span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-4\">\n                    <mat-select [disabled]=\"\n                        !miscellaneousSettings.ecgFilterSettings.isActive ||\n                        (!editAccessCFA &&\n                          (!editAccessSC ||\n                            isBlank(miscellaneousSettings.groupId)))\n                      \" placeholder=\"Settings\" class=\"mat-sel\" [(ngModel)]=\"\n                        miscellaneousSettings.ecgFilterSettings.ecgFilterSetting\n                      \" (ngModelChange)=\"updated()\">\n                      <mat-option *ngFor=\"let setting of ecgSettings\" [value]=\"setting\">\n                        {{ setting }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"selectedTab === 'biosensor'\">\n        <div class=\"table-container scroll-assist px-2 table-responsive-sm biosensor-table\">\n          <table class=\"mat-table\" aria-label=\"Table\">\n            <thead>\n              <tr>\n                <th scope=\"col\" class=\"fw-bold py-3\" *ngFor=\"let col of headerColumnsBiosensor\">\n                  {{ col | translate }}\n                </th>\n              </tr>\n            </thead>\n            <tbody style=\"padding-top: 10px !important; border: none\" *ngIf=\"!isBlank(miscellaneousSettings)\">\n              <tr *ngFor=\"\n                    let biosensorSetting of miscellaneousSettings.bioSensorConfigSettings\n                  \" [ngClass]=\"!biosensorSetting.isActive ? 'row-disabled' : ''\">\n                <td>\n                  <div class=\"text-start d-flex align-items-center togglestart\">\n                    <div *ngIf=\"editAccessCFA\" class=\"align-middle d-flex\">\n                      <mat-slide-toggle class=\"toggle-btn me-3\" [(ngModel)]=\"biosensorSetting.isActive\"\n                        (change)=\"disableEdit($event, 'biosensor', 0)\">\n                      </mat-slide-toggle>\n                    </div>\n                    <div *ngIf=\"editAccessCFA\" class=\"row-head align-middle fw-bold\">\n                      {{ \"additional_devices.biosensor_network_reconfiguration\" | translate }}\n                    </div>\n                    <div *ngIf=\"!editAccessCFA\" class=\"biosensor-row-head fw-bold\">\n                      <span *ngIf=\"biosensorSetting.isActive\">{{\n                        \"additional_devices.enabled_txt\" | translate\n                        }}</span><span *ngIf=\"!biosensorSetting.isActive\">{{\n                        \"additional_devices.disabled_txt\" | translate\n                        }}</span> {{ \"additional_devices.biosensor_network_reconfiguration\" | translate }}\n                    </div>\n                  </div>\n                </td>\n                <td>\n                  <div *ngIf=\"!editPass1\"><span\n                      class=\"biosensorSetting-card d-flex align-items-center justify-content-start\">{{\n                      biosensorSetting.relayPassword.replace(regex, \"*\") }}\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        [disabled]=\"!biosensorSetting.isActive\" *ngIf=\"editAccessCFA\" (click)=\"editPass1 = !editPass1;\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                  <div *ngIf=\"editPass1\" class=\"d-flex justify-content-start align-items-center\">\n                    <span class=\"biosensorSetting-card d-flex align-items-center justify-content-start\"><input matInput\n                        placeholder=\"Enter\" type=\"text\" maxlength=\"32\" class=\"edit-box1\"\n                        [(ngModel)]=\"biosensorSetting.relayPassword\" (ngModelChange)=\"updated()\" autocomplete=\"off\" />\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"editPass1 = !editPass1\">\n                        <mat-icon>done</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                </td>\n                <td>\n                  <div *ngIf=\"!editSsid2\"><span\n                      class=\"biosensorSetting-card d-flex align-items-center justify-content-start\">\n                      {{ biosensorSetting.hospitalSSID }}\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        [disabled]=\"!biosensorSetting.isActive\" *ngIf=\"editAccessCFA\" (click)=\"editSsid2 = !editSsid2;\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                  <div *ngIf=\"editSsid2\" class=\"d-flex justify-content-start align-items-center\">\n                    <span class=\"biosensorSetting-card d-flex align-items-center justify-content-start\"> <input matInput\n                        placeholder=\"Enter\" type=\"text\" maxlength=\"32\" class=\"edit-box2\"\n                        [(ngModel)]=\"biosensorSetting.hospitalSSID\" (ngModelChange)=\"updated()\" autocomplete=\"off\" />\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"editSsid2 = !editSsid2\">\n                        <mat-icon>done</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                </td>\n                <td>\n                  <div *ngIf=\"!editPass2\"><span\n                      class=\"biosensorSetting-card d-flex align-items-center justify-content-start\">\n                      {{ biosensorSetting.hospitalPassword.replace(regex, \"*\") }}\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        [disabled]=\"!biosensorSetting.isActive\" *ngIf=\"editAccessCFA\" (click)=\"editPass2 = !editPass2;\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                  <div *ngIf=\"editPass2\" class=\"d-flex justify-content-start align-items-center\">\n                    <span class=\"biosensorSetting-card d-flex align-items-center justify-content-start\"><input matInput\n                        placeholder=\"Enter\" type=\"text\" maxlength=\"32\" class=\"edit-box1\"\n                        [(ngModel)]=\"biosensorSetting.hospitalPassword\" (ngModelChange)=\"updated()\" autocomplete=\"off\" />\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"editPass2 = !editPass2\">\n                        <mat-icon>done</mat-icon>\n                      </button>\n                    </span>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"selectedTab === 'other'\">\n        <div class=\"table-container1 scroll-assist px-2 py-4 table-responsive-sm\">\n          <table class=\"mat-table\" aria-label=\"Table\">\n            <tbody>\n              <tr [ngClass]=\"\n                    !miscellaneousSettings.otherSettings.autoGeneratePatientId\n                      ? 'row-disabled'\n                      : ''\n                  \">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\" *ngIf=\"editAccessCFA\">\n                    {{\n                    \"additional_devices.auto_generation_of_patient_id\"\n                    | translate\n                    }}</span>\n                  <span *ngIf=\"!editAccessCFA\" class=\"biosensor-row-head d-flex align-items-center py-2\">\n                    {{\n                    \"additional_devices.auto_generation_of_patient_id\"\n                    | translate\n                    }}\n\n                    <span class=\"mx-1\" *ngIf=\"miscellaneousSettings.otherSettings.autoGeneratePatientId\">\n                      {{ \"additional_devices.enabled_txt\" | translate }}\n                    </span>\n                    <span class=\"mx-1\" *ngIf=\"!miscellaneousSettings.otherSettings.autoGeneratePatientId\">\n                      {{ \"additional_devices.disabled_txt\" | translate }}\n                    </span>\n                  </span>\n                </td>\n\n\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\"\n                    *ngIf=\"editAccessCFA\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\"\n                      [(ngModel)]=\"miscellaneousSettings.otherSettings.autoGeneratePatientId\">\n                      <mat-option *ngFor=\"let setting of settings\" [value]=\"setting.value\">\n                        {{ setting.option }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr [ngClass]=\"\n                    !miscellaneousSettings.otherSettings.enableAccessToSPPHY\n                      ? 'row-disabled'\n                      : 'row-enabled'\n                  \">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\" *ngIf=\"editAccessCFA\">\n                    {{\n                    \"additional_devices.access_to_service_provider_physician\"\n                    | translate\n                    }}</span>\n                  <span *ngIf=\"!editAccessCFA\" class=\"biosensor-row-head d-flex align-items-center py-2\">\n                    {{\n                    \"additional_devices.access_to_service_provider_physician\"\n                    | translate\n                    }}\n                    <span class=\"mx-1\" *ngIf=\"\n                          miscellaneousSettings.otherSettings.enableAccessToSPPHY\n                        \">{{ \"additional_devices.enabled_txt\" | translate }}</span>\n                    <span class=\"mx-1\" *ngIf=\"\n                          !miscellaneousSettings.otherSettings.enableAccessToSPPHY\n                        \">{{ \"additional_devices.disabled_txt\" | translate }}</span>\n                  </span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\"\n                    *ngIf=\"editAccessCFA\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\"\n                      [(ngModel)]=\"miscellaneousSettings.otherSettings.enableAccessToSPPHY\">\n                      <mat-option *ngFor=\"let setting of settings\" [value]=\"setting.value\">\n                        {{ setting.option }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"facility-name text-start ms-3 align-middle fw-bold\">\n                  {{ \"additional_devices.facility_name\" | translate }}\n                </td>\n                <td class=\"txt-input-container justify-content-end align-items-center\">\n                  <label *ngIf=\"invalidFacilityName()\" class=\"error-text my-1 d-block mx-3\">\n                    {{ \"additional_devices.invalid_name\" | translate }}\n                  </label>\n                  <span class=\"d-flex justify-content-end\">\n                    <input maxlength=\"40\" [placeholder]=\"'additional_devices.enter_text' | translate\"\n                      [disabled]=\"!editFacilityName\" type=\"text\" [(ngModel)]=\"facilityName\" class=\"text-input\"\n                      (keyup)=\"updated()\" (keypress)=\"charsOnly($event)\" (paste)=\"onPaste($event)\" />\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" *ngIf=\"editFacilityName\"\n                      (click)=\"editFacilityName = !editFacilityName;\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" *ngIf=\"!editFacilityName\"\n                      (click)=\"editFacilityName = !editFacilityName;\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"facility-name text-start fw-bold\">\n                  {{ \"additional_devices.customized_logo\" | translate }}\n                </td>\n                <td class=\"txt-input-container justify-content-end align-items-center\">\n                  <span class=\"d-flex justify-content-end\">\n                    <div>\n                      <label *ngIf=\"invalidFormat\" class=\"error-text my-2 d-block mx-4\">\n                        {{ \"additional_devices.\" + invalid_msg | translate }}\n                      </label>\n                    <input hidden placeholder=\"Choose File\" #fileInput type=\"file\" accept=\"image/*\" class=\"text-input\"\n                      (change)=\"upload($event)\" (click)=\"reload($event)\" /></div>\n                    <input *ngIf=\"isBlank(imgUrl)\" [placeholder]=\"'additional_devices.choose_file' | translate\"\n                      type=\"text\" [(ngModel)]=\"fileName\" class=\"text-input\" disabled />\n                    <img *ngIf=\"!isBlank(imgUrl)\" [src]=\"imgUrl\" alt=\"logo default\" height=\"32\" class=\"logo-default\" />\n                    <button *ngIf=\"isBlank(imgUrl)\" mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                      (click)=\"fileInput.click()\">\n                      <mat-icon>add</mat-icon>\n                    </button>\n                    <span *ngIf=\"!isBlank(imgUrl)\">\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"fileInput.click()\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" (click)=\"delete()\">\n                        <mat-icon>delete</mat-icon>\n                      </button>\n                    </span>\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"facility-name text-start fw-bold\">\n                  {{ \"additional_devices.patient_barcode_parsing\" | translate }}\n                </td>\n                <td class=\"txt-input-container justify-content-end align-items-center\">\n                  <span class=\"d-flex justify-content-end\">\n                    <input hidden placeholder=\"Choose File\" #fileInput type=\"file\" accept=\"image/*\"\n                      class=\"text-input\" />\n                    <input *ngIf=\"isBlank(patientBarCode)\" [placeholder]=\"'additional_devices.choose_file' | translate\"\n                      type=\"text\" class=\"text-input\" disabled />\n                    <img *ngIf=\"!isBlank(patientBarCode)\" [src]=\"patientBarCode\" alt=\"logo default\" height=\"32\"\n                      class=\"logo-default\" />\n                    <button *ngIf=\"isBlank(patientBarCode)\" mat-mini-fab color=\"primary\"\n                      class=\"btn-boxed btn-no-shadow mx-2\" (click)=\"fileInput.click()\" disabled>\n                      <mat-icon>add</mat-icon>\n                    </button>\n                    <span *ngIf=\"!isBlank(patientBarCode)\">\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\"\n                        (click)=\"fileInput.click()\">\n                        <mat-icon>edit</mat-icon>\n                      </button>\n                      <button mat-mini-fab color=\"primary\" class=\"btn-boxed btn-no-shadow mx-2\" (click)=\"delete()\">\n                        <mat-icon>delete</mat-icon>\n                      </button>\n                    </span>\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\">\n                    {{\n                    \"additional_devices.patient_identification\" | translate}}\n                  </span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\" disabled>\n                      <mat-option *ngFor=\"let patientId of patientIdentification\" [value]=\"patientId\">\n                        {{ patientId }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\">\n                <td class=\"text-start facility-name\">\n                  <span class=\"py-2 fw-bold\">\n                    {{\n                    \"additional_devices.mandatory_note_param_alert\" | translate}}\n                  </span>\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\" disabled>\n                      <mat-option *ngFor=\"let setting of settings\" [value]=\"setting.option\">\n                        {{ setting.value }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n              <tr *ngIf=\"editAccessCFA\"\n                [ngClass]=\"!miscellaneousSettings.otherSettings.emr ? 'row-disabled' : 'row-enabled'\">\n                <td class=\"text-start facility-name fw-bold\">\n                  {{ \"additional_devices.emr\" | translate }}\n                </td>\n                <td class=\"text-end\">\n                  <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter select-value me-5\"\n                    *ngIf=\"editAccessCFA\">\n                    <mat-select (selectionChange)=\"updated()\" [placeholder]=\"'additional_devices.select' | translate\"\n                      class=\"othersettings-select me-3\"\n                      [(ngModel)]=\"miscellaneousSettings.otherSettings.emr\">\n                      <mat-option value=\"\">{{ \"additional_devices.none\" | translate }}</mat-option>\n                      <mat-option *ngFor=\"let emrId of emrList\" [value]=\"emrId\">\n                        {{ emrId }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </ng-template>\n      <div *ngIf=\"miscellaneousSettings?.bioSensorConfigSettings\">\n        <span class=\"error-text m-3\" *ngIf=\"submitted &&\n          !(miscellaneousSettings?.bioSensorConfigSettings[0]?.relayPassword.trim() &&\n          miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalSSID.trim() &&\n          miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalPassword.trim() )\">\n          {{ \"additional_devices.messages.ssid_password_error_msg\" | translate }}\n        </span>\n      </div>\n      <div class=\"container-fluid\">\n        <div class=\"row my-2\" *ngIf=\"editAccessCFA || (editAccessSC && !isBlank(miscellaneousSettings.groupId)\n          && (selectedTab === 'spo2' || selectedTab === 'ecg'))\">\n          <div class=\"col-md-4\">\n            <button mat-flat-button class=\"reset-btn px-2 my-1\" (click)=\"confirmReset()\">\n              <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n              <span class=\"ps-1\">{{\n                \"additional_devices.reset_to_default\" | translate\n                }}</span>\n            </button>\n          </div>\n          <div class=\"col-md-8 text-center text-md-end\">\n            <span *ngIf=\"valuesUpdated\">\n              <button mat-flat-button class=\"px-4 fill-btn my-1\" color=\"warn\" (click)=\"cancel()\">\n                {{ \"additional_devices.cancel\" | translate }}\n              </button>\n              <button mat-flat-button [disabled]=\"invalidonoff() || invalidFormat\" class=\"px-4 fill-btn my-1\"\n                color=\"primary\" (click)=\"updateSettings()\">\n                {{ \"additional_devices.save\"| translate }}\n              </button> </span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"groups?.length === 0 && !loader && !editAccessCFA\" class=\"table-container\">\n      <div class=\"text-center my-4 py-4\">\n        {{\"alert_config_module.messages.no_groups\" | translate}}\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  MiscellaneousData, spo2ConfigData, spo2Data,\n} from \"../../interfaces/misc-settings.interface\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  MiscellaneousSettingsStoreSelectors,\n  MiscellaneousSettingsStoreState,\n  MiscellaneousSettingsStoreActions,\n} from \"./store\";\nimport { Observable } from \"rxjs\";\nimport { MiscellaneousSettingsService } from \"./services/miscellaneous-settings.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { ConfirmDialogComponent } from \"../../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-miscellaneous\",\n  templateUrl: \"./miscellaneous.component.html\",\n  styleUrls: [\"./miscellaneous.component.scss\"],\n})\nexport class MiscellaneousComponent implements OnInit, OnDestroy {\n  selectedTab = \"spo2\";\n  headerColumnsBiosensor = [\n    \"\",\n    \"additional_devices.relay_password\",\n    \"additional_devices.hospital_ssid\",\n    \"additional_devices.hospital_password\",\n  ];\n  settings = [{\n    option: 'Enable',\n    value: true\n  },\n    {\n      option: 'Disable',\n      value: false\n    }\n  ];\n  ecgSettings = [\"244\", \"976\"];\n  miscellaneousSettings: MiscellaneousData;\n  spo2Settings: spo2Data;\n  miscellaneousCopy: MiscellaneousData;\n  spo2SettingsCopy:spo2Data\n  editOnTime = false;\n  editOffTime = false;\n  editInterval = false;\n  editSsid1 = false;\n  editSsid2 = false;\n  editPass1 = false;\n  editPass2 = false;\n  regex = /[^*/ ]/gi;\n  error: string;\n  miscellaneousSettings$: Observable<MiscellaneousData>;\n  spo2Settings$: Observable<spo2ConfigData>;\n  miscellaneousSettingsStatus$: Observable<string>;\n  miscellaneousSettingsMessage$: Observable<string>;\n  role: string;\n  editFacilityName = false;\n  fileName = \"\";\n  groups;\n  clinicalGroups = [];\n  locationGroups = [];\n  groupId = \"\";\n  clinicalGroupId;\n  locationGroupId;\n  cfId: string;\n  signedUrl = \"\";\n  facilityName;\n  submitted = false;\n  invalidon = false;\n  invalidoff = false;\n  invalidInterval = false;\n  roles: string[];\n  invalidFormat = false;\n  loader = true;\n  settingSubscription: any;\n  spo2Subscription: any;\n  errorSubscription: any;\n  loaderSubscription: any;\n  valuesUpdated = false;\n  editAccessCFA = false;\n  editAccessSC = false;\n  imgUrl;\n  patientBarCode;\n  minOnOFF = 1;\n  maxOnOff = 7200;\n  minOn = 3;\n  maxOn = 1440;\n  minOff = 2;\n  maxOff = 27;\n  invalid_msg;\n  pasteData;\n  patientIdentification = [\"MRN\", \"PID\"];\n  emrList: Array<string> = [];\n  groupsView;\n  facility;\n  constructor(\n    private store$: Store<MiscellaneousSettingsStoreState.MiscellaneousSettingsState>,\n    private snackbar: SnackbarService,\n    private miscellaneousService: MiscellaneousSettingsService,\n    private autheticationService: AuthenticationService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.miscellaneousService.getEmrList().subscribe((response: any) => {\n      if (response.data.length > 0) {\n        this.emrList = response.data;\n      }\n    });\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles() || [];\n    if (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"CFAC\") > -1) {\n      this.role = \"CFA\";\n      this.editAccessCFA = true;\n    } else if (this.roles.indexOf(\"SC\") > -1) {\n      this.role = \"SC\";\n      this.editAccessSC = true;\n    } else {\n      this.role = this.roles[0];\n    }\n    this.facility = sessionStorage.getItem(\"facilityName\") || '';\n    if([\"SC\", \"GC\", \"PHY\"].some((ai) => this.roles.includes(ai))) {\n      this.groupsView = true;\n    } if (this.groupsView) {\n      this.miscellaneousService.getGroups(this.cfId).subscribe((response) => {\n        if (response.status === \"OK\") {\n          this.groups = response.data;\n          this.clinicalGroups = this.groups.filter(g => g.type === \"CLINICAL\");\n          this.locationGroups = this.groups.filter(g => g.type === \"PHYSICAL\");\n          if (this.roles.indexOf('CFAC') > -1) {\n            this.clinicalGroups.unshift({groupId: null, name: 'None'});\n            this.locationGroups.unshift({groupId: null, name: 'None'});\n          } else {\n            if (this.locationGroups.length > 0) {\n              let parentGroups = this.locationGroups.filter(grp => grp.parent === 'ROOT');\n              this.locationGroups.forEach(group => {\n                if (group.parent !== 'ROOT' && !(this.locationGroups.find(grp => grp.groupId === group.parent))) {\n                  parentGroups.push(group);\n                }\n              });\n              this.groupId = parentGroups[0].groupId;\n              this.locationGroupId = parentGroups[0].groupId;\n            } else if (this.clinicalGroups.length > 0) {\n              let parentGroups = this.clinicalGroups.filter(grp => grp.parent === 'ROOT');\n              this.locationGroups.forEach(group => {\n                if (group.parent !== 'ROOT' && !(this.clinicalGroups.find(grp => grp.groupId === group.parent))) {\n                  parentGroups.push(group);\n                }\n              });\n              this.groupId = parentGroups[0].groupId;\n              this.clinicalGroupId = parentGroups[0].groupId;\n            } else {\n              // this.openSnackBar(\"no_groups\");\n              this.loader = false;\n            }\n          }\n          if(this.groupId) {\n            this.getMiscSettings();\n            this.getSpo2Settings();\n          }\n        }\n      });\n    }\n    if (this.role === \"CFA\") {\n      this.getMiscSettings();\n      this.getSpo2Settings();\n    }\n    this.miscellaneousSettings$ = this.store$.select(\n      MiscellaneousSettingsStoreSelectors.getMiscellaneousSettings\n    );\n    this.spo2Settings$ = this.store$.select(\n      MiscellaneousSettingsStoreSelectors.getSpo2Settings\n    );\n    this.miscellaneousSettingsMessage$ = this.store$.select(\n      MiscellaneousSettingsStoreSelectors.getMiscellaneousMessage\n    );\n    this.spo2Subscription = this.spo2Settings$.subscribe((data) => {\n      this.spo2Settings = { ...data.data };\n      this.spo2SettingsCopy = JSON.parse(\n        JSON.stringify(this.spo2Settings)\n      );\n\n    });\n    this.settingSubscription = this.miscellaneousSettings$.subscribe((data) => {\n      this.miscellaneousSettings = { ...data };\n      this.miscellaneousCopy = JSON.parse(\n        JSON.stringify(this.miscellaneousSettings)\n      );\n\n\n      let signedUrl = this.miscellaneousSettings?.otherSettings?.facilityLogo;\n      //let facilityName = this.miscellaneousSettings?.otherSettings?.facilityName;\n      sessionStorage.setItem(\"facility-logo\", signedUrl);\n      //sessionStorage.setItem(\"facilityName\", facilityName);\n      this.autheticationService.getCustomizationLogo(true);\n      this.imgUrl = signedUrl;\n      this.facilityName =\n        this.miscellaneousSettings?.otherSettings?.facilityName;\n      this.closeEdit();\n      if (!this.loader) {\n        this.miscellaneousSettingsMessage$.subscribe((message) => {\n          if (!this.isBlank(message)) {\n            this.snackbar.openCustomSnackBar(\"additional_devices.messages.\"+ message, 'bottom', 'center', true);\n          }\n        });\n      }\n      this.submitted = false;\n      this.closeEdit();\n    });\n    this.errorSubscription = this.store$\n      .select(MiscellaneousSettingsStoreSelectors.getMiscellaneousError)\n      .subscribe((data) => {\n        this.error = data;\n        if (!this.isBlank(this.error)) {\n          this.snackbar.openCustomSnackBar(\"additional_devices.messages.OPERATION_FAILED\", 'bottom', 'center', true);\n        }\n      });\n    this.loaderSubscription = this.store$\n      .select(MiscellaneousSettingsStoreSelectors.getLoaderStatus)\n      .subscribe((loaded) => {\n        if (loaded) {\n          this.loader = false;\n        }\n      });\n  }\n  getMiscSettings() {\n    let url = \"\";\n    if (!this.groupId) {\n      url = \"clinical-facilities/\" + this.cfId + \"/misc-settings\";\n    } else {\n      url =\n        \"clinical-facilities/\" +\n        this.cfId +\n        \"/groups/\" +\n        this.groupId +\n        \"/misc-settings\";\n    }\n    console.log(url);\n    this.store$.dispatch(\n      new MiscellaneousSettingsStoreActions.loadMiscellaneousSettingsRequestAction(\n        { url }\n      )\n    );\n  }\n  getSpo2Settings() {\n    let url = \"\";\n    if (!this.groupId) {\n      url = \"spo2-config/root/\" + this.cfId ;\n    } else {\n      url =\n        \"spo2-config/group/\" +\n        this.cfId +\n        \"/\" +\n        this.groupId ;\n    }\n    this.store$.dispatch(\n      new MiscellaneousSettingsStoreActions.loadSpo2SettingsRequestAction(\n        { url }\n      )\n    );\n  }\n  getMiscSettingsGrp(event, type) {\n    this.groupId = event;\n    if(this.groupId) {\n      this.editAccessCFA = false;\n      this.editAccessSC = [\"SC\"].some((ai) => this.roles.includes(ai));\n      if (type === 'CLINICAL') {\n        this.locationGroupId = null;\n        this.clinicalGroupId = event;\n      } else {\n        this.clinicalGroupId = null;\n        this.locationGroupId = event;\n      }\n      this.closeEdit();\n      this.loader = true;\n      let url =\n          \"clinical-facilities/\" +\n          this.cfId +\n          \"/groups/\" +\n          this.groupId +\n          \"/misc-settings\";\n      console.log(url);\n      this.store$.dispatch(\n          new MiscellaneousSettingsStoreActions.loadMiscellaneousSettingsRequestAction(\n              {url}\n          )\n      );\n    } else {\n      this.editAccessCFA = true;\n      this.loader = true;\n      this.getMiscSettings()\n    }\n    this.getSpo2Settings();\n  }\n  selectTab(value) {\n    this.selectedTab = value;\n  }\n  async updateSettings() {\n    this.invalidFormat = false;\n    this.fileName = \"\";\n    if (this.miscellaneousSettings?.bioSensorConfigSettings) {\n      this.submitted = true;\n      if (!(this.miscellaneousSettings?.bioSensorConfigSettings[0]?.relayPassword.trim() &&\n        this.miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalSSID.trim() &&\n        this.miscellaneousSettings?.bioSensorConfigSettings[0]?.hospitalPassword.trim())) {\n        return false;\n      }\n    }\n    this.loader = true;\n    this.miscellaneousSettings.otherSettings.facilityName = this.facilityName;\n    // this.store$.dispatch(\n    //   new MiscellaneousSettingsStoreActions.updateMiscellaneousSettingsRequestAction(\n    //     { data: this.miscellaneousSettings }\n    //   )\n    // );\n    // this.miscellaneousSettings.thirdPartyDeviceSettings.map(setting => {\n    //   if(setting.type === 'SPO2') {\n    //     setting.dutyCycle = Math.round((setting.onTime/(setting.onTime + setting.offTime))*100)\n    //   }\n    // });\n    this.miscellaneousService.updateSettings(this.miscellaneousSettings)\n      .subscribe(res => {\n        if (res.status === \"OK\") {\n          this.snackbar.openCustomSnackBar(\"additional_devices.messages.\" + res.message, 'bottom', 'center', true);\n          this.getMiscSettings();\n        }\n      });\n    if (JSON.stringify(this.spo2Settings) !== JSON.stringify(this.spo2SettingsCopy)) {\n      let url = !this.groupId ? \"spo2-config/root-edit\" : \"spo2-config/group-edit\"\n      if(this.groupId) {\n        this.spo2Settings.GroupId = this.groupId;\n      }\n      this.miscellaneousService.updateSpo2Settings(this.spo2Settings, url)\n        .subscribe(res => {\n          if (res.message === \"ALERT_SETTINGS_UPDATED\") {\n            this.snackbar.openCustomSnackBar(\"additional_devices.messages.spo2Config_settings_updated\", 'bottom', 'center', true);\n            this.getSpo2Settings();\n          }\n        });\n    }\n  }\n  factoryReset() {\n    let url = \"\";\n    let spo2Url =\"\"\n    this.fileName = \"\";\n    this.submitted = false;\n    this.invalidFormat = false;\n    this.invalidon = false;\n    this.invalidoff = false;\n    this.invalidInterval = false;\n    if (!this.groupId) {\n      url = \"clinical-facilities/\" + this.cfId + \"/misc-settings/factory-reset\";\n      spo2Url = \"spo2-config/factory-reset/\" + this.cfId + \"/\"+this.spo2Settings?.Spo2ConfigId;\n    } else {\n      url =\n        \"clinical-facilities/\" +\n        this.cfId +\n        \"/groups/\" +\n        this.groupId +\n        \"/misc-settings/factory-reset\";\n        spo2Url = \"spo2-config/group-reset/\" + this.cfId + \"/\"+this.spo2Settings?.GroupId;\n    }\n    this.loader = true;\n    this.store$.dispatch(\n      new MiscellaneousSettingsStoreActions.resetMiscellaneousSettingsRequestAction(\n        { url }\n      )\n    );\n\n    this.miscellaneousService.resetSpo2Settings(spo2Url)\n        .subscribe(res => {\n          if(res.status === \"OK\") {\n            this.getSpo2Settings();\n          }\n        })\n  }\n  showEditOnTime() {\n    this.editOnTime= true;\n  }\n  hideEditOnTime() {\n    this.editOnTime = false;\n  }\n  showEditOffTime() {\n    this.editOffTime = true;\n  }\n  hideEditOffTime() {\n    this.editOffTime = false;\n  }\n  toggleInterval() {\n    this.editInterval = !this.editInterval;\n  }\n  cancel() {\n    this.fileName = \"\";\n    this.submitted = false;\n    this.closeEdit();\n    this.invalidFormat = false;\n    this.invalidon = false;\n    this.invalidoff = false;\n    this.miscellaneousSettings = JSON.parse(\n      JSON.stringify(this.miscellaneousCopy)\n    );\n    this.spo2Settings = JSON.parse(\n      JSON.stringify(this.spo2SettingsCopy)\n    );\n    this.imgUrl = this.miscellaneousSettings?.otherSettings?.facilityLogo;\n    this.facilityName = this.miscellaneousSettings?.otherSettings?.facilityName;\n    this.snackbar.openCustomSnackBar(\"additional_devices.messages.updated_cancelled\", 'bottom', 'center', true);\n  }\n  reload(event) {\n    event.target.value = null;\n  }\n  closeEdit() {\n    this.editOnTime = false;\n    this.editOffTime = false;\n    this.editInterval = false;\n    this.editSsid1 = false;\n    this.editSsid2 = false;\n    this.editPass1 = false;\n    this.editPass2 = false;\n    this.valuesUpdated = false;\n    this.editFacilityName = false;\n    this.invalidFormat = false;\n  }\n  async upload(fileInput) {\n    this.invalidFormat = false;\n    let reader = new FileReader();\n    if (fileInput?.target?.files && fileInput?.target?.files[0]) {\n      let file = fileInput.target.files[0];\n      reader.readAsDataURL(file);\n      const pattern = /image-*/;\n      if (!file.type.match(pattern)) {\n        this.fileName = file.name;\n        this.invalidFormat = true;\n        this.invalid_msg = \"invalid_format\";\n        this.valuesUpdated = true;\n        return;\n      }\n      if (file.size > 2097152) {\n        this.invalidFormat = true;\n        this.invalid_msg = \"invalid_size\";\n        return;\n      }\n      let img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = async () => {\n        if (img.width < 48 || img.height < 48) {\n          this.invalidFormat = true;\n          this.invalid_msg = \"invalid_minsize\";\n          return;\n        }\n        if (img.height > img.width) {\n          this.invalidFormat = true;\n          this.invalid_msg = \"invalid_orientation\";\n          return;\n        }\n        if (img.width > 800 || img.height > 512) {\n          this.invalidFormat = true;\n          this.invalid_msg = \"invalid_maxsize\";\n          return;\n        }\n        this.valuesUpdated = true;\n        this.fileName = file.name;\n        reader.onload = () => {\n          this.imgUrl = reader.result;\n        };\n        reader.readAsDataURL(file);\n        let body = {\n          filename: this.cfId + \"/\" + this.fileName,\n        };\n        await this.miscellaneousService\n          .getSignedUrl(body)\n          .subscribe((response) => {\n            console.log(\"signedUrl\", response);\n            this.signedUrl = response.data;\n            this.miscellaneousService\n              .uploadImage(this.signedUrl, file)\n              .subscribe((res) => {\n                console.log(res);\n                let url = new URL(this.signedUrl);\n                const url_new = url.origin + url.pathname;\n                console.log(url_new);\n                this.miscellaneousSettings.otherSettings.facilityLogo = url_new;\n              });\n          });\n      }\n    } else {\n      this.fileName = \"Select File\";\n    }\n  }\n\n  isBlank(str) {\n    return (\n      !str ||\n      0 === str.length ||\n      str === \" \" ||\n      str === \"null\" ||\n      str === \"undefined\"\n    );\n  }\n  onTimeValid(value: any) {\n    this.invalidon = value < this.minOn || value > this.maxOn;\n    return (value >= this.minOn && value <= this.maxOn);\n  }\n  offTimeValid(value: any) {\n    this.maxOff = 9 * this.spo2Settings.Setting.OnTime ;\n    this.invalidoff = value < this.minOff || value > this.maxOff;\n    return (value >= this.minOff && value <= this.maxOff);\n  }\n  invalidInt(value) {\n    this.invalidInterval = value < this.minOnOFF || value > this.maxOnOff;\n    return (value >= this.minOnOFF && value <= this.maxOnOff);\n  }\n  invalidonoff() {\n    return (\n        ((!this.onTimeValid(this.spo2Settings?.Setting?.OnTime) || !this.offTimeValid(this.spo2Settings?.Setting?.OffTime)) && this.spo2Settings.Setting.Mode=='Periodic')\n        || !this.invalidInt(this.miscellaneousSettings?.thirdPartyDeviceSettings[1].interval) || this.invalidFacilityName());\n  }\n  invalidFacilityName() {\n    let regex = /^[a-zA-Z]{1}[a-zA-Z ]*$/;\n    return !regex.test(this.facilityName) && this.facilityName?.toString();\n  }\n  ngOnDestroy() {\n    this.settingSubscription.unsubscribe();\n    this.errorSubscription.unsubscribe();\n    this.loaderSubscription.unsubscribe();\n  }\n  disableEdit(event, tab, type) {\n    console.log(event);\n    this.valuesUpdated = JSON.stringify(this.miscellaneousSettings) !== JSON.stringify(this.miscellaneousCopy) || JSON.stringify(this.spo2Settings) !== JSON.stringify(this.spo2SettingsCopy);\n    if(!event.checked) {\n      if(tab === 'spo2') {\n        if(type === 'SPO2') {\n          this.editOnTime = false;\n          this.editOffTime = false;\n        } else {\n          this.editInterval = false;\n        }\n      } else if (tab === \"biosensor\") {\n        this.editSsid1 = false;\n        this.editSsid2 = false;\n        this.editPass1 = false;\n        this.editPass2 = false;\n      }\n    }\n  }\n  updated(spo2ValueChange?: boolean) {\n    if(spo2ValueChange) {\n      if( this.spo2Settings.Setting.Mode ==\"Continuous\"){\n        this.spo2Settings.Setting.DutyCycle =100;\n        this.spo2Settings.Setting.OnTime = this.minOn;\n        this.spo2Settings.Setting.OffTime =0;\n        this.editOnTime = false;\n        this.editOffTime = false;\n       }else{\n        this.spo2Settings.Setting.OnTime = this.minOn;\n        this.spo2Settings.Setting.OffTime = this.minOff;\n       }\n    }\n    if(this.spo2Settings.Setting.Mode ==\"Periodic\") {\n      this.spo2Settings.Setting.DutyCycle =Math.round(( this.spo2Settings.Setting.OnTime/( this.spo2Settings.Setting.OnTime +  this.spo2Settings.Setting.OffTime))*100);\n    }\n    this.valuesUpdated = JSON.stringify(this.miscellaneousSettings) !== JSON.stringify(this.miscellaneousCopy) || JSON.stringify(this.spo2Settings) !== JSON.stringify(this.spo2SettingsCopy);\n    if(this.facilityName !== this.miscellaneousCopy.otherSettings.facilityName) {\n      this.valuesUpdated = true;\n    }\n  }\n  confirmReset() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"250px\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_reset\",\n        },\n      },\n      \n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.factoryReset();\n      }\n    });\n  }\n  delete() {\n    const SaveChanges = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"250px\",\n      data: {\n        body: {\n          title: \"shared.confirm_text\",\n          text: \"additional_devices.confirm_delete_logo\",\n        },\n      },\n\n      disableClose: true,\n    });\n    SaveChanges.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.imgUrl = \"\";\n        this.miscellaneousSettings.otherSettings.facilityLogo = \"\";\n        this.invalidFormat = false;\n        this.updated();\n        this.fileName = null;\n      }\n    });\n  }\n  charsOnly(event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  onPaste(event: ClipboardEvent) {\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[a-zA-Z_ ]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n\n  numericsOnly(event: KeyboardEvent) {\n    let numericsOnlyPattern = /^[0-9]$/;\n    let key = event.key;\n    if (numericsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  checkForSpecialCharacters(event: ClipboardEvent){\n    let clipboardData = event.clipboardData;\n    let key = clipboardData.getData('text');\n    let charsOnlyPattern = /^[0-9]+$/;\n    if (charsOnlyPattern.test(key)) {\n        return true;\n    } else {\n        event.preventDefault();\n        return false;\n    }\n  }\n\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { delay, catchError } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport {\n  MiscellaneousData,\n  MiscSettings,\n  spo2ConfigData,\n  spo2Data,\n} from \"../../../interfaces/misc-settings.interface\";\n\n@Injectable()\nexport class MiscellaneousSettingsService {\n  constructor(private http: HttpClient) {}\n  getSettings(url) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http.get<MiscSettings>(environment.dataApiUrl + url, {\n      headers: authHeaders,\n    });\n  }\n\n  getEmrList() {\n    const url = \"info/emr/list\"\n    return this.http\n      .get(environment.dataApiUrl + url).pipe(delay(100), catchError(this.handleError));\n  }\n\n  getSpo2Settings(url) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.http.get<spo2ConfigData>(environment.dataApiUrl + url, {\n      headers: authHeaders,\n    });\n  }\n\n  updateSettings(body: MiscellaneousData) {\n    const url = \"clinical-facilities/misc-settings\";\n    console.log(\"update\", body);\n    return this.http\n      .post<any>(environment.dataApiUrl + url, body)\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  updateSpo2Settings(body: spo2Data,url) {\n    console.log(\"update\", body);\n    return this.http\n      .post<any>(environment.dataApiUrl + url, body)\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  resetSettings(url) {\n    return this.http\n      .post<any>(environment.dataApiUrl + url, \"\")\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  resetSpo2Settings(url) {\n    return this.http\n      .post<any>(environment.dataApiUrl + url, \"\")\n      .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getGroups(cfId) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    const url = \"clinical-facilities/\" + cfId + \"/groups?sortBy=name:asc\";\n    return this.http\n      .get<any>(environment.dataApiUrl + url, { headers: authHeaders })\n      .pipe(delay(100), catchError(this.handleError));\n  }\n  getSignedUrl(body) {\n    const url = \"files/upload-url\";\n    return this.http\n      .post<any>(environment.dataApiUrl + url, body)\n      .pipe(delay(100), catchError(this.handleError));\n  }\n  uploadImage(url, file) {\n    const authHeaders = new HttpHeaders({\n      \"x-amz-acl\": \"public-read\",\n    });\n    return this.http.put(url, file, { headers: authHeaders });\n  }\n  handleError(error: any) {\n    let errorMessage = \"\";\n    // Client-side error.\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n      // Server-side error.\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport {\n  MiscellaneousData,\n  MiscSettings,\n  spo2ConfigData,\n} from \"../../../interfaces/misc-settings.interface\";\n\nexport enum ActionTypes {\n  LOAD_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Load miscellaneous settings request\",\n  LOAD_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Load miscellaneous settings Failure\",\n  LOAD_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Load miscellaneous settings Success\",\n\n  UPDATE_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings request\",\n  UPDATE_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Failure\",\n  UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Update miscellaneous settings Success\",\n\n  RESET_MISCELLANEOUS_SETTINGS_REQUEST = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings request\",\n  RESET_MISCELLANEOUS_SETTINGS_FAILURE = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Failure\",\n  RESET_MISCELLANEOUS_SETTINGS_SUCCESS = \"[MISCELLANEOUSSETTINGS] Reset miscellaneous settings Success\",\n\n  LOAD_SPO2_SETTINGS_REQUEST = \"[SPO2ETTINGS] Load Spo2 settings request\",\n  LOAD_SPO2_SETTINGS_FAILURE = \"[SPO2ETTINGS] Load Spo2 settings Failure\",\n  LOAD_SPO2_SETTINGS_SUCCESS = \"[SPO2ETTINGS] Load Spo2 settings Success\",\n\n  UPDATE_SPO2_SETTINGS_REQUEST = \"[SPO2ETTINGS] Update Spo2 settings request\",\n  UPDATE_SPO2_SETTINGS_FAILURE = \"[SPO2ETTINGS] Update Spo2 settings Failure\",\n  UPDATE_SPO2_SETTINGS_SUCCESS = \"[SPO2ETTINGS] Update Spo2 settings Success\",\n\n}\n\n\nexport class loadSpo2SettingsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_SPO2_SETTINGS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadSpo2SettingsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_SPO2_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadSpo2SettingsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_SPO2_SETTINGS_SUCCESS;\n  constructor(public payload: { data: spo2ConfigData }) {}\n}\n\nexport class updateSpo2SettingsRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_SPO2_SETTINGS_REQUEST;\n  constructor(public payload: { data: spo2ConfigData ,url: string}) {}\n}\n\nexport class updateSpo2SettingsFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_SPO2_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateSpo2SettingsSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_SPO2_SETTINGS_SUCCESS;\n  constructor(public payload: { data: spo2ConfigData }) {}\n}\n\n\nexport class loadMiscellaneousSettingsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class loadMiscellaneousSettingsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class loadMiscellaneousSettingsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS;\n  constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class updateMiscellaneousSettingsRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST;\n  constructor(public payload: { data: MiscellaneousData }) {}\n}\n\nexport class updateMiscellaneousSettingsFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class updateMiscellaneousSettingsSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS;\n  constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport class resetMiscellaneousSettingsRequestAction implements Action {\n  readonly type = ActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class resetMiscellaneousSettingsFailureAction implements Action {\n  readonly type = ActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class resetMiscellaneousSettingsSuccessAction implements Action {\n  readonly type = ActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS;\n  constructor(public payload: { data: MiscSettings }) {}\n}\n\nexport type MiscellaneousSettingsActions =\n  | loadMiscellaneousSettingsFailureAction\n  | loadMiscellaneousSettingsSuccessAction\n  | loadMiscellaneousSettingsRequestAction\n  | updateMiscellaneousSettingsFailureAction\n  | updateMiscellaneousSettingsSuccessAction\n  | updateMiscellaneousSettingsRequestAction\n  | resetMiscellaneousSettingsFailureAction\n  | resetMiscellaneousSettingsSuccessAction\n  | resetMiscellaneousSettingsRequestAction\n  | loadSpo2SettingsFailureAction\n  | loadSpo2SettingsSuccessAction\n  | loadSpo2SettingsRequestAction\n  | updateSpo2SettingsFailureAction\n  | updateSpo2SettingsSuccessAction\n  | updateSpo2SettingsRequestAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { Observable, of as observableOf } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap } from \"rxjs/operators\";\nimport * as featureActions from \"./miscellaneous-settings.actions\";\nimport { MiscellaneousSettingsService } from \"../services/miscellaneous-settings.service\";\n\n@Injectable()\nexport class MiscellaneousSettingsEffects {\n  constructor(\n    private miscellaneousSettingsService: MiscellaneousSettingsService,\n    private actions$: Actions\n  ) {}\n\n\n  @Effect()\n  loadSpo2SettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.loadSpo2SettingsRequestAction>(\n      featureActions.ActionTypes.LOAD_SPO2_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService.getSpo2Settings(action.payload.url).pipe(\n        map(\n          (data) =>\n            new featureActions.loadSpo2SettingsSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.loadSpo2SettingsFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n\n\n  @Effect()\n  loadMiscellaneousSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.loadMiscellaneousSettingsRequestAction>(\n      featureActions.ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService.getSettings(action.payload.url).pipe(\n        map(\n          (data) =>\n            new featureActions.loadMiscellaneousSettingsSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.loadMiscellaneousSettingsFailureAction({ error })\n          )\n        )\n      )\n    )\n  );\n  @Effect()\n  updateSpo2SettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.updateSpo2SettingsRequestAction>(\n      featureActions.ActionTypes.UPDATE_SPO2_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService\n        .updateSpo2Settings(action.payload.data.data, action.payload.url)\n        .pipe(\n          map(\n            (data) =>\n              new featureActions.updateSpo2SettingsSuccessAction({\n                data,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.updateSpo2SettingsFailureAction({\n                error,\n              })\n            )\n          )\n        )\n    )\n  );\n  @Effect()\n  updateMiscellaneousSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.updateMiscellaneousSettingsRequestAction>(\n      featureActions.ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService\n        .updateSettings(action.payload.data)\n        .pipe(\n          map(\n            (data) =>\n              new featureActions.updateMiscellaneousSettingsSuccessAction({\n                data,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.updateMiscellaneousSettingsFailureAction({\n                error,\n              })\n            )\n          )\n        )\n    )\n  );\n  @Effect()\n  resetMiscellaneousSettingsRequestEffect$ = this.actions$.pipe(\n    ofType<featureActions.resetMiscellaneousSettingsRequestAction>(\n      featureActions.ActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST\n    ),\n    mergeMap((action) =>\n      this.miscellaneousSettingsService.resetSettings(action.payload.url).pipe(\n        map(\n          (data) =>\n            new featureActions.resetMiscellaneousSettingsSuccessAction({ data })\n        ),\n        catchError((error) =>\n          observableOf(\n            new featureActions.resetMiscellaneousSettingsFailureAction({\n              error,\n            })\n          )\n        )\n      )\n    )\n  );\n\n}\n","import { MiscellaneousData, spo2ConfigData } from \"../../../interfaces/misc-settings.interface\";\nimport {\n  MiscellaneousSettingsActions,\n  ActionTypes,\n} from \"./miscellaneous-settings.actions\";\n\nexport interface MiscellaneousSettingsState {\n  MISCELLANEOUS_SETTINGS_DATA: MiscellaneousData;\n  spo2ConfigData: spo2ConfigData;\n  error: string;\n  status: string;\n  message: string;\n  loaded: boolean;\n}\n\nexport const initialMiscellaneousSettingsState: MiscellaneousSettingsState = {\n  MISCELLANEOUS_SETTINGS_DATA: {\n    thirdPartyDeviceSettings: [],\n    ecgFilterSettings: {\n      ecgFilterSetting: \"\",\n      isActive: false,\n    },\n    bioSensorConfigSettings: [],\n    otherSettings: {\n      autoGeneratePatientId: false,\n      enableAccessToSPPHY: false,\n      facilityName: \"\",\n      facilityLogo: \"\",\n      emr: \"\"\n    },\n    facilityId: \"0\",\n    groupId: \"0\",\n    miscSettingsId: 0,\n  },\n  error: \"\",\n  status: \"\",\n  message: \"\",\n  loaded: false,\n  spo2ConfigData: {\n    data: {\n    Spo2ConfigId: \"\",\n    Setting: {\n        Enable: false,\n        Mode: \"\",\n        OnTime: 0,\n        OffTime: 0,\n        DutyCycle: 0\n    },\n    FacilityId: \"\",\n    FacilityName: \"\",\n    PatientId: \"\",\n    GroupId: \"\",\n    IsForPatient: false,\n    modifiedBy: \"\",\n    modifiedById: \"\",\n    modifiedDateTime: \"\"\n},\nmessage: \"\",\nstatus: \"\"\n  },\n};\n\n\nexport const miscellaneousSettingsFeatureKey = \"miscellaneousSettings\";\n\nexport function MiscellaneousSettingsReducer(\n  state: MiscellaneousSettingsState = initialMiscellaneousSettingsState,\n  action: MiscellaneousSettingsActions\n) {\n  switch (action.type) {\n\n    case ActionTypes.LOAD_SPO2_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n    case ActionTypes.LOAD_SPO2_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.LOAD_SPO2_SETTINGS_SUCCESS: {\n     // console.log(action.payload.data);\n      return {\n        ...state,\n        spo2ConfigData: action.payload.data,\n        message: \"\",\n        status: action.payload.data.status ,\n        loaded: true,\n      };\n    }\n\n    case ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.LOAD_MISCELLANEOUS_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n        message: \"\",\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n\n    case ActionTypes.UPDATE_SPO2_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.UPDATE_SPO2_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.UPDATE_SPO2_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        spo2ConfigData: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n\n    case ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.UPDATE_MISCELLANEOUS_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n    case ActionTypes.RESET_MISCELLANEOUS_SETTINGS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n      };\n    }\n\n    case ActionTypes.RESET_MISCELLANEOUS_SETTINGS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    case ActionTypes.RESET_MISCELLANEOUS_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        MISCELLANEOUS_SETTINGS_DATA: action.payload.data.data,\n        message: action.payload.data.message,\n        status: action.payload.data.status,\n        loaded: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  MiscellaneousSettingsState,\n  miscellaneousSettingsFeatureKey,\n} from \"./miscellaneous-settings.reducer\";\n\nconst getMiscellaneousSettingsState =\n  createFeatureSelector<MiscellaneousSettingsState>(\n    miscellaneousSettingsFeatureKey\n  );\n\nexport const getMiscellaneousSettings = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.MISCELLANEOUS_SETTINGS_DATA\n);\n\nexport const getSpo2Settings = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.spo2ConfigData\n);\n\nexport const getMiscellaneousError = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.error\n);\nexport const getMiscellaneousStatus = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.status\n);\nexport const getMiscellaneousMessage = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.message\n);\nexport const getLoaderStatus = createSelector(\n  getMiscellaneousSettingsState,\n  (state) => state?.loaded\n);\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./settings/settings.component\";\nimport {MiscellaneousComponent} from \"./miscellaneous/miscellaneous.component\";\nimport {ManageRelaysComponent} from \"./manage-relays/manage-relays/manage-relays.component\";\nimport {AlertConfigurationComponent} from \"./alert-configuration/alert-configuration.component\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {AuthGuard} from \"../guards/auth.guard\";\nimport {ManageUsersCFAComponent} from \"./manage-users/manage-users-cfa/manage-users-cfa.component\";\nimport {UserRoles} from \"../enum/roles.enum\";\nimport {RootComponent} from \"../shared/root/root.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: RootComponent,\n    children: [\n      {\n        path: \"\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n            UserRoles.PHYSICIAN,\n          ],\n        },\n      },\n      {\n        path: \"additional-devices\",\n        component: MiscellaneousComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n            UserRoles.PHYSICIAN,\n          ],\n        },\n      },\n      {\n        path: \"manage-users\",\n        component: ManageUsersCFAComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.SUPERVISORY_CLINICIAN,\n          ],\n        },\n      },\n      {\n        path: \"manage-relays\",\n        component: ManageRelaysComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n          ],\n        },\n      },\n      {\n        path: \"alert-configurations\",\n        component: AlertConfigurationComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.CLINICAL_FACILITY_ADMIN,\n            UserRoles.CLINICAL_FACILITY_ADMIN_CLONE,\n            UserRoles.GENERAL_CLINICIAN,\n            UserRoles.SUPERVISORY_CLINICIAN,\n            UserRoles.PHYSICIAN,\n          ],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), MatToolbarModule],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { SettingsRoutingModule } from \"./settings-routing.module\";\nimport { AppDateAdapter, APP_DATE_FORMATS } from \"../services/date.adapter\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { MiscellaneousComponent } from \"./miscellaneous/miscellaneous.component\";\nimport { ProfileComponent } from \"../profile/profile.component\";\nimport { ManageRelaysComponent } from \"./manage-relays/manage-relays/manage-relays.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DialogsModule } from \"../dialogs/dialogs.module\";\nimport { AlertConfigurationComponent } from \"./alert-configuration/alert-configuration.component\";\nimport { ParameterAlertsComponent } from \"./alert-configuration/parameter-alerts/parameter-alerts.component\";\nimport { TechnicalAlertsComponent } from \"./alert-configuration/technical-alerts/technical-alerts.component\";\nimport { PriorityComponent } from \"./alert-configuration/priority/priority.component\";\nimport { AlertMessagesComponent } from \"./alert-configuration/alert-messages/alert-messages.component\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\nimport { MatDialogRef, MatDialogModule } from \"@angular/material/dialog\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromMiscellaneousSettings from \"./miscellaneous/store/miscellaneous-settings.reducer\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { MiscellaneousSettingsEffects } from \"./miscellaneous/store/miscellaneous-settings.effects\";\nimport { MiscellaneousSettingsService } from \"./miscellaneous/services/miscellaneous-settings.service\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\nimport { AlertConfigurationsService } from \"./alert-configuration/services/alert-configuration.service\";\nimport { AlertDestinationComponent } from \"./alert-configuration/alert-destination/alert-destination.component\";\nimport { DigitOnlyDirective } from \"../directive/digit-only.directive\";\nimport * as fromAlertConfigurations from \"./alert-configuration/store/alert-configuration.reducer\";\nimport { AlertConfigurationEffects } from \"./alert-configuration/store/alert-configuration.effects\";\nimport { ManageRelaysModule } from \"./manage-relays/manage-relays.module\";\nimport { ManageUsersModule } from \"./manage-users/manage-users.module\";\nimport { AdduserComponent } from \"./manage-users/adduser/adduser.component\";\nimport { EdituserComponent } from \"./manage-users/edituser/edituser.component\";\nimport { AddgroupComponent } from \"./manage-users/addgroup/addgroup.component\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatDividerModule} from '@angular/material/divider';\nimport {LifeSignalsModule} from \"../life-signals/life-signals.module\";\nimport { DestinationSettingsComponent } from './alert-configuration/destination-settings/destination-settings.component';\nimport { ArrhythmiaAlertsComponent } from './alert-configuration/arrhythmia-alerts/arrhythmia-alerts.component';\n\n@NgModule({\n  declarations: [\n    SettingsComponent,\n    MiscellaneousComponent,\n    ProfileComponent,\n    ManageRelaysComponent,\n    AlertConfigurationComponent,\n    ParameterAlertsComponent,\n    TechnicalAlertsComponent,\n    PriorityComponent,\n    AlertMessagesComponent,\n    AlertDestinationComponent,\n    DigitOnlyDirective,\n    DestinationSettingsComponent,\n    ArrhythmiaAlertsComponent,\n  ],\n    imports: [\n        CommonModule,\n        SettingsRoutingModule,\n        SharedModule,\n        MatDividerModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatMenuModule,\n        MatIconModule,\n        MatSlideToggleModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatInputModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogsModule,\n        I18nModule,\n        StoreModule.forFeature(\n            fromMiscellaneousSettings.miscellaneousSettingsFeatureKey,\n            fromMiscellaneousSettings.MiscellaneousSettingsReducer\n        ),\n        StoreModule.forFeature(\n            fromAlertConfigurations.alertConfigurationKey,\n            fromAlertConfigurations.AlertConfigurationReducer\n        ),\n\n        EffectsModule.forFeature([\n            MiscellaneousSettingsEffects,\n            AlertConfigurationEffects,\n        ]),\n        MatDialogModule,\n        ManageRelaysModule,\n        ManageUsersModule,\n        MatProgressSpinnerModule,\n        MatTableModule,\n        LifeSignalsModule,\n    ],\n  entryComponents: [AdduserComponent, EdituserComponent, AddgroupComponent],\n  exports: [],\n  providers: [\n    {\n      provide: DateAdapter,\n      useClass: AppDateAdapter,\n    },\n    {\n      provide: MAT_DATE_FORMATS,\n      useValue: APP_DATE_FORMATS,\n    },\n    {\n      provide: MiscellaneousSettingsService,\n      useClass: MiscellaneousSettingsService,\n    },\n    {\n      provide: AlertConfigurationsService,\n      useClass: AlertConfigurationsService,\n    },\n    {\n      provide: MatDialogRef,\n      useValue: { hasBackdrop: false },\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: KeycloakBearerInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class SettingsModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { BackendApiService } from \"../../services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"./settings.component.html\",\n  styleUrls: [\"./settings.component.scss\"],\n})\nexport class SettingsComponent implements OnInit {\n  settingsSummary: any = {\n    users: 0,\n  };\n  roles;\n  manageUsers = false;\n\n  constructor(\n    private backendApiService: BackendApiService,\n    private autheticationService: AuthenticationService\n  ) {}\n  cfId: string;\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.roles = this.autheticationService.getRoles();\n    if (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"SC\") > -1 || this.roles.indexOf(\"CFAC\") > -1) {\n      this.manageUsers = true;\n      this.getUsersCount({});\n    }\n  }\n\n  // Fetch Clinical facility summary page data\n  async getUsersCount(params: any) {\n    let url = \"clinical-facilities/\" + this.cfId + \"/users/count\";\n    const resp: any = await this.backendApiService\n      .callGetApi(environment.dataApiUrl + url, params)\n      .toPromise();\n    if (resp.status === \"OK\") {\n      this.settingsSummary.users = resp.data;\n    }\n  }\n  relayViewAccess(){\n   return (this.roles.indexOf(\"CFA\") > -1 || this.roles.indexOf(\"SC\") > -1 || this.roles.indexOf(\"CFAC\") > -1 || this.roles.indexOf(\"GC\") > -1)\n  }\n}\n","<div class=\"grid-fluid-container\">\r\n    <div class=\"container grid-aligning-summary pt-5 pb-5 mx-auto col-md-12 col-lg-10 col-xl-8 col-xxl-7\">\r\n        <div class=\"row justify-content-center align-items-center card-items\">\r\n            <app-setting-card [view]=\"manageUsers\" [showCount]=\"manageUsers\"\r\n                title=\"{{'home_alerts.label_manage_users'|translate}}\" subTitle=\"home_cards.card_sub_title_users\"\r\n                image=\"manageuser.png\" [count]=\"settingsSummary?.users\" routerUrl=\"/settings/manage-users\"\r\n                class=\"col-md-4 col-sm-12\">\r\n            </app-setting-card>\r\n            <app-setting-card title=\"{{'home_alerts.label_manage_groups'|translate}}\" image=\"managegroup.png\"\r\n                [routerUrl]=\"'manage-group'\" class=\"col-md-4 col-sm-12\">\r\n            </app-setting-card>\r\n            <app-setting-card [view]=\"relayViewAccess()\" class=\"col-md-4 col-sm-12\"\r\n                title=\"{{'home_alerts.label_manage_relays'|translate}}\" image=\"managerelay.png\"\r\n                routerUrl=\"/settings/manage-relays\"></app-setting-card>\r\n        </div>\r\n        <div class=\"row d-none d-md-block\">\r\n            <div [ngClass]=\"manageUsers ? 'col-sm-10 my-5 mx-auto' : 'col-sm-8 my-5 mx-auto'\">\r\n                <mat-divider></mat-divider>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-center align-items-center card-items\">\r\n            <!-- <app-setting-card title=\"{{'home_alerts.label_alert_configuration'|translate}}\" image=\"notif-icon.png\"\r\n                routerUrl=\"/settings/alert-configurations\" class=\"col-md-4 col-sm-12\"></app-setting-card> -->\r\n            <app-setting-card title=\"{{'home_alerts.label_miscellaneous'|translate}}\" image=\"miscelaneous.png\"\r\n                routerUrl=\"/settings/additional-devices\" class=\"col-md-4 col-sm-12\"></app-setting-card>\r\n            <app-setting-card class=\"col-md-4 col-sm-12\"></app-setting-card>\r\n            <app-setting-card class=\"col-md-4 col-sm-12\"></app-setting-card>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n"]}