{"version":3,"file":"main-es2017.js","mappings":"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":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/active-patients/admit-patient-modal/admit-patient-modal.component.ts","./src/app/active-patients/admit-patient-modal/admit-patient-modal.component.html","./src/app/active-patients/confirmation-dialog/confirmation-dialog.component.ts","./src/app/active-patients/confirmation-dialog/confirmation-dialog.component.html","./src/app/active-patients/forms/active-patients.form.ts","./src/app/active-patients/manager/active-patient-manager.service.ts","./src/app/active-patients/models/active-patients.model.ts","./src/app/active-patients/patient-admitted-modal/patient-admitted-modal.component.ts","./src/app/active-patients/patient-admitted-modal/patient-admitted-modal.component.html","./src/app/active-patients/patient-more-info-dialog/patient-more-info-dialog.component.ts","./src/app/active-patients/patient-more-info-dialog/patient-more-info-dialog.component.html","./src/app/active-patients/remove-biosensor/remove-biosensor.component.ts","./src/app/active-patients/remove-biosensor/remove-biosensor.component.html","./src/app/active-patients/services/active-patients.service.ts","./src/app/active-patients/store/active-patients.actions.ts","./src/app/active-patients/store/active-patients.reducer.ts","./src/app/active-patients/store/active-patients.selector.ts","./src/app/active-patients/store/index.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/bio-sensor/bio-sensor.component.ts","./src/app/bio-sensor/bio-sensor.component.html","./src/app/core/directives/sort-header/sort-header.component.ts","./src/app/core/directives/sort-header/sort-header.component.html","./src/app/core/directives/sort.directive.ts","./src/app/core/directives/sort.module.ts","./src/app/discharge-patients/discharge-patient/discharge-patient.component.ts","./src/app/discharge-patients/discharge-patient/discharge-patient.component.html","./src/app/discharge-patients/discharge-patients-routing.module.ts","./src/app/discharge-patients/discharge-patients.module.ts","./src/app/discharge-patients/manager/discharge-patient-manager.service.ts","./src/app/discharge-patients/service/discharge-patient.service.ts","./src/app/discharge-patients/store/discharge-patients.actions.ts","./src/app/discharge-patients/store/discharge-patients.effects.ts","./src/app/discharge-patients/store/discharge-patients.reducer.ts","./src/app/discharge-patients/store/discharge-patients.selector.ts","./src/app/discharge-patients/store/index.ts","./src/app/enum/roles.enum.ts","./src/app/guards/auth.guard.ts","./src/app/i18n/i18n.module.ts","./src/app/i18n/localization-config.service.ts","./src/app/i18n/localization.service.ts","./src/app/init/keycloak-init.factory.ts","./src/app/interceptors/error.interceptor.ts","./src/app/life-signals/_components/ls-page-header/ls-page-header.component.ts","./src/app/life-signals/_components/ls-page-header/ls-page-header.component.html","./src/app/life-signals/_components/ls-paginator/ls-paginator-intl.ts","./src/app/life-signals/_components/ls-paginator/ls-paginator.component.ts","./src/app/life-signals/_components/ls-paginator/ls-paginator.component.html","./src/app/life-signals/_components/ls-table/ls-table.component.ts","./src/app/life-signals/_components/ls-table/ls-table.component.html","./src/app/life-signals/_components/ls-widget/ls-widget.component.ts","./src/app/life-signals/_components/ls-widget/ls-widget.component.html","./src/app/life-signals/_directives/ls-widget-name.directive.ts","./src/app/life-signals/_models/ls-column.model.ts","./src/app/life-signals/life-signals.module.ts","./src/app/manage-group/models/manage-groups.model.ts","./src/app/manage-group/services/manage-groups.service.ts","./src/app/manage-group/store/index.ts","./src/app/manage-group/store/manage-groups.actions.ts","./src/app/manage-group/store/manage-groups.reducer.ts","./src/app/manage-group/store/manage-groups.selector.ts","./src/app/pipe/filter.pipe.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/reducers/index.ts","./src/app/services/authentication.service.ts","./src/app/services/backendapi.service.ts","./src/app/services/snackbar.service.ts","./src/app/services/user-preference.service.ts","./src/app/settings/manage-users/services/manage-users.service.ts","./src/app/shared/_services/manage-admin.service.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.html","./src/app/shared/data-table-cloned-view/data-table-cloned-view.component.ts","./src/app/shared/data-table-cloned-view/data-table-cloned-view.component.html","./src/app/shared/data-table-manage-admin/data-table-manage-admin.component.ts","./src/app/shared/data-table-manage-admin/data-table-manage-admin.component.html","./src/app/shared/dialogs/about/about.component.ts","./src/app/shared/dialogs/about/about.component.html","./src/app/shared/dialogs/hospital/hospital.component.ts","./src/app/shared/dialogs/hospital/hospital.component.html","./src/app/shared/dialogs/inactive-active/inactive-active.component.ts","./src/app/shared/dialogs/inactive-active/inactive-active.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/lsValidators/lsvalidators.ts","./src/app/shared/matselect-withsearch/matselect-withsearch.component.ts","./src/app/shared/matselect-withsearch/matselect-withsearch.component.html","./src/app/shared/navigation/navigation.component.ts","./src/app/shared/navigation/navigation.component.html","./src/app/shared/nested-dropdown/menu/menu.component.ts","./src/app/shared/nested-dropdown/menu/menu.component.html","./src/app/shared/nested-dropdown/nested-dropdown.component.ts","./src/app/shared/nested-dropdown/nested-dropdown.component.html","./src/app/shared/nested-dropdown/nested-dropdown.service.ts","./src/app/shared/page-nav-bar/page-nav-bar.component.ts","./src/app/shared/page-nav-bar/page-nav-bar.component.html","./src/app/shared/root/root.component.ts","./src/app/shared/root/root.component.html","./src/app/shared/setting-card/setting-card.component.ts","./src/app/shared/setting-card/setting-card.component.html","./src/app/shared/shared.module.ts","./src/app/shared/store/manage-admin/index.ts","./src/app/shared/store/manage-admin/manage-admin.actions.ts","./src/app/shared/store/manage-admin/manage-admin.effects.ts","./src/app/shared/store/manage-admin/manage-admin.reducer.ts","./src/app/shared/store/manage-admin/manage-admin.selector.ts","./src/app/shared/tel-input/tel-input.component.ts","./src/app/shared/tel-input/tel-input.component.html","./src/app/utils/helpers.ts","./src/app/validators/phone-no.validator.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport {FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MatDialog,\r\n} from \"@angular/material/dialog\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\n\r\nimport {\r\n  calculateDischargedDate,\r\n  createNewPatientForm, epochToDate, getDateFromString, getGender,\r\n  mapIndividiualToAdmitPatient,\r\n  populateAdmitPatientValues,\r\n  populateAssignPatientValues,\r\n} from \"../forms/active-patients.form\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport {\r\n  DOCTORS,\r\n  NewPatient2,\r\n  ActivePatient,\r\n  WeightUnits,\r\n  HeightUnits,\r\n} from \"../models/active-patients.model\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { BehaviorSubject, of, Subject, Subscription } from \"rxjs\";\r\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\r\nimport {  map } from \"rxjs/operators\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { LSvalidators } from \"src/app/shared/lsValidators/lsvalidators\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { UserPreferenceService } from \"@services/user-preference.service\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\r\nimport csc from \"country-state-city\";\r\nimport axios from 'axios';\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\n\r\n@Component({\r\n  selector: \"app-admit-patient-modal\",\r\n  templateUrl: \"./admit-patient-modal.component.html\",\r\n  styleUrls: [\"./admit-patient-modal.component.scss\"],\r\n})\r\nexport class AdmitPatientModalComponent implements OnInit, AfterContentInit, OnDestroy{\r\n  form: FormGroup;\r\n  public newPatientForm: FormGroup;\r\n  public doctorsList$: Observable<DOCTORS[]>;\r\n  private doctorsList$$: BehaviorSubject<DOCTORS[]> = new BehaviorSubject<DOCTORS[]>([]);\r\n  private cGroup$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<any[]>;\r\n  public locationGroups$: Observable<any[]>;\r\n  public clinicalGroups$: Observable<any[]>;\r\n  public thirdPartyDevice: Array<any> = new Array();\r\n  SearchCountryField = SearchCountryField;\r\n  CountryISO = CountryISO;\r\n  preferredCountries: CountryISO[] = [\r\n    CountryISO.India,\r\n    CountryISO.UnitedStates,\r\n    CountryISO.SouthAfrica,\r\n  ];\r\n  countryArray = [];\r\n  statesOfCountry = [];\r\n  selectedCountry: string;\r\n  countryCode: string;\r\n  selectedState: string;\r\n  stateCode: string;\r\n  citiesOfStateAndCountry = [];\r\n  selectedCountryData = [];\r\n  selectedStateData = [];\r\n  selectedCityData = [];\r\n  \r\n  thirdPartyDevice_entered: boolean[] = [false];\r\n  selectGroup = [{name: 'None', groupId: null, parent: 'ROOT', type: null}];\r\n  admissionId = '';\r\n  admissionIdCopy = '';\r\n  today = new Date();\r\n  minAdmitDate = new Date();\r\n  maxAdmitDate;\r\n  maxDOB = new Date();\r\n  minDOB = new Date();\r\n  selectedTab: string = 'ACTIVE_PATIENT';\r\n  patientIDChanged: Subject<string> = new Subject<string>();\r\n  patientData: Array<any> = new Array();\r\n  modalTitle: string = '';\r\n  userPreferenceUnit = 'SI';\r\n  weightUnit = \"KG\";\r\n  heightUnit = \"CM\";\r\n  autoCompleted = false;\r\n  patientvalidated =true;\r\n  minMaxValues = {\r\n    weight: {\r\n      KG: {\r\n        min: 20,\r\n        max: 250\r\n      },\r\n      POUND: {\r\n        min: 44,\r\n        max: 552\r\n      }\r\n    },\r\n    height: {\r\n      CM: {\r\n        min: 80,\r\n        max: 300\r\n      },\r\n      INCH: {\r\n        min: 31.5,\r\n        max: 119\r\n      }\r\n    }\r\n  }\r\n  submitted = false;\r\n  doctorsList = [];\r\n  prescriberList = [];\r\n  technicianList = [];\r\n  interpreterList = [];\r\n  activeDoctorsList = [];\r\n  dischargedPatients = [];\r\n  groups = [];\r\n  autoFilledPatient;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<AdmitPatientModalComponent>,\r\n    public formbuilder: FormBuilder,\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private manageGroupService: ManageGroupsService,\r\n    private snackbar: SnackbarService,\r\n    private userPreferences: UserPreferenceService\r\n  ) {\r\n    this.minAdmitDate.setDate(this.minAdmitDate.getDate() - 30);\r\n    this.maxDOB.setFullYear(this.minAdmitDate.getFullYear() - 10);\r\n    this.minDOB.setFullYear(this.minAdmitDate.getFullYear() - 150);\r\n    this.doctorsList$ = this.doctorsList$$.asObservable();\r\n    this.groups$ = this.cGroup$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: any[]) => {\r\n      return this.selectGroup.concat(groups.filter(g => g.type === \"PHYSICAL\"))\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: any[]) => {\r\n      return this.selectGroup.concat(groups.filter(g => g.type === \"CLINICAL\"))\r\n    }));\r\n    this.heightUnit = this.userPreferences.getUserHeightUnit();\r\n    this.weightUnit = this.userPreferences.getUserWeightUnit();\r\n    this.userPreferenceUnit = this.userPreferences.getUserUnitSystem();\r\n  }\r\n  ngAfterContentInit(): void {\r\n    //Set up some provider choices\r\n    this.prescriberList = this.service.getFacilityStaff('prescriber'); \r\n    this.technicianList = this.service.getFacilityStaff('ecg_technician'); \r\n    this.interpreterList = this.service.getFacilityStaff('interpreter');\r\n    this.newPatientForm = createNewPatientForm(this.formbuilder, this.weightUnit, this.heightUnit, this.admissionId, this.timeZone, this.timeZoneOffset);\r\n  }\r\n\r\n  age:number;\r\n  dob:string;\r\n  country:string;\r\n  state: string;\r\n  city: string;\r\n  selectedIndex:number=0;\r\n  groupData=[];\r\n  \r\n  calculateAge(): number {\r\n      const day = new Date(this.dob).getDate();\r\n      const month = new Date(this.dob).getMonth() + 1;\r\n      const year = new Date(this.dob).getFullYear();\r\n      const test = `${year}-${month}-${day}`;\r\n    console.log(test);\r\n    const today = new Date();\r\n    const birthDate = new Date(this.dob);\r\n  \r\n    this.age  = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n  \r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n      this.age--;\r\n    }\r\n    return this.age;\r\n  }\r\n\r\n  getdob(){\r\n    var currentYear = new Date().getFullYear();\r\n\r\n    var birthYear = currentYear - this.age ;\r\n    var dateOfBirth = new Date(birthYear, 0, 2); \r\n    var options = { \r\n      year: 'numeric', \r\n      month: '2-digit', \r\n      day: '2-digit',\r\n      timeZone: 'UTC' \r\n    };\r\n    \r\n    this.dob = dateOfBirth.toLocaleDateString('en-US', options as Intl.DateTimeFormatOptions);\r\n  }\r\n\r\n  setupCountryStateCity() {\r\n    this.countryArray = csc.getAllCountries() || [];\r\n    try {\r\n      this.selectedCountryData = this.countryArray.filter((data) => {\r\n        return data.name === this.country;\r\n      });\r\n      this.countryCode = this.selectedCountryData[0]?.isoCode;\r\n      this.statesOfCountry =\r\n        csc.getStatesOfCountry(this.selectedCountryData[0]?.isoCode) || [];\r\n      this.selectedStateData = this.statesOfCountry.filter((data) => {\r\n        return data.name === this.state;\r\n      });\r\n      this.stateCode = this.selectedStateData[0]?.isoCode;\r\n      this.citiesOfStateAndCountry =\r\n        csc.getCitiesOfState(this.countryCode, this.stateCode) || [];\r\n      this.selectedCityData = this.citiesOfStateAndCountry.filter((data) => {\r\n        return data.name === this.city;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n    getCountryValues(country) {\r\n      return country.isoCode + \"|\" + country.name;\r\n    }\r\n\r\n    getStatesByCountry(event) {\r\n      try {\r\n        const domValue = event.value;\r\n        this.countryCode = domValue.split(\"|\")[0];\r\n        this.selectedCountry = domValue.split(\"|\")[1];\r\n        this.selectedCountryData = this.countryArray.filter((data) => {\r\n          return data.name === this.selectedCountry;\r\n        });\r\n        this.statesOfCountry = csc.getStatesOfCountry(this.countryCode);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    getCityByStateAndCountry(event) {\r\n      this.selectedState = event.option.value;\r\n      this.stateCode = this.statesOfCountry.find(state => state.name === this.selectedState)?.isoCode || '';\r\n      this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n        this.countryCode,\r\n        this.stateCode\r\n      );\r\n    }\r\n\r\n    getGroupDetails() {\r\n      this.manageGroupService.fetch().subscribe(groups => {\r\n        if (groups['data'].length > 0) {\r\n          this.groupData.push(groups['data']);\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n    filteredResults(items, key, searchTxt) {\r\n      if(!items || !items.length) return items;\r\n      if(!searchTxt || !searchTxt.length) return items;\r\n      return items.filter(item => {\r\n        return item[key].toString().toLowerCase().indexOf(searchTxt.toLowerCase()) > -1\r\n      });\r\n    }\r\n\r\n    public tabChanged(tabChangeEvent: MatTabChangeEvent): void {\r\n        this.selectedIndex = tabChangeEvent.index;\r\n    }\r\n\r\n    public nextStep() {\r\n        this.selectedIndex += 1;\r\n    }\r\n\r\n  loadState = 'DEFAULT';\r\n  error: any;\r\n  patientIDChangedSub: Subscription;\r\n  patientId: string;\r\n  isEdit = false;\r\n  timeZone;\r\n  timeZoneOffset;\r\n\r\n  ngOnInit(): void {\r\n    // this.setupCountryStateCity();\r\n    this.getGroupDetails();\r\n    if (this.data?.activePatient) {\r\n      this.selectedTab = 'ACTIVE_PATIENT';\r\n    } else if (this.data?.patchId) {\r\n      this.selectedTab = 'ASSIGN_PATIENT';\r\n    }\r\n    if (this.data?.mode === 'EDIT') {\r\n      this.isEdit = true;\r\n    }\r\n    if(!this.isEdit) {\r\n      this.generateAdmissionId();\r\n    }\r\n    this.userPreferenceUnit = this.userPreferences.getUserUnitSystem();\r\n    if(this.userPreferenceUnit === 'IS') {\r\n      this.weightUnit = \"POUND\";\r\n      this.heightUnit = \"INCH\";\r\n    }\r\n    this.updateModalTitle();\r\n    // this.timeZone = sessionStorage.getItem('timezone');\r\n    this.timeZoneOffset = this.userPreferences.getUserTimeZone();\r\n    this.getDoctorsList();\r\n    this.getCGroups();\r\n    this.maxAdmitDate = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    this.setupCountryStateCity();\r\n    \r\n  }\r\n\r\n  getMaxAdmitTime() {\r\n    let current = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    return current < this.maxAdmitDate ? current : this.maxAdmitDate;\r\n  }\r\n  getMinAdmitTime() {\r\n    return this.minAdmitDate < this.maxAdmitDate ? this.minAdmitDate : this.maxAdmitDate;\r\n  }\r\n  generateAdmissionId(){\r\n    this.service.generateAdmissionId()\r\n        .subscribe((res: any) => {\r\n          this.admissionId = res.data;\r\n          this.admissionIdCopy = res.data; \r\n        });\r\n  }\r\n  updateModalTitle() {\r\n    this.modalTitle = (this.selectedTab === 'ACTIVE_PATIENT') ? \r\n                        ((this.isEdit) ? 'active-patients-module.table.edit_patient_title' : \r\n                          'active-patients-module.table.admit_patient_title') : \r\n                        'active-patients-module.table.assign_patient_title';\r\n  }\r\n\r\n  searchPatient(event, type) {\r\n    let patientId;\r\n    if(type === 'keyup') {\r\n      patientId = event.target.value;\r\n    } else {\r\n      patientId = event.clipboardData.getData('text');\r\n    }\r\n    if (patientId.length > 3) {\r\n      this.patientvalidated = false;\r\n      this.service.searchPatient(patientId)\r\n        .subscribe((res: any) => {\r\n          this.patientData = res.data.items;\r\n          this.patientvalidated = true;\r\n        }, (error) => {\r\n          this.error = error;\r\n          this.patientvalidated = true;\r\n        },\r\n        );\r\n    }else{\r\n      this.patientData =[];\r\n      this.patientvalidated = true;\r\n    }\r\n  }\r\n\r\n  populatePatient(event) {\r\n    if (this.patientData?.length && this.patientData[0]?.patientId.toUpperCase() === event.target.value.toUpperCase()) {\r\n      this.patientvalidated = false;\r\n      let event = { option: { value: this.patientData[0]?.patientId } }\r\n      this.onOptionSelected(event);\r\n    }\r\n}\r\n\r\n  getPatientDataOf(id) {\r\n    this.patientData = [];\r\n    let url = `patients/?sortBy=PatientID:desc&page=1&size=5&patientid=${id}`\r\n    this.manager.getActivePatient(url);\r\n    return this.manager.selectActivePatient();\r\n  }\r\n\r\n  groupsSubscription: Subscription;\r\n  getCGroups() {\r\n    this.groupsSubscription = this.manageGroupService.fetch().subscribe(groups => {\r\n      this.groups = groups['data'];\r\n      if (groups['data'].length > 0) {\r\n        this.cGroup$.next(groups['data']);\r\n      }\r\n      this.initNewPatientForm();\r\n    })\r\n  }\r\n\r\n  /* Clear Select on location and Clinclical */\r\n  clearSelect(controlName, event) {\r\n    event.stopPropagation();\r\n    this.newPatientForm.get(controlName).setValue(null);\r\n  }\r\n\r\n  addClass(event: KeyboardEvent, i: number): void {\r\n    this.thirdPartyDevice_entered[i] = true;\r\n  }\r\n\r\n  initNewPatientForm() {\r\n    if (this.data?.activePatient) {\r\n      this.data.activePatient = this.updateHeightWeight(this.data?.activePatient);\r\n      this.patchIds = this.data?.activePatient?.patchIds;\r\n      if(!this.groups.find(group => group.groupId === this.data?.activePatient?.cgroupId) && this.data?.activePatient?.cgroupId) {\r\n        let patientGroup = {groupId: this.data?.activePatient?.cGroup.id, name: this.data?.activePatient?.cGroup.name, type: 'CLINICAL'}\r\n        this.groups = [patientGroup, ...this.groups];\r\n        console.log('gps', this.groups);\r\n        this.cGroup$.next(this.groups);\r\n      }\r\n      if(!this.groups.find(group => group.groupId === this.data?.activePatient?.pgroupId) && this.data?.activePatient?.pgroupId) {\r\n        let patientGroup = {groupId: this.data?.activePatient?.pGroup.id, name: this.data?.activePatient?.pGroup.name, type: 'PHYSICAL'}\r\n        this.groups = [patientGroup, ...this.groups];\r\n        this.cGroup$.next(this.groups);\r\n      }\r\n      if(this.patchIds.length && this.patchIds[0]?.startTime) {\r\n        this.maxAdmitDate = new Date(new Date(this.patchIds[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n        // if(this.patchIds[0]?.startTime < this.data?.activePatient?.startedOn) {\r\n        //   this.data.activePatient.startedOn = this.patchIds[0]?.startTime;\r\n        // }\r\n      }\r\n\r\n      populateAdmitPatientValues(\r\n        this.data?.activePatient,\r\n        this.newPatientForm,\r\n        this.doctorsList$$.getValue(),\r\n        this.cGroup$.getValue(),\r\n          this.weightUnit,\r\n          this.heightUnit,\r\n          this.timeZone\r\n      );\r\n      this.newPatientForm.markAllAsTouched();\r\n    } else if (this.data?.patchId) {\r\n      let biosensor = this.data?.patchId;\r\n      if(!this.patchIds?.length) {\r\n        this.patchIds.push({\r\n          deviceId: biosensor?.patchId,\r\n          deviceType: \"Biosensor Id\",\r\n          startTime: biosensor?.patchDetails[0]?.startTime,\r\n          endTime: biosensor?.patchDetails[0]?.endTime\r\n        });\r\n      }\r\n      this.maxAdmitDate = new Date(new Date(biosensor?.patchDetails[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n\r\n      populateAssignPatientValues(this.data?.patchId, this.newPatientForm,\r\n        this.doctorsList$$.getValue(), this.admissionId, this.maxAdmitDate)\r\n    } else {\r\n      this.newPatientForm = createNewPatientForm(this.formbuilder, this.weightUnit, this.heightUnit, this.admissionId, this.timeZone, this.timeZoneOffset);\r\n      this.newPatientForm.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  patchIds: Array<any> = new Array();\r\n  openMoreInfoDialog() {\r\n    let patches = {\r\n      activePatch: this.data?.activePatient?.activePatch || '',\r\n      patchIds: this.patchIds,\r\n      heading: \"active-patients-module.dialog.biosensor_information\",\r\n      readOnly: this.selectedTab === 'ASSIGN_PATIENT'\r\n    }\r\n    this.dialog.open(PatientMoreInfoDialogComponent, {\r\n      width: \"700px\",\r\n      //minWidth: \"700px\",\r\n      maxWidth: \"95vw\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: patches\r\n    }).afterClosed()\r\n      .subscribe(response => {\r\n        if (response) {\r\n          this.patchIds = response;\r\n          this.newPatientForm.get(\"patchIds\").setValue(response[0]?.deviceId)\r\n        }\r\n      });\r\n  }\r\n\r\n  getActivePatch() {\r\n    if(this.data?.activePatient) {\r\n      return this.data?.activePatient?.activePatch\r\n    } \r\n  }\r\n\r\n  getAutogeneratedPatientId() {\r\n    this.service.getAutogeneratedPatientId().subscribe(d => {\r\n      this.newPatientForm.get(\"patient_id_mrn\").setValue(d['data']);\r\n    }, error => {\r\n      if (error) {\r\n        let key = \"errors.err_generic_message\";\r\n        if (error === 'AUTO_GENERATE_NOT_ENABLED') {\r\n          key = \"errors.\" + error;\r\n        }\r\n        this.snackbar.openSnackBar(key, 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  doctorsListSub: Subscription;\r\n  getDoctorsList() {\r\n    /*\r\n    this.doctorsListSub = this.manager.getDoctorsList().subscribe((list) => {\r\n      console.log(list);\r\n      this.doctorsList = list.map(doctor => {\r\n        return {\r\n          ...doctor,\r\n          displayName: `${doctor?.firstName} ${doctor?.lastName}`\r\n        }\r\n      });\r\n      console.log(this.doctorsList);\r\n      this.activeDoctorsList = this.doctorsList.filter(phy => phy.isActive === true || phy.id === this.data?.activePatient?.doctorId);\r\n      this.doctorsList$$.next(this.activeDoctorsList);\r\n    });\r\n    */\r\n  }\r\n\r\n    savePatientDetails(formData) {\r\n    this.submitted = true;\r\n    if(this.newPatientForm.invalid) {\r\n      this.newPatientForm.markAllAsTouched();\r\n      return;\r\n    } else if (!this.patientvalidated || this.patientData?.length) {\r\n      this.snackbar.openSnackBar(\"errors.assigned_patient_id_searching\", 'bottom', 'center', true);\r\n      if (this.patientData[0]?.patient_id_mrn.toUpperCase() === this.newPatientForm?.controls['patient_id_mrn']?.value.toUpperCase()) {\r\n        this.onOptionSelected({ option: { value: this.patientData[0].patient_id_mrn } });\r\n        this.patientData = [];\r\n        return;\r\n      }\r\n    } else {\r\n      this.setControlState(this.disableFields, true);\r\n      formData = this.newPatientForm;\r\n      formData.value.first_name = formData?.value?.first_name ? formData?.value.first_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      formData.value.last_name = formData?.value?.last_name ? formData?.value.last_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n     \r\n      const mobile_num = formData.get(\"mobile\").value;\r\n      if (mobile_num !==null && mobile_num !==\"\") {\r\n        //const parsedValue = parsePhoneNumberFromString(formData.get(\"mobile\").value);\r\n        formData.value.mobile = mobile_num.toString();\r\n      }\r\n      let patient: NewPatient2 = mapIndividiualToAdmitPatient(formData, this.cGroup$.getValue(), this.patchIds, this.timeZoneOffset);\r\n      if (this.data?.mode === 'EDIT' || this.isSelectedFromAuto) {\r\n        this.manager.updatePatient(patient).subscribe((resp: any) => {\r\n          if (resp.addEditState === TableState.SUCCESS) {\r\n            this.dialogRef.close(patient);\r\n          } else if (resp.error) {\r\n            if(this.isSelectedFromAuto) {\r\n              this.setControlState(this.disableFields, false);\r\n            }\r\n            if(this.autoFilledPatient?.isDischarged) {\r\n              this.setControlState(['admissionId'], true);\r\n            }\r\n            this.dispError(resp.error);\r\n          }\r\n        });\r\n      } else {\r\n        this.manager.createPatient(patient).subscribe(resp => {\r\n          if (resp.PATIENT && resp.addEditState === TableState.SUCCESS) {\r\n            this.dialogRef.close(patient);\r\n          } else if (resp.error) {\r\n            this.dispError(resp.error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  dispError(error: string) {\r\n    switch (error) {\r\n      case \"PATCHES_ALREADY_IN_USE\":\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n        break;\r\n      case \"PREVIOUS_ADMISSION_NOT_DISCHARGED\":\r\n        this.snackbar.openSnackBar(\"errors.prev_admission_not_discharged\", 'bottom', 'center', true);\r\n        break;\r\n      case \"PATIENT_ALREADY_DISCHARGED\":\r\n        this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n        break;\r\n      case \"DEVICES_ALREADY_IN_USE\":\r\n        this.snackbar.openSnackBar(\"errors.devices_already_in_use\", 'bottom', 'center', true);\r\n        break;\r\n      case \"ADMISSION_ID_ALREADY_EXIST\":\r\n        this.snackbar.openSnackBar(\"errors.admission_id_exist\", 'bottom', 'center', true);\r\n        break;\r\n      case \"MORE_THAN_ONE_PATCH_STREAMING\" :\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n        break;\r\n      case \"ADMITTED_ON_TIME_IS_INVALID\" :\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n        break;\r\n      case \"PATCH_STATE_STREAMING\" :\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n        break;\r\n      default:\r\n        this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n    }\r\n  }\r\n\r\n\r\n  charsOnly(control: string, event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n \r\n  onWeightUnitChange() {\r\n    let weightControl = null;\r\n    weightControl = this.newPatientForm.get(\"weight\");\r\n    if(this.weightUnit === WeightUnits.KG) {\r\n      weightControl.setValidators([LSvalidators.maxWeightKG,LSvalidators.validValueForWeightAndHeight]);\r\n      weightControl.updateValueAndValidity();\r\n    } else if(this.weightUnit === WeightUnits.POUND) {\r\n      weightControl.setValidators([LSvalidators.maxWeightPOUND,LSvalidators.validValueForWeightAndHeight]);\r\n      weightControl.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  onHeightUnitChange() {\r\n    let heightControl = null;\r\n    heightControl = this.newPatientForm.get(\"height\");\r\n    if(this.heightUnit === HeightUnits.CM) {\r\n      heightControl.setValidators([LSvalidators.maxHeightCM,LSvalidators.validValueForWeightAndHeight]);\r\n      heightControl.updateValueAndValidity();\r\n    } else if(this.heightUnit === HeightUnits.INCH) {\r\n      heightControl.setValidators([LSvalidators.maxHeightINCH,LSvalidators.validValueForWeightAndHeight]);\r\n      heightControl.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  numericsOnly(control: string, event: KeyboardEvent) {\r\n    let numericsOnlyPattern = /^[0-9]$/;\r\n    let key = event.key;\r\n    if (numericsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  floatOnly(control: string, event) {\r\n    let floatOnlyPattern = /^[0-9\\.]*$/;\r\n    let key\r\n    if(control === 'keyboard') {\r\n      key = event.key;\r\n    } else {\r\n      key = event.clipboardData.getData('text');\r\n    }\r\n    if (floatOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  bioString: string = \"\";\r\n\r\n  keypressEvent(e: KeyboardEvent) {\r\n    if (this.bioString.length < 5) {\r\n      this.bioString = this.bioString + e.key;\r\n      let blockSpecialRegex = /[~`!@#$%^&()_={}[\\]:;,.<>+\\/?-]/;\r\n      let key = e.key;\r\n      let n = Boolean(this.bioString.charAt(0).match(/[a-zA-Z]/));\r\n      if (!n && this.bioString.length > 0) {\r\n        this.bioString = this.bioString.substring(0, this.bioString.length - 1);\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n\r\n      if (blockSpecialRegex.test(key)) {\r\n        e.preventDefault();\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  keydownEvent(e: KeyboardEvent) {\r\n    if (e.code === \"Backspace\" && this.bioString.length > 0) {\r\n      this.bioString = this.bioString.substring(0, this.bioString.length - 1);\r\n    }\r\n  }\r\n\r\n  newDevice(): FormGroup {\r\n    return this.formbuilder.group({\r\n      deviceId: [{value: null, disabled: this.isDisabled}, Validators.pattern(\"^[a-zA-Z0-9]+$\")],\r\n      deviceType: {value: null, disabled: this.isDisabled},\r\n    });\r\n  }\r\n\r\n  onClickClear(event, group: FormGroup, type) {\r\n    event.stopPropagation();\r\n    this.patientIDChanged.next(null);\r\n    group.controls[type].setValue(null);\r\n    group.controls[\"deviceType\"].setValue(null);\r\n    this.newPatientForm.updateValueAndValidity();\r\n  }\r\n  clearId(group: FormGroup, type) {\r\n    group.controls[type].setValue(null);\r\n  }\r\n\r\n disableFields = ['patientId', 'admissionId','firstName', 'lastName', 'dob', 'gender','patchIds'];\r\n  isSelectedFromAuto: boolean = false;\r\n  isDisabled = false;\r\n  onOptionSelected(event) {\r\n    this.getCGroups();\r\n    this.loadState = 'LOADING';\r\n    this.setControlState(this.disableFields, false);\r\n    this.isSelectedFromAuto = true;\r\n    this.service.getPatientBy(event.option.value)\r\n        .subscribe(res => {\r\n          this.loadState = 'SUCCESS';\r\n          let patient: any = res.data;\r\n          if(patient?.patchIds?.length && patient?.patchIds[0]?.startTime) {\r\n            this.maxAdmitDate = new Date(new Date(patient.patchIds[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n          }\r\n          this.autoFilledPatient = res.data;\r\n          patient = this.updateHeightWeight(patient);\r\n\r\n          if(!this.groups.find(group => group.groupId === patient?.cgroupId) && patient?.cgroupId) {\r\n            let patientGroup = {groupId: patient.cGroup.id, name: patient.cGroup.name, type: 'CLINICAL'};\r\n            this.groups = [patientGroup, ...this.groups];\r\n            this.cGroup$.next(this.groups);\r\n          }\r\n          if(!this.groups.find(group => group.groupId === patient?.pgroupId) && patient?.pgroupId) {\r\n            let patientGroup = {groupId: patient.pGroup.id, name: patient.pGroup.name, type: 'PHYSICAL'};\r\n            this.groups = [patientGroup, ...this.groups];\r\n            this.cGroup$.next(this.groups);\r\n          }\r\n          const patientDetails = {\r\n            ...patient,\r\n            createdDateTime: patient.createdDateTime ? new Date(patient.createdDateTime) : null,\r\n            admissionId: patient?.isDischarged ? this.admissionId: patient?.admissionId || this.admissionId,\r\n            cGroup: patient?.cgroupId ? patient?.cgroupId : null,\r\n            pGroup: patient?.pgroupId ? patient?.pgroupId : null,\r\n            gender: patient?.gender ? getGender(patient?.gender) : null,\r\n            weightUnit: patient?.weightUnit ? patient.weightUnit.toUpperCase() : this.weightUnit,\r\n            heightUnit: patient?.heightUnit ? patient.heightUnit.toUpperCase() : this.heightUnit,\r\n            weight: patient?.weight ? patient.weight : null,\r\n            height: patient?.height ? patient.height : null,\r\n            estimatedDischarge: patient?.procedureDuration && patient.startedOn ? (patient?.isDischarged ? null : calculateDischargedDate(patient.startedOn, patient.procedureDuration, this.timeZone)) : null,\r\n            startedOn: patient?.startedOn ? (patient?.isDischarged ? this.maxAdmitDate : patient.startedOn < this.data?.patchId?.patchDetails[0]?.startTime ? epochToDate(patient.startedOn, this.timeZone) : this.maxAdmitDate) : null,\r\n            dob: patient?.dob ? getDateFromString(patient.dob) : '',\r\n            patchIds: patient?.isDischarged ? null : patient?.patchIds,\r\n          }\r\n          if(!patient?.admissionId || patient?.isDischarged) {\r\n            this.setControlState(['admissionId'], true);\r\n          }\r\n          if(patientDetails?.patchIds) {\r\n            this.patchIds = [...patientDetails?.patchIds, {deviceId: this.data?.patchId?.patchId, startTime: this.data?.patchId?.patchDetails[0].startTime, endTime: this.data?.patchId?.patchDetails[0].endTime}];\r\n          } else {\r\n            this.patchIds = [{deviceId: this.data?.patchId?.patchId, startTime: this.data?.patchId?.patchDetails[0].startTime, endTime: this.data?.patchId?.patchDetails[0].endTime}]\r\n          }\r\n          delete patientDetails.patchIds;\r\n          this.newPatientForm.patchValue({\r\n            ...this.newPatientForm.getRawValue(),\r\n            ...patientDetails\r\n          })\r\n          this.newPatientForm.updateValueAndValidity({ emitEvent: true });\r\n          this.doctorsList$$.next(this.doctorsList);\r\n          this.patientData = [];\r\n          this.patientvalidated = true;\r\n        })\r\n  }\r\n  patientSelected(event) {\r\n    this.service.getPatientBy(event.option.value)\r\n        .subscribe(res => {\r\n          const patient: ActivePatient = res.data;\r\n          const patientDetails = {\r\n            patientId: patient?.patientId,\r\n            admissionId: this.admissionId,\r\n            firstName: patient?.firstName,\r\n            lastName: patient?.lastName,\r\n            dob: patient?.dob,\r\n            gender: patient?.gender,\r\n            phoneNo: patient?.phoneNo,\r\n            email: patient?.email\r\n          }\r\n          populateAdmitPatientValues(\r\n              patientDetails,\r\n              this.newPatientForm,\r\n              this.doctorsList$$.getValue(),\r\n              this.cGroup$.getValue(),\r\n              this.weightUnit,\r\n              this.heightUnit,\r\n              this.timeZone\r\n          );\r\n          this.setControlState(['patientId'], false);\r\n          this.isDisabled = false;\r\n          this.autoCompleted = true;\r\n        });\r\n  }\r\n\r\n  onClickClearAuto() {\r\n    this.isSelectedFromAuto = false;\r\n    this.maxAdmitDate = new Date(new Date(this.data?.patchId?.patchDetails[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    if(this.autoCompleted) {\r\n      this.newPatientForm.patchValue({\r\n        patchIds : null\r\n      });\r\n      this.patchIds = null;\r\n    } else {\r\n      let biosensor = this.data?.patchId;\r\n      this.patchIds = [{\r\n        deviceId: biosensor?.patchId,\r\n        deviceType: \"Biosensor Id\",\r\n        startTime: biosensor?.patchDetails[0]?.startTime,\r\n        endTime: biosensor?.patchDetails[0]?.endTime\r\n      }]\r\n    }\r\n    this.autoCompleted = false;\r\n    this.newPatientForm.patchValue({\r\n      patientId: null,\r\n      admissionId: this.admissionIdCopy,\r\n      firstName: null,\r\n      lastName: null,\r\n      phoneNo: null,\r\n      email: null,\r\n      dob: null,\r\n      age: null,\r\n      gender: null,\r\n      weight: null,\r\n      height: null,\r\n      weightUnit: this.weightUnit,\r\n      heightUnit: this.heightUnit,\r\n      cGroup: null,\r\n      pGroup: null,\r\n      startedOn: null,\r\n      procedureDuration: null,\r\n      estimatedDischarge: null,\r\n      doctorId: null,\r\n      createdDateTime: new Date()\r\n\r\n    });\r\n    this.setControlState(this.disableFields, true);\r\n    this.doctorsList$$.next(this.activeDoctorsList);\r\n  }\r\n\r\n  setControlState(controls: string[], state: boolean) {\r\n    controls.forEach(control => {\r\n      if (state) {\r\n        this.newPatientForm?.controls[control]?.enable();\r\n      }\r\n      else {\r\n        this.newPatientForm?.controls[control]?.disable();\r\n      }\r\n    });\r\n    //this.isDisabled = !state;\r\n  }\r\n\r\n  compareObjects(o1: any, o2: any): boolean {\r\n    return o1?.name === o2?.name && o1?._id === o2?._id;\r\n  }\r\n\r\n  ignoreCase(o1: any, o2: any): boolean {\r\n    return o1.toUpperCase() === o2.toUpperCase();\r\n  }\r\n\r\n  thirdParties = [\r\n    {\r\n      name: \"Dr Shetty\",\r\n      id: \"1\"\r\n    },\r\n    {\r\n      name: \"Dr Doom\",\r\n      id: \"2\"\r\n    }\r\n  ];\r\n  clinicUsers = () => {\r\n    return of(this.thirdParties).pipe(map(users => {\r\n      return users;\r\n    }));\r\n  };\r\n\r\n  BillingIndications = [\r\n    {\r\n      name: \"Billing1\",\r\n      id: \"1\"\r\n    },\r\n    {\r\n      name: \"Billing2\",\r\n      id: \"2\"\r\n    }\r\n  ];  \r\n\r\n  BillingMethod = [\r\n    {\r\n      name: \"Cash\",\r\n      id: \"PC\"\r\n    },\r\n    {\r\n      name: \"Credit Card\",\r\n      id: \"CC\"\r\n    }\r\n  ];  \r\n\r\n  duration = [\r\n    {name: '5-day', id: 5},\r\n    {name: '7-day', id: 7}\r\n  ]\r\n  procDuration = () => {\r\n    return of(this.duration).pipe(map(t => {\r\n      return t;\r\n    }));       \r\n  }\r\n\r\n  loc = [\r\n    {name: 'Clinic1', id: 1},\r\n    {name: 'Clinic2', id: 2}\r\n  ]  \r\n  facilityLocation = () => {\r\n    return of(this.loc).pipe(map(locations => {\r\n      return locations;\r\n    }));       \r\n  }\r\n\r\n  billingIndications = () => {\r\n    return of(this.BillingIndications).pipe(map(types => {\r\n      return types;\r\n    }));    \r\n  }  \r\n\r\n  billingMethods = () => {\r\n    return of(this.BillingMethod).pipe(map(methods => {\r\n      return methods;\r\n    }));\r\n  };\r\n\r\n  alphaNumericsOnly(event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z0-9]+$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  getMaxDischargeDate(){\r\n    let admittedDate = new Date(this.newPatientForm.get('startedOn').value);\r\n    return new Date(admittedDate.setDate(admittedDate.getDate() + 30));\r\n\r\n  }\r\n  getMinDischargeDate(){\r\n    let admittedDate = new Date(this.newPatientForm.get('startedOn').value);\r\n    let minDischarge = new Date(admittedDate.setDate(admittedDate.getDate() + 1));\r\n    let currentTime = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    return minDischarge > currentTime ? minDischarge : currentTime\r\n\r\n  }\r\n  getElapsedTime() {\r\n    let elapsedTime = (new Date().getTime() - (new Date(this.newPatientForm.get('startedOn').value).getTime()))/1000;\r\n    let hrs = Math.floor(elapsedTime/3600); //hours\r\n    let mins = Math.floor(elapsedTime % 3600 / 60);//mins\r\n    //let secs = Math.floor(elapsedTime % 3600 % 60); //seconds\r\n    let secs = '00';\r\n    return hrs + \" : \" + mins + \" : \" + secs;\r\n  }\r\n  onGroupSelected(formField, value) {\r\n    this.newPatientForm.get(formField).setValue(value)\r\n  }\r\n  selectDoctor(value) {\r\n    this.newPatientForm.get('doctorId').setValue(value)\r\n  }\r\n  fetchPatientDetails(event, type) {\r\n    let patientId;\r\n    if(type === 'keyup') {\r\n      patientId = event.target.value;\r\n    } else {\r\n      patientId = event.clipboardData.getData('text');\r\n    }\r\n    patientId = encodeURIComponent(patientId);\r\n    if (patientId) {\r\n      let url = `patients/?sortBy=PatientID:desc&page=1&size=5&isDischarged=true&patientid=${patientId}`\r\n      this.service.getAll(url).subscribe((res:any) =>{\r\n        if(res.data?.items?.length) {\r\n          if(res.data?.items[0].patientId === event?.target?.value) {\r\n            this.dischargedPatients = [res.data?.items[0]];\r\n          } else {\r\n            this.dischargedPatients = [];\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  updateHeightWeight(patient) {\r\n    if (patient.heightUnit.toUpperCase() !== this.userPreferences.getUserHeightUnit().toUpperCase() && patient.height) {\r\n      patient.heightUnit = this.userPreferences.getUserHeightUnit();\r\n      if (this.userPreferences.getUserHeightUnit().toUpperCase() === \"CM\") {\r\n        patient.height = Number(this.userPreferences.convertInchToCm(patient.height));\r\n      } else {\r\n        patient.height = Number(this.userPreferences.convertCmToInch(patient.height));\r\n      }\r\n    }\r\n    if (patient.weightUnit.toUpperCase() !== this.userPreferences.getUserWeightUnit().toUpperCase() && patient.weight) {\r\n      patient.weightUnit = this.userPreferences.getUserWeightUnit();\r\n      if (this.userPreferences.getUserWeightUnit().toUpperCase() === \"KG\") {\r\n        patient.weight = Number(this.userPreferences.convertPoundToKg(patient.weight));\r\n      } else {\r\n        patient.weight = Number(this.userPreferences.convertKgToPound(patient.weight));\r\n      }\r\n    }\r\n    return patient;\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.groupsSubscription) {\r\n      this.groupsSubscription.unsubscribe();\r\n    }\r\n    if (this.doctorsListSub) {\r\n      this.doctorsListSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"dialog-header\">\r\n    <h1 mat-dialog-title>\r\n        {{ modalTitle | translate}}\r\n    </h1>\r\n    <!--<button mat-button mat-dialog-close>\r\n        <mat-icon>close</mat-icon>\r\n    </button>-->\r\n</mat-card>\r\n<mat-dialog-content cdkFocusInitial tabindex=\"-1\" class=\"mat-dialog-popup\">\r\n    <form [formGroup]=\"newPatientForm\" class=\"dialog-form\" autocomplete=\"off\">\r\n        <mat-tab-group [(selectedIndex)]=\"selectedIndex\" (selectedTabChange)=\"tabChanged($event)\">\r\n            <!--Patient Demographics Tab-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.patient_demo'|translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.patient_id\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control editplaceholder\"\r\n                            [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn')  &&  newPatientForm.get('patient_id_mrn').touched && newPatientForm.get('patient_id_mrn').value != '' ? 'error-msg': ''\">\r\n                            <input matInput formControlName=\"patient_id_mrn\" minlength=\"3\" maxlength=\"13\"\r\n                                [class.disabled]=\"isEdit\" [readonly]=\"isEdit\"\r\n                                *ngIf=\"selectedTab === 'ACTIVE_PATIENT' || isEdit\" name=\"option\"\r\n                                [matAutocomplete]=\"discharged\" (keyup)=\"fetchPatientDetails($event, 'keyup')\"\r\n                                (paste)=\"fetchPatientDetails($event, 'paste')\" (keypress)=\"alphaNumericsOnly($event)\" />\r\n                            <mat-autocomplete #discharged=\"matAutocomplete\" (optionSelected)=\"patientSelected($event)\">\r\n                                <mat-option *ngFor=\"let dischargedPatient of dischargedPatients\"\r\n                                    [value]=\"dischargedPatient.patient_id_mrn\">\r\n                                    {{dischargedPatient.patient_id_mrn}} - {{dischargedPatient.first_name}}\r\n                                    {{dischargedPatient.last_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput\r\n                                formControlName=\"patient_id_mrn\" name=\"option\" [matAutocomplete]=\"auto\" minlength=\"3\"\r\n                                maxlength=\"13\" *ngIf=\"selectedTab === 'ASSIGN_PATIENT'\" (blur)=\"populatePatient($event)\"\r\n                                (keyup)=\"searchPatient($event, 'keyup')\" (paste)=\"searchPatient($event, 'paste')\"\r\n                                (keypress)=\"alphaNumericsOnly($event)\">\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onOptionSelected($event)\">\r\n                                <mat-option *ngFor=\"let patient of patientData\" [value]=\"patient.patient_id_mrn\">\r\n                                    {{patient.patient_id_mrn}} - {{patient.first_name}} {{patient.last_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <mat-error\r\n                                *ngIf=\"!newPatientForm.get('patient_id_mrn').hasError('required') && newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn')\">\r\n                                {{\"active-patients-module.errors.invalidpatient_id_mrnPattern\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('patient_id_mrn').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error\r\n                                *ngIf=\"newPatientForm.get('patient_id_mrn').hasError('minlength') && !newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn')\">\r\n                                {{\"active-patients-module.errors.minLength\" | translate}}\r\n                            </mat-error>\r\n                            <mat-icon class=\"cursor-pointer\" color=\"primary\"\r\n                                *ngIf=\"(isSelectedFromAuto || autoCompleted) && loadState !== 'LOADING'\"\r\n                                (click)=\"onClickClearAuto()\" matSuffix>\r\n                                close</mat-icon>\r\n                            <mat-progress-spinner diameter=\"30\" strokeWidth=\"3\" *ngIf=\"loadState === 'LOADING'\"\r\n                                mode=\"indeterminate\" color=\"primary\" matSuffix></mat-progress-spinner>\r\n                        </mat-form-field>\r\n                        <mat-hint\r\n                            *ngIf=\"!newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn') || newPatientForm.get('patient_id_mrn').hasError('required')\"\r\n                            class=\"auto-gen d-flex\"\r\n                            [ngClass]=\"selectedTab === 'ASSIGN_PATIENT' ? 'justify-content-between' : 'justify-content-end'\">\r\n\r\n                            <div>\r\n                                <span\r\n                                    *ngIf=\"selectedTab === 'ASSIGN_PATIENT' && !isSelectedFromAuto && !isEdit && !newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn') && !(newPatientForm.get('patient_id_mrn').hasError('required') && newPatientForm.get('patient_id_mrn').touched) && !newPatientForm.get('patient_id_mrn').hasError('minlength')\">\r\n                                    {{ \"active-patients-module.form_label.id_desc_assign\" | translate }}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"cursor-pointer\" (click)=\"getAutogeneratedPatientId()\"\r\n                                *ngIf=\"!isEdit && !isSelectedFromAuto && !autoCompleted\"><img\r\n                                    src=\"assets/icons/refresh-icon.svg\" alt=\"image\" class=\"me-1\" /> {{\r\n                                \"active-patients-module.form_label.autogenerate_new_id\" | translate }}\r\n                            </div>\r\n                        </mat-hint>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.first_name\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('first_name').hasError('pattern') && newPatientForm.get('first_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"first_name\"\r\n                                (keypress)=\"charsOnly('first_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('invalidRange') \">\r\n                                {{\"First \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.last_name\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"last_name\"\r\n                                (keypress)=\"charsOnly('last_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"26\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('required')\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('invalidRange')\">\r\n                                {{\"Last \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.dob\" | translate }}\r\n                                    <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                                    <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                        \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                                </mat-label>\r\n                                <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                                    <input matInput formControlName=\"dob\" [matDatepicker]=\"picker\" [min]=\"minDOB\"\r\n                                        [max]=\"maxDOB\" (click)=\"picker.open()\" [(ngModel)]=\"dob\" [placeholder]=\"dob\"\r\n                                        (dateChange)=\"calculateAge()\" />\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\" class=\"matdate-picker\">\r\n                                    </mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker></mat-datepicker>\r\n                                    <mat-error>\r\n                                        <mat-error *ngIf=\"newPatientForm.get('dob').hasError('required') && submitted\">\r\n                                            {{\"active-patients-module.errors.required\" | translate}}\r\n                                        </mat-error>\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <mat-label class=\"matlabel\">\r\n                                    {{ \"active-patients-module.form_label.age\" | translate }}\r\n                                </mat-label>\r\n                                <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                                    <input autocomplete=\"off\" matInput formControlName=\"age\" [(ngModel)]=\"age\"\r\n                                        (focusout)=\"getdob()\" (keypress)=\"numericsOnly('age', $event)\"\r\n                                        [readonly]=\"isEdit\" class=\"firstName\" maxlength=\"3\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.gender\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"sex\">\r\n                                <mat-option value=\"M\">Male</mat-option>\r\n                                <mat-option value=\"F\">Female</mat-option>\r\n                                <!-- <mat-option value=\"OTHER\">Other</mat-option> -->\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('sex').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\" for=\"email\">{{ \"active-patients-module.form_label.weight\" |\r\n                            translate }}\r\n                        </mat-label>\r\n                        <div class=\"d-flex\">\r\n                            <mat-form-field appearance=\"fill\" class=\"formfield-control\"\r\n                                [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                                <input autocomplete=\"off\" matInput type=\"text\" formControlName=\"weight\"\r\n                                    [maxlength]=\"320\" id=\"weight\" style=\"width: 90%;\" />\r\n                                <span class=\"text-danger text-end\">\r\n                                    <mat-select formControlName=\"weightUnit\" style=\"width: 10%;\" [disabled]=\"true\"\r\n                                        [(ngModel)]=\"this.weightUnit\" [compareWith]=\"ignoreCase\"\r\n                                        (selectionChange)=\"onWeightUnitChange()\">\r\n                                        <mat-option value=\"KG\">KG</mat-option>\r\n                                        <mat-option value=\"POUND\">POUND</mat-option>\r\n                                    </mat-select>\r\n                                </span>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\" for=\"email\">{{ \"active-patients-module.form_label.height\" |\r\n                            translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput type=\"text\" formControlName=\"height\" [maxlength]=\"320\"\r\n                                id=\"height\" style=\"width: 85%;\" />\r\n                            <span class=\"text-danger text-end\">\r\n                                <mat-select formControlName=\"heightUnit\" style=\"width: 15%;\" [disabled]=\"true\"\r\n                                    [compareWith]=\"ignoreCase\" [(ngModel)]=\"this.heightUnit\"\r\n                                    (selectionChange)=\"onHeightUnitChange()\">\r\n                                    <mat-option value=\"CM\">CM</mat-option>\r\n                                    <mat-option value=\"INCH\">INCH</mat-option>\r\n                                </mat-select>\r\n                            </span>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('patient_id_mrn').hasError('required')||newPatientForm.get('first_name').hasError('required')||newPatientForm.get('last_name').hasError('required')||newPatientForm.get('dob').hasError('required')||newPatientForm.get('sex').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" >\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Patient Contact Tab-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.patient_contact'|translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.primary_contact\" | translate                         }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('mobile').hasError('required') && newPatientForm.get('mobile').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"mobile\"\r\n                                (keypress)=\"numericsOnly('mobile', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"10\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('mobile').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <!-- <mat-label class=\"matsection_heading\">\r\n                    <p></p>\r\n                </mat-label> -->\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.email\" | translate }}\r\n\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('email').hasError('email') && newPatientForm.get('email').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"email\" [readonly]=\"isEdit\"\r\n                                class=\"firstName\" maxlength=\"50\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('email').hasError('email')\">\r\n                                {{ \"admit-patients-module.errors.invalid_email\" | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.country\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n                            <mat-select formControlName=\"country\" (selectionChange)=\"getStatesByCountry($event)\">\r\n                                <mat-option *ngFor=\"let country of countryArray\"\r\n                                    value=\"{{ getCountryValues(country) }}\">\r\n                                    {{ country['name'] }}\r\n                                    ({{ country['flag'] }})\r\n                                </mat-option>\r\n                             \r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('country').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('invalidRange') \">\r\n                                {{\"First \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.zip_code\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"zip_code\"\r\n                                (keypress)=\"numericsOnly('zip_code', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"6\" />\r\n                            <mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('mustNumbersOnly')\">\r\n                                    {{\"active-patients-module.errors.mustNumbersOnly\" | translate}}\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('zip_code').hasError('required') && submitted\">\r\n                                    {{\"active-patients-module.errors.required\" | translate}}\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('invalidRange')\">\r\n                                    {{\"Last \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                                </mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 ps-0 pe-0\">\r\n                    <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.street_addr1\" | translate }}\r\n\r\n                        <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                            \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                        [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                        <input autocomplete=\"off\" matInput formControlName=\"street_address_1\" [readonly]=\"isEdit\"\r\n                            class=\"firstName\" maxlength=\"25\" />\r\n\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-12 ps-0 pe-0\">\r\n                    <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.street_addr2\" | translate }}\r\n\r\n                        <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                            \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                        [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                        <input autocomplete=\"off\" matInput formControlName=\"street_address_2\" [readonly]=\"isEdit\"\r\n                            class=\"firstName\" maxlength=\"25\" />\r\n\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.state\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n\r\n                            <input matInput formControlName=\"state\" minlength=\"2\" maxlength=\"64\"\r\n                                [matAutocomplete]=\"state\" [required]=\"statesOfCountry.length > 0\" />\r\n                            <mat-autocomplete #state=\"matAutocomplete\"\r\n                                (optionSelected)=\"getCityByStateAndCountry($event)\">\r\n                                <mat-option\r\n                                    *ngFor=\"let state of filteredResults(statesOfCountry, 'name', newPatientForm.value.state)\"\r\n                                    value=\"{{ state['name'] }}\">{{ state['name'] }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('state').hasError('mustCharsOnly')\">\r\n                                    {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('state').hasError('required') && submitted\">\r\n                                    {{\"active-patients-module.errors.required\" | translate}}\r\n                                </mat-error>\r\n                            </mat-error>\r\n\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 pe-0\">\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.city\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"city\" minlength=\"2\" maxlength=\"64\"\r\n                                [matAutocomplete]=\"city\" />\r\n                            <mat-autocomplete #city=\"matAutocomplete\">\r\n                                <mat-option\r\n                                    *ngFor=\"let city of filteredResults(citiesOfStateAndCountry, 'name', newPatientForm.value.city)\"\r\n                                    value=\"{{ city['name'] }}\">{{ city['name'] }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <mat-error *ngIf=\"newPatientForm.get('city').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('city').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.emergency_contact_name\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"em_contact_name\"\r\n                                (keypress)=\"charsOnly('em_contact_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <!-- <mat-label class=\"matsection_heading\">\r\n                    <p></p>\r\n                </mat-label> -->\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.emergency_contact_number\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"em_contact_number\"\r\n                                (keypress)=\"numericsOnly('em_contact_number', $event)\" [readonly]=\"isEdit\"\r\n                                class=\"firstName\" maxlength=\"25\" />\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('mobile').hasError('required')||newPatientForm.get('country').hasError('required')||newPatientForm.get('zip_code').hasError('required')||newPatientForm.get('state').hasError('required')||newPatientForm.get('city').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Provider Info-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.provider_info'|translate\">\r\n                <div class=\"row separate-line\">\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.prescribing_physician\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"fk_prescriber\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of prescriberList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('fk_prescriber').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.referal_physician\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"fk_r_doctor\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of clinicUsers() | async\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('fk_r_doctor').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.interp_physician\" | translate\r\n                            }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"final_approver_id\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of interpreterList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error\r\n                                *ngIf=\"newPatientForm.get('final_approver_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.prelim_interp_physician\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"pri_approver_id\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of technicianList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('pri_approver_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.technician\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"fk_technician\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of technicianList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('pri_approver_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('fk_prescriber').hasError('required')||newPatientForm.get('fk_r_doctor').hasError('required')||newPatientForm.get('final_approver_id').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Procedure Info-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.procedure_info' | translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.prescription_id\" | translate\r\n                            }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"prescription_id\"\r\n                                (keypress)=\"charsOnly('last_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('prescription_id').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('prescription_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('prescription_id').hasError('invalidRange')\">\r\n                                {{\"Last \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.order_id\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('order_id').hasError('required') && newPatientForm.get('order_id').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"order_id\"\r\n                                (keypress)=\"charsOnly('order_id', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('order_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('order_id').hasError('invalidRange') \">\r\n                                {{\"First \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-12 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.primary_indication\" |\r\n                            translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('primary_indication').hasError('required') && newPatientForm.get('primary_indication').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"primary_indication\"\r\n                                [readonly]=\"isEdit\" class=\"firstName\" maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('primary_indication').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.biosensor_id\" | translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"patchIds\" type=\"text\" minlength=\"5\"\r\n                                maxlength=\"5\" (keypress)=\"alphaNumericsOnly($event)\"\r\n                                [readonly]=\"isEdit || selectedTab === 'ASSIGN_PATIENT'\"\r\n                                (click)=\"(isEdit || selectedTab === 'ASSIGN_PATIENT') ? openMoreInfoDialog() : ''\" />\r\n\r\n                            <mat-error\r\n                                *ngIf=\"(newPatientForm.get('patchIds').hasError('maxlength') || newPatientForm.get('patchIds').hasError('minlength')) && !newPatientForm.get('patchIds').hasError('biosensorPattern')\">\r\n                                {{\"active-patients-module.errors.biosensorLength\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('patchIds').hasError('biosensorPattern')\">\r\n                                {{\"active-patients-module.errors.biosensorPattern\" | translate}}\r\n                            </mat-error>\r\n                            <button mat-flat-button matSuffix type=\"button\" color=\"primary\" (click)=\"openMoreInfoDialog()\" class=\"biosenser-checked\">\r\n                                <img src=\"assets/icons/plus.png\">\r\n                            </button>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div>\r\n                            <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.procedure_duration\" | translate }}\r\n                                <span class=\"required-field\">*</span>\r\n                            </mat-label>\r\n                            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                                <mat-select formControlName=\"total_monitoring_duration\">\r\n                                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of procDuration() | async\">\r\n                                        {{item?.name}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"newPatientForm.get('total_monitoring_duration').hasError('required') && submitted\">\r\n                                    {{\"active-patients-module.errors.required\" | translate}}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.location_group\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"location\">\r\n                                <mat-option [value]=\"loc?.name\" *ngFor=\"let loc of groupData[0]\">\r\n                                    {{loc?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('order_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('prescription_id').hasError('required')||newPatientForm.get('order_id').hasError('required')||newPatientForm.get('primary_indication').hasError('required')||newPatientForm.get('total_monitoring_duration').hasError('required')||newPatientForm.get('location').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>           \r\n            </mat-tab>\r\n\r\n            <!--Additional Info-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.additional_info'| translate\">\r\n                <div class=\"row separate-line\">\r\n                    <div class=\"col-md-12 ps-0 pe-0\">\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.additional_information\" | translate }}\r\n                  \r\n                    <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                        \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"additionalInfo\"\r\n                                (keypress)=\"charsOnly('additionalInfo', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <div class=\"d-flex\">\r\n                            <input type=\"checkbox\" class=\"mat-checkbox-input mt-3 mb-3\"\r\n                                style=\"display: block !important;\" id=\"mat-checkbox-303-input\" tabindex=\"-1\"\r\n                                aria-label=\"select row NaN\" aria-checked=\"false\" />\r\n                            <label class=\"mt-3 mx-2\">{{ \"active-patients-module.form_label.pacemaker\" | translate\r\n                                }}</label>\r\n                        </div>\r\n                        <div class=\"d-flex\">\r\n                            <input type=\"checkbox\" class=\"mat-checkbox-input mb-3\" style=\"display: block !important;\"\r\n                                id=\"mat-checkbox-303-input\" tabindex=\"-1\" aria-label=\"select row NaN\"\r\n                                aria-checked=\"false\" />\r\n                            <label class=\" mx-2\">{{ \"active-patients-module.form_label.icd\" | translate }}</label>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                        {{ \"active-patients-module.button.next\" | translate }}\r\n                    </button>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Billing Info Tab-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.billing_info'| translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.billing_indication\" | translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"billingIndication\">\r\n                                <mat-option [value]=\"type?.id\" *ngFor=\"let type of billingIndications() | async\">\r\n                                    {{type?.name}}\r\n                                </mat-option>\r\n                            </mat-select>                            \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.billing_method\" | translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"billingMethod\">\r\n                                <mat-option [value]=\"method?.id\" *ngFor=\"let method of billingMethods() | async\">\r\n                                    {{method?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <span (click)=\"submitted=true\">\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\"\r\n                            (click)=\"savePatientDetails(newPatientForm)\">\r\n                            {{ \"active-patients-module.button.save\" | translate }}\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n        <div class=\"required-all\">\r\n            <span>{{\"active-patients-module.form_label.mandatory\" | translate}}</span>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<!-- <mat-dialog-actions class=\"mx-4\">\r\n    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n        {{ \"active-patients-module.button.cancel\" | translate }}\r\n    </button>\r\n    <span (click)=\"submitted=true\">\r\n        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"savePatientDetails(newPatientForm)\">\r\n            {{ \"active-patients-module.button.next\" | translate }}\r\n        </button>\r\n    </span>\r\n</mat-dialog-actions> -->","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\nimport { RemoveBiosensorComponent } from \"../remove-biosensor/remove-biosensor.component\";\n\n@Component({\n  selector: \"app-confirmation-dialog\",\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.scss\"],\n})\nexport class ConfirmationDialogComponent {\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialog : MatDialog\n  ) {}\n\n  submitYes(): void {\n    this.dialogRef.close(true);\n    if(this.data.stop_biosensor){\n      this.dialogRef.afterClosed().subscribe((res)=>{\n        this.dialog.open(RemoveBiosensorComponent,{\n          maxWidth: \"90vw\",\n          // minWidth: \"500px\",\n          width: \"500px\",\n          backdropClass: \"backdropBackground\",\n          disableClose: true\n        });\n    })\n    }\n   \n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n   <!-- {{ \"active-patients-module.table.discharge_patient_title\" | translate }}-->\n   {{ data.heading | translate }}\n  </h1>\n  <!--<button mat-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>-->\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup discharge-dialog\">\n  <div class=\"dialog-form\">\n    <p>{{ data.message | translate }}</p>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    mat-dialog-close\n    color=\"warn\"\n    class=\"fill-btn\"\n  >\n    {{ \"active-patients-module.button.cancel\" | translate }}\n  </button>\n  <button\n    mat-flat-button\n    color=\"primary\"\n    (click)=\"submitYes()\"\n    class=\"fill-btn\"\n  >\n    {{ \"active-patients-module.button.confirm\" | translate }}\n  </button>\n</div>\n","import {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n} from \"@angular/forms\";\r\nimport { LSvalidators } from \"src/app/shared/lsValidators/lsvalidators\";\r\n\r\nimport {\r\n  DOCTORS,\r\n  NewPatient,\r\n  NewPatient2,\r\n  UnassignedPatient,\r\n} from \"../models/active-patients.model\";\r\nimport {_validatePhoneNumberInput} from \"../../validators/phone-no.validator\";\r\n\r\nexport function getUtcDate(date:Date): Date {\r\n\r\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n}\r\n\r\nexport function createNewPatientForm(formBuilder: FormBuilder, weightUnit, heightUnit, admissionId, timezone, offset): FormGroup {\r\n  const formGroup = formBuilder.group({\r\n    patient_id_mrn: [null, [Validators.required, LSvalidators.validatePatientId]],\r\n    first_name: [null, [Validators.required, LSvalidators.validatePatientName, LSvalidators.validatePatientNameMinMaxLength]],\r\n    last_name: [null, [Validators.required, LSvalidators.validatePatientName, LSvalidators.validatePatientNameMinMaxLength]],\r\n    email: [null, Validators.email],\r\n    country_code:[null],\r\n    //mobile: [null, [_validatePhoneNumberInput?.bind(this), Validators.required]],\r\n    mobile: [null],\r\n    dob: [null, Validators.required],\r\n    age: [null, [LSvalidators.numericsOnly]],\r\n    sex: [null, Validators.required],\r\n    weight: [null, [LSvalidators.validValueForWeightAndHeight]],\r\n    height: [null, [LSvalidators.validValueForWeightAndHeight]],\r\n    country:[null, [Validators.required]],\r\n    zip_code:[null,[Validators.required]],\r\n    street_address_1:[null],\r\n    street_address_2:[null],\r\n    city:[null,[Validators.required]],\r\n    state:[null,[Validators.required]],\r\n    em_contact_name:[null],\r\n    em_contact_country_code:[null],\r\n    em_contact_number: [null, [_validatePhoneNumberInput?.bind(this)]],\r\n    fk_prescriber:[null,[Validators.required]],\r\n    fk_technician:[null],\r\n    fk_r_doctor:[null,[Validators.required]],\r\n    pri_approver_id:[null],\r\n    final_approver_id:[null,[Validators.required]],\r\n    primary_indication:[null,[Validators.required]],\r\n    prescription_id:[null, [Validators.required]],\r\n    order_id:[null, [Validators.required]],\r\n    biosensor:[null],\r\n    total_monitoring_duration:[null,[Validators.required]],\r\n    location:[null, [Validators.required]],\r\n\r\n    additionalInfo:[null],\r\n    icd:[false],\r\n    pacemaker:[false],\r\n\r\n    billing_indication:[null],\r\n    billing_method:[null],\r\n    // status:[null],\r\n\r\n    // facility_id:[null],\r\n    // created_by:[null],\r\n\r\n    patchIds: [[], [LSvalidators.biosensorPattern]],\r\n\r\n  });\r\n  \r\n  return formGroup;\r\n}\r\n\r\nexport function mapIndividiualToAdmitPatient(formData: FormGroup, cGroup, patchIdData, timezone): NewPatient2 {\r\n  let individual = formData.value;\r\n  let patchIds: Array<{ deviceId: \"\" }> = new Array();\r\n  let patientId = individual.patient_id_mrn.trim();\r\n  let admissionId = individual.admissionId;\r\n  let cGroupObj = null;\r\n  let pGroupObj = null;\r\n  if (cGroup?.length > 0) {\r\n    let filteredObj = cGroup.filter(x => x.groupId === formData.value.cGroup);\r\n    if (filteredObj[0]) {\r\n      let obj = {\r\n        id: filteredObj[0].groupId,\r\n        name: filteredObj[0].name\r\n      }\r\n      cGroupObj = obj;\r\n    } else {\r\n      cGroupObj = null;\r\n    }\r\n  }\r\n  if (cGroup?.length > 0) {\r\n    let filteredObjNew = cGroup.filter(x => x.groupId === formData.value.pGroup);\r\n    if (filteredObjNew[0]) {\r\n      let objNew = {\r\n        id: filteredObjNew[0].groupId,\r\n        name: filteredObjNew[0].name\r\n      }\r\n      pGroupObj = objNew;\r\n    } else {\r\n      pGroupObj = null;\r\n    }\r\n  }\r\n\r\n  if (typeof individual.patchIds === \"string\"  && patchIdData?.length === 0) {\r\n    patchIds.push({ deviceId: individual.patchIds.toUpperCase() });\r\n  } else {\r\n    patchIds = [...patchIdData]\r\n  }\r\nindividual.dob=\"2022-10-10\"\r\n  let patient: NewPatient2 = {\r\n    patient_id_mrn: patientId,\r\n    first_name: individual.first_name,\r\n    last_name: individual.last_name,\r\n    email: individual?.email,\r\n    country_code:individual.country_code,\r\n    mobile: individual?.mobile,\r\n    // dob: individual.dob ? getUtcDate(individual.dob).toISOString() : null,\r\n    dob: individual.dob ,\r\n\r\n    \r\n    age: parseInt(individual.age),\r\n    sex: individual.sex,\r\n    weight: individual.weight,\r\n    height: individual.height,\r\n    country:individual.country,\r\n    zip_code:individual.zip_code,\r\n    street_address_1:individual.street_address_1,\r\n    street_address_2:individual.street_address_2,\r\n    city:individual.city,\r\n    state:individual.state,\r\n    em_contact_name:individual.em_contact_name,\r\n    em_contact_country_code:individual.em_contact_country_code,\r\n    em_contact_number:individual.em_contact_number,\r\n    fk_prescriber:individual.fk_prescriber,\r\n    fk_technician:individual.fk_technician,\r\n    fk_r_doctor:individual.fk_r_doctor,\r\n    pri_approver_id:individual.pri_approver_id,\r\n    final_approver_id:individual.final_approver_id,\r\n    primary_indication:individual.primary_indication,\r\n    total_monitoring_duration:individual.total_monitoring_duration,\r\n    order_id:individual.order_id,\r\n    pacemaker:individual.pacemaker,\r\n    icd:individual.icd,\r\n    additional_info:individual.additional_info,\r\n    prescription_id:individual.prescription_id,\r\n    billing_indication:individual.billing_indication,\r\n    billing_method:individual.billing_method,\r\n    location:individual.location,\r\n    biosensor:individual.biosensor,\r\n    status:individual.status,\r\n    facility_id:individual.facility_id,\r\n    created_by:individual.created_by,\r\n  };\r\n  return patient;\r\n}\r\n\r\nexport function convertToMinutes(days) {\r\n  return days * 24 * 60;\r\n}\r\n\r\nexport function epoch(date) {\r\n  let epoch = Date.parse(date);\r\n  return epoch / 1000;\r\n}\r\n\r\nexport function convertAdmitDate(date, timezone){\r\n   let t_date = date.toDateString()  + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()  + \" \" + timezone;\r\n\tlet epoch = Date.parse(t_date);\r\n\treturn epoch / 1000;\r\n}\r\nexport function convertDischargeDate(startedOn, date, timezone){\r\n  let t_date = date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate();\r\n  let time = startedOn.getHours() + ':' + startedOn.getMinutes() + ':' + startedOn.getSeconds()  + \" \" + timezone\r\n  date = t_date+\" \"+time;\r\n  let epoch = Date.parse(date);\r\n  return epoch / 1000;\r\n}\r\nexport function calculateDischargedDate(admittedDate, monitoringDays, timezone) {\r\n  return new Date(new Date((admittedDate * 1000) + (monitoringDays*60*1000)).toLocaleString(\"en-US\", { timeZone: timezone }));\r\n}\r\n\r\n\r\n\r\nexport function populateAssignPatientValues(individual: UnassignedPatient,\r\n  patientsForm: FormGroup,\r\n  doctors: DOCTORS[], admissionId, patchStartTime): FormGroup {\r\n  if (!patientsForm) {\r\n    return;\r\n  }\r\n  patientsForm.get(\"patchIds\").setValue(individual.patchId);\r\n  patientsForm.get(\"admissionId\").setValue(admissionId);\r\n  patientsForm.get(\"startedOn\").setValue(patchStartTime)\r\n  return patientsForm;\r\n}\r\n\r\nexport function populateAdmitPatientValues(\r\n  individual,\r\n  patientsForm: FormGroup,\r\n  doctors: DOCTORS[],\r\n  cGroup: any[],\r\n  weightUnit,\r\n  heightUnit,\r\n  timezone\r\n): FormGroup {\r\n  if (!patientsForm) {\r\n    return;\r\n  }\r\n  if(!individual?.weightUnit) {\r\n    individual.weightUnit = weightUnit\r\n  }\r\n  if(!individual?.heightUnit) {\r\n    individual.heightUnit = heightUnit\r\n  }\r\n  // patientsForm.patchValue(individual);\r\n  let disableControls = ['firstName', 'lastName', 'dob', 'gender'];\r\n  disableControls.forEach((formContolName) => {\r\n    patientsForm.get(formContolName).disable();\r\n  });\r\n  patientsForm.get(\"patientId\").setValue(individual.patientId);\r\n  patientsForm.get(\"admissionId\").setValue(individual?.admissionId ? individual.admissionId : '');\r\n  patientsForm.get(\"dob\").setValue(individual.dob ? getDateFromString(individual.dob) : '');\r\n  //patientsForm.get(\"age\").setValue(individual.dob ? individual.age : null);\r\n  patientsForm.get(\"phoneNo\").setValue(individual.phoneNo ? individual.phoneNo : null);\r\n  patientsForm.get(\"email\").setValue(individual.email ? individual.email : null);\r\n  patientsForm.get(\"gender\").setValue(getGender(individual.gender));\r\n  if(individual?.weight) {\r\n    patientsForm.get(\"weight\").setValue(individual?.weight);\r\n  }\r\n  if(individual?.height) {\r\n    patientsForm.get(\"height\").setValue(individual?.height);\r\n  }\r\n  patientsForm.get(\"weightUnit\").setValue(getWeightUnit(individual.weightUnit));\r\n  patientsForm.get(\"heightUnit\").setValue(getHeightUnit(individual.heightUnit));\r\n  patientsForm.get(\"firstName\").setValue(individual.firstName);\r\n  patientsForm.get(\"lastName\").setValue(individual.lastName);\r\n  //patientsForm.get('doctorId').setValue(getDoctorsName(doctors || [], individual.doctorId));\r\n  patientsForm.get('doctorId').setValue(individual.doctorId);\r\n  // patientsForm.get('cGroup').setValue(getClinicalGroupName(cGroup, individual?.cGroup?.groupId));\r\n  // patientsForm.get('pGroup').setValue(individual.pgroupId);\r\n\r\n  patientsForm.get('cGroup').setValue(individual.cgroupId);\r\n  patientsForm.get('pGroup').setValue(individual.pgroupId);\r\n  patientsForm.get('createdDateTime').setValue(individual.createdDateTime || new Date());\r\n  individual.patchIds = individual.patchIds || [];\r\n  let deviceData: any = [];\r\n  deviceData = individual.deviceIds || [];\r\n  let items = patientsForm.get('deviceIds') as FormArray;\r\n  if (deviceData?.length) {\r\n    for (let i = 0; i < deviceData?.length; i++) {\r\n      (items.at(i) as FormGroup).get('deviceId').patchValue(deviceData[i]?.deviceId);\r\n      (items.at(i) as FormGroup).get('deviceType').patchValue(deviceData[i]?.deviceType);\r\n    }\r\n  }\r\n\r\n  if (individual?.patchIds?.length) {\r\n    let len = individual?.patchIds?.length;\r\n    patientsForm.get(\"patchIds\").setValue(individual?.activePatch || individual.patchIds[len-1]?.deviceId);\r\n  }\r\n  if(individual?.startedOn) {\r\n    patientsForm\r\n        .get(\"startedOn\")\r\n        .setValue(epochToDate(individual.startedOn, timezone));\r\n  }\r\n  if(individual?.procedureDuration && individual.startedOn) {\r\n    patientsForm\r\n        .get(\"estimatedDischarge\")\r\n        .setValue(calculateDischargedDate(individual.startedOn, individual.procedureDuration, timezone));\r\n  }\r\n  return patientsForm;\r\n}\r\n\r\nexport function getGender(gender) {\r\n  switch(gender){\r\n    case 'M': return 'MALE';\r\n    case 'F': return 'FEMALE';\r\n    case 'O': return 'OTHER';\r\n    default:  return gender;\r\n  }\r\n}\r\n\r\nfunction getWeightUnit(unit) {\r\n  return unit.toUpperCase() === 'KG' ? 'KG' : 'POUND';\r\n}\r\n\r\nfunction getHeightUnit(unit) {\r\n  return unit.toUpperCase() === 'CM' ? 'CM' : 'INCH';\r\n}\r\n\r\nfunction getClinicalGroupName(list, id) {\r\n  let cGroup = list?.filter((x) => {\r\n    if (x.groupId === id) {\r\n      return x;\r\n    } else {\r\n      return false;\r\n    }\r\n  }) || [];\r\n\r\n  if (cGroup.length > 0 && cGroup[0]?.groupId) {\r\n    return cGroup[0]?.groupId;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction getDoctorsName(list, id) {\r\n  let doctors =\r\n    list?.filter((x) => {\r\n      if (x.id === id) {\r\n        return x;\r\n      }\r\n    }) || [];\r\n\r\n  if (doctors.length > 0 && doctors[0]?.id) {\r\n    return doctors[0]?.id;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function getDateFromString(dateStr) {\r\n  const day = new Date(this.dob).getDate();\r\n    const month = new Date(this.dob).getMonth() + 1;\r\n    const year = new Date(this.dob).getFullYear();\r\n    const test = `${year}-${month}-${day}`;\r\n    console.log(\"hjsd\",test);\r\n  return test;\r\n}\r\n\r\nexport function epochToDate(epoch, timezone) {\r\n  return new Date(new Date(epoch * 1000).toLocaleString(\"en-US\", { timeZone: timezone }));\r\n}\r\nexport function defaultAdmitDate(timezone, offset) {\r\n  console.log('default time');\r\n  let date = new Date();\r\n  let t_date = date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate() + \" \" + 10 + \":\" + 0 + \":\" + 0 + \" \" + offset;\r\n  return new Date(new Date(t_date).toLocaleString(\"en-US\", { timeZone: timezone }));\r\n}\r\n\r\nexport function convertToDays(minutes) {\r\n  return minutes / (24 * 60);\r\n}\r\nexport function monitoringDays(admitDate, dischargeDate, timezone) {\r\n  return Math.round((convertDischargeDate(admitDate, dischargeDate, timezone) - convertAdmitDate(admitDate, timezone))/60);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\nimport { DOCTORS } from \"../models/active-patients.model\";\r\nimport {\r\n  ActivePatientsStoreState,\r\n  ActivePatientsStoreActions,\r\n  ActivePatientsStoreSelectors,\r\n} from \"../store\";\r\nimport {\r\n  ManageGroupsStoreActions,\r\n  ManageGroupsStoreSelectors,\r\n  ManageGroupsStoreState,\r\n} from \"../../manage-group/store\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ActivePatientManagerService {\r\n  activePatients$: Observable<ActivePatientsStoreState.State>;\r\n  unAssignedPatients$: Observable<ActivePatientsStoreState.State>;\r\n  selectedPatientIds$: Observable<String[]>;\r\n  doctors$: Observable<DOCTORS[]>;\r\n  patientIds: Array<string> = new Array();\r\n  groups$: Observable<Group[]>;\r\n\r\n  constructor(\r\n    private activePatientstore$: Store<ActivePatientsStoreState.State>,\r\n    private manageServiceStore$: Store<ManageGroupsStoreState.ManageGroupState>\r\n  ) { }\r\n\r\n  getActivePatient(url: string) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.LoadActivePatientsRequestAction({ url })\r\n    );\r\n  }\r\n\r\n  selectActivePatient(): Observable<ActivePatientsStoreState.State> {\r\n    this.activePatients$ = this.activePatientstore$.select(\r\n      ActivePatientsStoreSelectors.selectActivePatientsList\r\n    );\r\n    return this.activePatients$;\r\n  }\r\n\r\n  updatePatient(patient) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.UpdatePatientRequestAction(patient)\r\n    );\r\n    return this.selectActivePatient();\r\n  }\r\n\r\n  createPatient(patient) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.CreateNewPatientRequestAction(patient)\r\n    );\r\n    return this.activePatientstore$.select(ActivePatientsStoreSelectors.createNewPatient);\r\n  }\r\n\r\n  dischargePatient(patientId) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.DischargePatientRequestAction(patientId)\r\n    );\r\n  }\r\n\r\n  getDoctorsList(): Observable<DOCTORS[]> {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.LoadDoctorsListRequestAction()\r\n    );\r\n    this.doctors$ = this.activePatientstore$.select(\r\n      ActivePatientsStoreSelectors.doctorsList\r\n    );\r\n    return this.doctors$;\r\n  }\r\n\r\n  stopMonitoring(patientId) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.StopMonitoringRequestAction(patientId)\r\n    );\r\n  }\r\n\r\n  fetchGroups() {\r\n    this.manageServiceStore$.dispatch(\r\n      new ManageGroupsStoreActions.LoadGroupsRequestAction()\r\n    );\r\n    return this.manageServiceStore$.select(\r\n      ManageGroupsStoreSelectors.selectGroupsList\r\n    );\r\n  }\r\n\r\n  assignGroup(groups) {\r\n    // this.manageServiceStore$.dispatch(\r\n    //   new ManageGroupsStoreActions.SaveGroupRequestAction(groups)\r\n    // );\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.AssignGroupRequestAction(groups)\r\n    )\r\n\r\n    // return this.manageServiceStore$.select(\r\n    //   ManageGroupsStoreSelectors.selectGroupsList\r\n    // );\r\n    return this.activePatientstore$.select(ActivePatientsStoreSelectors.assignGroupPatient);\r\n  }\r\n\r\n  // assignGroupToPatient(patient, groups) {\r\n  //   this.assignGroup(groups).subscribe(g => {\r\n  //     if(g?.CLINICAL_GROUPS && groups.cGroup) {\r\n  //       const obj = {\r\n  //         id: g?.CLINICAL_GROUPS[0]?.groupId,\r\n  //         name: g?.CLINICAL_GROUPS[0]?.name\r\n  //       }\r\n  //       patient.cGroup = obj;\r\n  //     }else{\r\n  //       patient.cGroup = null;\r\n  //     }\r\n  //     if(g?.PHYSICAL_GROUPS && groups.pGroup) {\r\n  //       const obj = {\r\n  //         id: g?.PHYSICAL_GROUPS[0]?.groupId,\r\n  //         name: g?.PHYSICAL_GROUPS[0]?.name\r\n  //       }\r\n  //       patient.pGroup = obj;\r\n  //     }else{\r\n  //       patient.pGroup = null;\r\n  //     }  \r\n  //   });\r\n  // }\r\n\r\n  fetchUnAssignedPatientsData(url) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.LoadUnassignedPatientsRequestAction({ url })\r\n    );\r\n  }\r\n\r\n  selectUnassignedPatients() {\r\n    this.unAssignedPatients$ = this.activePatientstore$.select(\r\n      ActivePatientsStoreSelectors.selectUnassignedPatientsList\r\n    );\r\n    return this.unAssignedPatients$;\r\n  }\r\n\r\n  setSelectedTab(tab:string) {\r\n    this.activePatientstore$.dispatch(new ActivePatientsStoreActions.SetSelectedTabRequestAction(tab));\r\n  }\r\n\r\n  getSelectedTab() {\r\n    return this.activePatientstore$.select(ActivePatientsStoreSelectors.selectedTab);\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\n\r\nexport interface UnassignedPatient {\r\n  gender: string;\r\n  patchId : Array<string>;\r\n  biosensorStatus: string;\r\n}\r\n\r\nexport interface ActivePatient {\r\n  activePatch: string;\r\n  age: number;\r\n  phoneNo: string;\r\n  email: string;\r\n  name: string;\r\n  biosensorStatus: string;\r\n  archivalStatus: string;\r\n  cgroupId: string;\r\n  cGroup: Group;\r\n  pGroup: Group;\r\n  clinicalInfo: null;\r\n  createdDateTime: string;\r\n  deviceIds: null;\r\n  dob: string;\r\n  doctorId: string;\r\n  fk_r_doctor?:string;\r\n  fk_prescriber:string;\r\n  firstName: string;\r\n  first_name?: string;\r\n  gender: string;\r\n  height: number;\r\n  heightUnit: string;\r\n  isDischarged: boolean;\r\n  isUnassigned: boolean;\r\n  lastName: string;\r\n  last_name?: string;\r\n  patchIds: Array<PatchId>;\r\n  patientId: string;\r\n  patient_id_mrn: string;\r\n  admissionId: string;\r\n  pgroupId: string;\r\n  procedureDuration: number;\r\n  startedOn: number;\r\n  weight: number;\r\n  weightUnit: string;\r\n  estimatedDischarge: number;\r\n  prescriber_user_name?: string;\r\n  doctor_user_name:string;\r\n  prescription_id:string;\r\n  location:string;\r\n  biosensor?:Array<Biosensor>;\r\n}\r\n\r\nexport interface DOCTORS {\r\n  createdDateTime: string;\r\n  email: string;\r\n  facilityId: string;\r\n  firstName: string;\r\n  first_name?:string;\r\n  id: string;\r\n  _id?:string;\r\n  isActive: boolean;\r\n  enable?: boolean;\r\n  lastName: string;\r\n  last_name?:string;\r\n  phoneNo: string;\r\n  roles: Array<string>;\r\n  serviceProviderId: string;\r\n}\r\n\r\nexport interface NewPatient2 {\r\n  patient_id_mrn: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  country_code:string;\r\n  mobile: string;\r\n  dob: string;\r\n  age: number;\r\n  sex: string;\r\n  weight: number;\r\n  height: number;\r\n  country:string;\r\n  zip_code:number;\r\n  street_address_1:string;\r\n  street_address_2:string;\r\n  city: string;\r\n  state:string;\r\n  em_contact_name:string;\r\n  em_contact_country_code:string;\r\n  em_contact_number:string;\r\n  fk_prescriber:string;\r\n  fk_technician:string;\r\n  fk_r_doctor:string;\r\n  pri_approver_id:string;\r\n  final_approver_id:string;\r\n  primary_indication:string;\r\n  total_monitoring_duration:string;\r\n  order_id:string;\r\n  pacemaker:boolean;\r\n  icd:boolean\r\n  additional_info:string;\r\n  prescription_id:string;\r\n  billing_indication:string;\r\n  billing_method:string;\r\n  location:string;\r\n  biosensor:Array<Biosensor>;\r\n  status:string;\r\n  facility_id:string;\r\n  created_by:string;\r\n}\r\n\r\nexport interface NewPatient {\r\n  patient_id_mrn: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  country_code:string;\r\n  mobile: string;\r\n  dob: string;\r\n  age: number;\r\n  sex: string;\r\n  weight: number;\r\n  height: number;\r\n  country:string;\r\n  zip_code:number;\r\n  street_address_1:string;\r\n  street_address_2:string;\r\n  city: string;\r\n  state:string;\r\n  em_contact_name:string;\r\n  em_contact_country_code:string;\r\n  em_contact_number:string;\r\n  fk_prescriber:string;\r\n  fk_technician:string;\r\n  fk_r_doctor:string;\r\n  pri_approver_id:string;\r\n  final_approver_id:string;\r\n  primary_indication:string;\r\n  monitoring_duration:string;\r\n  order_id:string;\r\n  pacemaker:boolean;\r\n  icd:boolean\r\n  additional_info:string;\r\n  prescription_id:string;\r\n  billing_indication:string;\r\n  billing_method:string;\r\n  location:string;\r\n  biosensor:Array<Biosensor>;\r\n  status:string;\r\n  facility_id:string;\r\n  created_by:string;\r\n\r\n  admissionId: string;\r\n  primaryContact:string;\r\n  weightUnit: string;\r\n  heightUnit: string;\r\n  doctorId: string;\r\n  cGroup: string;\r\n  pGroup: string;\r\n  patchIds: Array<PatchId>;\r\n  deviceIds: Array<ThirdPartyIds>;\r\n  createdDateTime: Date;\r\n  startedOn: number;\r\n  procedureDuration: number;\r\n  estimatedDischarge: number;\r\n  prescribingPhysician:string;\r\n  technicianName:string;\r\n  referalPhysician:string;\r\n  interpPhysician:string,\r\n  prelimInterpPhysician:string;\r\n  locationGroup:string;\r\n}\r\n\r\nexport interface eNewPatient {\r\n  patientId: string;\r\n  admissionId: string;\r\n  dob: string;\r\n  age: number;\r\n  phoneNo: string;\r\n  primaryContact:string;\r\n  email: string;\r\n  gender: string;\r\n  weight: number;\r\n  height: number;\r\n  weightUnit: string;\r\n  heightUnit: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  doctorId: string;\r\n  cGroup: string;\r\n  pGroup: string;\r\n  patchIds: Array<PatchId>;\r\n  deviceIds: Array<ThirdPartyIds>;\r\n  createdDateTime: Date;\r\n  startedOn: number;\r\n  procedureDuration: number;\r\n  estimatedDischarge: number;\r\n  country:string;\r\n  zipCode:number;\r\n  street1:string;\r\n  street2:string;\r\n  city: string;\r\n  state:string;\r\n  emergencyContactName:string;\r\n  emergencyContactNumber:string;\r\n  prescribingPhysician:string;\r\n  technicianName:string;\r\n  referalPhysician:string;\r\n  interpPhysician:string,\r\n  prelimInterpPhysician:string;\r\n  locationGroup:string;\r\n  primaryIndication:string;\r\n  monitoringDuration:string;\r\n  orderId:string;\r\n  prescriptionId:string;\r\n  additionalInfo:string;\r\n  billingIndication:string;\r\n  billingMethod:string;\r\n}\r\n\r\nexport interface Biosensor {\r\n  biosensor_id:string;\r\n  monitoring_started_on:string;\r\n  monitoring_duration:number;\r\n}\r\n\r\nexport interface AssignGroup {\r\n  patientId: string;\r\n  cGroup: Group;\r\n  pGroup: Group;\r\n}\r\n\r\nexport interface ThirdPartyIds {\r\n  deviceId: string;\r\n  deviceType: string;\r\n}\r\n\r\nexport interface PatchId {\r\n  startTime?: Boolean;\r\n  deviceId: string;\r\n}\r\n\r\nexport enum ClinicalGroup {\r\n  ONCOLOGY = \"Oncology\",\r\n}\r\n\r\nexport enum PhysicalGroup {\r\n  REMOTE = \"Remote\",\r\n  INPATIENT = \"Inpatient\",\r\n}\r\n\r\nexport enum Gender {\r\n  MALE = \"Male\",\r\n  FEMALE = \"Female\",\r\n  OTHER = \"Other\"\r\n}\r\n\r\nexport enum FilterKeysForActivePatient {\r\n  PATIENTID = \"MRN\",\r\n  PATCHID = \"Biosensor ID\",\r\n  PATIENTFIRSTNAME = \"Patient First Name\"\r\n}\r\n\r\nexport enum FilterKeysForAssignPatient {\r\n  PATCHID = \"Biosensor ID\",\r\n  // PATIENTNAME = \"PATIENTNAME\"\r\n}\r\n\r\nexport enum MonitoringStatus {\r\n  ACTIVE = \"ACTIVE\",\r\n  STOP = \"STOP\",\r\n  INPROGRESS = \"INPROGRESS\",\r\n  STREAMING = \"Streaming\",\r\n  FINALIZE_IN_PROGRESS = \"finalizeInProgress\",\r\n  FINALIZED = \"finalized\"\r\n}\r\n\r\nexport enum ActivePatientsTabs {\r\n  ASSIGN_PATIENT = \"Assign Patient\",\r\n  ACTIVE_PATIENT = \"Active Patient\",\r\n}\r\n\r\nexport interface TabMetaData {\r\n  name: string;\r\n  pageNumber: number;\r\n  url: string;\r\n  searchString: string;\r\n  sortBy: string;\r\n  size: number;\r\n}\r\n\r\nexport enum TabMetaDataItems {\r\n  PAGE_NUMBER = 'PAGENUMBER',\r\n  SIZE = 'SIZE',\r\n  SORTBY = 'SORTBY',\r\n  SEARCH_OBJECT = 'SEARCH_OBJECT'\r\n}\r\n\r\nexport interface AddToDashboard {\r\n  createdBy: string;\r\n  createdById: string;\r\n  createdDateTime: string;\r\n  facilityId: string;\r\n  panelId: string;\r\n  panelType: string;\r\n  patientIds: Array<string>\r\n  patients: Array<{}>\r\n}\r\n\r\nexport interface PatientData {\r\n  activePatient: ActivePatient;\r\n  patchId: UnassignedPatient\r\n}\r\n\r\nexport interface Patch {\r\n  deviceId: string;\r\n  deviceType: string;\r\n  endTime: number;\r\n  startTime: number\r\n}\r\n\r\nexport enum WeightUnits {\r\n  KG = \"KG\",\r\n  POUND = \"POUND\"\r\n}\r\n\r\nexport enum HeightUnits {\r\n  CM = \"CM\",\r\n  INCH = \"INCH\"\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-patient-admitted-modal',\n  templateUrl: './patient-admitted-modal.component.html',\n  styleUrls: ['./patient-admitted-modal.component.scss']\n})\nexport class PatientAdmittedModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"message-modal p-4 d-flex align-items-center justify-content-between\">\n    <h5 class=\"mb-0\">{{data?.title|translate}}</h5>\n    <button mat-dialog-close mat-flat-button color=\"primary\" class=\"me-2\">{{'active-patients-module.button.ok'|translate}}</button>\n</div>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as moment from \"moment\";\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\nimport { Patch } from \"../models/active-patients.model\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\n\nexport interface PatchesData {\n  heading? : string,\n  readOnly?: boolean,\n  activePatch: string,\n  patchIds: Patch[]\n}\n\n@Component({\n  selector: \"app-patient-more-info\",\n  templateUrl: \"./patient-more-info-dialog.component.html\",\n  styleUrls: [\"./patient-more-info-dialog.component.scss\"],\n})\nexport class PatientMoreInfoDialogComponent implements OnInit {\n  isShow : boolean = false;\n  readOnly : boolean = false;\n  heading : string =\"\";\n  patchIdData : Patch[] = new Array();\n  newBiosensorId: string;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  currentPatches;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: PatchesData,\n  private dialog: MatDialog,\n  private userPreference: UserPreferenceService,\n  private ref: MatDialogRef<PatientMoreInfoDialogComponent>) {\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.patchIdData = [...data.patchIds || []];\n    this.currentPatches = [...this.patchIdData];\n    this.readOnly = data.readOnly;\n    this.heading = data.heading;\n  }\n\n  ngOnInit(): void {\n    this.getPatchIdData();\n  }\n\n  toggleStatus(){\n    this.isShow = !this.isShow;\n  }\n  addNew() {\n    this.newBiosensorId = \"\";\n    this.bioString = \"\";\n    this.isShow = !this.isShow;\n  }\n\n  checkIfExisting(){\n    return this.patchIdData.filter(p => p.deviceId?.toUpperCase() === this.newBiosensorId?.toUpperCase()).length;\n  }\n\n  onClickDelete(patch: Patch){\n    this.patchIdData = [\n      ...this.patchIdData.filter(d => patch.deviceId !== d.deviceId)\n    ]\n    this.clear();\n  }\n  bioString: string = \"\";\n\n  keypressEvent(e: KeyboardEvent) {\n    if (this.bioString.length < 5) {\n      this.bioString = this.bioString + e.key;\n      let blockSpecialRegex = /[~`!@#$%^&()_={}[\\]:;,.<>+\\/?-]/;\n      let key = e.key;\n      let n = Boolean(this.bioString.charAt(0).match(/[a-zA-Z]/));\n      if (!n && this.bioString.length > 0) {\n        this.bioString = this.bioString.substring(0, this.bioString.length - 1);\n        e.preventDefault();\n        return false;\n      }\n\n      if (blockSpecialRegex.test(key)) {\n        e.preventDefault();\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  clear(){\n    this.newBiosensorId = '';\n    this.bioString = '';\n  }\n\n  onClickSave(){\n    this.ref.close(this.patchIdData);\n  }\n\n  keydownEvent(e: KeyboardEvent) {\n    if (e.code === \"Backspace\" && this.bioString.length > 0) {\n      this.bioString = this.bioString.substring(0, this.bioString.length - 1);\n    }\n  }\n\n  addBiosensorId() {\n    let obj = {\n      deviceId: this.newBiosensorId.toUpperCase(), \n      deviceType: \"Biosensor Id\",\n      startTime: 0,\n      endTime: 0, \n    };\n    this.patchIdData.push(obj);\n    this.toggleStatus();\n  }\n\n  getPatchIdData(){\n    this.data.patchIds = [...this.patchIdData || []];\n  }\n\n  displayDeleteIcon(patchId) {\n    var date = moment(patchId.endTime*1000);\n    if(patchId.deviceId === this.data.activePatch) {\n      return false;\n    } else if (patchId.startTime && date.isAfter(new Date())) {\n      return false;\n    } else if (patchId.startTime && date.isBefore(new Date())) {\n      return false;\n    } else if (!patchId.startTime) {\n      return true;\n    }\n  }\n\n  isFutureDate(endDate) {\n    return !moment(endDate*1000).isAfter(new Date());\n  }\n\n  openDeleteConfirmationModal(patch) {\n    const deletePatch = this.dialog.open(ConfirmationDialogComponent, {\n      maxWidth: \"90vw\",\n      width: \"500px\",\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n      data: {\n        heading: \"active-patients-module.dialog.delete_patch\",\n        message: \"active-patients-module.dialog.delete_patch_message\",\n        stop_biosensor : false\n      },\n    });\n    deletePatch.afterClosed().subscribe((confirm: boolean) => {\n      if (confirm) {\n        this.onClickDelete(patch);\n      }\n    });\n  }\n\n  validateBiosensor() {\n    let patternToMatch = /^[a-zA-Z]{1}[a-zA-Z0-9]{4}$/;\n    return (patternToMatch.test(this.newBiosensorId) || this.newBiosensorId === '');\n  }\n  alphaNumericsOnly(event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z0-9]+$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  patchesUpdated() {\n    return (JSON.stringify(this.currentPatches) !== JSON.stringify(this.patchIdData))\n  }\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{ heading | translate }}\n    </h1>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup moreinfo-dialog\">\n    <div class=\"dialog-form\">\n        <div class=\"table-responsive\">\n            <table mat-table class=\"table-format-cell mat-table\" aria-label=\"Table\">\n                <thead>\n                    <tr>\n                        <th>\n                            <img alt=\"bio sensor icon\" class=\"me-2\" src=\"assets/icons/biosensor.svg\"  /> {{ \"active-patients-module.form_label.biosensor_id\" | translate }}\n                        </th>\n                        <th>\n                            {{ \"active-patients-module.form_label.added_on\" | translate }}\n                        </th>\n                        <th>\n                            {{ \"active-patients-module.form_label.removed_on\" | translate }}\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let patch of patchIdData\" [class.expired]=\"(patch.endTime && isFutureDate(patch.endTime))\">\n                        <td class=\"d-flex align-items-center\">\n                            <img alt=\"bio sensor icon\" class=\"me-2\" src=\"assets/icons/biosensor.svg\"  />\n                            <span class=\"mx-1\">{{patch.deviceId}}</span>\n                            <button mat-icon-button (click)=\"openDeleteConfirmationModal(patch)\" *ngIf=\"displayDeleteIcon(patch) && !readOnly\" class=\"rounded delete-btn ms-2\">\n                                <mat-icon class=\"justify-content-center\">delete_outline</mat-icon>\n                              </button>\n                        </td>\n                        <td>\n                            <ng-container *ngIf=\"!readOnly; else diff_pattern_for_startTime\">\n                                {{ patch.startTime ? ( patch.startTime*1000 | date:'MMM d, y / ' : timeZone ) : '-'}}\n                                <strong>{{ patch.startTime ? ( patch.startTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-container>\n                            <ng-template #diff_pattern_for_startTime>\n                                {{ patch.startTime ? ( patch.startTime*1000 | date:'d MMM y / ' : timeZone ) : '-'}}\n                                <strong>{{ patch.startTime ? ( patch.startTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-template>\n                        </td>\n                        <td>\n                            <ng-container *ngIf=\"!readOnly; else diff_pattern_for_endTime\">\n                                {{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:'MMM d, y / ' : timeZone ) : '-' }}\n                                <strong>{{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-container>\n                            <ng-template #diff_pattern_for_endTime>\n                                {{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:'MMM d, y / ' : timeZone ) : '-' }}\n                                <strong>{{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-template>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"isShow\">\n                        <td class=\"d-flex align-items-center\">\n                            <div class=\"add-Biosensor-Id\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <mat-form-field appearance=\"fill\" floatLabel=\"never\" class=\"input-control\">\n                                            <input matInput [(ngModel)]=\"newBiosensorId\" maxlength=\"5\" minlength=\"5\" type=\"text\" autocomplete=\"off\" (keypress)=\"alphaNumericsOnly($event)\" pattern=\"^[a-zA-Z]{1}[a-zA-Z0-9]{4}$\" #biosensorIdCtrl=\"ngModel\">\n                                            <mat-error *ngIf=\"!biosensorIdCtrl.hasError('minlength') && biosensorIdCtrl.hasError('pattern')\">{{\"active-patients-module.errors.biosensorPatternValid\" | translate}}</mat-error>\n                                            <mat-error *ngIf=\"(biosensorIdCtrl.hasError('maxlength') || biosensorIdCtrl.hasError('minlength'))\">\n                                                {{\"active-patients-module.errors.biosensorLength\" | translate}}\n                                            </mat-error>\n                                            <button mat-icon-button color=\"warn\" *ngIf=\"newBiosensorId?.length\" matSuffix class=\"btn-boxed btn-no-shadow\" (click)=\"clear()\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                                            <button mat-mini-fab color=\"primary\" matSuffix *ngIf=\"!checkIfExisting() && (newBiosensorId?.length === 5) && !biosensorIdCtrl.hasError('pattern')\" class=\"btn-boxed tick-checked\" (click)=\"addBiosensorId()\">\n                      <mat-icon>check</mat-icon>\n                    </button>\n                                        </mat-form-field>\n                                        <div class=\"error-message\" *ngIf=\"checkIfExisting()\">{{\"active-patients-module.errors.biosensor_id_repeated\" | translate}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td>-</td>\n                        <td>-</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"add-items mt-2\" *ngIf=\"!readOnly\">\n            <button mat-flat-button mat-dialog-add color=\"primary\" (click)=\"addNew()\">\n        <!--<mat-icon >add</mat-icon>{{\"active-patients-module.button.add_new\" | translate}}-->\n        <!--<mat-icon *ngIf=\"!isShow\">add</mat-icon>\n          <mat-icon *ngIf=\"isShow\">close</mat-icon>-->\n        {{ isShow ? (\"active-patients-module.button.cancel\" | translate) : (\"active-patients-module.button.add_new\" | translate) }}\n      </button>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions class=\"me-4\">\n    <ng-container *ngIf=\"!readOnly; else okButton\">\n        <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\n      {{ \"active-patients-module.button.cancel\" | translate }}\n    </button>\n        <button mat-flat-button color=\"primary\" (click)=\"onClickSave()\" class=\"fill-btn\"\n                [disabled]=\"!validateBiosensor() || !patchesUpdated\" [class.disabled]=\"!validateBiosensor() || !patchesUpdated\">\n      {{ \"active-patients-module.button.save\" | translate }}\n    </button>\n    </ng-container>\n    <ng-template #okButton>\n        <button mat-flat-button mat-dialog-close color=\"primary\" class=\"fill-btn\">\n      {{ \"active-patients-module.button.ok\" | translate }}\n    </button>\n    </ng-template>\n\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-remove-biosensor',\n  templateUrl: './remove-biosensor.component.html',\n  styleUrls: ['./remove-biosensor.component.scss']\n})\nexport class RemoveBiosensorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{'active-patients-module.dialog.remove_biosensor' | translate}}\n    </h1>\n  </mat-card>\n  \n  <mat-dialog-content class=\"mat-dialog-popup remove-dialog\" cdkInitialFocus>\n    <div class=\"dialog-form\">\n      <p>\n        {{'active-patients-module.dialog.remove_biosensor_message' | translate}}\n      </p>\n    </div>\n  </mat-dialog-content>\n  <div mat-dialog-actions >\n    <button\n      mat-flat-button\n      color=\"primary\"\n      mat-dialog-close\n      class=\"fill-btn\"\n    >\n      {{ \"active-patients-module.button.ok\" | translate }}\n    </button>\n  </div>\n  ","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, of, throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { LSTableConfig } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport {\r\n  ActivePatient,\r\n  DOCTORS,\r\n  NewPatient,\r\n  UnassignedPatient,\r\n} from \"../models/active-patients.model\";\r\nimport { BackendApiService } from \"@services/backendapi.service\";\r\nimport { Patient } from \"src/app/shared/shared.interface\";\r\nimport { env } from \"process\";\r\nimport { error } from \"console\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class ActivePatientsService {\r\n  BASE_URL: string = environment.dataApiUrl;\r\n  URL:string=environment.dataApiUrl2;\r\n  http: HttpClient;\r\n  facility_id: string;\r\n  facility_staff: DOCTORS[] = [];\r\n\r\n  constructor(\r\n    private manageGroupService: ManageGroupsService,\r\n    private backendApiService: BackendApiService) {\r\n    this.http = backendApiService.httpClient;\r\n    this.BASE_URL = (environment.integ) ? environment.dataApiUrl2 : environment.dataApiUrl;\r\n    this.facility_id = \"CFPI8P\";\r\n\r\n  }\r\n\r\n  async getFacilityUsers() {\r\n    let usrs = await this.getUsers();\r\n    console.log(\"Getting facility users\");\r\n    usrs.subscribe((doctors) => { \r\n      this.facility_staff = doctors.data.items;\r\n      console.log(\"STAFF:>\", this.facility_staff);\r\n    });\r\n  }\r\n\r\n  async getUsers() {\r\n    //Get all users of the facility..\r\n    let url = `${this.BASE_URL}get_users/${this.facility_id}?page=1&sort_order=asc&limit=100`;\r\n    let users = this.http.get<any>(url).pipe(catchError(this.handleError));\r\n    return users;\r\n  }\r\n\r\n  getFacilityStaff(role: string): DOCTORS[] {\r\n\r\n    //Filter users according to prescibers.\r\n    let p = this.facility_staff.filter(x =>   (x.roles[0][role] === 1) && x.enable)\r\n\r\n    let userList = [];\r\n    userList = p.map(user => ({id: user.id, name: `${user?.first_name} ${user?.last_name}`}))\r\n    return userList;\r\n  }\r\n\r\n  getAll(url) {\r\n    if (url) {\r\n      //Hard-code baseurl to probeplus\r\n      //this.BASE_URL = \"http://www.probeplus.site/\";\r\n      let apiURL = `${this.BASE_URL}${url}`;\r\n      return this.http\r\n        .get<ActivePatient[]>(apiURL)\r\n        .pipe(catchError(this.handleError));\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  savePatient(data) {\r\n    let url = this.BASE_URL +\"patient_register/\";\r\n    //TODO: Integrate with location API in drop-down\r\n    data.payload.facility_id = \"F001\";\r\n    data.payload.created_by = \"U001\";\r\n    data.payload.fk_technician=\"USRJNC139\"\r\n    return this.http\r\n      .post<NewPatient>(url, data.payload)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updatePatient(obj) {\r\n    let url = this.BASE_URL + \"patients/\";\r\n    return this.http\r\n      .put<{ data: NewPatient }>(url, obj.payload)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  getAutogeneratedPatientId() {\r\n    let url ='https://alpha.api.lifesignals.com/api/v1/resources/patients/generate-id';\r\n    return this.http.post(url, '').pipe(catchError(this.handleError));\r\n  }\r\n\r\n  stopProcedure(patientId) {\r\n    let url = this.BASE_URL + `patients/${patientId}/stop-procedure`;\r\n    return this.http\r\n      .post<NewPatient>(url, \"\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  dischargePatient(patientId) {\r\n    patientId = encodeURIComponent(patientId);\r\n    let url = this.BASE_URL + `patients/${patientId}/discharge`;\r\n    return this.http\r\n      .post<NewPatient>(url, \"\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getDoctorsList() {\r\n    let role = \"prescriber\";\r\n    // drop_down_user/6479a6323525db4f78d50831?role=prescriber'\r\n    let url = this.URL+`get_users_based_role/CFPI8P?role=prescriber`;\r\n    console.log(url);\r\n    // let url = \"http://www.probeplus.site/drop_down_user/6479a6323525db4f78d50831?role=admin\";\r\n    return this.http.get<DOCTORS[]>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getDoctorBy(id) {\r\n    let url = this.BASE_URL + \"clinical-facilities/physicians?Id=\" + id;\r\n    return this.http.get<any>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  handleError(error: any) {\r\n     return throwError(error.errorMessage || `Error: ${error}`);\r\n  }\r\n\r\n  setSelectedPatientIds(ids: string[]) {\r\n    return of(ids);\r\n  }\r\n\r\n  setSelectedTab(tab: string) {\r\n    return of(tab);\r\n  }\r\n\r\n  getUnassignedPatients(url) {\r\n    if (url) {\r\n      let apiURL = `${this.BASE_URL}${url}`;\r\n      return this.http\r\n        .get<UnassignedPatient[]>(apiURL)\r\n        .pipe(catchError(this.handleError));\r\n    } else {\r\n      return of(undefined);\r\n    }\r\n  }\r\n\r\n  getPatientBy(id) {\r\n    id = encodeURIComponent(id);\r\n    let apiURL = `${this.BASE_URL}patients/${id}`;\r\n    return this.http\r\n      .get<{ data: ActivePatient }>(apiURL)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private cGroup$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  groups$: Observable<any[]> = this.cGroup$.asObservable();\r\n\r\n  getCGroups(): Observable<Group[]> {\r\n    if (this.cGroup$.getValue()) {\r\n      return this.cGroup$.asObservable();\r\n    } else {\r\n      return this.manageGroupService.fetch()\r\n        .pipe(map(groups => {\r\n          if (groups['data']?.length > 0) {\r\n            this.cGroup$.next(groups['data']);\r\n          }\r\n          return groups['data'] || [];\r\n        }));\r\n    }\r\n  }\r\n\r\n  unassignedPatientsUrl(config: LSTableConfig, searchObject) {\r\n    return `patches/unassigned?&page=${config.page.pageIndex + 1}&size=${config.page.pageSize}&${searchObject?.keyword?.toLowerCase()}=${searchObject?.string}`;\r\n  }\r\n\r\n  actvePatientsUrl(config: LSTableConfig, searchObject, filterObject) {\r\n    let searchString = encodeURIComponent(searchObject.string)\r\n    // let url = `patients/?sortBy=${config.sort.active}:${config.sort.direction}&isDischarged=false&page=${config.page.pageIndex + 1}&size=${config.page.pageSize}`;\r\n    // let url = `current_patient/?offset=${config.page.pageIndex+1}&limit=${config.page.pageSize}`;\r\n    let url = `current_patient/?page=${config.page.pageIndex + 1}&limit=${config.page.pageSize}&sort=${config.sort.active}&order=${config.sort.direction}`;\r\n    // let url = \"patient_details\"\r\n    if (searchObject?.keyword && searchString) {\r\n      url = url + `&${searchObject?.keyword?.toLowerCase()}=${searchString}`;\r\n    }\r\n    if (filterObject?.cGroupId) {\r\n      url = url + `&cGroupId=${filterObject?.cGroupId}`;\r\n    }\r\n    if (filterObject?.pGroupId) {\r\n      url = url + `&pGroupId=${filterObject?.pGroupId}`;\r\n    }\r\n    if(filterObject?.doctor)\r\n    {\r\n      url = url + `&fk_prescriber=USR111111`;\r\n    }\r\n    return url;\r\n  }\r\n \r\n  getClinicalGroups(location: string) {\r\n    return this.groups$.pipe(map((groups: any[]) => {\r\n      return groups.filter(g => g.type === location);\r\n    }));\r\n  }\r\n\r\n  assignGroup(ob) {\r\n    let url = this.BASE_URL + \"patients/assign-group\";\r\n    return this.http.post<Group>(url, ob.payload).pipe(catchError(this.handleError));\r\n  }\r\n  getPanelDetails(panelId: string): Promise<Array<Patient>> {\r\n    return new Promise((resolve, reject) => {\r\n      const apiUrl = this.BASE_URL + 'dashboard/panels/';\r\n      this.backendApiService.getMapping(apiUrl + panelId)\r\n        .then(response => {\r\n          const data = response?.data?.patients;\r\n          if (data) {\r\n            const patientsArr = data.map((patient) => ({\r\n              patchId: patient?.patchId,\r\n              patientId: patient?.patientId,\r\n              doctorId: patient?.doctorId,\r\n              firstName: patient?.firstName,\r\n              lastName: patient?.lastName,\r\n              age: patient?.age,\r\n              cGroup: patient?.cGroup,\r\n              pGroup: patient?.pGroup,\r\n              sex: patient?.gender,\r\n              created: new Date(patient?.stTime * 1000)\r\n            }));\r\n            resolve(patientsArr);\r\n          }\r\n        }).catch(reject);\r\n    });\r\n  }\r\n  generateAdmissionId() {\r\n    let url = this.BASE_URL + \"patients/admissions/generate-id\";\r\n    return this.http.post(url, \"\").pipe(catchError(this.handleError));\r\n  }\r\n  searchPatient(id) {\r\n    id = encodeURIComponent(id);\r\n    let apiURL = this.BASE_URL + `patients/details/search?page=1&size=5&sortBy=PatientID:desc&PatientID=${id}`;\r\n    return this.http\r\n      .get(apiURL)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  stopMonitoringUnassigned(patchIds) {\r\n    let url = this.BASE_URL + `patches/stop-procedure/bulk`;\r\n    let body = {\r\n      \"patchIdList\": patchIds\r\n    }\r\n    return this.http\r\n      .post<NewPatient>(url, body)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  deletePatch(patchId) {\r\n    let url = this.BASE_URL + `patches/unassigned/${patchId}`;\r\n    return this.http.delete<any>(url).pipe(catchError(this.handleError));\r\n  }\r\n  transferRelay(patchId) {\r\n    let url = this.BASE_URL + `patients/relay-transfer/${patchId}`;\r\n    return this.http\r\n      .post<NewPatient>(url, {})\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { Action } from \"@ngrx/store\";\nimport {\n  ActivePatient,\n  AssignGroup,\n  DOCTORS,\n  NewPatient,\n  UnassignedPatient,\n} from \"../models/active-patients.model\";\n\nexport enum ActionTypes {\n  LOAD_ACTIVE_PATIENTS_REQUEST = \"[ACTIVEPATIENTS] Load active patients request\",\n  LOAD_ACTIVE_PATIENTS_FAILURE = \"[ACTIVEPATIENTS] Load active patients Failure\",\n  LOAD_ACTIVE_PATIENTS_SUCCESS = \"[ACTIVEPATIENTS] Load active patients Success\",\n\n  LOAD_UNASSIGNED_PATIENTS_REQUEST = \"[UNASSIGNEDPATIENTS] Load unassigned patients request\",\n  LOAD_UNASSIGNED_PATIENTS_FAILURE = \"[UNASSIGNEDPATIENTS] Load unassigned patients Failure\",\n  LOAD_UNASSIGNED_PATIENTS_SUCCESS = \"[UNASSIGNEDPATIENTS] Load unassigned patients Success\",\n\n  LOAD_DOCTORS_LIST_REQUEST = \"[DOCTORS] Load doctors list request\",\n  LOAD_DOCTORS_LIST_FAILURE = \"[DOCTORS] Load doctors list Failure\",\n  LOAD_DOCTORS_LIST_SUCCESS = \"[DOCTORS] Load doctors list Success\",\n\n  CREATE_NEW_PATIENT_REQUEST = \"[ACTIVEPATIENTS] Create new patient request\",\n  CREATE_NEW_PATIENT_FAILURE = \"[ACTIVEPATIENTS] Create new patient Failure\",\n  CREATE_NEW_PATIENT_SUCCESS = \"[ACTIVEPATIENTS] Create new patient Success\",\n\n  UPDATE_PATIENT_REQUEST = \"[ACTIVEPATIENTS] Update patient request\",\n  UPDATE_PATIENT_FAILURE = \"[ACTIVEPATIENTS] Update patient Failure\",\n  UPDATE_PATIENT_SUCCESS = \"[ACTIVEPATIENTS] Update patient Success\",\n\n  ASSIGN_GROUP_REQUEST = \"[ASSIGNGROUP] assign group request\",\n  ASSIGN_GROUP_FAILURE = \"[ASSIGNGROUP] assign group Failure\",\n  ASSIGN_GROUP_SUCCESS = \"[ASSIGNGROUP] assign group Success\",\n\n  DISCHARGE_PATIENT_REQUEST = \"[ACTIVEPATIENTS] DISCHARGE patient request\",\n  DISCHARGE_PATIENT_FAILURE = \"[ACTIVEPATIENTS] DISCHARGE patient Failure\",\n  DISCHARGE_PATIENT_SUCCESS = \"[ACTIVEPATIENTS] DISCHARGE patient Success\",\n\n  STOP_MONITORING_REQUEST = \"[ACTIVEPATIENTS] Stop Monitoring patient request\",\n  STOP_MONITORING_FAILURE = \"[ACTIVEPATIENTS] Stop Monitoring patient Failure\",\n  STOP_MONITORING_SUCCESS = \"[ACTIVEPATIENTS] Stop Monitoring patient Success\",\n\n  SET_SELECTED_PATIENTS_IDs_REQUEST = \"[ACTIVEPATIENTS] Set selected patient ids request\",\n  SET_SELECTED_PATIENTS_IDs_FAILURE = \"[ACTIVEPATIENTS] Set selected patient ids Failure\",\n  SET_SELECTED_PATIENTS_IDs_SUCCESS = \"[ACTIVEPATIENTS] Set selected patient ids Success\",\n\n  SET_SELECTED_TAB_REQUEST = \"[TableTab] Set selected patient ids request\",\n  SET_SELECTED_TAB_FAILURE = \"[TableTab] Set selected patient ids Failure\",\n  SET_SELECTED_TAB_SUCCESS = \"[TableTab] Set selected patient ids Success\",\n}\n\nexport class LoadActivePatientsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_ACTIVE_PATIENTS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class LoadActivePatientsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_ACTIVE_PATIENTS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class LoadActivePatientsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_ACTIVE_PATIENTS_SUCCESS;\n  constructor(\n    public payload: { data: { patients: ActivePatient[]; total: number } }\n  ) {}\n}\n\nexport class LoadUnassignedPatientsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_UNASSIGNED_PATIENTS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class LoadUnassignedPatientsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_UNASSIGNED_PATIENTS_FAILURE;\n  constructor(public payload: { error: any }) {}\n}\n\nexport class LoadUnassignedPatientsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_UNASSIGNED_PATIENTS_SUCCESS;\n  constructor(\n    public payload: { data:{ items : UnassignedPatient[]; total: number } }\n  ) {}\n}\n\nexport class LoadDoctorsListRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_DOCTORS_LIST_REQUEST;\n}\n\nexport class LoadDoctorsListFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_DOCTORS_LIST_FAILURE;\n  constructor(public payload: { error: any }) {}\n}\n\nexport class LoadDoctorsListSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_DOCTORS_LIST_SUCCESS;\n  constructor(public payload: { doctors: DOCTORS[] }) {}\n}\n\nexport class CreateNewPatientRequestAction implements Action {\n  readonly type = ActionTypes.CREATE_NEW_PATIENT_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class CreateNewPatientFailureAction implements Action {\n  readonly type = ActionTypes.CREATE_NEW_PATIENT_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class CreateNewPatientSuccessAction implements Action {\n  readonly type = ActionTypes.CREATE_NEW_PATIENT_SUCCESS;\n  constructor(public payload: { newPatient: NewPatient }) {}\n}\n\nexport class UpdatePatientRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_PATIENT_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class UpdatePatientFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_PATIENT_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class UpdatePatientSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_PATIENT_SUCCESS;\n  constructor(public payload: { updatedData: NewPatient }) {}\n}\n\nexport class AssignGroupRequestAction implements Action {\n  readonly type = ActionTypes.ASSIGN_GROUP_REQUEST;\n  constructor(public payload: any) {}\n}\n\nexport class AssignGroupFailureAction implements Action {\n  readonly type = ActionTypes.ASSIGN_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class AssignGroupSuccessAction implements Action {\n  readonly type = ActionTypes.ASSIGN_GROUP_SUCCESS;\n  constructor(public payload: { updatedData: any }) {}\n}\n\nexport class DischargePatientRequestAction implements Action {\n  readonly type = ActionTypes.DISCHARGE_PATIENT_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class DischargePatientFailureAction implements Action {\n  readonly type = ActionTypes.DISCHARGE_PATIENT_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class DischargePatientSuccessAction implements Action {\n  readonly type = ActionTypes.DISCHARGE_PATIENT_SUCCESS;\n  constructor(public payload: { dischargedPatient: NewPatient }) {}\n}\n\nexport class StopMonitoringRequestAction implements Action {\n  readonly type = ActionTypes.STOP_MONITORING_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class StopMonitoringFailureAction implements Action {\n  readonly type = ActionTypes.STOP_MONITORING_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class StopMonitoringSuccessAction implements Action {\n  readonly type = ActionTypes.STOP_MONITORING_SUCCESS;\n  constructor(public payload: { patient: NewPatient }) {}\n}\n\nexport class SetSelectedPatientIdsRequestAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_PATIENTS_IDs_REQUEST;\n  constructor(public payload: string[]) {}\n}\n\nexport class SetSelectedPatientIdsFailureAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_PATIENTS_IDs_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class SetSelectedPatientIdsSuccessAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_PATIENTS_IDs_SUCCESS;\n  constructor(public payload: { patientIds: string[] }) {}\n}\n\nexport class SetSelectedTabRequestAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_TAB_REQUEST;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTabFailureAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_TAB_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class SetSelectedTabSuccessAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_TAB_SUCCESS;\n  constructor(public payload: { selectedTab: string }) {}\n}\n\nexport type ActivePatientsActions =\n  | LoadActivePatientsFailureAction\n  | LoadActivePatientsRequestAction\n  | LoadActivePatientsSuccessAction\n  | LoadDoctorsListFailureAction\n  | LoadDoctorsListRequestAction\n  | LoadDoctorsListSuccessAction\n  | CreateNewPatientFailureAction\n  | CreateNewPatientRequestAction\n  | CreateNewPatientSuccessAction\n  | UpdatePatientRequestAction\n  | UpdatePatientFailureAction\n  | UpdatePatientSuccessAction\n  | DischargePatientRequestAction\n  | DischargePatientFailureAction\n  | DischargePatientSuccessAction\n  | StopMonitoringFailureAction\n  | StopMonitoringRequestAction\n  | StopMonitoringSuccessAction\n  | SetSelectedPatientIdsFailureAction\n  | SetSelectedPatientIdsRequestAction\n  | SetSelectedPatientIdsSuccessAction\n  | LoadUnassignedPatientsRequestAction\n  | LoadUnassignedPatientsFailureAction\n  | LoadUnassignedPatientsSuccessAction\n  | SetSelectedTabRequestAction\n  | SetSelectedTabFailureAction\n  | SetSelectedTabSuccessAction\n  | AssignGroupFailureAction\n  | AssignGroupRequestAction\n  | AssignGroupSuccessAction;\n","import { TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport {\r\n  ActivePatient,\r\n  NewPatient,\r\n  DOCTORS,\r\n  UnassignedPatient,\r\n  ActivePatientsTabs,\r\n} from \"../models/active-patients.model\";\r\nimport { ActivePatientsActions, ActionTypes } from \"./active-patients.actions\";\r\n\r\nexport interface State {\r\n  ACTIVE_PATIENTS_DATA?: ActivePatient[];\r\n  UNASSIGNED_PATIENTS_DATA?: UnassignedPatient[];\r\n  PATIENT?: NewPatient;\r\n  DOCTORS?: DOCTORS[];\r\n  error?: any;\r\n  PATIENT_IDS?: string[];\r\n  SELECTED_TAB?: string;\r\n  tableState?: string;\r\n  addEditState?: string;\r\n  total?: number;\r\n  unassignedPatients_total ?: number;\r\n}\r\n\r\nconst initialActivePatientState: State = {\r\n  ACTIVE_PATIENTS_DATA: [],\r\n  UNASSIGNED_PATIENTS_DATA: [],\r\n  PATIENT: null,\r\n  DOCTORS: [],\r\n  error: \"\",\r\n  PATIENT_IDS: null,\r\n  SELECTED_TAB: ActivePatientsTabs.ACTIVE_PATIENT,\r\n  tableState: TableState.DEFAULT,\r\n  addEditState: TableState.DEFAULT,\r\n  total: 0,\r\n  unassignedPatients_total:0\r\n};\r\n\r\nexport const patientsFeatureKey = \"patient\";\r\n\r\nexport function ActivePatientsReducer(\r\n  state: State = initialActivePatientState,\r\n  action: ActivePatientsActions\r\n) {\r\n  switch (action.type) {\r\n    case ActionTypes.LOAD_ACTIVE_PATIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ACTIVE_PATIENTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        //ACTIVE_PATIENTS_DATA: [],\r\n        tableState: TableState.FAILURE,\r\n        total: 0\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ACTIVE_PATIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ACTIVE_PATIENTS_DATA: action.payload[\"data\"].patients,\r\n        tableState: TableState.SUCCESS,\r\n        total: action.payload[\"data\"].total\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_UNASSIGNED_PATIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_UNASSIGNED_PATIENTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        tableState: TableState.FAILURE,\r\n        UNASSIGNED_PATIENTS_DATA: [],\r\n        error: action.payload.error,\r\n        unassignedPatients_total: 0\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_UNASSIGNED_PATIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        UNASSIGNED_PATIENTS_DATA: action.payload[\"data\"].items,\r\n        tableState: TableState.SUCCESS,\r\n        unassignedPatients_total: action.payload[\"data\"].total,\r\n        error: null\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_DOCTORS_LIST_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        //tableState: TableState.LOADING,\r\n        DOCTORS: []\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_DOCTORS_LIST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_DOCTORS_LIST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        DOCTORS: action.payload[\"doctors\"][\"data\"],\r\n      };\r\n    }\r\n\r\n    case ActionTypes.CREATE_NEW_PATIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        PATIENT : null,\r\n        error: null,\r\n        addEditState: TableState.DEFAULT,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.CREATE_NEW_PATIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        addEditState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.CREATE_NEW_PATIENT_SUCCESS: {\r\n      return {\r\n      ...state,\r\n      PATIENT: action.payload[\"newPatient\"][\"data\"],\r\n      ACTIVE_PATIENTS_DATA: [\r\n          ...state.ACTIVE_PATIENTS_DATA,\r\n          action.payload[\"newPatient\"][\"data\"]\r\n        ],\r\n        total: state?.total + 1,\r\n        addEditState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_PATIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        addEditState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_PATIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        addEditState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_PATIENT_SUCCESS: {\r\n      let resp: ActivePatient[] = [];\r\n      if (state.SELECTED_TAB === ActivePatientsTabs.ASSIGN_PATIENT && action.payload[\"updatedData\"][\"data\"]) {\r\n        resp = state.ACTIVE_PATIENTS_DATA;\r\n      } else if (state.SELECTED_TAB === ActivePatientsTabs.ACTIVE_PATIENT) {\r\n        resp = state.ACTIVE_PATIENTS_DATA?.map((x) => {\r\n          if (x?.patientId === ((action.payload[\"updatedData\"][\"data\"] !== undefined) ? action.payload[\"updatedData\"][\"data\"][\"patientId\"] : action.payload[\"updatedData\"][\"patientId\"])) {\r\n            x = (action.payload[\"updatedData\"][\"data\"] !== undefined) ? action.payload[\"updatedData\"][\"data\"] : action.payload[\"updatedData\"];\r\n            return x;\r\n          } else {\r\n            return x;\r\n          }\r\n        })\r\n      }\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        addEditState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.STOP_MONITORING_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.STOP_MONITORING_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.STOP_MONITORING_SUCCESS: {\r\n\r\n      return {\r\n        ...state,\r\n        ACTIVE_PATIENTS_DATA: state.ACTIVE_PATIENTS_DATA?.map((x) => {\r\n          if (x && x[\"patientId\"] === action.payload[\"patient\"][\"data\"]) {\r\n            x.biosensorStatus = \"STOPPED\";\r\n            return x;\r\n          } else {\r\n            return x;\r\n          }\r\n        }),\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_PATIENTS_IDs_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_PATIENTS_IDs_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_PATIENTS_IDs_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        PATIENT_IDS: action.payload[\"patientIds\"],\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_TAB_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_TAB_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_TAB_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        SELECTED_TAB: action.payload[\"selectedTab\"],\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ASSIGN_GROUP_REQUEST: {\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ASSIGN_GROUP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ASSIGN_GROUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.DISCHARGE_PATIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.DISCHARGE_PATIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.DISCHARGE_PATIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ACTIVE_PATIENTS_DATA: state?.ACTIVE_PATIENTS_DATA?.filter(\r\n        (x) => {\r\n        if (x.patientId !== action.payload[\"dischargedPatient\"][\"data\"]) {\r\n        return x;\r\n        }\r\n        }\r\n        ),\r\n        total: state?.total - 1,\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { State, patientsFeatureKey } from \"./active-patients.reducer\";\n\nconst getPatientState = createFeatureSelector<State>(patientsFeatureKey);\n\nexport const selectActivePatientsList = createSelector(\n  getPatientState,\n  (state) => {\n    return {\n      ...state,\n      error: state?.error,\n      tableState: state?.tableState\n    }\n  }\n);\n\nexport const selectUnassignedPatientsList = createSelector(\n  getPatientState,\n  (state) => {\n    return {\n      ...state,\n      error: state?.error,\n      tableState: state?.tableState\n    }\n  }\n);\n\nexport const selectActivePatientsError = createSelector(\n  getPatientState,\n  (state) => state?.error\n);\n\nexport const createNewPatient = createSelector(\n  getPatientState,\n  (state) => {\n    return{\n      PATIENT : state?.PATIENT,\n      error : state?.error,\n      addEditState: state?.addEditState\n    }\n  }\n);\n\nexport const updatePatient = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const assignGroupPatient = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const dischargePatient = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const stopMonitoring = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const doctorsList = createSelector(\n  getPatientState,\n  (state) => state?.DOCTORS\n);\n\nexport const getPatientIds = createSelector(\n  getPatientState,\n  (state) => state.PATIENT_IDS\n);\n\nexport const selectedTab = createSelector(\n  getPatientState,\n  (state) => state.SELECTED_TAB\n)\n","import * as ActivePatientsStoreActions from \"./active-patients.actions\";\nimport * as ActivePatientsStoreSelectors from \"./active-patients.selector\";\nimport * as ActivePatientsStoreState from \"./active-patients.reducer\";\n\nexport {\n  ActivePatientsStoreActions,\n  ActivePatientsStoreSelectors,\n  ActivePatientsStoreState,\n};\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\nimport { RootComponent } from \"./shared/root/root.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"settings\",\r\n    loadChildren: () =>\r\n      import(\"./settings/settings.module\").then(\r\n        (module) => module.SettingsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"summary\",\r\n    component: RootComponent,\r\n    loadChildren: () =>\r\n      import(\"./summary/summary.module\").then((module) => module.SummaryModule)\r\n  },\r\n  {\r\n    path: \"super-admin\",\r\n    loadChildren: () =>\r\n      import(\"./super-admin/super-admin.module\").then(\r\n        (module) => module.SuperAdminModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"service-provider-admin\",\r\n    loadChildren: () =>\r\n      import(\"./service-provider-admin/service-provider-admin.module\").then(\r\n        (module) => module.ServiceProviderAdminModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"patients\",\r\n    loadChildren: () =>\r\n      import(\"./active-patients/active-patients.module\").then(\r\n        (module) => module.ActivePatientsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"pending-interpretation\",\r\n    loadChildren: () =>\r\n      import(\"./pending-interpretation/pending-interpretation.module\").then(\r\n        (module) => module.ActivePatientsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"discharge\",\r\n    loadChildren: () =>\r\n      import(\"./discharge-patients/discharge-patients.module\").then(\r\n        (module) => module.DischargePatientsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"manage-group\",\r\n    loadChildren: () =>\r\n      import(\"./manage-group/manage-group.module\").then(\r\n        (module) => module.ManageGroupModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"profile\",\r\n    component: ProfileComponent,\r\n  },\r\n  {\r\n    //default route after login from SSO, auth guard logic will handle whether to stay in summary page or not\r\n    path: \"\",\r\n    redirectTo: \"/summary\",\r\n    pathMatch: \"full\"\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      relativeLinkResolution: \"legacy\",\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, Injectable, NgModule, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport {\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  RippleGlobalOptions,\r\n} from \"@angular/material/core\";\r\nimport {ManageUsersService} from \"./settings/manage-users/services/manage-users.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private _appRippleOptions: AppGlobalRippleOptions,\r\n    private userService: ManageUsersService\r\n  ) {\r\n    this._appRippleOptions.disabled = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"SAA : \" + this.authService.getRoles());\r\n    let userId = this.authService.getUserId();\r\n    console.log(\"uId : \" + userId);\r\n    let preference;\r\n    this.userService.getUser(userId)\r\n        .subscribe((response: any) => {\r\n          if(response.status === 'OK') {\r\n            preference = {\r\n              units: response?.data?.units || 'SI',\r\n              timeZone: this.userService.getTimeZoneOffset(response?.data?.timezone),\r\n            };\r\n            sessionStorage.setItem('userPreference', JSON.stringify(preference));\r\n            sessionStorage.setItem('timezone', response?.data?.timezone);\r\n            sessionStorage.setItem('facility-logo', response.data.logoUrl);\r\n            sessionStorage.setItem('first_name',response.data.firstName);\r\n            sessionStorage.setItem('facilityName',response.data?.facilityName);\r\n            sessionStorage.setItem('emr',response.data?.emr);\r\n            this.authService.getCustomizationLogo(true);\r\n          } else {\r\n            preference = {\r\n              units: '',\r\n              timeZone: '',\r\n            };\r\n            sessionStorage.setItem('userPreference', JSON.stringify(preference));\r\n          }\r\n        }, error => {\r\n          preference = {\r\n            units: '',\r\n            timeZone: '',\r\n          };\r\n          sessionStorage.setItem('userPreference', JSON.stringify(preference));\r\n        })\r\n\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AppGlobalRippleOptions implements RippleGlobalOptions {\r\n  /** Whether ripples should be disabled globally. */\r\n  disabled: boolean = false;\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: MAT_RIPPLE_GLOBAL_OPTIONS, useExisting: AppGlobalRippleOptions },\r\n  ],\r\n})\r\nexport class RippleModule {}\r\n","<router-outlet></router-outlet>\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { APP_INITIALIZER, NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\n\r\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from \"@angular/common/http\";\r\nimport { SharedModule } from \"src/app/shared/shared.module\";\r\nimport { BackendApiService } from \"./services/backendapi.service\";\r\nimport { AuthenticationService } from \"./services/authentication.service\";\r\nimport { AuthGuard } from \"./guards/auth.guard\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreRouterConnectingModule } from \"@ngrx/router-store\";\r\nimport { reducers, metaReducers } from \"./reducers\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { I18nModule } from \"./i18n/i18n.module\";\r\nimport { KeycloakAngularModule, KeycloakService } from \"keycloak-angular\";\r\nimport { initializeKeycloak } from \"./init/keycloak-init.factory\";\r\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\r\nimport { DischargePatientsModule } from \"./discharge-patients/discharge-patients.module\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { ManageUsersService } from \"./settings/manage-users/services/manage-users.service\";\r\nimport {ErrorInterceptor} from \"./interceptors/error.interceptor\";\r\nimport {OWL_DATE_TIME_FORMATS, OwlDateTimeModule, OwlNativeDateTimeModule} from \"ng-pick-datetime\";\r\nimport {MY_MOMENT_FORMATS} from \"@utils/helpers\";\nimport { BioSensorComponent } from './bio-sensor/bio-sensor.component';\r\n\r\n/**\r\n * The http loader factory : Loads the files from define path.\r\n * @param {HttpClient} http\r\n * @returns {TranslateHttpLoader}\r\n * @constructor\r\n */\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, \"../assets/i18n/\", \".json?v=\"+environment.version);\r\n}\r\n@NgModule({\r\n    declarations: [AppComponent, BioSensorComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        MatFormFieldModule,\r\n        SharedModule,\r\n        MatSnackBarModule,\r\n        MatProgressSpinnerModule,\r\n        DischargePatientsModule,\r\n        EffectsModule.forRoot([]),\r\n        StoreRouterConnectingModule.forRoot(),\r\n        StoreModule.forRoot(reducers, {metaReducers}),\r\n        StoreDevtoolsModule.instrument({\r\n            name: \"Lifesignals\",\r\n            logOnly: environment.production\r\n        }),\r\n        KeycloakAngularModule,\r\n        HttpClientModule,\r\n        I18nModule.forRoot({locale_id: \"en-US\"}), // iniating with default language: en-US\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            },\r\n        }),\r\n        OwlDateTimeModule,\r\n        OwlNativeDateTimeModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: APP_INITIALIZER,\r\n            useFactory: initializeKeycloak,\r\n            multi: true,\r\n            deps: [KeycloakService]\r\n        },\r\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill', floatLabel: 'never'}},\r\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n        {provide: OWL_DATE_TIME_FORMATS, useValue: MY_MOMENT_FORMATS},\r\n        AuthGuard,\r\n        AuthenticationService,\r\n        BackendApiService,\r\n        ManageUsersService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bio-sensor',\n  templateUrl: './bio-sensor.component.html',\n  styleUrls: ['./bio-sensor.component.scss']\n})\nexport class BioSensorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>bio-sensor works!</p>\n","import { Component, HostListener, Input, OnInit } from \"@angular/core\";\nimport { SortDirective } from \"../sort.directive\";\n\n@Component({\n  selector: \"app-sort-header\",\n  templateUrl: \"./sort-header.component.html\",\n  styleUrls: [\"./sort-header.component.scss\"],\n})\nexport class SortHeaderComponent {\n  @Input()\n  ref: string;\n\n  @Input() enableSort = true;\n\n  constructor(public sorter: SortDirective) {}\n\n  @HostListener(\"click\")\n  sort() {\n    this.sorter.sort(this.ref);\n  }\n}\n","<div class=\"sort-col\">\n  <ng-content></ng-content>\n  <div\n    *ngIf=\"enableSort; else disbledSort\"\n    [ngClass]=\"{\n      arrow: true,\n      asc: sorter?.active === ref && sorter?.direction === 'asc',\n      desc: sorter?.active === ref && sorter?.direction === 'desc'\n    }\"\n  >\n    <mat-icon aria-hidden=\"false\" aria-label=\"sort icon\" class=\"cursor-pointer\"\n      >arrow_upward</mat-icon\n    >\n  </div>\n\n  <ng-template #disbledSort>\n    <mat-icon\n      aria-hidden=\"false\"\n      aria-label=\"sort icon\"\n      class=\"cursor-pointer arrow-hide\"\n      >arrow_upward</mat-icon\n    >\n  </ng-template>\n</div>\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\nimport { SortChangeEvent } from \"./sort.interface\";\n\n@Directive({\n  selector: \"[appSort]\",\n})\nexport class SortDirective {\n  active = null;\n  direction = null;\n  @Output() sortChange = new EventEmitter<SortChangeEvent>();\n\n  constructor() {}\n\n  sort(column: string) {\n    let direction = this.direction;\n    if (this.active !== column) {\n      this.direction = null;\n      this.active = column;\n    }\n    if (this.direction === null) {\n      direction = \"desc\";\n    } else if (this.direction === \"asc\") {\n      direction = \"desc\";\n    } else if (this.direction === \"desc\") {\n      direction = null;\n    }\n\n    this.sortChange.emit({\n      column,\n      direction,\n    });\n    this.direction = direction;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { SortDirective } from \"./sort.directive\";\nimport { SortHeaderComponent } from \"./sort-header/sort-header.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [SortDirective, SortHeaderComponent],\n  exports: [SortDirective, SortHeaderComponent],\n})\nexport class SortModule {}\n","import {Component, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { DischargePatientManagerService } from \"../manager/discharge-patient-manager.service\";\nimport {\n  LSColumn,\n  LSTableConfig,\n} from \"src/app/life-signals/_models/ls-column.model\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { Sort } from \"@angular/material/sort\";\nimport { DischargePatientsStoreState } from \"../store\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { Subscription } from \"rxjs/internal/Subscription\";\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\nimport { BehaviorSubject } from \"rxjs/internal/BehaviorSubject\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { map } from \"rxjs/internal/operators/map\";\nimport { MatSelect } from \"@angular/material/select\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, switchMap } from \"rxjs/operators\";\nimport { PatientMoreInfoDialogComponent } from \"src/app/active-patients/patient-more-info-dialog/patient-more-info-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-discharge-patient\",\n  templateUrl: \"./discharge-patient.component.html\",\n  styleUrls: [\"./discharge-patient.component.scss\"],\n})\nexport class DischargePatientComponent implements OnInit, OnDestroy {\n  selectedPatients: SelectionModel<any> = new SelectionModel<any>(true);\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\n  public groups$: Observable<Group[]>;\n  public locationGroups$: Observable<Group[]>;\n  public clinicalGroups$: Observable<Group[]>;\n  dischargePatients: any[];\n  selectGroup: Group[] = [{name: \"Select\", groupId: null, parent: 'ROOT', type: null}];\n  reloadInterval;\n  groupsSubscription: Subscription;\n  searchObjString : string;\n  config: LSTableConfig = {\n    id: \"discharge-patients-module.table\",\n    rowSelectEnabled: true,\n    actions: {\n      show: false,\n      class: [],\n      headerLabel: \"\",\n    },\n    page: {\n      pageIndex: 0,\n      pageSize: 20,\n    },\n    translateKey: \"discharge-patients-module.table\",\n    translate: true,\n    paginator: {\n      hide: false,\n      offline: false,\n    },\n    sort: {\n      active: 'completedOn',\n      direction: \"desc\"\n    }\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"patientId\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n      cellClass: [\"bold-text\", \"box-text\"],\n    },\n    {\n      id: \"firstName\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n      cellClass: [\"box-text\"],\n    },\n    {\n      id: \"admissionId\",\n      headerClass: [\"text-start\"],\n      //style: \"max-width: 140px; width: 140px;\",\n      sortable: true,\n      cellClass: [\"d-flex\"],\n    },\n    /*{\n      id: \"groups\",\n      sortable: false,\n      cellClass: [\"d-flex\", \"justify-content-center\", \"align-items-center\"],\n    },*/\n    {\n      id: \"patches\",\n      headerClass: [\"text-start\"],\n      //style: \"max-width: 140px; width: 140px;\",\n      sortable: true,\n      cellClass: [\"d-flex\", \"justify-content-start\"],\n    },\n    {\n      id: \"startedOn\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n      cellClass: [\"d-flex\", \"justify-content-start\"],\n    },\n    {\n      id: \"completedOn\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n     cellClass: [\"d-flex\", \"justify-content-start\"],\n    },\n    {\n      id: \"status\",\n      sortable: false,\n      headerClass: [\"text-start\"],\n    },\n  ];\n\n  searchObject: { keyword: string; string: string } = {\n    keyword: undefined,\n    string: \"\",\n  };\n  filterObject: { cGroupId: string; pGroupId: string } = {\n    cGroupId: null,\n    pGroupId: null,\n  };\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  @ViewChild('locationMatSelect') locationMatSelect: MatSelect;\n  @ViewChild('clinicalMatSelect') clinicalMatSelect: MatSelect;\n\n  model: string;\n  modelChanged: Subject<string> = new Subject<string>();\n  constructor(\n    private manager: DischargePatientManagerService,\n    private dialog: MatDialog,\n    private location: Location,\n    private userPreference: UserPreferenceService,\n    private manageGroupService: ManageGroupsService,\n    private backendApi: BackendApiService,\n    private snackbar: SnackbarService\n  ) {\n    this.groups$ = this.groupsData$.asObservable();\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"PHYSICAL\")\n    }));\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"CLINICAL\")\n    }));\n  }\n\n  goBackToPage(): void {\n    this.location.back();\n  }\n\n  ngOnInit() {\n    this.getGroupDetails();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.modelChanged.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(() =>\n        this.serviceToCallWith()))\n      .subscribe();\n    this.getDischargedPatients();\n    this.reloadInterval = setInterval(() => {\n      this.getDischargedPatients();\n    }, 30000);\n    this.manager.selectDischargePatient()\n      .subscribe((response: DischargePatientsStoreState.State) => {\n        this.config = {\n          ...this.config,\n          page: {\n            ...this.config.page,\n            length: response?.total\n          },\n          tableState: response?.tableState\n        }\n        if (response?.DISCHARGE_PATIENTS?.length) {\n          this.dischargePatients = response.DISCHARGE_PATIENTS.map((x) => {\n            return {\n              ...x,\n              name: `${x.firstName} ${x.lastName}`,\n            };\n          });\n        } else {\n          this.dischargePatients = []; \n        }\n      });\n  }\n\n  formSubURL(config: LSTableConfig, searchObject?: any) {\n    const page = config?.page;\n    const sort = config?.sort;\n    if(this.config.sort.active === \"\" || this.config.sort.direction === \"\"){\n      this.config={\n      ...this.config,\n      sort:{\n        active: \"completedOn\",\n        direction: \"desc\"\n      }\n      };\n    }\n    let url = `patients/admissions?page=${page?.pageIndex + 1}&size=${\n      page?.pageSize\n    }&sortBy=${this.config.sort?.active}:${this.config.sort?.direction}&isDischarged=true`;\n    if (searchObject?.keyword && searchObject?.string) {\n      let searchString = encodeURIComponent(searchObject.string)\n      url = `${url}&${searchObject?.keyword}=${searchString}`;\n    }\n    if (this.filterObject?.cGroupId) {\n      url = `${url}&cGroupId=${this.filterObject?.cGroupId}`;\n    }\n    if (this.filterObject?.pGroupId) {\n      url = `${url}&pGroupId=${this.filterObject?.pGroupId}`;\n    }\n    return url;\n  }\n\n  onSortChange(event: Sort){\n    this.config = {\n      ...this.config,\n      sort:{\n        active : event.active,\n        direction : event.direction\n      }\n    }\n    //this.config.sort.active = event.active;\n    //this.config.sort.direction = event.direction;\n    this.selectedPatients.clear();\n    this.getDischargedPatients();\n  }\n\n  isSelected(row, selection: SelectionModel<any>) {\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\n  }\n\n  onPageChange(event: PageEvent) {\n    this.dischargePatients = undefined;\n    this.config.page = {\n      ...event,\n    };\n    //this.selectedPatients.clear();\n    this.getDischargedPatients();\n  }\n\n  onPatientsSelected(e: SelectionModel<any>) {\n    this.selectedPatients = e;\n  }\n\n  openBiosensorModal(patient) {\n      let patches = {\n        activePatch: patient.activePatch,\n        patchIds: patient.patchIds,\n        readOnly: true,\n        heading: \"active-patients-module.dialog.biosensor_information\"\n      }\n      this.dialog.open(PatientMoreInfoDialogComponent, {\n        width: \"700px\",\n        //minWidth: \"700px\",\n        maxWidth: \"95vw\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data: patches,\n      });\n  }\n\n  getDischargedPatients(){\n    this.dischargePatients = undefined;\n    let url = this.formSubURL(this.config, this.searchObject);\n    this.manager.fetch(url)\n    /*.subscribe((response: any) => {\n      this.config.page.length = response?.total;\n      this.dischargePatients = response?.items?.map((item) => {\n        return {\n          ...item,\n          name: `${item.firstName} ${item.lastName}`,\n          startedOn: item.startedOn ? new Date(item.startedOn) : null,\n          completedOn: item.completedOn ? new Date(item.completedOn) : null,\n          biosensorId: item.activePatch,\n        };\n      });\n    });*/\n  }\n  searchByGroup(key, groupId) {\n    if(key === 'CLINICAL') {\n      this.filterObject.cGroupId = groupId;\n    } else {\n      this.filterObject.pGroupId = groupId;\n    }\n    this.config.page.pageIndex = 0;\n    this.selectedPatients.clear();\n    this.dischargePatients = undefined;\n    let url = this.formSubURL(this.config, this.searchObject);\n    this.manager.fetch(url)\n  }\n\n  search() {\n    this.searchObject.keyword = 'searchText';\n    if (this.searchObject.keyword) {\n      this.searchObject = {\n        keyword: this.searchObject.keyword,\n        string: this.searchObjString || \"\",\n      };\n      this.config.page.pageIndex = 0;\n      this.modelChanged.next(JSON.stringify(this.searchObject));\n      this.selectedPatients.clear();\n      //this.getDischargedPatients();\n    }/* else {\n      this.searchObject = {\n        keyword: '',\n        string: ''\n      }\n      this.modelChanged.next(JSON.stringify(this.searchObject));\n    }*/\n  }\n\n  serviceToCallWith() {\n    let ref;\n    this.manager.fetch(this.formSubURL(this.config,this.searchObject));\n    ref = this.manager.selectDischargePatient();\n    return ref;\n  }\n\n\n  clear() {\n    this.searchObjString = '';\n    this.search();\n  }\n  \n  getGroupDetails() {\n    this.groupsSubscription = this.manageGroupService.fetch().subscribe(groups => {\n      if (groups['data'].length > 0) {\n        this.groupsData$.next(groups['data']);\n        \n      }\n    })\n  }\n\n  getPdfReport() {\n    const patient = this.selectedPatients.selected[0];\n    const admissions = this.selectedPatients.selected[0].admissions;\n    let lastAdmission = admissions[0];\n    for (let i = 1; i < admissions.length; i++) {\n      if (admissions[i].completedOn > lastAdmission.completedOn) {\n        lastAdmission = admissions[i];\n      }\n    }\n    const url = \"patients/reports\";\n    this.backendApi\n      .postMapping(environment.dataApiUrl + url, {\n        patientId: patient.patientId,\n        admissionId: lastAdmission.admissionId,\n        from: lastAdmission.startedOn,\n        to: lastAdmission.completedOn,\n        Type: 'MONITORING_REPORT',\n        destination: []\n      })\n      .then((resp) => {\n        if (resp?.status === \"OK\") {\n          this.snackbar.openSnackBar(\n            \"active-patients-module.dialog.pdf_report_request\",\n            \"bottom\",\n            \"center\",\n            true\n          );\n        } else {\n          this.snackbar.openSnackBar(\n            \"errors.err_generic_message\",\n            \"bottom\",\n            \"center\",\n            true\n          );\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.reloadInterval);\n  }\n}\n","<ls-page-header type=\"discharge_patients\">\n    <ng-container page-actions>\n        <div class=\"d-flex justify-content-end me-4\">\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group my-2\">\n            </div>\n            <div class=\"d-block d-lg-none my-2 \">\n            </div>\n        </div>\n    </ng-container>\n\n</ls-page-header>\n<!-- discharge patient topheader after-->\n\n<!--<div class=\"row align-items-center\">\n        <div class=\"col-10 col-sm-10 col-md-10 col-lg-8 col-xl-8 col-xxl-7\">\n            \n        </div>\n        <div class=\"col-2 col-sm-2 col-md-2 col-lg-4 col-lg-4 col-xxl-5\">\n\n        </div>\n    </div>-->\n<div class=\"px-3\">\n    <div class=\"table-scroll\">\n\n        <div class=\"mat-discharge-table without-tab-table comman-table-users head-border\">\n            <ls-table [data]=\"dischargePatients\" (sortChange)=\"onSortChange($event)\" [columns]=\"columns\"\n                [config]=\"config\" (page)=\"onPageChange($event)\" [Id]=\"'patientId'\" [isSelected]=\"isSelected\"\n                (selected)=\"onPatientsSelected($event)\">\n                <ng-container table-header>\n                    <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\n                        <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{ \"active-patients-module.filter\" | translate }}</label>\n                        <div class=\"col-sm-12 col-md-12 col-lg-8 col-xl-8 col-xxl-7 select-col discharge-select-dropdown\">\n                            <div class=\"row\">\n                                <div class=\"col-12 col-sm-6\">\n                                    <!--                                    <mat-form-field class=\"selectfilter whiteselect me-2\" appearance=\"fill\" floatLabel=\"never\">-->\n                                    <!--                                        <mat-label>{{ \"discharge-patients-module.location\" | translate }}-->\n                                    <!--                                        </mat-label>-->\n                                    <!--                                        <mat-select class=\"search-filter-select\" #locationMatSelect (selectionChange)=\"searchByGroup('LOCATION', locationGroup, $event)\" [(ngModel)]=\"locationGroup\">-->\n                                    <!--                                            <mat-option [value]=\"null\">-->\n                                    <!--                                                Select-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                            <mat-option [value]=\"group\" *ngFor=\"let group of locationGroups$ | async\">-->\n                                    <!--                                                {{group?.name}}-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                        </mat-select>-->\n                                    <!--                                    </mat-form-field>-->\n                                    <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\" [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\" [label]=\"'discharge-patients-module.location' | translate\" (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\n                                    [showSelect]=\"true\">\n                                    </app-nested-dropdown>\n                                </div>\n                                <div class=\"col-12 col-sm-6\">\n                                    <!--                                    <mat-form-field class=\"selectfilter whiteselect me-2\" appearance=\"fill\" floatLabel=\"never\">-->\n                                    <!--                                        <mat-label>{{ \"discharge-patients-module.clinical_conditions\" | translate }}-->\n                                    <!--                                        </mat-label>-->\n                                    <!--                                        <mat-select class=\"search-filter-select\" #clinicalMatSelect (selectionChange)=\"searchByGroup('CLINICAL', clinicalGroup, $event)\" [(ngModel)]=\"clinicalGroup\">-->\n                                    <!--                                            <mat-option [value]=\"null\">-->\n                                    <!--                                                Select-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                            <mat-option *ngFor=\"let cgroup of clinicalGroups$ | async\" [value]=\"cgroup\">-->\n                                    <!--                                                {{cgroup?.name}}-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                        </mat-select>-->\n                                    <!--                                    </mat-form-field>-->\n                                    <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\" [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\" [label]=\"'discharge-patients-module.clinical_conditions' | translate\" (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\n                                    [showSelect]=\"true\">\n                                    </app-nested-dropdown>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-12 col-lg-4 col-xl-4 col-xxl-4 mt-2 mt-lg-0\">\n                            <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\n                                <mat-label>{{ \"discharge-patients-module.search\" | translate }}\n                                </mat-label>\n                                <input [(ngModel)]=\"searchObjString\" matInput type=\"search\" (keyup)=\"search()\"\n                                    id=\"searchString\" autocomplete=\"off\" />\n                                <mat-icon class=\"clear-icon\" *ngIf=\"searchObjString\" (click)=\"clear()\">close\n                                </mat-icon>\n                                <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </ng-container>\n\n                <ng-template lsWidgetName=\"firstName\" let-row>{{row?.firstName}} {{row?.lastName}}\n                </ng-template>\n                   <ng-template lsWidgetName=\"admissionId\" let-row>\n                    <div  [class.card-space]=\"row?.admissions.length > 1\"> \n                       <div *ngFor=\"let admission of row?.admissions\">\n                        {{admission.admissionId}}</div>\n                    </div> \n                   </ng-template> \n                <ng-template lsWidgetName=\"patchesHeading\">\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\n                     {{'discharge-patients-module.table.patches' | translate}} \n                </ng-template>\n                <ng-template lsWidgetName=\"patches\" let-row>\n                    <div  [class.card-space]=\"row?.admissions.length > 1\">\n                        <div *ngFor=\"let admission of row?.admissions\">\n                            <button mat-flat-button color=\"primary\" class=\"btn-boxed px-2 btn-no-shadow me-2\" (click)=\"openBiosensorModal(admission)\"><img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\"/></button>\n                           <span class=\"patch-input\">{{admission.patchIds[0]?.deviceId}}</span>\n                        </div>\n                    </div>\n                    <!-- <div class=\"d-flex justify-content-center align-items-center\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"openBiosensorModal(row)\"\n                            class=\"btn-boxed btn-no-shadow me-2\" [disabled]=\"!row.patchIds?.length\"\n                            [class.disabled]=\"!row.patchIds?.length\">\n                            <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\n                        </button>\n                        <div class=\"biosensor-id mx-1\" *ngIf=\"row.patchIds?.length\">\n                            {{ row.patchIds[0]?.deviceId || \"-\" }}\n                        </div>\n                        <div class=\"biosensor-id mx-1\" *ngIf=\"!row.patchIds?.length\"> \n                        </div>\n                    </div> -->\n                </ng-template>\n                <ng-template lsWidgetName=\"startedOn\" let-row> \n                    <div  [class.card-space]=\"row?.admissions.length > 1\">\n                     <div *ngFor=\"let admission of row?.admissions\">\n                      {{ (admission.startedOn > 0) ? (admission.startedOn*1000 | date: \"MMM d, y / \": timeZone) : \"\"}}\n                        <strong>{{(admission.startedOn > 0) ? (admission.startedOn*1000 | date: timeFmt: timeZone) : \"-\"}}</strong>\n                     </div></div>\n                 </ng-template>\n                                \n                <ng-template lsWidgetName=\"completedOn\" let-row>\n                    <div  [class.card-space]=\"row?.admissions.length > 1\">\n                    <div *ngFor=\"let admission of row?.admissions\">\n                        {{ (admission.completedOn > 0) ? (admission.completedOn*1000 | date: \"MMM d, y / \": timeZone) : \"\"}}\n                        <strong>{{(admission.completedOn > 0) ? (admission.completedOn*1000 | date: timeFmt: timeZone) : \"-\"}}</strong>\n                    </div></div>\n                </ng-template>\n                <ng-template lsWidgetName=\"statusHeading\" class=\"pe-2\">\n                    {{'discharge-patients-module.table.status' | translate}}\n                    <mat-icon>filter_list</mat-icon>\n                </ng-template>\n                <ng-template lsWidgetName=\"status\" let-row>\n                    <!-- <mat-list class=\"taglist small-tags pt-0\">\n                            <mat-list-item class=\"mx-1 small-tag sepsis-tag\">{{ \"discharge-patients-module.table.status.archived\" | translate }}\n                            </mat-list-item>\n                            <mat-list-item class=\"mx-1 small-tag sepsis-tag\">{{ \"discharge-patients-module.table.status.immediate_access\" | translate }}\n                            </mat-list-item>\n                        </mat-list>-->\n                        <div  [class.card-space]=\"row?.admissions.length > 1\"><div><span class=\"taglist small-tags pt-0 justify-content-start\">-</span></div></div>\n                </ng-template>\n            </ls-table>\n        </div>\n    </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { UserRoles } from \"../enum/roles.enum\";\nimport { DischargePatientComponent } from \"./discharge-patient/discharge-patient.component\";\nimport { RootComponent } from \"../shared/root/root.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: RootComponent,\n    children: [\n      {\n        path: \"patients\",\n        component: DischargePatientComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.SUPERVISORY_CLINICIAN\n          ],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DischargePatientsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { DischargePatientComponent } from \"./discharge-patient/discharge-patient.component\";\nimport { DischargePatientsRoutingModule } from \"./discharge-patients-routing.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { DischargePatientsEffects } from \"./store/discharge-patients.effects\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport * as fromDischargePatients from \"./store/discharge-patients.reducer\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\nimport {MatMenuModule} from '@angular/material/menu';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [DischargePatientComponent],\n  imports: [\n    CommonModule,\n    DischargePatientsRoutingModule,\n    StoreModule.forFeature(\n      fromDischargePatients.dischargePatientsFeatureKey,\n      fromDischargePatients.DischargePatientsReducer\n    ),\n    EffectsModule.forFeature([DischargePatientsEffects]),\n    SharedModule,\n    MatCardModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSortModule,\n    MatListModule,\n    MatPaginatorModule,\n    I18nModule,\n    LifeSignalsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class DischargePatientsModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  DischargePatientsStoreState,\n  DischargePatientsStoreActions,\n  DischargePatientsStoreSelectors,\n} from \"../store\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivePatient } from \"src/app/active-patients/models/active-patients.model\";\nimport { catchError } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DischargePatientManagerService {\n  BASE_URL: string = environment.dataApiUrl;\n  dischargePatients$: Observable<DischargePatientsStoreState.State>;\n\n  constructor(private store$: Store<DischargePatientsStoreState.State>, private http: HttpClient) { }\n\n  fetch(url: string) {\n    this.store$.dispatch(\n      new DischargePatientsStoreActions.LoadDischargePatientsRequestAction({ url })\n    );\n  }\n\n  getPatientBy(id) {\n    let apiURL = `${this.BASE_URL}/patients/${id}`;\n    return this.http\n      .get<{ data: ActivePatient }>(apiURL)\n      .pipe(catchError((err) => {\n        let errorMessage = \"\";\n        if (err.error instanceof ErrorEvent) {\n          errorMessage = `Error: ${err.error.message}`;\n        } else {\n          errorMessage = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n        }\n        return throwError(errorMessage);\n      }));\n  }\n\n  selectDischargePatient() {\n    this.dischargePatients$ = this.store$.select(\n      DischargePatientsStoreSelectors.selectDischargePatientsList\n    );\n    return this.dischargePatients$;\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs/internal/observable/throwError\";\nimport { catchError } from \"rxjs/internal/operators/catchError\";\nimport { DischargePatient } from \"../models/discharge-patient.model\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DischargePatientService {\n  BASE_URL: string = environment.dataApiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  get(apiurl: string) {\n    let url =\n      this.BASE_URL +apiurl;\n      \n    return this.http\n      .get<{ items: DischargePatient[]; total: number }>(url)\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(error: any) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport { DischargePatient } from \"../models/discharge-patient.model\";\n\nexport enum ActionTypes {\n  LOAD_DISCHARGE_PATIENTS_REQUEST = \"[DISCHARGEPATIENTS] Load discharge patients request\",\n  LOAD_DISCHARGE_PATIENTS_FAILURE = \"[DISCHARGEPATIENTS] Load discharge patients Failure\",\n  LOAD_DISCHARGE_PATIENTS_SUCCESS = \"[DISCHARGEPATIENTS] Load discharge patients Success\",\n}\n\nexport class LoadDischargePatientsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_DISCHARGE_PATIENTS_REQUEST;\n  constructor(public payload: {url :string}) {}\n}\n\nexport class LoadDischargePatientsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_DISCHARGE_PATIENTS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class LoadDischargePatientsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_DISCHARGE_PATIENTS_SUCCESS;\n  constructor(public payload: { items: DischargePatient[]; total: number }) {}\n}\n\nexport type DischargePatientsActions =\n  | LoadDischargePatientsFailureAction\n  | LoadDischargePatientsRequestAction\n  | LoadDischargePatientsSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { of } from \"rxjs\";\nimport { map, catchError, exhaustMap } from \"rxjs/operators\";\nimport { DischargePatientService } from \"../service/discharge-patient.service\";\nimport * as featureActions from \"./discharge-patients.actions\";\n\n@Injectable()\nexport class DischargePatientsEffects {\n  constructor(\n    private dischargePatientsService: DischargePatientService,\n    private actions$: Actions\n  ) {}\n\n  loadDischargedPatients = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadDischargePatientsRequestAction>(\n        featureActions.ActionTypes.LOAD_DISCHARGE_PATIENTS_REQUEST\n      ),\n      exhaustMap((action) =>\n        this.dischargePatientsService.get(action.payload.url).pipe(\n          map(\n            (response) =>\n              new featureActions.LoadDischargePatientsSuccessAction(response)\n          ),\n          catchError((error) =>\n            of(new featureActions.LoadDischargePatientsFailureAction(error))\n          )\n        )\n      )\n    )\n  );\n}\n","import { DischargePatient } from \"../models/discharge-patient.model\";\nimport {\n  ActionTypes,\n  DischargePatientsActions,\n} from \"./discharge-patients.actions\";\nimport { TableState } from \"src/app/life-signals/_models/ls-column.model\";\n\n\nexport const dischargePatientsFeatureKey = \"dischargePatient\";\n\nexport interface State {\n  DISCHARGE_PATIENTS: DischargePatient[];\n  error: string;\n  total : number;\n  tableState : TableState\n}\n\nconst initialActivePatientState: State = {\n  DISCHARGE_PATIENTS: [],\n  error: \"\",\n  total : 0,\n  tableState : TableState.DEFAULT\n};\n\nexport function DischargePatientsReducer(\n  state: State = initialActivePatientState,\n  action: DischargePatientsActions\n) {\n  switch (action.type) {\n    case ActionTypes.LOAD_DISCHARGE_PATIENTS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        tableState : TableState.LOADING\n      };\n    }\n\n    case ActionTypes.LOAD_DISCHARGE_PATIENTS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n        total : 0,\n        tableState : TableState.FAILURE\n      };\n    }\n\n    case ActionTypes.LOAD_DISCHARGE_PATIENTS_SUCCESS: {\n      return {\n        ...state,\n        DISCHARGE_PATIENTS: action.payload[\"data\"][\"items\"],\n        total : action.payload[\"data\"][\"total\"],\n        tableState : TableState.SUCCESS\n      };\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  State,\n  dischargePatientsFeatureKey,\n} from \"./discharge-patients.reducer\";\n\nconst getDischargePatientState = createFeatureSelector<State>(\n  dischargePatientsFeatureKey\n);\n\nexport const selectDischargePatientsList = createSelector(\n  getDischargePatientState,\n  (state) => state\n);\n\nexport const selectActivePatientsError = createSelector(\n  getDischargePatientState,\n  (state) => state\n);\n","import * as DischargePatientsStoreActions from \"./discharge-patients.actions\";\nimport * as DischargePatientsStoreSelectors from \"./discharge-patients.selector\";\nimport * as DischargePatientsStoreState from \"./discharge-patients.reducer\";\n\nexport {\n  DischargePatientsStoreActions,\n  DischargePatientsStoreSelectors,\n  DischargePatientsStoreState,\n};\n","export enum UserRoles {\n  SERVICE_PROVIDER_ADMIN = \"SPA\",\n  SERVICE_PROVIDER_ADMIN_CLONE = \"SPAC\",\n  CLINICAL_FACILITY_ADMIN = \"CFA\",\n  CLINICAL_FACILITY_ADMIN_CLONE = \"CFAC\",\n  GENERAL_CLINICIAN = \"GC\",\n  SUPERVISORY_CLINICIAN = \"SC\",\n  PHYSICIAN = \"PHY\",\n  SUPER_ADMIN = \"SA\",\n  CLINICAL_FACILITY_USER = \"CFU\",\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { KeycloakAuthGuard, KeycloakService } from \"keycloak-angular\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { UserRoles } from \"../enum/roles.enum\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(\n    protected readonly router: Router,\n    protected readonly keycloak: KeycloakService,\n    private authService: AuthenticationService\n  ) {\n    super(router, keycloak);\n  }\n\n  isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean | UrlTree> {\n    return new Promise<boolean | UrlTree>(async (resolve, reject) => {\n      if (!this.authenticated) {\n        this.keycloak\n          .login({\n            redirectUri: window.location.origin + state.url,\n          })\n          .then();\n        resolve(false);\n        return;\n      }\n\n      const requiredRoles = route.data.roles;\n      let granted = false;\n      if (!requiredRoles || requiredRoles.length === 0) {\n        granted = true;\n      } else {\n        console.log(requiredRoles);\n        for (const requiredRole of requiredRoles) {\n          if (this.authService.getRoles().indexOf(requiredRole) > -1) {\n            granted = true;\n            break;\n          }\n        }\n      }\n\n      //if required roles are not met, based on current role route to their landing page\n      if (granted === false) {\n\n        if (this.authService.getRoles().indexOf(UserRoles.SUPER_ADMIN) > -1) {\n          this.router.navigate([\"/super-admin\"]).then();\n        } else if (\n            (this.authService.getRoles().indexOf(UserRoles.SERVICE_PROVIDER_ADMIN) > -1)\n            || (this.authService.getRoles().indexOf(UserRoles.SERVICE_PROVIDER_ADMIN_CLONE) > -1)\n        ) {\n          this.router\n            .navigate([\"/service-provider-admin/clinical-facility-management\"])\n            .then();\n        } else if (\n          this.authService.getRoles().indexOf(UserRoles.CLINICAL_FACILITY_ADMIN) >\n            -1 ||\n            this.authService.getRoles().indexOf(UserRoles.CLINICAL_FACILITY_ADMIN_CLONE) >\n            -1 ||\n          this.authService.getRoles().indexOf(UserRoles.SUPERVISORY_CLINICIAN) >\n            -1 ||\n          this.authService.getRoles().indexOf(UserRoles.GENERAL_CLINICIAN) > -1 ||\n          this.authService.getRoles().indexOf(UserRoles.PHYSICIAN) > -1\n        ) {\n          this.router.navigate([\"/summary\"]).then();\n        }\n      }\n\n      resolve(granted);\n    });\n    // if (!this.authenticated) {\n    //     await this.keycloak.login({\n    //         redirectUri: window.location.origin + state.url,\n    //     });\n    // }\n    //\n    // return this.authenticated;\n  }\n}\n","import {\n  APP_INITIALIZER,\n  LOCALE_ID,\n  ModuleWithProviders,\n  NgModule,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { LocalizationService } from \"./localization.service\";\nimport { LocalizationServiceConfig } from \"./localization-config.service\";\nimport {\n  TranslateModule,\n  TranslateService,\n} from \"@ngx-translate/core\";\nimport {\n  TranslateCacheModule,\n  TranslateCacheService,\n  TranslateCacheSettings,\n} from \"ngx-translate-cache\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule.forChild(),\n    TranslateCacheModule.forRoot({\n      cacheService: {\n        provide: TranslateCacheService,\n        useFactory: translateCacheFactory,\n        deps: [TranslateService, TranslateCacheSettings],\n      },\n      cacheMechanism: \"Cookie\",\n    }),\n  ],\n  exports: [TranslateModule],\n})\nexport class I18nModule {\n  public static forRoot(config: any): ModuleWithProviders<I18nModule> {\n    return {\n      ngModule: I18nModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initLocalizationService,\n          deps: [LocalizationService],\n          multi: true,\n        },\n        LocalizationService,\n        { provide: LOCALE_ID, useValue: config.locale_id }, // using the initial value\n        { provide: LocalizationServiceConfig, useValue: config },\n      ],\n    };\n  }\n  constructor(\n    translate: TranslateService,\n    translateCacheService: TranslateCacheService\n  ) {\n    translateCacheService.init();\n    translate.addLangs([\"en\", \"fr\"]);\n    const browserLang =\n      translateCacheService.getCachedLanguage() || translate.getBrowserLang();\n    //  const browserLang = 'en';\n    translate.use(browserLang.match(/en|fr/) ? browserLang : \"en\");\n  }\n}\n\n// eslint-disable-next-line\nexport function translateLoaderFactory(httpClient: HttpClient) {\n  return new TranslateHttpLoader(httpClient);\n}\n\n// eslint-disable-next-line\nexport function translateCacheFactory(\n  translateService: TranslateService,\n  translateCacheSettings: TranslateCacheSettings\n) {\n  return new TranslateCacheService(translateService, translateCacheSettings);\n}\n/**\n * Initialize the localization service.\n * @param {LocalizationService} service\n * @returns {() => Promise<void>}\n */\nexport function initLocalizationService(service: LocalizationService) {\n  return () => service.initService();\n}\n","import { Injectable } from \"@angular/core\";\n\n/**\n * Class representing the localization config\n */\n@Injectable()\nexport class LocalizationServiceConfig {\n  public locale_id: string = \"\";\n}\n","import { Injectable, Optional, SkipSelf } from \"@angular/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { LocalizationServiceConfig } from \"./localization-config.service\";\n\n/**\n * Class representing the translation service.\n */\n@Injectable()\nexport class LocalizationService {\n  private _localeId: string = \"en-US\"; // default\n\n  /**\n   * @constructor\n   * @param {LocalizationService} singleton - the localization service\n   * @param {LocalizationServiceConfig} config - the localization config\n   * @param {TranslateService} translateService - the translate service\n   */\n  constructor(\n    @Optional() @SkipSelf() private singleton: LocalizationService,\n    private config: LocalizationServiceConfig,\n    private translateService: TranslateService\n  ) {\n    if (this.singleton) {\n      throw new Error(\n        \"LocalizationService is already provided by the root module\"\n      );\n    }\n    this._localeId = this.config.locale_id;\n  }\n\n  /**\n   * Initialize the service.\n   * @returns {Promise<void>}\n   */\n  public initService(): Observable<any> {\n    // language code same as file name.\n    this._localeId = localStorage.getItem(\"language\") || \"en-US\";\n    return this.useLanguage(this._localeId);\n  }\n\n  /**\n   * change the selected language\n   * @returns {Promise<void>}\n   */\n  public useLanguage(lang: string): Observable<any> {\n    this.translateService.setDefaultLang(lang);\n    return this.translateService.use(lang).pipe(\n      map((res) => {\n        console.log(res);\n        return res;\n      })\n    );\n  }\n\n  /**\n   * Gets the instant translated value of a key (or an array of keys).\n   * @param key\n   * @param interpolateParams\n   * @returns {string|any}\n   */\n  public translate(key: string | string[], interpolateParams?: object): string {\n    return this.translateService.instant(key, interpolateParams) as string;\n  }\n}\n","import { KeycloakService } from \"keycloak-angular\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nexport function initializeKeycloak(keycloak: KeycloakService) {\r\n  return () =>\r\n    keycloak.init({\r\n      config: {\r\n        url: environment.keyClockUrl,\r\n        realm: environment.keyClockRealm,\r\n        clientId: environment.keyClockClientId\r\n      },\r\n      initOptions: {\r\n        onLoad: \"login-required\",\r\n        checkLoginIframe: false\r\n      },\r\n      enableBearerInterceptor: true,\r\n      bearerPrefix: \"\",\r\n      bearerExcludedUrls: [\"https://webui-s3.s3.ap-south-1.amazonaws.com/\"]\r\n    });\r\n}\r\n","import { Injectable, NgZone } from \"@angular/core\";\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next\n            .handle(request)\n            .pipe(\n                catchError((error: HttpErrorResponse) => {\n                    let errorMessage;\n                    // Client-side error.\n                    if (error.error instanceof ErrorEvent) {\n                        errorMessage = {\n                            errorMessage: `${error.error.message}`,\n                        };\n                        console.log(errorMessage);\n                        // Server-side error.\n                    } else {\n                        console.log(error);\n                        if (error.status === 404) {\n                            errorMessage = {\n                                errorCode: `${error.status}`,\n                                errorMessage: `${error.error}`,\n                            };\n                        } else {\n                            errorMessage = {\n                                errorCode: `${error.status}`,\n                                errorMessage: `${error.error.message}`,\n                            };\n                        }\n\n                    }\n                    return throwError(errorMessage);\n                })\n            )\n    }\n}\n","import { Location } from \"@angular/common\";\nimport { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"ls-page-header\",\n  templateUrl: \"./ls-page-header.component.html\",\n  styleUrls: [\"./ls-page-header.component.scss\"],\n})\nexport class LsPageHeaderComponent {\n  @Input() type: string;\n  constructor(private router: Router, private location: Location) {}\n\n  goBack() {\n    this.location.back();\n  }\n\n  goBackToSummary() {\n    this.router.navigate([\"summary\"]);\n  }\n}\n","<mat-card class=\"topbar-card\">\r\n  <div class=\"row align-items-center\">\r\n    <div class=\"col-6 col-md-5\">\r\n      <div class=\"button-row\">\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'active_patients'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"active-patients-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'posted_final'\"><button\r\n           mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n           <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"posted-final-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'pending-interp'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"pending-interp-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'interp-history'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"interp-history-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'archived'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"archived-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'admit_patients'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"admit-patients-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'discharge_patients'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"discharge-patients-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'manage_groups'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"manage-group-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'parameter_alerts'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"parameter-alerts-module.page_heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'arrhythmia_alerts'\"><button\r\n                mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n          <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n          <span class=\"title-bar\">{{ \"home_alerts.label_arrhythmia_alerts\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'technical_alerts'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"alert_config_module.technical_alert\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'alert_configuration'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"alert_config_module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'additional_devices'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"additional_devices.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'manage_relays'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"manage_relays_module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'manage_users'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"manage_users_module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'profile'\"><button mat-flat-button\r\n            class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"shared.profile\" | translate }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-6 col-md-7 d-flex justify-content-end align-items-center\">\r\n      <ng-content [select]=\"page-header\"></ng-content>\r\n      <figure class=\"rightside-image\">\r\n        <img *ngIf=\"type === 'active_patients'\"  src=\"assets/icons/current_patients.png\" alt=\"current patients\" />\r\n        <img *ngIf=\"type === 'posted_final'\"  src=\"assets/icons/posted_final.png\" alt=\"Posted Final\" />\r\n        <img *ngIf=\"type === 'pending-interp'\"  src=\"assets/icons/pending_interp.png\" alt=\"Pending Interpretation\" />\r\n        <img *ngIf=\"type === 'interp-history'\"  src=\"assets/icons/inter_history.png\" alt=\"Interpretation History\" />\r\n        <img *ngIf=\"type === 'archived'\"  src=\"assets/icons/archive.png\" alt=\"Archived\" />\r\n        <img *ngIf=\"type === 'admit_patients'\"  src=\"assets/icons/admit-patients.png\" alt=\"admit patients\" />\r\n        <img *ngIf=\"type === 'discharge_patients'\"  src=\"assets/icons/discharge-patients.png\" alt=\"discharge patients\" />\r\n        <img *ngIf=\"type === 'manage_groups'\"  src=\"assets/icons/patient-group-management.png\" alt=\"patient group management\" />\r\n        <img *ngIf=\"type === 'parameter_alerts'\"  src=\"assets/icons/parameter-alerts.png\" alt=\"parameter alerts\" />\r\n        <img *ngIf=\"type === 'arrhythmia_alerts'\"  src=\"assets/icons/arrhythmia-alerts.png\" alt=\"arrhythmia alerts\" />\r\n        <img *ngIf=\"type === 'technical_alerts'\"  src=\"assets/icons/technical-alerts.png\" alt=\"technical alerts\" />\r\n        <img *ngIf=\"type === 'manage_relays'\"  src=\"assets/icons/managerelay.png\" alt=\"managerelay\" />\r\n        <img *ngIf=\"type === 'alert_configuration'\"  src=\"assets/icons/notif-icon.png\" alt=\"notif icon\" />\r\n        <img *ngIf=\"type === 'additional_devices'\"  src=\"assets/icons/miscelaneous.png\" alt=\"miscelaneous\" />\r\n        <img *ngIf=\"type === 'manage_users'\"  src=\"assets/icons/manageuser.png\" alt=\"manageuser\" />\r\n\r\n      </figure>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n import {Injectable, Optional, SkipSelf} from '@angular/core';\n import {Subject} from 'rxjs';\n \n /**\n  * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n  * include it in a custom provider\n  */\n @Injectable({providedIn: 'root'})\n export class MatPaginatorIntl {\n   /**\n    * Stream to emit from when labels are changed. Use this to notify components when the labels have\n    * changed after initialization.\n    */\n   readonly changes: Subject<void> = new Subject<void>();\n \n   /** A label for the page size selector. */\n   itemsPerPageLabel: string = 'Items per page:';\n \n   /** A label for the button that increments the current page. */\n   nextPageLabel: string = 'Next page';\n \n   /** A label for the button that decrements the current page. */\n   previousPageLabel: string = 'Previous page';\n \n   /** A label for the button that moves to the first page. */\n   firstPageLabel: string = 'First page';\n \n   /** A label for the button that moves to the last page. */\n   lastPageLabel: string = 'Last page';\n \n   /** A label for the range of items within the current page and the length of the whole list. */\n   getRangeLabel: (page: number, pageSize: number, length: number) => string = (\n     page: number,\n     pageSize: number,\n     length: number,\n   ) => {\n     if (length == 0 || pageSize == 0) {\n       return `0 of ${length}`;\n     }\n \n     length = Math.max(length, 0);\n \n     const startIndex = page * pageSize;\n \n     // If the start index exceeds the list length, do not try and fix the end index to the end.\n     const endIndex =\n       startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n \n     return `${startIndex + 1} – ${endIndex} of ${length}`;\n   };\n }\n \n /** @docs-private */\n export function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\n   return parentIntl || new MatPaginatorIntl();\n }\n \n /** @docs-private */\n export const MAT_PAGINATOR_INTL_PROVIDER = {\n   // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n   provide: MatPaginatorIntl,\n   deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n   useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n };","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  coerceNumberProperty,\n  coerceBooleanProperty,\n  BooleanInput,\n  NumberInput,\n  coerceArray,\n} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n  Directive,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MatPaginatorIntl } from './ls-paginator-intl';\nimport {\n  HasInitialized,\n  mixinInitialized,\n  ThemePalette,\n  mixinDisabled,\n  CanDisable,\n} from '@angular/material/core';\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n  /** The current page index. */\n  pageIndex: number;\n\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex?: number;\n\n  /** The current page size */\n  pageSize: number;\n\n  /** The current total number of items being paged */\n  length: number;\n}\n\n/** Object that can be used to configure the default options for the paginator module. */\nexport interface MatPaginatorDefaultOptions {\n  /** Number of items to display on a page. By default set to 50. */\n  pageSize?: number;\n\n  /** The set of provided page size options to display to the user. */\n  pageSizeOptions?: number[];\n\n  /** Whether to hide the page size selection UI from the user. */\n  hidePageSize?: boolean;\n\n  /** Whether to show the first/last buttons UI to the user. */\n  showFirstLastButtons?: boolean;\n\n  /** The default form-field appearance to apply to the page size options selector. */\n  formFieldAppearance?: any;\n}\n\n/** Injection token that can be used to provide the default options for the paginator module. */\nexport const MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken<MatPaginatorDefaultOptions>(\n  'MAT_PAGINATOR_DEFAULT_OPTIONS',\n);\n\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class { }));\n\n/** Object that can used to configure the underlying `MatSelect` inside a `MatPaginator`. */\nexport interface MatPaginatorSelectConfig {\n  /** Whether to center the active option over the trigger. */\n  disableOptionCentering?: boolean;\n\n  /** Classes to be passed to the select panel. */\n  panelClass?: string | string[] | Set<string> | { [key: string]: any };\n}\n\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatPaginatorBase<\n  O extends {\n    pageSize?: number;\n    pageSizeOptions?: number[];\n    hidePageSize?: boolean;\n    showFirstLastButtons?: boolean;\n  },\n  >\n  extends _MatPaginatorMixinBase\n  implements OnInit, OnDestroy, CanDisable, HasInitialized {\n  private _initialized: boolean;\n  private _intlChanges: Subscription;\n  public lastIndex;\n  dataFrom = 0;\n  dataTo = 0;\n\n  /** Theme color to be used for the underlying form controls. */\n  @Input() color: ThemePalette;\n  @Input() tableState;\n\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  @Input()\n  get pageIndex(): number {\n    return this._pageIndex;\n  }\n  set pageIndex(value: NumberInput) {\n    this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _pageIndex = 0;\n\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  @Input()\n  get length(): number {\n    return this._length;\n  }\n  set length(value: NumberInput) {\n    this._length = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _length = 0;\n\n  /** Number of items to display on a page. By default set to 50. */\n  @Input()\n  get pageSize(): number {\n    return this._pageSize;\n  }\n  set pageSize(value: NumberInput) {\n    this._pageSize = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSize: number;\n  /** Number of items to displayed on a page. */\n  @Input()\n  get pageLength(): number {\n    return this._pageLength;\n  }\n  set pageLength(value: NumberInput) {\n    this._pageLength = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageLength: number;\n\n  /** The set of provided page size options to display to the user. */\n  @Input()\n  get pageSizeOptions(): number[] {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(value: number[] | readonly number[]) {\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions: number[] = [];\n\n  /** Whether to hide the page size selection UI from the user. */\n  @Input()\n  get hidePageSize(): boolean {\n    return this._hidePageSize;\n  }\n  set hidePageSize(value: BooleanInput) {\n    this._hidePageSize = coerceBooleanProperty(value);\n  }\n  private _hidePageSize = false;\n\n  /** Whether to hide the page size selection UI from the user. */\n  get pageOptions(): number[] {\n    return this._pageOptions;\n  }\n  set pageOptions(value: number[]) {\n    this._pageOptions = coerceArray(value);\n  }\n  private _pageOptions = [];\n\n  /** Whether to show the first/last buttons UI to the user. */\n  @Input()\n  get showFirstLastButtons(): boolean {\n    return this._showFirstLastButtons;\n  }\n  set showFirstLastButtons(value: BooleanInput) {\n    this._showFirstLastButtons = coerceBooleanProperty(value);\n  }\n  private _showFirstLastButtons = false;\n\n  /** Used to configure the underlying `MatSelect` inside the paginator. */\n  @Input() selectConfig: MatPaginatorSelectConfig = {};\n\n  /** Event emitted when the paginator changes the page size or page index. */\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions: number[];\n\n  constructor(\n    public _intl: MatPaginatorIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    defaults?: O,\n  ) {\n    super();\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n\n    if (defaults) {\n      const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n\n      if (pageSize != null) {\n        this._pageSize = pageSize;\n      }\n\n      if (pageSizeOptions != null) {\n        this._pageSizeOptions = pageSizeOptions;\n      }\n\n      if (hidePageSize != null) {\n        this._hidePageSize = hidePageSize;\n      }\n\n      if (showFirstLastButtons != null) {\n        this._showFirstLastButtons = showFirstLastButtons;\n      }\n    }\n  }\n\n  ngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._markInitialized();\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  /** Advances to the next page if it exists. */\n  nextPage(): void {\n    if (!this.hasNextPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex + 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  getPageOptions(): number[] {\n    const currentPageIndex = this.pageIndex;\n    const totalPages = Math.ceil(this.length / this.pageSize);\n    this.lastIndex = Math.ceil(this.length / this.pageSize);\n    const numberOf = totalPages < 3 ? totalPages : 3;\n    let index = 0;\n    if (currentPageIndex + numberOf === totalPages) {\n      index = currentPageIndex;\n    } else if (currentPageIndex + numberOf > totalPages) {\n      index = totalPages - (numberOf-1);\n    } else if (currentPageIndex + numberOf < totalPages) {\n      index = currentPageIndex;\n    }\n    let result = [];\n    if(currentPageIndex < 1 || currentPageIndex + 1 > totalPages) {\n      for (let i = 0; i < numberOf; i++) {\n        result.push(index + i);\n      }\n    } else {\n      for (let i = -1; i < numberOf-1; i++) {\n        result.push(index + i);\n      }\n    }\n    return result;\n  }\n  getDataIndex() {\n    if(this.tableState !== 'LOADING') {\n       this.dataFrom = (this.pageIndex)*this.pageSize + 1;\n       this.dataTo = (this.pageIndex*this.pageSize) + this.pageLength;\n    }\n    return `${this.dataFrom} - ${this.dataTo}`;\n  }\n\n  /** Move back to the previous page if it exists. */\n  previousPage(): void {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  toPage(index): void {\n    this.pageIndex = index;\n    this._emitPageEvent(index);\n  }\n\n  /** Move to the first page if not already there. */\n  firstPage(): void {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the last page if not already there. */\n  lastPage(): void {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Whether there is a previous page. */\n  hasPreviousPage(): boolean {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n\n  /** Whether there is a next page. */\n  hasNextPage(): boolean {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n\n  /** Calculate the number of pages */\n  getNumberOfPages(): number {\n    if (!this.pageSize) {\n      return 0;\n    }\n\n    return Math.ceil(this.length / this.pageSize);\n  }\n  showFirstLastIndex() {\n    return (Math.ceil(this.length / this.pageSize) > 4)\n  }\n\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  private _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) {\n      return;\n    }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize =\n        this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  private _emitPageEvent(previousPageIndex: number) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length,\n    });\n  }\n}\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n@Component({\n  selector: 'ls-paginator',\n  exportAs: 'lsPaginator',\n  templateUrl: 'ls-paginator.component.html',\n  styleUrls: ['ls-paginator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LsPaginatorComponent extends _MatPaginatorBase<MatPaginatorDefaultOptions> {\n  /** If set, styles the \"page size\" form field with the designated style. */\n  _formFieldAppearance?: any;\n\n  constructor(\n    intl: MatPaginatorIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_PAGINATOR_DEFAULT_OPTIONS) defaults?: MatPaginatorDefaultOptions,\n  ) {\n    super(intl, changeDetectorRef, defaults);\n\n    if (defaults && defaults.formFieldAppearance != null) {\n      this._formFieldAppearance = defaults.formFieldAppearance;\n    }\n  }\n}\n","<div class=\"mat-paginator-outer-container\">\n    <div class=\"mat-paginator-container\" *ngIf=\"length > 0\">\n        <div class=\"mat-paginator-page-size\" *ngIf=\"!hidePageSize\">\n            <div class=\"mat-paginator-page-size-label\" *ngIf=\"pageLength > 0\">\n                <!-- {{_intl.itemsPerPageLabel}} -->\n                Showing <b>{{getDataIndex()}}</b> out of <b>{{length}}</b> results\n            </div>\n\n            <!-- <div class=\"mat-paginator-page-size-value\" *ngIf=\"_displayedPageSizeOptions.length <= 1\">{{pageSize}}</div> -->\n        </div>\n\n        <div class=\"ms-md-2 mat-paginator-range-actions\">\n            <!-- <div class=\"mat-paginator-range-label\">\n                {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\n            </div> -->\n\n            <!-- <button mat-icon-button type=\"button\"\n                class=\"mat-paginator-navigation-first\"\n                (click)=\"firstPage()\"\n                [attr.aria-label]=\"_intl.firstPageLabel\"\n                [matTooltip]=\"_intl.firstPageLabel\"\n                [matTooltipDisabled]=\"_previousButtonsDisabled()\"\n                [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_previousButtonsDisabled()\"\n                *ngIf=\"showFirstLastButtons\">\n          <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n            <path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"/>\n          </svg>\n        </button> -->\n            <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-previous\" (click)=\"previousPage()\"\n                [attr.aria-label]=\"_intl.previousPageLabel\" [matTooltip]=\"_intl.previousPageLabel\"\n                [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_previousButtonsDisabled()\">\n                <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n                    <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" />\n                </svg>\n            </button>\n<!--            <span class=\"mx-4\">Prev</span>-->\n            <div *ngIf=\"showFirstLastIndex() && this.pageIndex > 1\" type=\"button\" class=\"mat-paginator-page\" [class.active]=\"pageIndex === 1\" (click)=\"toPage(0)\">\n                1\n            </div>\n            <div class=\"mat-paginator-page\" *ngIf=\"showFirstLastIndex() && this.pageIndex > 2\">\n                ...\n            </div>\n            <div type=\"button\" class=\"mat-paginator-page\" [class.active]=\"index === pageIndex\" (click)=\"toPage(index)\" *ngFor=\"let index of getPageOptions()\">\n                {{index + 1}}\n            </div>\n            <div class=\"mat-paginator-page\" *ngIf=\"showFirstLastIndex()&& ((this.pageIndex + 3) < this.lastIndex)\">\n                ...\n            </div>\n            <div *ngIf=\"showFirstLastIndex() && ((this.pageIndex + 2) < this.lastIndex)\" type=\"button\" class=\"mat-paginator-page\" [class.active]=\"lastIndex === pageIndex\" (click)=\"toPage(lastIndex-1)\">\n                {{lastIndex}}\n            </div>\n<!--            <span class=\"mx-4\">Next</span>-->\n            <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-next\" (click)=\"nextPage()\"\n                [attr.aria-label]=\"_intl.nextPageLabel\" [matTooltip]=\"_intl.nextPageLabel\"\n                [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_nextButtonsDisabled()\">\n                <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n                    <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" />\n                </svg>\n            </button>\n            <!-- <button mat-icon-button type=\"button\"\n                class=\"mat-paginator-navigation-last\"\n                (click)=\"lastPage()\"\n                [attr.aria-label]=\"_intl.lastPageLabel\"\n                [matTooltip]=\"_intl.lastPageLabel\"\n                [matTooltipDisabled]=\"_nextButtonsDisabled()\"\n                [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_nextButtonsDisabled()\"\n                *ngIf=\"showFirstLastButtons\">\n          <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n            <path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"/>\n          </svg>\n        </button> -->\n        </div>\n    </div>\n</div>\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef,\n  Renderer2,\n} from \"@angular/core\";\nimport {  PageEvent } from \"@angular/material/paginator\";\nimport { MatSort, Sort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { LsWidgetNameDirective } from \"../../_directives/ls-widget-name.directive\";\nimport { LSColumn, LSTableConfig } from \"../../_models/ls-column.model\";\n\n@Component({\n  selector: \"ls-table\",\n  templateUrl: \"./ls-table.component.html\",\n  styleUrls: [\"./ls-table.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LsTableComponent\n  implements AfterViewInit, OnChanges, AfterContentInit {\n  dataSource = new MatTableDataSource<any>([]);\n  @Input() selection = new SelectionModel<any>(true, []);\n  @Output() page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n  @Output() selected: EventEmitter<SelectionModel<any>> = new EventEmitter();\n  @Input() config: LSTableConfig;\n  @Input() error: any;\n  @Input() tableSort = false;\n  @Output() configChange: EventEmitter<LSTableConfig> =\n    new EventEmitter<LSTableConfig>();\n  @Output() sortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\n  @Input() data: any[];\n  @Input() columns: LSColumn[] = [];\n  @Input() Id = \"\";\n  @Input() selectOnlyActive = false;\n  disableMasterSelect = false;\n  allSelected = false;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ContentChildren(LsWidgetNameDirective)\n  widgets: QueryList<LsWidgetNameDirective>;\n  widgetTemplates: any = {};\n\n  ngAfterViewInit(): void {\n    if(this.tableSort) {\n      this.dataSource.sort = this.sort;\n    }\n    this.sort.sortChange.subscribe((change) => {\n      this.config = {\n        ...this.config,\n        sort: { ...change }\n      };\n      this.sortChange.emit(change);\n    })\n    this.selection.changed.subscribe((change) => {\n      this.selected.emit(this.selection);\n      this.allSelected = this.isAllSelected();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes?.data?.currentValue) {\n      if (this.config?.paginator?.offline) {\n        this.data = changes?.data?.currentValue;\n        this.config.page.length = this.data?.length;\n        this.sliceData(<PageEvent>this.config?.page);\n      } else {\n        this.dataSource.data = changes?.data?.currentValue || [];\n        this.allSelected = this.isAllSelected();\n      }\n    }\n  }\n\n  constructor(private vr: ViewContainerRef, private snackbar: SnackbarService, private ren: Renderer2) { }\n\n  ngAfterContentInit() {\n    this.widgets.forEach((widget) => {\n      this.widgetTemplates[widget.getName()] = widget.template;\n    });\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    let patients;\n    if (this.selectOnlyActive) {\n      patients = this.dataSource.data.filter((pat) => pat.activePatch?.length);\n      if (!patients.length) {\n        this.disableMasterSelect = true;\n        return false;\n      } else {\n        this.disableMasterSelect = false;\n      }\n    } else {\n      patients = this.dataSource.data;\n    }\n    if (this.Id.length) {\n      for (const pat of patients) {\n        if (this.selection.selected\n          .findIndex((selPat) => selPat[this.Id] === pat[this.Id]) === -1) {\n          return false;\n        }\n      }\n    } else {\n      for (const pat of patients) {\n        if (!this.selection.selected\n          .includes(pat)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  @Input() isSelected;\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.allSelected) {\n      this.selection.clear();\n      return;\n    }\n    if (this.selectOnlyActive) {\n      const activePatients = this.dataSource.data\n        .filter((pat) => pat.activePatch?.length);// Only Active monitoring\n      if (activePatients.length) {\n        this.selection.select(...activePatients);\n        this.snackbar.openSnackBar(activePatients.length\n          + \" Current Patients selected\", 'bottom', 'center');\n        this.allSelected = true;\n      } else {\n        this.allSelected = false;\n        this.snackbar.openSnackBar(\"No Patients to select\", 'bottom', 'center');\n      }\n    } else {\n      this.selection.select(...this.dataSource.data);\n      this.allSelected = true;\n    }\n  }\n\n  getDisplayedColumns() {\n    let columns = [];\n    if (this.config?.rowSelectEnabled) {\n      columns.push(\"select\");\n    }\n    columns = [\n      ...columns,\n      ...this.columns?.filter((c) => !c?.hidden).map((c) => c?.id),\n    ];\n    if (this.config?.actions?.show) {\n      columns.push(\"actions\");\n    }\n    return columns;\n  }\n\n  getExtraHeaderId(column: LSColumn) {\n    return `${column?.id}ExtraHeader`;\n  }\n\n  getExtraHeaderDisplayedColumns() {\n    let columns = [];\n    if (this.config?.rowSelectEnabled) {\n      columns.push(\"select\");\n    }\n    columns = [\n      ...columns,\n      ...this.columns?.filter((c) => !c?.hidden).map((c) => c?.id),\n    ];\n    if (this.config?.actions?.show) {\n      columns.push(\"actions\");\n    }\n    return columns.map(c => `${c}ExtraHeader`);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.allSelected ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n\n  getHeaderTranslation(column: LSColumn) {\n    if (this.config.translate) {\n      return `${this.config.translateKey || this.config.id}.${column.label || column.id\n        }`;\n    } else {\n      return column.label;\n    }\n  }\n\n  getExtraHeaderTranslation(column: LSColumn) {\n    if (this.config.translate) {\n      return `${this.config.translateKey || this.config.id}.${column.label || column.id}_extra_heading`;\n    } else {\n      return column.label;\n    }\n  }\n\n  onPage(event: PageEvent) {\n    this.config = {\n      ...this.config,\n      page: {\n        ...this.config.page,\n        pageSize: event.pageSize,\n        pageIndex: event.pageIndex\n      }\n    }\n    if (this.config?.paginator?.offline) {\n      this.sliceData(event);\n    } else {\n      this.page.emit(event);\n    }\n  }\n\n  sliceData(event: PageEvent) {\n    const data = this.data;\n    const startIndex = event.pageIndex * event.pageSize;\n    this.dataSource.data = data?.slice(\n      startIndex,\n      startIndex + this.config?.page?.pageSize > event?.length\n        ? this.config?.page?.length\n        : startIndex + this.config?.page?.pageSize\n    );\n  }\n\n  isActive(row) {\n    if (this.config?.isActive) {\n      return this.config?.isActive(row);\n    } else {\n      return this.selection.isSelected(row);\n    }\n  }\n  checkboxChange(event, row) {\n    if (event.checked) {\n      this.selection?.select(row);\n    } else {\n      this.selection?.deselect(row);\n      if (this.Id) {\n        this.selection.selected.map(s => {\n          if (s[this.Id] === row[this.Id]) {\n            this.selection?.deselect(s);\n          }\n        })\n      }\n    }\n  }\n}\n","<div class=\"row align-items-center m-0\">\r\n  <div class=\"col-12 col-sm-12 col-md-7 col-lg-7 col-xl-12 px-2\">\r\n    <ng-content select=\"[table-header]\"></ng-content>\r\n  </div>\r\n \r\n</div>\r\n<div style=\"height: 4px;\">\r\n  <mat-progress-bar mode=\"indeterminate\" style=\"width: 100%; height: 4px;\" *ngIf=\"config?.tableState === 'LOADING'\">\r\n  </mat-progress-bar>\r\n</div>\r\n<div class=\"table-responsive scroll-assist\">\r\n  <table [id]=\"config?.id\" mat-table class=\"table-format-cell\" matSort [dataSource]=\"dataSource\" aria-label=\"Table\"\r\n  [matSortDisabled]=\"!dataSource?.data?.length\">\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"selectExtraHeader\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n         <mat-checkbox *ngIf=\"dataSource?.data?.length !== 0 && config?.rowSelectEnabled\"\r\n          (change)=\"$event ? masterToggle() : null\" [checked]=\"selection?.hasValue() && this.allSelected\"\r\n          [disabled]=\"disableMasterSelect\" [indeterminate]=\"selection?.hasValue() && !this.allSelected\">\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\" [ngClass]=\"((row?.admissions != undefined) && (row?.admissions).length > 1) ? 'manage-data-row' : ''\">\r\n         <mat-checkbox (click)=\"$event.stopPropagation()\" *ngIf=\"config?.rowSelectEnabled\"\r\n          (change)=\"checkboxChange($event, row)\"\r\n          [checked]=\"isSelected ? isSelected(row, selection) : selection?.isSelected(row)\"\r\n          [disabled]=\"selectOnlyActive && row.activePatch === ''\"\r\n          [aria-label]=\"checkboxLabel(row)\">\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container [matColumnDef]=\"column?.id\" *ngFor=\"let column of columns\">\r\n      <ng-container *ngIf=\"!column?.sortable && widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [class]=\"column?.headerClass\" [style]=\"column?.style\">\r\n          <ls-widget *ngIf=\"widgetTemplates[column?.id + 'Heading']\"\r\n            [lsTemplate]=\"widgetTemplates[column?.id + 'Heading']\">\r\n          </ls-widget>\r\n        </th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"column?.sortable && widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [mat-sort-header]=\"column.id\" [class]=\"column?.headerClass\"\r\n          [style]=\"column?.style\">\r\n          <ls-widget *ngIf=\"widgetTemplates[column?.id + 'Heading']\"\r\n            [lsTemplate]=\"widgetTemplates[column?.id + 'Heading']\">\r\n          </ls-widget>\r\n        </th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!column?.sortable && !widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [class]=\"column?.headerClass\" [style]=\"column?.style\">\r\n          {{ config?.translate\r\n          ? (getHeaderTranslation(column) | translate)\r\n          : getHeaderTranslation(column) }}\r\n        </th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"column?.sortable && !widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [mat-sort-header]=\"column.id\" [class]=\"column?.headerClass\"\r\n          [style]=\"column?.style\">\r\n          {{ config?.translate\r\n          ? (getHeaderTranslation(column) | translate)\r\n          : getHeaderTranslation(column) }}\r\n        </th>\r\n      </ng-container>\r\n      <td mat-cell *matCellDef=\"let row\" [ngClass]=\"((row?.admissions != undefined) && (row?.admissions).length > 1) ? 'manage-data-row px-2' : 'px-2'\">\r\n        <div [class]=\"column?.cellClass\" [style]=\"column?.style\">\r\n          <span *ngIf=\"!widgetTemplates[column?.id]\" [class]=\"column?.labelClass\">{{ row[column?.id] }}</span>\r\n          <ls-widget *ngIf=\"widgetTemplates[column?.id]\" [lsTemplate]=\"widgetTemplates[column?.id]\" [value]=\"row\">\r\n          </ls-widget>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\" *ngIf=\"config?.actions?.show\">\r\n      <th mat-header-cell *matHeaderCellDef [style]=\"config?.actions?.header?.style\"\r\n        [class]=\"config?.actions?.header?.class\">\r\n        <ng-container *ngIf=\"!widgetTemplates['actionsHeading']\">{{\r\n          config?.actions?.headerLabel\r\n          }}</ng-container>\r\n        <ls-widget *ngIf=\"widgetTemplates['actionsHeading']\" [lsTemplate]=\"widgetTemplates['actionsHeading']\">\r\n        </ls-widget>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\" class=\"px-2\">\r\n        <ls-widget [lsTemplate]=\"widgetTemplates?.actions\" [value]=\"row\" [class]=\"config?.actions?.class\"\r\n          [style]=\"config?.actions?.style\"></ls-widget>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actionsExtraHeader\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"px-2\"></th>\r\n    </ng-container>\r\n\r\n    <ng-container [matColumnDef]=\"column.id + 'ExtraHeader'\" *ngFor=\"let column of columns\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <ls-widget [lsTemplate]=\"widgetTemplates[column.id + 'ExtraHeader']\" [class]=\"config?.extraHeader?.class\"\r\n          [style]=\"config?.extraHeader?.style\"></ls-widget>\r\n      </th>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"config?.footer\">\r\n      <ng-container matColumnDef=\"footer\">\r\n        <td mat-footer-cell *matFooterCellDef [attr.colspan]=\"config?.footer?.colspan\" [class]=\"config?.footer?.class\">\r\n          <ls-widget [lsTemplate]=\"widgetTemplates?.footer\" [style]=\"config?.footer?.style\"></ls-widget>\r\n        </td>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"getDisplayedColumns()\"></tr>\r\n    <ng-container *ngIf=\"config?.showExtraHeader\">\r\n      <tr mat-header-row *matHeaderRowDef=\"getExtraHeaderDisplayedColumns()\" class=\"extra-header\"></tr>\r\n    </ng-container>\r\n    <tr mat-row *matRowDef=\"let row; columns: getDisplayedColumns()\"\r\n      [class.active]=\"isSelected ? isSelected(row, selection) : selection?.isSelected(row)\"></tr>\r\n    <ng-container *ngIf=\"config?.footer\">\r\n      <tr mat-footer-row *matFooterRowDef=\"['footer']\"></tr>\r\n    </ng-container>\r\n  </table>\r\n  <div class=\"text-center my-4 mx-2\"\r\n    *ngIf=\"config?.tableState !== 'LOADING' && config?.tableState !== 'FAILURE' && dataSource.data?.length === 0\">\r\n    No data found\r\n  </div>\r\n  <div class=\"mat-error text-center my-4 mx-2\" *ngIf=\"config?.tableState === 'FAILURE' && dataSource.data?.length === 0\">\r\n    Something went wrong. Please try again.\r\n  </div>\r\n</div>\r\n<div class=\"col-12 col-sm-12 col-md-5 col-lg-5 col-xl-12 px-2\">\r\n  <ls-paginator *ngIf=\"config?.paginator?.hide === false\" (page)=\"onPage($event)\" class=\"sticky-paginator\"\r\n    [length]=\"config?.page?.length\" [pageSize]=\"config?.page?.pageSize\" [pageLength]=\"dataSource?.data?.length\" [pageIndex]=\"config?.page?.pageIndex\"\r\n    showFirstLastButtons [tableState] = config?.tableState >\r\n  </ls-paginator>\r\n</div>","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  TemplateRef,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"ls-widget\",\n  templateUrl: \"./ls-widget.component.html\",\n  styleUrls: [\"./ls-widget.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LsWidgetComponent {\n  @Input() value: any;\n  @Input() lsTemplate: TemplateRef<any>;\n\n  constructor() {}\n}\n","<ng-container *ngTemplateOutlet=\"lsTemplate; context: { $implicit: value }\">\n</ng-container>\n","import { Directive, Input, TemplateRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"[lsWidgetName]\",\n})\nexport class LsWidgetNameDirective {\n  @Input() type: string;\n\n  @Input() lsWidgetName: string;\n\n  constructor(public template: TemplateRef<any>) {}\n\n  getName(): string {\n    return this.lsWidgetName;\n  }\n  getType(): string {\n    return this.type;\n  }\n}\n","import { Sort } from \"@angular/material/sort\";\n\nexport interface LSColumn {\n  id: string;\n  label?: string;\n  headerClass?: string | string[];\n  extraHeaderClass?: string | string[];\n  cellClass?: string | string[];\n  style?: string;\n  extraHeaderStyle?: string;\n  sortable?: boolean;\n  type?: LSColumnType;\n  config?: any;\n  labelClass?: string;\n  hidden?: boolean;\n  colspan?: number;\n}\n\nexport enum LSColumnType {\n  \"TEXT\" = \"TEXT\",\n  \"TAG_LIST\" = \"TAG_LIST\",\n  \"ACTIONS\" = \"ACTIONS\",\n}\n\nexport interface LSTableConfig {\n  id: string;\n  rowSelectEnabled?: boolean;\n  actions?: LSActions;\n  showExtraHeader?: boolean;\n  extraHeader?: {\n    class?: string[];\n    style?: string;\n  }\n  page?: {\n    pageSize?: number;\n    pageIndex?: number;\n    length?: number;\n  };\n  translateKey?: string;\n  translate?: boolean;\n  paginator?: {\n    offline?: boolean;\n    hide?: boolean;\n  };\n  isActive?: Function;\n  sort?: Sort;\n  footer?: {\n    colspan?: number;\n    style?: string;\n    class?: string[];\n  };\n  tableState?: TableState;\n}\n\nexport enum TableState {\n  LOADING = \"LOADING\",\n  DEFAULT = \"DEFAULT\",\n  SUCCESS = \"SUCCESS\",\n  NO_DATA = \"NO_DATA\",\n  FAILURE = \"FAILURE\"\n}\n\nexport interface LSActions {\n  headerLabel?: string;\n  header?: {\n    style?: string;\n    class?: string[];\n  };\n  style?: string;\n  class?: string[];\n  show?: boolean;\n  contentSelector?: string;\n}\n\nexport interface LSAction {\n  label?: string;\n  type?: string;\n  color?: string;\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LsTableComponent } from \"./_components/ls-table/ls-table.component\";\nimport { LsWidgetComponent } from \"./_components/ls-widget/ls-widget.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { LsWidgetNameDirective } from \"./_directives/ls-widget-name.directive\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { LsPageHeaderComponent } from \"./_components/ls-page-header/ls-page-header.component\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { LsPaginatorComponent } from './_components/ls-paginator/ls-paginator.component';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@NgModule({\n  declarations: [\n    LsTableComponent,\n    LsWidgetComponent,\n    LsWidgetNameDirective,\n    LsPageHeaderComponent,\n    LsPaginatorComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatProgressBarModule,\n    I18nModule,\n    MatCardModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule\n  ],\n    exports: [\n        LsTableComponent,\n        LsWidgetComponent,\n        LsWidgetNameDirective,\n        LsPageHeaderComponent,\n        LsPaginatorComponent,\n    ],\n})\nexport class LifeSignalsModule {}\n","export const groupNamePattern = /^[a-zA-Z0-9][a-zA-Z0-9-_ ]*[a-zA-Z0-9]$/\r\nexport interface Group {\r\n  ancestor?: string[];\r\n  type?: string;\r\n  name: string;\r\n  parent?: string;\r\n  groupId?: string;\r\n  facilityId?: string;\r\n  facility_id?:string;\r\n  isShow?: boolean;\r\n  expanded?: boolean;\r\n  hasChildren?: boolean;\r\n  children?: string[];\r\n  id?: string;\r\n  tempName?: string;\r\n  parentCard?: boolean\r\n}\r\n\r\nexport interface AssignGroup {\r\n  patientId: string,\r\n  cGroup: GroupObj,\r\n  pGroup: GroupObj\r\n}\r\n\r\nexport interface GroupObj {\r\n  id: string,\r\n  name: string\r\n}\r\n\r\nexport enum GroupType {\r\n  CLINICAL = \"clinical\",\r\n  PHYSICAL = \"physical\"\r\n}\r\n\r\nexport interface GroupResponse {\r\n  name: string,\r\n  groupId: string,\r\n  FacilityId: string,\r\n  type: GroupType,\r\n  alertId: string,\r\n  alertDestId: string,\r\n  miscSettingsId: string,\r\n  children: string[],\r\n  parent: string,\r\n  ancestor: string[],\r\n  AlertIsInherited: boolean,\r\n  isShow?: boolean;\r\n  expanded?: boolean;\r\n  deleted?: boolean;\r\n}\r\nexport const restrictedGroupNames = [\r\n   \"ROOT\",\r\n   \"UNASSIGNED\",\r\n   \"ALL\"\r\n]\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { Group } from \"../models/manage-groups.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { GetAPIResponse } from \"src/app/models/api.model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ManageGroupsService {\r\n  BASE_URL: string = environment.dataApiUrl;\r\n  URL:string=environment.dataApiUrl2;\r\n  private cfId: string = \"\";\r\n  constructor(\r\n    private http: HttpClient,\r\n    private autheticationService: AuthenticationService\r\n  ) {\r\n    this.cfId = this.autheticationService.getCfId();\r\n  }\r\n\r\n  save(ob) {\r\n    // let url = this.BASE_URL + \"clinical-facilities/groups\";\r\n    let url = this.URL+`create_location`;\r\n    return this.http.post<Group>(url, ob).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  update(ob) {\r\n    // let url = this.BASE_URL + \"clinical-facilities/groups\";\r\n    let url = this.URL+`update_location`;\r\n    return this.http.put<Group>(url, ob).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  remove(ob) {\r\n    let url = this.BASE_URL + `clinical-facilities/groups/${ob}`;\r\n    return this.http.delete<Group>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  fetch() {\r\n    // let url = this.BASE_URL + `clinical-facilities/${this.cfId}/groups?sortBy=name:asc`;\r\n    let url = this.URL+`get_locations`;\r\n    return this.http.get<GetAPIResponse>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  handleError(error: any) {\r\n    if (error.errorMessage) {\r\n      return throwError(error.errorMessage);\r\n    } else {\r\n      return throwError(`Error: ${error}`);\r\n    }\r\n  }\r\n}\r\n","import * as ManageGroupsStoreActions from \"./manage-groups.actions\";\nimport * as ManageGroupsStoreSelectors from \"./manage-groups.selector\";\nimport * as ManageGroupsStoreState from \"./manage-groups.reducer\";\n\nexport {\n  ManageGroupsStoreActions,\n  ManageGroupsStoreSelectors,\n  ManageGroupsStoreState,\n};\n","import { Action } from \"@ngrx/store\";\nimport { Group, GroupResponse } from \"../models/manage-groups.model\";\n\nexport enum ActionTypes {\n  LOAD_GROUPS_REQUEST = \"[Group] Load groups request\",\n  LOAD_GROUPS_FAILURE = \"[Group] Load groups Failure\",\n  LOAD_GROUPS_SUCCESS = \"[Group] Load groups Success\",\n\n  SAVE_GROUP_REQUEST = \"[Group] save group request\",\n  SAVE_GROUP_FAILURE = \"[Group] save group Failure\",\n  SAVE_GROUP_SUCCESS = \"[Group] save group Success\",\n\n  UPDATE_GROUP_REQUEST = \"[Group] update group request\",\n  UPDATE_GROUP_FAILURE = \"[Group] update group Failure\",\n  UPDATE_GROUP_SUCCESS = \"[Group] update group Success\",\n\n  REMOVE_GROUP_REQUEST = \"[Group] remove group request\",\n  REMOVE_GROUP_FAILURE = \"[Group] remove group Failure\",\n  REMOVE_GROUP_SUCCESS = \"[Group] remove group Success\",\n}\n\nexport class LoadGroupsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_GROUPS_REQUEST;\n  constructor() {}\n}\n\nexport class LoadGroupsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_GROUPS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class LoadGroupsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_GROUPS_SUCCESS;\n  constructor(public payload: { groups: GroupResponse[] }) {}\n}\n\nexport class SaveGroupRequestAction implements Action {\n  readonly type = ActionTypes.SAVE_GROUP_REQUEST;\n  constructor(public payload: Group) {}\n}\n\nexport class SaveGroupFailureAction implements Action {\n  readonly type = ActionTypes.SAVE_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class SaveGroupSuccessAction implements Action {\n  readonly type = ActionTypes.SAVE_GROUP_SUCCESS;\n  constructor(public payload: { group: Group }) {}\n}\n\nexport class UpdateGroupRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_GROUP_REQUEST;\n  constructor(public payload: Group) {}\n}\n\nexport class UpdateGroupFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class UpdateGroupSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_GROUP_SUCCESS;\n  constructor(public payload: { group: Group }) {}\n}\n\nexport class RemoveGroupRequestAction implements Action {\n  readonly type = ActionTypes.REMOVE_GROUP_REQUEST;\n  constructor(public payload: string) {}\n}\n\nexport class RemoveGroupFailureAction implements Action {\n  readonly type = ActionTypes.REMOVE_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class RemoveGroupSuccessAction implements Action {\n  readonly type = ActionTypes.REMOVE_GROUP_SUCCESS;\n  constructor(public payload: { group: any }) {}\n}\n\nexport type GroupsActions =\n  | LoadGroupsFailureAction\n  | LoadGroupsRequestAction\n  | LoadGroupsSuccessAction\n  | SaveGroupFailureAction\n  | SaveGroupRequestAction\n  | SaveGroupSuccessAction\n  | UpdateGroupFailureAction\n  | UpdateGroupRequestAction\n  | UpdateGroupSuccessAction\n  | RemoveGroupFailureAction\n  | RemoveGroupRequestAction\n  | RemoveGroupSuccessAction;\n","import { Group, GroupResponse, GroupType } from \"../models/manage-groups.model\";\r\nimport { ActionTypes, GroupsActions } from \"./manage-groups.actions\";\r\n\r\nexport const manageGroupFeatureKey = \"manageGroups\";\r\n\r\nexport interface ManageGroupState {\r\n  CLINICAL_GROUPS: GroupResponse[];\r\n  PHYSICAL_GROUPS: GroupResponse[];\r\n  error: string;\r\n  groupsLoaded: boolean;\r\n}\r\n\r\nconst initialGroupState: ManageGroupState = {\r\n  CLINICAL_GROUPS: [],\r\n  PHYSICAL_GROUPS: [],\r\n  error: \"\",\r\n  groupsLoaded: false\r\n};\r\n\r\nexport function GroupsReducer(\r\n  state: ManageGroupState,\r\n  action: GroupsActions\r\n) {\r\n  state = state || initialGroupState;\r\n  switch (action.type) {\r\n    case ActionTypes.UPDATE_GROUP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        groupsLoaded: false\r\n      }\r\n    }\r\n    case ActionTypes.SAVE_GROUP_REQUEST: {\r\n      return{\r\n        ...state,\r\n        groupsLoaded: false,\r\n        error : null\r\n      }\r\n    }\r\n    case ActionTypes.LOAD_GROUPS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        groupsLoaded: false,\r\n      };\r\n    }\r\n    case ActionTypes.REMOVE_GROUP_REQUEST:{\r\n      return{\r\n        ...state,\r\n        error: null\r\n      };\r\n    }\r\n    case ActionTypes.UPDATE_GROUP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error : action.payload,\r\n        groupsLoaded: true\r\n      }\r\n    }\r\n    case ActionTypes.SAVE_GROUP_FAILURE: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        error : action.payload,\r\n        groupsLoaded: true\r\n      }\r\n    }\r\n    case ActionTypes.LOAD_GROUPS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n    case ActionTypes.REMOVE_GROUP_FAILURE: {\r\n      return{\r\n        ...state,\r\n        error : action.payload\r\n      }\r\n    }\r\n    case ActionTypes.LOAD_GROUPS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        CLINICAL_GROUPS: setGroups(action.payload).cgroup,\r\n        PHYSICAL_GROUPS: setGroups(action.payload).pgroup,\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SAVE_GROUP_SUCCESS: {\r\n      let newGroupResponse = setGroup(action.payload['group']['data']);\r\n      let tempCgroup: Group[] = [...state.CLINICAL_GROUPS];\r\n      let tempPgroup: Group[] = [...state.PHYSICAL_GROUPS];\r\n      if (newGroupResponse.type === GroupType.CLINICAL) {\r\n        tempCgroup = [...tempCgroup, <GroupResponse>newGroupResponse];\r\n      } else if (newGroupResponse.type === GroupType.PHYSICAL) {\r\n        tempPgroup.map((g)=>{\r\n          if(g.groupId === newGroupResponse.parent){\r\n            g.children.push(newGroupResponse.groupId);\r\n            g.hasChildren = true;\r\n            g.expanded = true;\r\n          }\r\n        })\r\n        tempPgroup = [...tempPgroup, <GroupResponse>newGroupResponse];\r\n      }\r\n      return {\r\n        ...state,\r\n        CLINICAL_GROUPS: [...tempCgroup],\r\n        PHYSICAL_GROUPS: [...tempPgroup],\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_GROUP_SUCCESS: {\r\n      let newGroupResponse = setGroup(action.payload['group']['data']);\r\n      let tempCgroup: Group[] = [...state.CLINICAL_GROUPS];\r\n      let tempPgroup: Group[] = [...state.PHYSICAL_GROUPS];\r\n      if (newGroupResponse.type === GroupType.CLINICAL) {\r\n        tempCgroup = [...tempCgroup.map(t => {\r\n          return {\r\n            ...t,\r\n            name: t.groupId === newGroupResponse.groupId ? newGroupResponse?.name : t.name\r\n          }\r\n        })];\r\n      } else if (newGroupResponse.type === GroupType.PHYSICAL) {\r\n        tempPgroup = [...tempPgroup.map(t => {\r\n          return {\r\n            ...t,\r\n            name: t.groupId === newGroupResponse.groupId ? newGroupResponse?.name : t.name\r\n          }\r\n        })];\r\n      }\r\n      return {\r\n        ...state,\r\n        CLINICAL_GROUPS: [...tempCgroup],\r\n        PHYSICAL_GROUPS: [...tempPgroup],\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n    case ActionTypes.REMOVE_GROUP_SUCCESS:{\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setGroup(group) {\r\n  let obj: Group = {\r\n    type: group.type,\r\n    name: group.name,\r\n    parent: group.parent,\r\n    groupId: group.groupId,\r\n    facilityId: group.facilityId,\r\n    children: group.children\r\n  };\r\n  return obj;\r\n}\r\n\r\nfunction setGroups(payload: { groups: GroupResponse[] }) {\r\n  let pGroup = new Array();\r\n  let cGroup = new Array();\r\n\r\n  payload[\"groups\"].map(group => {\r\n    let obj: Group = {\r\n      type: group.type,\r\n      name: group.name,\r\n      parent: group.parent,\r\n      groupId: group.groupId,\r\n      facilityId: group.FacilityId,\r\n      hasChildren: !!group.children?.length,\r\n      children: group.children\r\n    }\r\n    if (obj.type === GroupType.CLINICAL) {\r\n      cGroup.push(obj);\r\n    } else if (obj.type === GroupType.PHYSICAL) {\r\n      pGroup.push(obj);\r\n    }\r\n  });\r\n  return { cgroup: cGroup, pgroup: pGroup };\r\n}\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { ManageGroupState, manageGroupFeatureKey } from \"./manage-groups.reducer\";\n\nconst getGroupsState = createFeatureSelector<ManageGroupState>(manageGroupFeatureKey);\n\nexport const selectGroupsList = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState\n);\nexport const groupsLoaded = createSelector(\n    getGroupsState,\n    (ManageGroupState) => ManageGroupState?.groupsLoaded\n);\n\nexport const selectGroupsError = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState?.error\n);\n\nexport const removeGroup = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState\n);\n\nexport const removeGroupError = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState?.error\n);\n\nexport const saveGroup = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState\n);\n\nexport const saveGroupError = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState?.error\n);\n\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"filter\",\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], searchText: string, fieldName: string): any[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLowerCase();\n    return items.filter((item) => {\n      return item[fieldName].toLowerCase().includes(searchText);\n    });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { BackendApiService } from \"../services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { ManageUsersService } from \"../settings/manage-users/services/manage-users.service\";\nimport { CFUser } from \"../interfaces/manage-users.interface\";\nimport { ConfirmDialogComponent } from \"../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport csc from \"country-state-city\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"],\n})\nexport class ProfileComponent implements OnInit {\n  version = environment.version;\n  searchTxt;\n  constructor(\n    private location: Location,\n    public backendApiService: BackendApiService,\n    private authService: AuthenticationService,\n    private userService: ManageUsersService,\n    private snackBar: SnackbarService,\n    private dialog: MatDialog,\n  ) { }\n  units = [\n    { name: \"Metric Units\", value: \"SI\" },\n    { name: \"Imperial Units\", value: \"IS\" },\n  ];\n  timeZones;\n  logoutResponse: any;\n  role: number;\n  user: CFUser;\n  private userCopy: CFUser;\n  userId;\n  loader = true;\n  selectedUnit;\n  valuesUpdated = false;\n  duration = 3000;\n  showPreference = true;\n  roles;\n  browserOffset;\n  ngOnInit() {\n    // this.user = sessionStorage.getItem(\"user\");\n    this.roles = this.authService.getRoles() || [];\n    if (this.roles.indexOf('SPA') > -1 || this.roles.indexOf('SA') > -1) {\n      this.showPreference = false;\n    }\n    this.userId = this.authService.getUserId();\n    this.getTimeZones();\n    this.getUser();\n  }\n  getUser() {\n    this.userService.getUser(this.userId).subscribe(\n      (response: any) => {\n        this.user = response.data;\n        this.user.timezone = this?.user?.timezone || this.userService.getTimeZoneOffset('');\n        this.userCopy = JSON.parse(JSON.stringify(this.user));\n        this.loader = false;\n      }, console.log);\n  }\n  getTimeZones() {\n    let countries = csc.getAllCountries() || [];\n    this.timeZones = countries.flatMap(country => {\n      return country.timezones.map(timeZone => ({\n        name: timeZone.zoneName,\n        offset: timeZone.gmtOffsetName\n      }));\n    });\n  }\n  back() {\n    this.location.back();\n  }\n  logout() {\n    this.authService.logout();\n  }\n  cancel() {\n    this.valuesUpdated = false;\n    this.user = JSON.parse(JSON.stringify(this.userCopy));\n  }\n  save() {\n    let userPreference = {\n      units: this.user.units,\n      timeZone: this.user.timezone,\n    };\n    this.loader = true;\n    this.userService.savePreferences(this.userId, userPreference).subscribe(\n      (response: any) => {\n        if (response.status === \"OK\") {\n          this.snackBar.openSnackBar(\"shared.\" + response.message, 'bottom', 'center', true);\n          setTimeout(() => {\n            window.location.reload();\n          }, 3000);\n        } else {\n          this.loader = false;\n          this.snackBar.openSnackBar(\"shared.OPERATION_FAILED\", 'bottom', 'center', true);\n        }\n      },\n      (error) => {\n        this.loader = false;\n        console.log(error);\n        this.snackBar.openSnackBar(\"shared.OPERATION_FAILED\", 'bottom', 'center', true);\n      }\n    );\n  }\n  confirmResetPassword() {\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"270px\",\n      maxWidth: \"95vw\",\n      \n      data: {\n        body: {\n          title: \"manage_users_module.reset_password\",\n          text: \"manage_users_module.reset_password_confirm\",\n        },\n      },\n\n      disableClose: true,\n    });\n    confirm.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.resetPassword();\n      }\n    });\n  }\n  resetPassword() {\n    this.loader = true;\n    this.snackBar.openSnackBar(\"shared.Reset_success\", 'bottom', 'center', true);\n    this.userService.resetPassword(this.userId).subscribe(\n      (response: any) => {\n        console.log(response);\n        if (response.status === \"OK\") {\n          // this.duration = 10000;\n          this.logout();\n        }\n      },\n      (error) => {\n        this.loader = false;\n        this.snackBar.openSnackBar(\"shared.OPERATION_FAILED\", 'bottom', 'center', true);\n      }\n    );\n  }\n  selectZone(value) {\n    this.user.timezone = value;\n    this.valuesUpdated = true;\n  }\n  updated() {\n    this.valuesUpdated = true;\n  }\n}\n","<app-header></app-header>\n<ls-page-header type=\"profile\"></ls-page-header>\n<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n<div *ngIf=\"!loader\">\n    <div class=\"container-fluid\">\n        <div class=\"sub-title fw-bold mb-2 pt-4\">\n            {{ \"shared.user_details\" | translate }}\n        </div>\n        <div class=\"profile-card\">\n            <div class=\"row mx-n2\">\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.username\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.firstName }}\n                                {{ user.lastName }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.user_id\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.id }}</span>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row mx-n2\">\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.phone_no\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.phoneNo || '-' }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-1 px-2 mx-2 \">\n                        <div class=\"col-4\">\n                            <label> {{ \"shared.password\" | translate }}</label>\n                        </div>\n                        <div class=\"col-8\">\n                            <div class=\"d-flex justify-content-end\"> <button mat-button class=\"btn reset-btn\" (click)=\"confirmResetPassword()\">\n                  <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n                  <span class=\"mx-1\">{{ \"shared.reset_password\" | translate }}</span>\n                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"row mx-n2\">\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.email\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.email || '-' }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-3\">\n                            <label> {{ \"shared.roles\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-9 roles\">\n                            <span *ngFor=\"let role of user.roles\">\n                                {{ 'profile-module.roles.' + role | translate }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n\n            <div *ngIf=\"showPreference\">\n                <div class=\"sub-title mb-2 px-3 pt-4\">\n                    {{ \"shared.preferences\" | translate }}\n                </div>\n\n                <div class=\"row mx-n2\">\n                    <div class=\"col-md-6 px-2 mb-3\">\n                        <div class=\"row align-items-center py-1 mx-2 \">\n                            <div class=\"col-4\">\n                                <label>{{ \"shared.units\" | translate }}</label>\n                            </div>\n                            <div class=\"col-8\">\n                                <div class=\"d-flex justify-content-end\">\n                                    <mat-select placeholder=\"Select\" appearance=\"fill\" class=\"mat-sel whiteselect selectfilter\" [(ngModel)]=\"user.units\" (ngModelChange)=\"updated()\">\n                                        <mat-option *ngFor=\"let unit of units\" [value]=\"unit.value\">\n                                            {{ unit.name }}\n                                        </mat-option>\n                                    </mat-select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6 px-2 mb-3\">\n                        <div class=\"row align-items-center py-1 mx-2 \">\n                            <div class=\"col-5\">\n                                <label> {{ \"shared.time_zone\" | translate }}</label>\n                            </div>\n                            <div class=\"col-7\">\n                                <div class=\"d-flex justify-content-end\">\n                                    <app-matselect-withsearch class=\"mat-sel\" [key]=\"'name'\" [value]=\"'name'\" [selected]=\"user.timezone\"\n                                        (valueUpdated)=\"selectZone($event)\" [items]=\"timeZones\"></app-matselect-withsearch>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class=\"row bottom-tab mt-4\">\n            <!-- <div class=\"col-sm-12 my-4 d-flex\" *ngIf=\"version\">\n                <div class=\"mr-2\">{{ \"shared.version\" | translate }}:&nbsp;</div>\n                <div>{{version}}</div>\n            </div> -->\n            <div class=\"col-sm-6\">\n                <!--        <button mat-flat-button color=\"warn\" (click)=\"logout()\">-->\n                <!--          <span>{{ \"shared.logout\" | translate }}</span>-->\n                <!--        </button>-->\n            </div>\n            <div class=\"col-sm-12 text-end\">\n                <span *ngIf=\"valuesUpdated\">\n          <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"cancel()\">\n            {{ \"shared.cancel\" | translate }}\n          </button>\n          <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"save()\">\n            {{ \"shared.save\" | translate }}\n          </button>\n        </span>\n            </div>\n        </div>\n    </div>\n</div>\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer,\n} from \"@ngrx/store\";\nimport { environment } from \"../../environments/environment\";\n\nexport interface AppState {}\n\nexport const reducers: ActionReducerMap<AppState> = {};\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production\n  ? []\n  : [];\n","import { Injectable } from \"@angular/core\";\r\nimport { KeycloakService } from \"keycloak-angular\";\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment, isLocal } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private logoSource = new BehaviorSubject<boolean>(false);\r\n  public latestLogo$ = this.logoSource.asObservable();\r\n\r\n  constructor(\r\n    private keyClockService: KeycloakService\r\n  ) { }\r\n\r\n  getCustomizationLogo(logoStatus: boolean) {\r\n    this.logoSource.next(logoStatus);\r\n  }\r\n\r\n  getLoggedUser() {\r\n    const userDetails = this.keyClockService.getKeycloakInstance()?.tokenParsed;\r\n    return userDetails;\r\n  }\r\n\r\n  logout() {\r\n    window.sessionStorage.clear();\r\n    this.keyClockService.logout(window.location.origin).catch(console.log);\r\n  }\r\n\r\n  getRoles(): string[] {\r\n    if (isLocal()) {\r\n      return [\"PHY\", \"CFA\"];\r\n    }\r\n    return (\r\n      (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed?.roles ||\r\n      []\r\n    );\r\n  }\r\n  getCfId(): string {\r\n    return (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed\r\n      ?.cfId;\r\n  }\r\n  getSPId(): string {\r\n    return (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed\r\n      ?.spId;\r\n  }\r\n  getUserId(): string {\r\n    if (isLocal()) {\r\n      return \"1\";\r\n    }\r\n    return (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed?.uId;\r\n  }\r\n}\r\n\r\nexport class MockAuthService {\r\n  getLoggedUser() {\r\n    return {};\r\n  }\r\n\r\n  getRoles() {\r\n    return [];\r\n  }\r\n\r\n  getUserId() {\r\n    return \"\";\r\n  }\r\n\r\n  getSPId() {\r\n    return \"\";\r\n  }\r\n  getCfId() {\r\n    return \"\";\r\n  }\r\n  logout() {\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { fromEvent, merge } from \"rxjs\";\nimport { mapTo } from \"rxjs/operators\";\n\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable()\nexport class BackendApiService {\n  dataSource = new BehaviorSubject<any>({});\n  data = this.dataSource.asObservable();\n  online$: Observable<any>;\n\n  constructor(\n    public httpClient: HttpClient,\n    private _snackBar: MatSnackBar,\n  ) {\n    this.online$ = merge(\n      fromEvent(window, \"online\").pipe(mapTo(true)),\n      fromEvent(window, \"offline\").pipe(mapTo(false))\n    );\n    this.online$.subscribe((data) => {\n      if (!data) {\n        this._snackBar.open(\n          \"No Internet Connection, check your network\",\n          null,\n          {\n            verticalPosition: \"top\", // 'top' | 'bottom'\n            horizontalPosition: \"center\",\n          }\n        );\n      } else {\n        this._snackBar.dismiss();\n        this._snackBar.open(\"Internet Connection is restored\", null, {\n          duration: 2000,\n          verticalPosition: \"top\", // 'top' | 'bottom'\n          horizontalPosition: \"center\",\n        });\n      }\n    });\n  }\n\n  downloadBlob(url) {\n    return this.httpClient\n      .get(url, {\n        responseType: 'blob'\n      });\n  }\n\n  postMapping(url, requestBody) {\n    return this.httpClient\n      .post<any>(url, requestBody)\n      .toPromise()\n      .then(\n        (data) => {\n          return data;\n        },\n        (error) => {\n          // console.log('API error : ' + JSON.stringify(error));\n          return error;\n        }\n      );\n  }\n\n  getMapping(url, param = {}) {\n    return this.httpClient\n      .get<any>(url, { params: param })\n      .toPromise()\n      .then(\n        (data) => {\n          return data;\n        },\n        (error) => {\n          // console.log('API error : ' + JSON.stringify(error));\n          return error;\n        }\n      );\n  }\n\n  put(url, requestBody) {\n    return this.httpClient\n      .put<any>(url, requestBody)\n      .toPromise()\n      .then(\n        (data) => {\n          return data;\n        },\n        (error) => {\n          // console.log('API error : ' + JSON.stringify(error));\n          return error;\n        }\n      );\n  }\n\n  callGetApi(url, param = {}) {\n    return this.httpClient.get<any>(url, { params: param });\n  }\n\n\n  deleteApi(url) {\n    return this.httpClient.delete<any>(url).toPromise();\n  }\n\n  getUserRole() {\n    return sessionStorage.getItem(\"user_level\");\n  }\n\n  post(url, requestBody) {\n    return this.httpClient.post<any>(url, requestBody);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SnackbarService {\n  constructor(private snackBar: MatSnackBar, private translate: TranslateService) { }\n\n  openSnackBar(message, verticalPosition, horizontalPosition, translateText = false, prefix = '', suffix = '') {\n    if (translateText) {\n      this.translate.get(message).subscribe((tran) => {\n        this.snackBar.open(prefix + tran + suffix, \"\", {\n          duration: environment.customization.snackBarDuration,\n          verticalPosition: verticalPosition,\n          horizontalPosition: horizontalPosition\n        });\n      });\n    } else {\n      this.snackBar.open(message, \"\", {\n        duration: environment.customization.snackBarDuration,\n        verticalPosition: verticalPosition, // 'top' | 'bottom'\n        horizontalPosition: horizontalPosition // 'start' | 'center' | 'end' | 'left' | 'right'\n      });\n    }\n  }\n\n  openCustomSnackBar(message, verticalPosition, horizontalPosition, translateText = false, prefix = '', suffix = '') {\n    if (translateText) {\n      this.translate.get(message).subscribe((tran) => {\n        this.snackBar.open(prefix + tran + suffix, \"\", {\n          duration: environment.customization.snackBarDuration,\n          verticalPosition: verticalPosition,\n          horizontalPosition: horizontalPosition,\n          panelClass: \"custom-snackbar\"\n        });\n      });\n    } else {\n      this.snackBar.open(message, \"\", {\n        duration: environment.customization.snackBarDuration,\n        verticalPosition: verticalPosition, // 'top' | 'bottom'\n        horizontalPosition: horizontalPosition, // 'start' | 'center' | 'end' | 'left' | 'right'\n        panelClass: \"custom-snackbar\"\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserPreferenceService {\n\n  constructor() { }\n\n  convertCtoF(value): number {\n    return Math.round(value * 18 + 320) / 10;\n  }\n\n  convertFtoC(value): number {\n    return Math.round((value - 32) / 0.18) / 10;\n  }\n\n  convertInchToCm(value): string {\n    return (value * 2.54).toFixed(1);\n  }\n\n  convertCmToInch(value): string {\n    return (value / 2.54).toFixed(1);\n  }\n\n  convertKgToPound(value): string {\n    return (value * 2.20462262185).toFixed(1);\n  }\n\n  convertPoundToKg(value): string {\n    return (value / 2.20462262185).toFixed(1);\n  }\n\n  getUserTimeZone(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return preference?.timeZone;\n  }\n\n  getUserUnitSystem(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return preference?.units;\n  }\n\n  getUserWeightUnit(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return (preference?.units === 'IS') ? 'POUND' : 'KG';\n  }\n\n  getUserHeightUnit(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return (preference?.units === 'IS') ? 'INCH' : 'CM';\n  }\n\n  getUserTempUnit(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return (preference?.units === 'IS') ? 'F' : 'C';\n  }\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, of, throwError } from \"rxjs\";\r\nimport { delay, catchError } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport {\r\n  AddUser,\r\n  CFUser,\r\n  CFUserList,\r\n} from \"../../../interfaces/manage-users.interface\";\r\n\r\n@Injectable()\r\nexport class ManageUsersService {\r\n  URL:string=environment.dataApiUrl2;\r\n  URL1:string=environment.dataApiUrl;\r\n\r\n  \r\n  constructor(private http: HttpClient) { }\r\n  getAdminUsersList(param) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    let params = new HttpParams();\r\n\r\n    // Begin assigning parameters\r\n    const url = param.url;\r\n    params = params.append(\"page\", param.page);\r\n    params = params.append(\"limit\", param.size);\r\n    params = params.append(\"sort\", param.sortBy);\r\n    params = params.append(\"sort_order\", param.sortOrder);\r\n    params = params.append(\"search_query\", param.searchText);\r\n    return this.http\r\n      // .get<CFUserList>(environment.dataApiUrl + url, { params })\r\n\r\n    \r\n\r\n      .get<CFUserList>(this.URL+`get_users/CFPI8P`,{params})\r\n\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  addUser(userData) {\r\n    console.log(\"adduserData\", userData);\r\n    const url = \"clinical-facilities/users\";\r\n    return this.http\r\n      // .post<AddUser>(environment.dataApiUrl + url, userData)\r\n      .post<AddUser>(this.URL+`create_user`, userData)\r\n      \r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  editUser(userData) {\r\n    console.log(\"edituserData\", userData);\r\n    const url = \"clinical-facilities/users\";\r\n    return this.http\r\n      // .put<AddUser>(environment.dataApiUrl + url, userData)\r\n       .put<AddUser>(this.URL+`update_user/`+userData.id, userData)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  enableUser(userId) {\r\n    const url =this.URL+ \"users/\" + userId + \"/enable\";\r\n    return this.http\r\n      .post(environment.dataApiUrl + url, \"\")\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  disableUser(userData) {\r\n    const url =this.URL+ \"update_user/\" + userData.id ;\r\n    let data={\r\n      userData\r\n    }\r\n    return this.http\r\n      .put(url, data)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  getUser(userId) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    const url = \"users/\" + userId;\r\n    return this.http\r\n      // .get(environment.dataApiUrl + url, { headers: authHeaders })\r\n      .get(this.URL+`get_user/`+userId, userId)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  resetPassword(userId) {\r\n    const url = \"users/\" + userId + \"/reset-password\";\r\n    return this.http\r\n      .post(environment.dataApiUrl + url, \"\")\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  savePreferences(userId, body) {\r\n    const url = \"users/\" + userId + \"/preferences\";\r\n    return this.http\r\n      .post(environment.dataApiUrl + url, body)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  handleError(error: any) {\r\n    console.log(\"error\", error);\r\n    let errorMessage = \"\";\r\n    // Client-side error.\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Error: ${error.error.message}`;\r\n      // Server-side error.\r\n    } else {\r\n      errorMessage = error.error.message;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n  getGroups(cfId) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    const url = \"clinical-facilities/\" + cfId + \"/groups?sortBy=name:asc\";\r\n    // const url=\"drop_down_user/647889c12bec4eb7b2120a2a?role=admin\";\r\n    return this.http\r\n    \r\n      // .get<any>(environment.dataApiUrl + url, { headers: authHeaders })\r\n      .get<any>(this.URL+`get_locations`, { headers: authHeaders })\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  getUserPreferences(userId) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    const url = \"users/\" + userId;\r\n    this.http.get(environment.dataApiUrl + url, { headers: authHeaders })\r\n      .subscribe((response: any) => {\r\n        if (response.status === 'Ok') {\r\n          return {\r\n            units: response?.data?.units || '',\r\n            timeZone: response?.data?.timezone || '',\r\n          };\r\n        } else {\r\n          return '';\r\n        }\r\n      })\r\n  }\r\n\r\n  getTimeZoneOffset(tz: string) {\r\n    const date = new Date();\r\n    let offset: Array<string>;\r\n    try {\r\n      offset = date.toLocaleTimeString(\"en-US\", {\r\n        // @ts-ignore\r\n        timeZoneName: \"longOffset\",\r\n        timeZone: tz\r\n      }).split(' ');\r\n    } catch {\r\n      offset = date.toLocaleTimeString(\"en-US\", {\r\n        // @ts-ignore\r\n        timeZoneName: \"longOffset\"\r\n      }).split(' ');\r\n    }\r\n    return offset[offset.length - 1];\r\n  }\r\n\r\n  editGroups(userData) {\r\n    console.log(\"edituserData\", userData);\r\n    const url = \"clinical-facilities/users/groups\";\r\n    return this.http\r\n        .post<AddUser>(environment.dataApiUrl + url, userData)\r\n        .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n}\r\n\r\nexport class MockManageUsersService {\r\n  getUser(id): Observable<{ data: CFUser }> {\r\n    return of({\r\n      data: {\r\n        id: \"\",\r\n        firstName: \"First name\",\r\n        lastName: \"Last name\",\r\n        email: \"email@address.com\",\r\n        createdDateTime: \"\",\r\n        facilityId: \"\",\r\n        isActive: true,\r\n        phoneNo: 0,\r\n        roles: [],\r\n        serviceProviderId: \"\",\r\n        timezone: \"\",\r\n        units: \"\"\r\n      }\r\n    })\r\n  }\r\n\r\n  getBrowserTimeZone() {\r\n    var offset = new Date().getTimezoneOffset(), o = Math.abs(offset);\r\n    return 'GMT' + (offset < 0 ? \"+\" : \"-\") + (\"00\" + Math.floor(o / 60)).slice(-2) + \":\" + (\"00\" + (o % 60)).slice(-2);\r\n  }\r\n\r\n  savePreferences(id, preference) {\r\n    return of({\r\n      status: \"OK\",\r\n      message: \"Saved successfully\"\r\n    });\r\n  }\r\n\r\n  resetPassword(id) {\r\n    return of({ status: \"OK\" });\r\n  }\r\n\r\n  getAdminUsersList(): Observable<CFUserList> {\r\n    return of({\r\n      data: {\r\n        items: [],\r\n        total: 0\r\n      },\r\n      message: \"LOADED\",\r\n      status: \"OK\"\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {\n  AddEditUserResponse,\n  UserResponse,\n} from \"../../interfaces/user.interface\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ManageAdminService {\n  constructor(\n    private httpClient: HttpClient\n  ) {}\n\n  getAllAdminList(endUrl: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.httpClient\n      .get<UserResponse>(endUrl, { headers: authHeaders });\n  }\n\n  addAdmin(endUrl, requestBody) {\n    return this.httpClient\n      .post<AddEditUserResponse>(endUrl, requestBody);\n  }\n\n  updateAdmin(endUrl, requestBody) {\n    return this.httpClient\n      .put<AddEditUserResponse>(endUrl, requestBody);\n  }\n\n  activeInactive(endUrl, requestBody) {\n    return this.httpClient\n      .post<any>(endUrl, requestBody);\n  }\n}\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-confirm-dialog\",\n  templateUrl: \"./confirm-dialog.component.html\",\n  styleUrls: [\"./confirm-dialog.component.scss\"],\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  confirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ data.body?.title | translate }}\n  </h1>\n  <!--<button mat-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>-->\n</mat-card>\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <div class=\"py-4\">\n    <p class=\"m-0\">{{ data.body?.text | translate }}</p>\n    <p *ngIf=\"data.body?.message\">{{ data.body.message | translate}}</p>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions>\n  <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\n    {{ \"manage_users_module.cancel\" | translate }}\n  </button>\n  <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"confirm()\">\n    {{ \"manage_users_module.confirm\" | translate }}\n  </button>\n</div>","import {Component, Input, OnInit} from \"@angular/core\";\n\n@Component({\n  selector: \"app-data-table-cloned-view\",\n  templateUrl: \"./data-table-cloned-view.component.html\",\n  styleUrls: [\"./data-table-cloned-view.component.scss\"],\n})\nexport class DataTableClonedViewComponent {\n  @Input() adminUsers = [];\n  constructor() {}\n}\n","<div class=\"heading ps-4 mb-2\">\n  <h2>{{ \"clinical_facility.manage_admin_cfa.headingadministrators\" | translate }}</h2>\n</div>\n<div class=\"table-container scroll-assist table-responsive\">\n  <table class=\"mat-table custom-table\" aria-label=\"Table\">\n    <tbody class=\"border-0\">\n      <tr class=\"mat-row\" *ngFor=\"let admin of adminUsers\">\n        <td style=\"width: 163px;\">\n          <div style=\"width: 163px;\">\n            <span *ngIf=\"!admin?.isActive\" class=\"status-tag inactive\">Inactive</span>\n            <span *ngIf=\"admin?.isActive\" class=\"status-tag\">Active</span>\n          </div>\n        </td>\n        <td style=\"width: 240px;\">\n          <div class=\"\" style=\"width: 240px;\">\n            <strong class=\"name d-block font-size-16 text-truncate\">{{admin?.firstName}} {{admin?.lastName}}</strong>\n            <span class=\"creator-name\">Created by <b>{{admin?.createdBy}}</b></span>\n          </div>\n        </td>\n        <td style=\"width: 240px;\">\n          <div class=\"\" style=\"width: 240px;\">\n            <span class=\"phone-number\">{{admin?.phoneNo || '-'}}</span>\n          </div>\n        </td>\n        <td>\n          <div>\n            <span class=\"email\">{{admin?.email || '-'}}</span>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from \"@angular/core\";\nimport { BackendApiService } from \"../../services/backendapi.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { User } from \"../../interfaces/user.interface\";\nimport { SortDirective } from \"../../core/directives/sort.directive\";\nimport { InactiveActiveComponent } from \"../dialogs/inactive-active/inactive-active.component\";\nimport { select, Store } from \"@ngrx/store\";\nimport {\n  ManageAdminStoreActions,\n  ManageAdminStoreSelectors,\n  ManageAdminStoreState\n} from \"../store/manage-admin\";\nimport {\n  LSColumn,\n  LSColumnType,\n  LSTableConfig,\n  TableState\n} from \"../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"../confirm-dialog/confirm-dialog.component\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\nimport {ManageAdminState} from \"../store/manage-admin/manage-admin.reducer\";\n\n@Component({\n  selector: \"app-data-table-manage-admin\",\n  templateUrl: \"./data-table-manage-admin.component.html\",\n  styleUrls: [\"./data-table-manage-admin.component.scss\"],\n})\nexport class DataTableManageAdminComponent implements OnInit, OnDestroy {\n  @ViewChild(SortDirective) sorter: SortDirective;\n  @Input() endUrl: string;\n  @Output() editCallBack = new EventEmitter<any>();\n  @Output() addAdminCallBack = new EventEmitter<any>();\n  @Output() resetPasswordCallBack = new EventEmitter<any>();\n  @Output() sortChange = new EventEmitter<any>();\n  adminUser$: Observable<ManageAdminState>;\n  adminUserData: User[];\n  columns: LSColumn[] = [\n    {\n      id: \"active\",\n      label: \"active\",\n      headerClass: [\"text-start\"],\n      sortable: false,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n      style: \"max-width: 163px; width: 163px;\",\n    },\n    {\n      id: \"adminName\",\n      label: \"adminName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"font-size-16\"],\n      style: \"max-width: 240px; width: 240px;\",\n    },\n    {\n      id: \"phoneNo\",\n      label: \"phoneNo\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n      style: \"max-width: 240px; width: 240px;\",\n    },\n    {\n      id: \"email\",\n      label: \"email\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n  ];\n  config: LSTableConfig = {\n    id: \"manage-admin-table\",\n    rowSelectEnabled: false,\n    actions: {\n      header: {\n        class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n      },\n      show: true,\n      headerLabel: \"\",\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n    },\n    translateKey: \"manage-admin-table\",\n    translate: true,\n    isActive: (row) => {\n      return row.isActive;\n    },\n    tableState: TableState.DEFAULT\n  };\n  @Input() source;\n  activeUser: Subscription;\n  adminUsersSub: Subscription;\n  role = \"\";\n\n  constructor(\n    private backendApiService: BackendApiService,\n    private dialog: MatDialog,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    private snackbar: SnackbarService,\n    private authService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.store$.dispatch(\n      new ManageAdminStoreActions.LoadManageAdminRequestAction(this.endUrl)\n    );\n\n    this.listAdmin();\n    this.role = this.authService.getRoles()[0];\n  }\n\n  listAdmin() {\n    this.adminUser$ = this.store$.select(\n      ManageAdminStoreSelectors.selectManageAdminList\n    );\n    this.adminUsersSub = this.adminUser$.subscribe((response) => {\n      this.config.tableState = <TableState>response?.tableState;\n        this.adminUserData = response.ADMIN_DATA.map((x) => {\n          return {\n            ...x,\n            adminName: `${x.firstName} ${x.lastName}`,\n          };\n        });\n    });\n  }\n\n  toggleSwitch(data, event: MatSlideToggleChange) {\n    if (data.isActive) {\n      event.source.checked = true;\n      this.openActiveInActiveDialogs(event, \"INACTIVE\", data);\n    } else {\n      event.source.checked = false;\n      if (this.source === \"SPA\") this.doSubscriptionFormSelector(event, data);\n      else this.openActiveInActiveDialogs(event, \"ACTIVE\", data);\n    }\n  }\n\n  openAddAdminDialog() {\n    this.addAdminCallBack.emit();\n  }\n\n  openEditAdminDialog(data) {\n    this.editCallBack.emit(data);\n  }\n\n  resetPassword(data) {\n    this.backendApiService\n      .postMapping(\n        environment.dataApiUrl + 'users/' + data.id + '/reset-password',\n        {}\n      )\n      .then((response) => {\n        if (response.status === \"OK\") {\n          this.openSnackBar(\"reset_success\");\n        }\n      });\n  }\n\n  confirmResetPassword(rowData) {\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      maxWidth: \"96vw\",\n      //height: \"250px\",\n      data: {\n        body: {\n          title: \"manage_admin.reset_password\",\n          text: \"manage_admin.reset_password_confirm_message\",\n        },\n      },\n      \n      disableClose: true,\n    });\n    confirm.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.resetPassword(rowData);\n      }\n    });\n  }\n\n  openSnackBar(message: string) {\n    this.snackbar.openSnackBar(\"manage_admin.\" + message, \"top\", \"center\", true);\n  }\n\n  doSubscriptionFormSelector(event, userData) {\n    this.activeUser = this.store$\n      .pipe(select(ManageAdminStoreSelectors.selectActiveAdmins))\n      .subscribe((data) => {\n        if (data >= 1) {\n          this.snackbar.openSnackBar(\"error_message.err_already_enabled_spa\", \"top\", \"center\", true);\n        } else {\n          this.openActiveInActiveDialogs(event, \"ACTIVE\", userData);\n        }\n      });\n    this.activeUser.unsubscribe();\n  }\n\n  openActiveInActiveDialogs(event, mode, data) {\n    const dialogRef = this.dialog.open(InactiveActiveComponent, {\n      width: \"auto\",\n      maxWidth: \"96vw\",\n      data: { userData: data, mode: mode },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      event.checked = result;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.activeUser) {\n      this.activeUser.unsubscribe();\n    }\n    if (this.adminUsersSub) this.adminUsersSub.unsubscribe();\n  }\n  onSortChange(event) {\n    let sort = {\n      active: event.active,\n      direction: event.direction\n    }\n    this.sortChange.emit(JSON.stringify(sort));\n  }\n}\n","<div class=\"table-responsive text-nowrap head-border\" style=\"margin-bottom: 20px\">\n    <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [data]=\"adminUserData\" [columns]=\"columns\" [tableSort]=\"true\">\n        <ng-template lsWidgetName=\"actionsHeading\" let-row>\n            <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"openAddAdminDialog()\">\n            <mat-icon>add</mat-icon>\n            {{ (\"buttons.btn_add_admin\"  | translate )+ ((role === \"SA\")?\" (DEFAULT) \":\"\")}}\n          </button>\n        </ng-template>\n        <ng-template *ngIf=\"role === 'SA'\" lsWidgetName=\"adminNameHeading\" let-row>\n            Administrator\n        </ng-template>\n        <ng-template lsWidgetName=\"active\" let-row>\n            <mat-slide-toggle [checked]=\"row?.isActive\" (change)=\"toggleSwitch(row, $event)\"></mat-slide-toggle>\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-row>\n            {{row?.email || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"adminName\" let-row>\n            <span [matTooltip]=\"row.adminName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.adminName.length < 40\">\n            {{row.adminName}}\n          </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"phoneNo\" let-row>\n            {{row?.phoneNo || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"actions\" let-row>\n            <button mat-mini-fab color=\"primary\" (click)=\"openEditAdminDialog(row)\" class=\"btn-boxed btn-no-shadow me-4 edit-btn\"\n                    [disabled]=\"!row['isActive'] && source === 'SPA'\">\n        <mat-icon class=\"edit-icon-size\">edit</mat-icon>\n      </button>\n\n            <button type=\"button\" [disabled]=\"!row['isActive']\" color=\"primary\" mat-flat-button class=\"me-3\" [ngClass]=\"(!row['isActive'])?'':'cursor-pointer'\" (click)=\"confirmResetPassword(row)\">\n        <mat-icon>refresh</mat-icon\n        >{{ \"buttons.btn_reset_password\" | translate }}\n      </button>\n        </ng-template>\n    </ls-table>\n</div>\n","import { HttpClient } from \"@angular/common/http\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\n// import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-hospital\",\n  templateUrl: \"./about.component.html\",\n  styleUrls: [\"./about.component.scss\"],\n})\nexport class AboutComponent implements OnInit {\n  uiVersion: string = environment.version.toUpperCase();\n  ep4Version: string;\n  ep3Version: string;\n  constructor(\n    // private dialogRef: MatDialogRef<AboutComponent>,\n    // @Inject(MAT_DIALOG_DATA) public data: any,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    let apiURL = `${environment.dataApiUrl}info/version`;\n    return this.http\n      .get<{\n        data: {\n          EP3: string;\n          EP4: string;\n        }\n      }>(apiURL).subscribe(resp => {\n        const versions = resp?.data;\n        this.ep3Version = versions?.EP3?.toUpperCase();\n        this.ep4Version = versions?.EP4?.toUpperCase();\n      });\n  }\n}\n","<mat-card class=\"dialog-header\">\n    <div class=\"assign-header\">\n        <h1 mat-dialog-title>\n            {{'profile-module.about' | translate}}\n        </h1>\n    </div>\n    <button mat-button mat-dialog-close>\n        <mat-icon>close</mat-icon>\n    </button>\n</mat-card>\n<mat-dialog-content class=\"mat-dialog-popup about-group-dialog\">\n    <div class=\"about-group-content pt-5 px-3\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\"></div>\n            <div class=\"col-sm-5\"><div class=\"brand-logo mb-5 text-center text-md-start\"><img  src=\"assets/icons/moniter-portal.png\" alt=\"moniter-portal\" /></div></div>\n            <div class=\"col-sm-4\"><div class=\"brand-logo mb-5 text-center text-md-start\"><img  src=\"assets/icons/server-software.png\" alt=\"software-server\" /></div></div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Product</div>\n            <div class=\"col-sm-5 pb-2\">UbiqVue™ Active Monitoring Portal</div>\n            <div class=\"col-sm-4 pb-2\">UbiqVue™ Central Server Software</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Model #</div>\n            <div class=\"col-sm-5 pb-2\">UA 2550-C</div>\n            <div class=\"col-sm-4 pb-2\">UA2550-S</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Version</div>\n            <div class=\"col-sm-5 pb-2\">{{uiVersion}}</div>\n            <div class=\"col-sm-4 pb-2\">{{ep4Version}}</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Release date</div>\n            <div class=\"col-sm-5 pb-2\">-</div>\n            <div class=\"col-sm-4 pb-2\">-</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Unique device identifier</div>\n            <div class=\"col-sm-5 pb-2 text-break\">B353UA2550C1/$$7{{uiVersion}}</div>\n            <div class=\"col-sm-4 pb-2 text-break\" *ngIf=\"ep4Version\">B353UA2550S1/$$7{{ep4Version}}</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Medical device class</div>\n            <div class=\"col-sm-5 pb-2\">EU MDD 93/42/EEC, Class IIb <br/> <br/> FDA Class II</div>\n            <div class=\"col-sm-4 pb-2\">EU MDD 93/42/EEC, Class IIb <br/>  <br/>FDA Class II</div>\n        </div>\n        <div class=\"border-top mt-2 pt-3\">\n        <div class=\"row\">\n            <div class=\"col-5 col-sm-3\">\n                <div class=\"title-head pb-2\">Manufactured by</div>\n                <div class=\"group-blocker\">\n                    <figure class=\"mb-2\">\n                        <img  src=\"assets/icons/icons-group.svg\" alt=\"icons-group\" style=\"max-width: 42px;\" />\n                    </figure>\n                </div>\n            </div>\n            <div class=\"col-7 col-sm-9\">\n                <div class=\"d-flex\">\n                    <div class=\"group-content\">\n                        <p class=\"mb-1\">\n                            LifeSignals, Inc.<br/>\n                            426 S Hillview Drive, <br />\n                            Milpitas, CA 95035, USA <br />\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-5 col-sm-3\">\n                <div class=\"title-head pb-3\">Contact</div>\n                <div class=\"group-blocker\"><img src=\"assets/icons/ce-logo.png\" alt=\"ce-logo\" /></div>\n            </div>\n            <div class=\"col-7 col-sm-9\">\n                <a href=\"mailto:info@lifesignals.com\">info@lifesignals.com</a>, <a href=\"https://www.lifesignals.com\">www.lifesignals.com</a>\n            </div>\n        </div>\n    </div>\n    </div>\n</mat-dialog-content>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: \"app-hospital\",\n  templateUrl: \"./hospital.component.html\",\n  styleUrls: [\"./hospital.component.scss\"],\n})\nexport class HospitalComponent implements OnInit {\n  mode: string;\n  constructor(\n    private dialogRef: MatDialogRef<HospitalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    \n  }\n\n  \n}\n","<mat-card class=\"dialog-header\">\n    <div class=\"assign-header\">\n        <h1 mat-dialog-title>\n            {{'profile-module.select_hospital' | translate}}\n        </h1>\n    </div>\n    <!--<button mat-button mat-dialog-close>\n        <mat-icon>close</mat-icon>\n    </button>-->\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup hospital-group-dialog\">\n    <div class=\"hospital-group-content\">\n        <form>\n            <div class=\"row align-items-center\">\n                <div class=\"col-sm-6\">\n                    <h2>\n                        {{'profile-module.select_the_clinical_facility' | translate}}\n                    </h2>\n                </div>\n                <div class=\"col-sm-6\">\n                    <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter\">\n                        <mat-label> {{'profile-module.select_a_clinical_facility' | translate}}</mat-label>\n                        <mat-select class=\"search-filter-select\">\n                            <mat-option value=\"option1\"> Apollo INR</mat-option>\n                            <mat-option value=\"option2\">Forties Hospital\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n\n        </form>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\n        {{'profile-module.button.cancel' | translate}}\n    </button>\n    <button mat-flat-button mat-dialog-close color=\"primary\" class=\"fill-btn\">\n        {{'profile-module.button.done' | translate}}\n    </button>\n</mat-dialog-actions>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { User } from \"../../../interfaces/user.interface\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  ManageAdminStoreActions,\n  ManageAdminStoreState,\n} from \"../../store/manage-admin\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-inactive-active\",\n  templateUrl: \"./inactive-active.component.html\",\n  styleUrls: [\"./inactive-active.component.scss\"],\n})\nexport class InactiveActiveComponent implements OnInit {\n  userData: User;\n  mode: string;\n  constructor(\n    private dialogRef: MatDialogRef<InactiveActiveComponent>,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    this.userData = this.data.userData;\n    this.mode = this.data.mode;\n    console.log(this.userData);\n  }\n\n  onCancel() {\n    if (this.mode === \"INACTIVE\") {\n      this.dialogRef.close(true);\n    } else {\n      this.dialogRef.close(false);\n    }\n  }\n\n  onConfirm() {\n    if (this.mode === \"INACTIVE\") {\n      const url = environment.dataApiUrl + 'users/' + this.userData.id + '/disable';\n      this.store$.dispatch(\n        new ManageAdminStoreActions.InactiveManageAdminAction(\n          url,\n          this.userData.id\n        )\n      );\n      this.dialogRef.close(false);\n    } else {\n      const url = environment.dataApiUrl + 'users/' + this.userData.id + '/enable';\n      this.store$.dispatch(\n        new ManageAdminStoreActions.ActiveManageAdminAction(\n          url,\n          this.userData.id\n        )\n      );\n      this.dialogRef.close(true);\n    }\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    <!--{{ \"shared_label.active_inactive.label_are_you_sure\" | translate }}-->\n    {{(mode === 'INACTIVE' ? (\"shared_label.active_inactive.decativate\" | translate) : \"shared_label.active_inactive.activate\" | translate) +\" \"+(\"shared_label.active_inactive.administrator\" | translate)}}\n  </h1>\n  <button class=\"me-2\"  mat-button mat-dialog-close (click)=\"onCancel()\" *ngIf=\"userData?.roles?.indexOf('SPA') === -1\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <div class=\"my-4\">\n    <label>\n      <!--Are you sure you want to make this Admin {{ mode }}?-->\n      <!--                All the Admins created by them will also become INACTIVE.-->\n      <p>{{\"shared_label.active_inactive.select_confirm\"|translate}}</p>\n      {{\"shared_label.active_inactive.note\"|translate}} <i>{{\"shared_label.active_inactive.message\"|translate}} {{mode === 'INACTIVE' ? (\"shared_label.active_inactive.deactivated\"|translate) :(\"shared_label.active_inactive.activated\"|translate)}}</i>\n    </label>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions align=\"end\">\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"warn\" (click)=\"onCancel()\">\n    Cancel\n  </button>\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"primary\" (click)=\"onConfirm()\">\n    Confirm\n  </button>\n</div>\n","import { Component, OnInit, DoCheck, OnDestroy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BackendApiService } from \"../../services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { HospitalComponent } from \"../dialogs/hospital/hospital.component\";\nimport { AboutComponent } from \"../dialogs/about/about.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.scss\", \"../../../assets/css/style.scss\"],\n})\nexport class HeaderComponent implements OnInit, DoCheck,OnDestroy {\n  logoutResponse: any;\n  role: number;\n  user: string = '';\n  userRoles = {\n    GC: false,\n    SC: false,\n    PHY: false,\n    CFA: false,\n    CFAC: false,\n    SPA: false,\n    SPAC: false,\n    SA: false\n  };\n  logo: string;\n  defaultLogo:string;\n  LogoSubscription: any;\n\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    public backendApiService: BackendApiService,\n    private authService: AuthenticationService\n  ) {\n    this.defaultLogo = 'assets/images/' + (environment.customization.logo || 'logo.svg');\n  }\n  ngOnDestroy(): void {\n    this.LogoSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.mapUserRoles();\n    this.LogoSubscription= this.authService.latestLogo$.subscribe((data)=>{\n      this.logo = ((sessionStorage.getItem('facility-logo') == null ||sessionStorage.getItem('facility-logo') == '') ? this.defaultLogo: sessionStorage.getItem('facility-logo'));\n    });\n  }\n \n  ngDoCheck(): void {\n    this.user = ((sessionStorage.getItem('first_name') !== null) ? sessionStorage.getItem('first_name'): this.authService.getLoggedUser()?.given_name);\n  }\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n\n  logout() {\n    sessionStorage.removeItem(\"token_id\");\n    sessionStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"user_level\");\n    sessionStorage.removeItem(\"patchesInDashboard\");\n    sessionStorage.removeItem(\"gridView\");\n    this.authService.logout();\n  }\n\n  mapUserRoles() {\n    const roles = this.authService.getRoles();\n    for (let role in this.userRoles) {\n      this.userRoles[role] = roles.includes(role);\n    }\n  }\n\n  // /**This function is used to open dialog */\n  openHospialModel(): void {\n    this.dialog.open(HospitalComponent, {\n      maxWidth: \"90vw\",\n      width: \"500px\",\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    })\n  }\n\n  // /**This About is used to open dialog */\n  openAboutModel(): void {\n    this.dialog.open(AboutComponent, {\n      maxWidth: \"90vw\",\n      width: \"890px\",\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    })\n  }\n}\n","<mat-toolbar class=\"mat-navbar navbar position-sticky top-0 \">\n    <div class=\"logoBar\">\n        <a><img [src]=\"logo\" alt=\"logo\" class=\"logo-default\" /></a>\n    </div>\n    <div class=\"select-tabs mx-auto d-none d-lg-block\">\n        <app-navigation></app-navigation>\n    </div>\n    <div class=\"user-info\">\n        <div class=\"user\">\n            {{ user }}\n        </div>\n        <div class=\"role\" *ngIf=\"userRoles.SA || userRoles.SPA || userRoles.SPAC\">\n            {{ ('profile-module.roles.' + ((userRoles.SPA || userRoles.SPAC) ? 'SPA' : 'SA')) | translate }}\n        </div>\n    </div>\n    <div class=\"d-flex align-items-center align-items-lg-center d-lg-block\">\n        <div class=\"profileBar\" [matMenuTriggerFor]=\"belowMenu\"\n            [ngClass]=\"(userRoles.SA || userRoles.SPA || userRoles.SPAC)?'profile-role':''\">\n            <div class=\"user-icon\">\n                <div>\n                    <mat-icon>person</mat-icon>\n                </div>\n            </div>\n\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.GC\">\n                <div class=\"user-information gc-icon\" [matTooltip]=\"'profile-module.roles.GC' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"before\">\n                    <mat-icon>add</mat-icon>\n                </div>\n            </div>\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.SC\">\n                <div class=\"user-information\" [matTooltip]=\"'profile-module.roles.SC' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"before\">\n                    S<sub>+</sub></div>\n            </div>\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.PHY\">\n                <div class=\"user-information\" [matTooltip]=\"'profile-module.roles.PHY' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"below\">\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/stethoscope.svg\" />\n                </div>\n            </div>\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.CFA || userRoles.CFAC\">\n                <div class=\"user-information\" [matTooltip]=\"'profile-module.roles.CFA' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"below\">\n                    <mat-icon>settings</mat-icon>\n                </div>\n            </div>\n\n\n        </div>\n        <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\" class=\"setting-card-menu profile-card-menu\">\n            <button mat-menu-item (click)=\"navigateUrl('/profile')\">\n                <mat-icon>perm_identity</mat-icon> {{'profile-module.my_profile' | translate}}\n            </button>\n            <!-- <button mat-menu-item (click)=\"openHospialModel()\" *ngIf=\"user_role !== 'SPA' && user_role !== 'SA'\">\n                            <mat-icon><img class=\"align-top\"  src=\"assets/icons/hospital-icon.svg\" alt=\"hospital-icon\" /></mat-icon> {{'profile-module.clinical_facility' | translate}}\n                        </button> -->\n            <button mat-menu-item (click)=\"openAboutModel()\">\n                <mat-icon>error_outline</mat-icon> {{'profile-module.about' | translate}}\n            </button>\n            <button mat-menu-item>\n                <a href=\"https://lifesignals.zendesk.com/hc/en-us\" target=\"_blank\"\n                    class=\"d-block\"><mat-icon>help_outline</mat-icon>\n                    {{'profile-module.help' | translate}}</a>\n            </button>\n            <button mat-menu-item (click)=\"logout()\">\n                <mat-icon>power_settings_new</mat-icon> {{'profile-module.logout' | translate}}\n            </button>\n        </mat-menu>\n        <div class=\"ms-2 d-block d-lg-none\">\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <mat-icon class=\"justify-content-center\">menu</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"mobile-menu d-block d-lg-none\">\n                <div class=\"select-tabs\">\n                    <app-navigation></app-navigation>\n                </div>\n            </mat-menu>\n        </div>\n    </div>\n\n</mat-toolbar>","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport class LSvalidators {\r\n    static charsOnly(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[a-zA-Z ]+$/;\r\n        if (control.value !== null && control.value !== undefined && !patternToMatch.test(control.value)) {\r\n            return { 'mustCharsOnly': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static numericsOnly(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[0-9]+$/;\r\n        if (control.value !== null && control.value !== undefined && control.value !== \"\" && !patternToMatch.test(control.value)) {\r\n            return { 'mustNumbersOnly': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validValueForWeightAndHeight(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[0-9.]+$/;\r\n        if (control?.value && !patternToMatch.test(control.value)) {\r\n            return { 'invalidWeightAndHeightValue': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static biosensorPattern(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[a-zA-Z]{1}[a-zA-Z0-9]*$/;\r\n        if (control.value !== null &&  control.value !== undefined  && control.value.length !== 0   && !patternToMatch.test(control.value)) {\r\n            return { 'biosensorPattern': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validatePatientId(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[a-zA-Z0-9]*$/;\r\n        if (control.value !== undefined && !patternToMatch.test(control.value)) {\r\n            return { 'validatePatientId': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validatePatientName(control: AbstractControl): { [key: string]: boolean } | null { \r\n        let patternToMatch = /^[a-zA-Z][a-zA-Z. ]*$/;\r\n        if (control.value !== null && control.value !== undefined && control.value !== \"\" && !patternToMatch.test(control.value)) {\r\n            return { 'mustCharsOnly': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validatePatientNameMinMaxLength(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined  && control.value !== \"\" && (control.value.length > 25)) {\r\n            return { 'invalidRange': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxHeightCM(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 300 || control.value < 80)) {\r\n            return { 'invalidHeightCM': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxHeightINCH(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 119 || control.value < 31.5)) {\r\n            return { 'invalidHeightINCH': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxWeightKG(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 250 || control.value < 20)) {\r\n            return { 'invalidWeightKG': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxWeightPOUND(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 552 || control.value < 44)) {\r\n            return { 'invalidWeightPOUND': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static max30days(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && control.value !== \"\" && control.value > 30) {\r\n            return { 'max30days': true };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-matselect-withsearch',\n  templateUrl: './matselect-withsearch.component.html',\n  styleUrls: ['./matselect-withsearch.component.scss']\n})\nexport class MatselectWithsearchComponent implements OnInit {\n\n  constructor() { }\n  @Input() items;\n  @Input() key;\n  @Input() value;\n  @Input() selected;\n  @Input() disabled;\n  @Input() placeholder;\n  @Input() backendSearch:boolean = false;\n  @Output() valueUpdated = new EventEmitter<string>();\n  @Output() reload = new EventEmitter<string>();\n  searchText;\n\n  ngOnInit(): void {\n  }\n  filteredResults(items, key, searchTxt) {\n    if(!items || !items.length) return items;\n    if(!searchTxt || !searchTxt.length) return items;\n      return items.filter(item => {\n        return item[key].toString().toLowerCase().indexOf(searchTxt.toLowerCase()) > -1\n      });\n  }\n  reloadItems(searchText) {\n    this.reload.emit(searchText);\n  }\n  clearFilter() {\n    this.searchText = '';\n    this.reload.emit('')\n  }\n  updated() {\n    this.valueUpdated.emit(this.selected);\n  }\n\n}\n","<mat-select [placeholder]=\"placeholder ? (placeholder | translate) : 'Select'\" class=\"search-select whiteselect selectfilter\" [(ngModel)]=\"selected\" (ngModelChange)=\"updated()\"\n             [disabled]=\"disabled\" (opened)=\"clearFilter()\">\n    <div class=\"searchbar-top\" *ngIf=\"!backendSearch\"><input matInput placeholder=\"search\" [(ngModel)]=\"searchText\" class=\"search-option\" autocomplete=\"off\"></div>\n    <div class=\"searchbar-top\" *ngIf=\"backendSearch\"><input matInput placeholder=\"search\" [(ngModel)]=\"searchText\" (keyup)=\"reloadItems(searchText)\" class=\"search-option\" autocomplete=\"off\"></div>\n    <mat-option disabled *ngIf=\"backendSearch? !items?.length :!filteredResults(items, key, searchText)?.length\">{{backendSearch && !searchText ? (\"profile-module.search_users\" | translate) : \"profile-module.no_results\" | translate}}</mat-option>\n    <mat-option *ngFor=\"let item of backendSearch? items : filteredResults(items, key, searchText)\" [value]=\"value ? item[value]: item\">\n        {{ item[key] }}\n    </mat-option>\n</mat-select>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"@services/authentication.service\";\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  \n  roles;\n  isDisable = false;\n  \n  constructor(\n    private authService : AuthenticationService,\n    public router : Router) { }\n    \n  ngOnInit(){\n    this.roles = this.authService.getRoles();    \n    if (this.roles.indexOf(\"CFA\") > -1) {\n      this.isDisable = true;      \n    }\n  }\n\n  getRole(role) {\n    return this.authService.getRoles().indexOf(role) > -1;\n  }\n\n  getRoleToDisplay() {\n    return this.authService.getRoles();\n  }\n}\n","<span class=\"menu-items\" *ngIf=\"getRole('SA')\">\r\n    <a routerLinkActive=\"active-link\" routerLink=\"/super-admin\">Service Provider Listing</a>\r\n  </span>\r\n  <span *ngIf=\"getRole('SPA') || getRole('SPAC')\">\r\n    <span class=\"menu-items\">\r\n      <a routerLinkActive=\"active-link\" routerLink=\"/service-provider-admin/user-management\">User Management</a>\r\n    </span>\r\n    <span class=\"menu-items\">\r\n      <a routerLinkActive=\"active-link\" routerLink=\"/service-provider-admin/clinical-facility-management\">Clinical\r\n        Facility Management</a>\r\n    </span>\r\n  </span>\r\n  <span *ngIf=\"\r\n        getRole('CFA') ||\r\n        getRole('CFAC') ||\r\n        getRole('SC') ||\r\n        getRole('GC') ||\r\n        getRole('PHY')\r\n      \">\r\n    <span class=\"menu-items\">\r\n      <a routerLink=\"/summary\" [ngClass]=\"(router.url.includes('/summary')) ? 'active-link' : ''\">Home</a>\r\n    </span>\r\n    <span class=\"menu-items\">\r\n      <a [class.disabled]=\"isDisable\" routerLink=\"/dashboard\" [ngClass]=\"(router.url.includes('/dashboard')) ? 'active-link' : ''\"\r\n      [matMenuTriggerFor]=\"reportsMenu\" >My Reports</a>\r\n    </span>\r\n    <span class=\"menu-items\">\r\n      <a routerLink=\"/settings\" [ngClass]=\"(router.url.includes('/settings')) ? 'active-link' : ''\">Settings</a>\r\n    </span>\r\n  </span>\r\n\r\n  <mat-menu #reportsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"after\" class=\"reports-card-menu\">\r\n      <button mat-menu-item routerLink=\"/pending-interpretation/pending-interpretation\">\r\n        <img alt=\"icon\" src=\"assets/icons/pending_interp_white.png\"/>\r\n        <span class=\"text\">{{'home_alerts.label_pi' | translate}}</span>\r\n      </button>\r\n\r\n      <button mat-menu-item routerLink=\"/posted-final\">\r\n        <img alt=\"icon\" src=\"assets/icons/posted_final_white.png\"/>\r\n        <span class=\"text\">{{'home_alerts.label_posted_final' | translate}}</span>\r\n      </button>\r\n\r\n      <button mat-menu-item routerLink=\"/patients/active-patients\">\r\n        <img alt=\"icon\" src=\"assets/icons/current_patients_white.png\"/>\r\n        <span class=\"text\">{{'active-patients-module.page-heading' | translate}}</span>\r\n      </button>\r\n  </mat-menu>\r\n\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\nimport { Group } from 'src/app/manage-group/models/manage-groups.model';\nimport { NestedDropdownService } from '../nested-dropdown.service';\n\nexport interface MenuMove{\n  option: any;\n  trigger: MatMenuTrigger;\n  direction: \"ENTER\" | \"LEAVE\";\n  hasChildren: boolean;\n}\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuComponent implements OnInit {\n  @Input() options: Group[];\n  @Input() parent: string;\n  @Input() key: string;\n  @Input() disabled: boolean = false;\n  @Input() displayKey: string;\n  @Input() option: Group;\n  @Output() clickChild: EventEmitter<Group> = new EventEmitter<Group>();\n  @Output() sequence: EventEmitter<MenuMove> = new EventEmitter<MenuMove>();\n  @ViewChild(\"subchildren\", { static: false }) subchildren: MatMenu;\n  constructor(public readonly service: NestedDropdownService) { }\n\n  ngOnInit(): void {\n    console.log();\n  }\n\n  onClickChild(item: Group) {\n    this.clickChild.emit(item);\n  }\n\n  mouseMove(trigger: MatMenuTrigger, option: Group, direction: \"ENTER\" | \"LEAVE\", hasChildren: boolean) {\n    this.sequence.emit({ option, trigger, direction, hasChildren });\n  }\n\n  onSequence(event: MenuMove){\n    this.sequence.emit(event);\n  }\n\n}\n","<button [disabled]=\"disabled\" *ngIf=\"!service?.getChildren(option[key], options).length\" mat-menu-item class=\"nested-menu-item\"\n    (click)=\"onClickChild(option)\" (mouseenter)=\"mouseMove(undefined, option, 'ENTER', false)\" (mouseleave)=\"mouseMove(undefined, option, 'LEAVE', false)\">\n    {{ option[displayKey] }}\n</button>\n<button [disabled]=\"disabled\" *ngIf=\"service?.getChildren(option[key], options).length\" mat-menu-item class=\"nested-menu-item\"\n    [matMenuTriggerFor]=\"subchildren\" #subTrigger=\"matMenuTrigger\" (mouseenter)=\"mouseMove(subTrigger, option, 'ENTER', true)\" (mouseleave)=\"mouseMove(subTrigger, option, 'LEAVE', true)\"\n    (click)=\"onClickChild(option)\">\n    {{ option[displayKey] }}\n</button>\n<mat-menu #subchildren=\"matMenu\">\n    <ng-container *ngFor=\"let child of service?.getChildren(option[key], options)\">\n        <app-menu (sequence)=\"onSequence($event)\" [displayKey]=\"displayKey\" [options]=\"options\" [option]=\"child\" [key]=\"key\" [parent]=\"option[key]\"\n            (clickChild)=\"onClickChild($event)\"></app-menu>\n    </ng-container>\n</mat-menu>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\nimport { merge, Subject } from 'rxjs';\nimport { Group } from 'src/app/manage-group/models/manage-groups.model';\nimport { MenuMove } from './menu/menu.component';\nimport { NestedDropdownService } from './nested-dropdown.service';\n\n@Component({\n  selector: 'app-nested-dropdown',\n  templateUrl: './nested-dropdown.component.html',\n  styleUrls: ['./nested-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NestedDropdownComponent implements OnInit, OnChanges {\n  @Input() label: string;\n  @Input() customLabel: boolean;\n  @Input() selectedValue: string = null;\n  selectedItem: any = {};\n  @Input() displayKey: string = \"name\";\n  @Input() disabled: boolean = false;\n  @Input() key: string = \"groupId\";\n  @Input() showSelect: boolean = false;\n  @Output() selected: EventEmitter<string> = new EventEmitter<string>();\n  @Input() options: Group[] = [];\n  @Input() assignGroup: Boolean = false;\n  @Input() noSelection: Boolean = false;\n  @ViewChild(\"children\", { static: false }) children: MatMenu;\n  @ViewChild(\"subchildren\", { static: false }) subchildren: MatMenu;\n  @ViewChild(\"childrentrigger\", { static: false }) childrentrigger: MatMenuTrigger;\n  sequence: Subject<MenuMove> = new Subject<MenuMove>();\n  selectedValueSubject = new Subject<string>();\n  optionsSubject = new Subject<Group[]>();\n  parentGroup;\n  rootGroupBuffer = [];\n  constructor(public readonly service: NestedDropdownService) {\n    merge(\n      this.selectedValueSubject.asObservable(),\n      this.optionsSubject.asObservable()\n    )\n      .subscribe(() => {\n        const value = this.selectedValue;\n        const options = this.options;\n          this.options?.forEach(group => {\n              if (group.parent !== 'ROOT' && !(this.options.find(grp => grp.groupId === group.parent))) {\n                  group.parent = 'ROOT';\n              }\n          });\n        if (value && options?.length) {\n          this.assignSelection(value);\n        }\n        if (!value) {\n          this.selectedItem = {};\n        }\n      });\n  }\n\n  buffer: any;\n  ngOnInit(): void {\n    this.sequence\n      .pipe()\n      .subscribe((res: MenuMove) => {\n        let groups = this.rootGroupBuffer.filter(item => item?.option?.parent === res.option?.parent);\n        groups.forEach(group => {\n            if(group?.trigger) group?.trigger.closeMenu();\n        });\n        if (res?.option?.parent === this.parentGroup?.option?.parent) {\n          if (this.parentGroup?.trigger) this.parentGroup?.trigger?.closeMenu();\n        }\n        if (res?.hasChildren) {\n          if (res?.trigger) res.trigger.openMenu();\n        } else if (res?.option?.parent === this.buffer?.option?.parent) {\n          if (this.buffer?.hasChildren) this.buffer?.trigger.closeMenu();\n        } else if (res?.hasChildren) {\n          if (res?.trigger) res?.trigger?.openMenu();\n        }\n        else if (!res.option?.Children?.includes(this.buffer?.option[this.key]) && !this.buffer?.option.parent === res.option[this.key]) {\n          if (this.buffer?.trigger)\n            this.buffer.trigger.closeMenu();\n        }\n        if (res?.option?.parent === this.buffer?.option?.parent) {\n          if (this.buffer?.hasChildren) this.buffer?.trigger.closeMenu();\n        }\n        this.buffer = res;\n        if (res?.hasChildren) {\n          this.parentGroup = res;\n          this.rootGroupBuffer.push(res);\n        }\n      });\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    // if (change && (change?.options || change?.selectedValue)) {\n    //   this.selectedValueSubject.next(change?.selectedValue?.currentValue);\n    // }\n    if (change) {\n      if (change.options) {\n        this.optionsSubject.next(change.options.currentValue);\n      }\n      if (change.selectedValue) {\n        this.selectedValueSubject.next(change.selectedValue.currentValue);\n      }\n    }\n  }\n\n  assignSelection(value) {\n    this.selectedItem = this.options.find(o => o[this.key] === value);\n  }\n\n  onMenuOpened(){\n    this.buffer = undefined;\n  }\n\n  onClickedOption(option) {\n    this.selectedValue = option[this.key];\n    this.onSelectItem();\n    this.childrentrigger.closeMenu();\n    this.selected.emit(this.selectedValue);\n  }\n\n  onSelectItem() {\n    this.selectedItem = this.options.find(o => o[this.key] === this.selectedValue);\n  }\n\n  onSequence(event: MenuMove) {\n    if (event?.option[this.key] !== this.buffer?.option[this.key])\n      this.sequence.next(event);\n  }\n}\n","\n<label class=\"toplabel d-block pb-0 pb-md-1 ps-0 ps-lg-2 pt-2 pt-sm-0\">{{label | titlecase}}</label>\n<div #childrentrigger=\"matMenuTrigger\" (menuOpened)=\"onMenuOpened()\" [matMenuTriggerFor]=\"children\" *ngIf=\"!disabled\"\n  class=\"w100 nested-select d-flex flex-row align-items-center justify-content-between\">\n  <div class=\"w100 d-flex menu-column text-truncate flex-column align-items-start\">\n    <mat-label [class.normal-label]=\"(selectedItem)?!selectedItem[displayKey]:'true'\">{{label | titlecase}}</mat-label>\n    <span class=\"select-value\">{{selectedItem?.[displayKey] || (assignGroup ? null : ( noSelection ? ('active-patients-module.form_label.none' | translate) :(selectedValue === 'ROOT' ? 'Unassigned': (customLabel ? ('dashboard-module.custom_label' | translate) : 'active-patients-module.form_label.all' |translate))))}}</span>\n  </div>\n  <mat-icon matSuffix>expand_more</mat-icon>\n  <mat-menu #children=\"matMenu\" class=\"nested-menu\">\n    <button  mat-menu-item *ngIf=\"showSelect\"\n      class=\"nested-menu-item\" (click)=\"onClickedOption({})\"\n      (mouseenter)=\"onSequence({option: {}, trigger: undefined, direction: 'ENTER', hasChildren: false})\"\n      (mouseleave)=\"onSequence({option: {}, trigger: undefined, direction: 'LEAVE', hasChildren: false})\">\n      {{ assignGroup ? ('active-patients-module.form_label.none' | translate) : ('active-patients-module.form_label.all' |translate)}}\n    </button>\n<!--    Unassigned Group Filter - Commenting it for now For functionality flow change-->\n\n    <button  mat-menu-item *ngIf=\"!assignGroup && !noSelection\"\n             class=\"nested-menu-item\" (click)=\"onClickedOption({groupId: 'ROOT', name: 'Unassigned'})\"\n             (mouseenter)=\"onSequence({option: {groupId: 'ROOT', name: 'Unassigned'}, trigger: undefined, direction: 'ENTER', hasChildren: false})\"\n             (mouseleave)=\"onSequence({option: {groupId: 'ROOT', name: 'Unassigned'}, trigger: undefined, direction: 'LEAVE', hasChildren: false})\">\n      {{\"parameter-alerts-module.unassigned\" |translate}}\n    </button>\n    <span *ngIf=\"options?.length\">\n    <ng-container *ngFor=\"let option of service?.getChildren('ROOT', options)\">\n      <app-menu [disabled]=\"disabled\" (sequence)=\"onSequence($event)\" [options]=\"options\" [key]=\"key\" [option]=\"option\"\n        [displayKey]=\"displayKey\" (clickChild)=\"onClickedOption($event)\"></app-menu>\n    </ng-container>\n    </span>\n  </mat-menu>\n</div>\n\n<div [class.disabled]=\"disabled\" *ngIf=\"disabled\"\n  class=\"nested-select d-flex flex-row align-items-center justify-content-between\">\n  <div class=\"d-flex menu-column flex-column align-items-start\">\n    <mat-label [class.normal-label]=\"!selectedItem?.[displayKey]\">{{label | titlecase}}</mat-label>\n    <span class=\"select-value\">{{selectedItem?.[displayKey] || (assignGroup ? null : ( noSelection ? ('active-patients-module.form_label.none' | translate) :'active-patients-module.form_label.all' |translate))}}</span>\n  </div>\n  <mat-icon matSuffix>expand_more</mat-icon>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NestedDropdownService {\n  trigger: MatMenuTrigger;\n  constructor() { }\n\n  getChildren(parentId, options) {\n    let groups = options?.filter(o => o.parent === parentId);\n    if(parentId === 'ROOT') {\n      options.forEach(group => {\n        if (group.parent !== 'ROOT' && !(options.find(grp => grp.groupId === group.parent))) {\n          groups.push(group);\n        }\n      });\n    }\n    return groups;\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-page-nav-bar\",\n  templateUrl: \"./page-nav-bar.component.html\",\n  styleUrls: [\"./page-nav-bar.component.scss\"],\n})\nexport class PageNavBarComponent {\n  @Input() title: any;\n  @Input() image: any;\n  @Input() url: any;\n\n  constructor(private router: Router) {}\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n}\n","<mat-toolbar class=\"navbar\">\n  <div style=\"margin-left: 10px; cursor: pointer\" (click)=\"navigateUrl(url)\">\n    <mat-icon>arrow_back_ios</mat-icon>\n    <span class=\"title\">{{ title | translate }}</span>\n  </div>\n  <!--    <div>-->\n  <!--        <img alt=\"\" class=\"page-icon\" src='../../../assets/icons/{{image}}'>-->\n  <!--    </div>-->\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss']\n})\nexport class RootComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CFSummary } from \"../../interfaces/query-params.interface\";\r\nimport { PatientAdmittedModalComponent } from \"src/app/active-patients/patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { AdmitPatientModalComponent } from \"src/app/active-patients/admit-patient-modal/admit-patient-modal.component\";\r\nimport { LSTableConfig, TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { ActivePatientManagerService } from \"src/app/active-patients/manager/active-patient-manager.service\";\r\nimport { ActivePatientsService } from \"src/app/active-patients/services/active-patients.service\";\r\n\r\n@Component({\r\n  selector: \"app-setting-card\",\r\n  templateUrl: \"./setting-card.component.html\",\r\n  styleUrls: [\"./setting-card.component.scss\"],\r\n})\r\nexport class SettingCardComponent implements OnInit {\r\n  constructor(private router: Router,\r\n    private dialog: MatDialog, \r\n    private manager: ActivePatientManagerService,\r\n    private service: ActivePatientsService,\r\n    ) {\r\n      // console.log(service);\r\n    }\r\n  @Output() fetchSummary: EventEmitter<any> = new EventEmitter();\r\n  @Input() title: any;\r\n  @Input() image: any;\r\n  @Input() count: any;\r\n  @Input() user: any;\r\n  @Input() timerIcon: any;\r\n  @Input() routerUrl: any;\r\n  @Input() disabled: any;\r\n  @Input() subTitle: any;\r\n  @Input() view: boolean = true;\r\n  @Input() showCount: boolean = true;\r\n  @Input() loading: boolean = false;\r\n  @Input() type: any;\r\n  @Input() register?: boolean;\r\n  selectedTimeParam = null;\r\n  timerList = [\r\n    {\r\n      time: \"Current\",\r\n      value: 0,\r\n    },\r\n    {\r\n      time: \"30 mins\",\r\n      value: 30,\r\n    },\r\n    {\r\n      time: \"1 hour\",\r\n      value: 60,\r\n    },\r\n    {\r\n      time: \"3 hours\",\r\n      value: 3*60,\r\n    },\r\n    {\r\n      time: \"6 hours\",\r\n      value: 6*60,\r\n    },\r\n        // {\r\n    //   time: \"1 Day\",\r\n    //value: 24*60,\r\n    // },\r\n    //    //   time: \"10 Days\",\r\n    //   value: 1000*24*60,\r\n    // }\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    if(this.type === 'parameter')\r\n    this.selectedTimeParam = +window.sessionStorage.getItem(\"parameter-duration\");\r\n    else if (this.type === 'arrhythmia')\r\n      this.selectedTimeParam = +window.sessionStorage.getItem(\"arrhythmia-duration\");\r\n    if (this.selectedTimeParam === undefined) {\r\n      this.selectedTimeParam = 360;\r\n    }\r\n  }\r\n\r\n  navigateUrl(url: string) {\r\n    this.router.navigate([url]).then();\r\n  }\r\n\r\n  // Alert fetch\r\n  changeDuration(event: any, type: string) {\r\n    const param: CFSummary = {};\r\n    switch (type) {\r\n      case \"parameter\":\r\n        param.parameterAlertsFrom = event.value;\r\n        param.arrhythmiaAlertsFrom = window.sessionStorage.getItem(\"arrhythmia-duration\");\r\n        if(param.arrhythmiaAlertsFrom === undefined)\r\n          param.arrhythmiaAlertsFrom = '360';\r\n        this.selectedTimeParam = event.value;\r\n        window.sessionStorage.setItem(\"parameter-duration\", this.selectedTimeParam);\r\n        break;\r\n      case \"arrhythmia\":\r\n        param.arrhythmiaAlertsFrom = event.value;\r\n        param.parameterAlertsFrom = window.sessionStorage.getItem(\"parameter-duration\");\r\n        if(param.parameterAlertsFrom === undefined)\r\n          param.parameterAlertsFrom = '360';\r\n        this.selectedTimeParam = event.value;\r\n        window.sessionStorage.setItem(\"arrhythmia-duration\", this.selectedTimeParam);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.fetchSummary.emit(param);\r\n  }\r\n\r\n  getTimeName(value){\r\n    return this.timerList.find(t => t.value === value)?.time || \"6h\";\r\n  }\r\n\r\n  checkUrl(url : string){\r\n    if(this.title && url && this.view){\r\n      this.router.navigate([url]).then();\r\n    }\r\n  }\r\n\r\n  // For Opening Registration Modal ////////////\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 2,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"first_name\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string ;doctor:string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n    doctor: null\r\n  };\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"first_name\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  admitPatientModal(data?: any) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"1200px\",\r\n      height:\"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  openRegistrationModal(){\r\n    this.admitPatientModal().subscribe(resp => {\r\n      if (resp) {\r\n        this.getActivePatientData();\r\n        this.dialog.open(PatientAdmittedModalComponent, {\r\n          maxWidth: \"96vw\",\r\n          width: \"520px\",\r\n          backdropClass: \"backdropBackground\",\r\n          disableClose: true,\r\n          autoFocus: false,\r\n          data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /////////////////\r\n}\r\n","<div class=\"grid-bg text-center\" [ngClass]=\"disabled ? 'card-disabled' : ''\">\r\n  <div *ngIf=\"timerIcon\" class=\"timer-icon\">\r\n    <div>\r\n      <mat-icon class=\"cursor-pointer\" color=\"warn\" [matMenuTriggerFor]=\"paramMenu\">update</mat-icon>\r\n      <mat-menu #paramMenu=\"matMenu\" xPosition=\"before\" id=\"parameter_alert\" class=\"setting-card-menu summary-timer-menu\">\r\n        <button mat-menu-item *ngFor=\"let time of timerList\" (click)=\"changeDuration({value: time.value}, type)\"\r\n          [value]=\"time.value\">\r\n          {{ time.time }}\r\n        </button>\r\n      </mat-menu>\r\n      <div class=\"selected-timer\">{{ getTimeName(selectedTimeParam) }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"app-card \" (click)=\"checkUrl(routerUrl)\" [class.cursor-pointer]=\"title && routerUrl && view\">\r\n    <div class=\"text-right sixh mb-5 pb-1\"></div>\r\n\r\n    <img alt=\"image\" *ngIf=\"title\" src=\"assets/icons/{{ image }}\" class=\"img-circle\" />\r\n    <div class=\"d-flex flex-column justify-content-center text-center\" *ngIf=\"title\">\r\n      <label class=\"captioning mt-3\" [class.cursor-pointer]=\"title && routerUrl && view\">{{ title | translate }}</label>\r\n      <mat-progress-spinner class=\"mt-3 d-flex align-self-center justify-self-center small-spinner\" color=\"accent\"\r\n        mode=\"indeterminate\" strokeWidth=\"2\" diameter=\"20\" *ngIf=\"loading\">\r\n      </mat-progress-spinner>\r\n      <label  [class.cursor-pointer]=\"title && routerUrl && view\" class=\"caption-two mt-2\" *ngIf=\"showCount && !loading\">{{ count }} {{ subTitle | translate }}</label>\r\n    </div>\r\n\r\n    <!-- Register button in card -->\r\n    <div *ngIf=\"register\">\r\n      <button class=\" remove-default-behaviour registerBtn-in-card d-flex flex-column\" (click)=\"openRegistrationModal()\">\r\n        <span>Register</span>\r\n        <span>new procedure</span>\r\n      </button>\r\n      <img alt=\"image\" src=\"assets/icons/vector-divider-line.png\" class=\"position-absolute start-50 translate-middle-x bottom-0 mb-2\"/>\r\n    </div>\r\n\r\n    <div *ngIf=\"title && routerUrl && view\" class=\"text-right view-insight view-btn\">\r\n      <a class=\"cursor-pointer\">{{ \"home_alerts.label_view\" | translate }}</a>\r\n    </div>\r\n  \r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { FilterPipe } from \"../pipe/filter.pipe\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { DataTableManageAdminComponent } from \"./data-table-manage-admin/data-table-manage-admin.component\";\nimport { DataTableClonedViewComponent } from \"./data-table-cloned-view/data-table-cloned-view.component\";\nimport { SortModule } from \"../core/directives/sort.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { PageNavBarComponent } from \"./page-nav-bar/page-nav-bar.component\";\nimport { SettingCardComponent } from \"./setting-card/setting-card.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { ManageAdminEffects } from \"./store/manage-admin/manage-admin.effects\";\nimport * as fromManageAdminReducer from \"./store/manage-admin/manage-admin.reducer\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { ConfirmDialogComponent } from \"./confirm-dialog/confirm-dialog.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { InactiveActiveComponent } from \"./dialogs/inactive-active/inactive-active.component\";\nimport { HospitalComponent } from \"./dialogs/hospital/hospital.component\";\nimport { AboutComponent } from \"./dialogs/about/about.component\";\nimport { TelInputComponent } from \"./tel-input/tel-input.component\";\nimport { LacMatTelInputModule } from \"lac-mat-tel-input\";\nimport { TranslateModule, TranslatePipe } from \"@ngx-translate/core\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { RootComponent } from './root/root.component';\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { NestedDropdownComponent } from './nested-dropdown/nested-dropdown.component'\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MenuComponent } from './nested-dropdown/menu/menu.component';\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatselectWithsearchComponent } from './matselect-withsearch/matselect-withsearch.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FilterPipe,\n    DataTableManageAdminComponent,\n    DataTableClonedViewComponent,\n    PageNavBarComponent,\n    SettingCardComponent,\n    TelInputComponent,\n    ConfirmDialogComponent,\n    InactiveActiveComponent,\n    HospitalComponent,\n    AboutComponent,\n    NavigationComponent,\n    RootComponent,\n    NestedDropdownComponent,\n    MenuComponent,\n    MatselectWithsearchComponent\n  ],\n    exports: [\n        HeaderComponent,\n        FilterPipe,\n        DataTableManageAdminComponent,\n        DataTableClonedViewComponent,\n        SettingCardComponent,\n        PageNavBarComponent,\n        TelInputComponent,\n        I18nModule,\n        MatSlideToggleModule,\n        NestedDropdownComponent,\n        MenuComponent,\n        MatMenuModule,\n        MatselectWithsearchComponent\n    ],\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    MatDialogModule,\n    SortModule,\n    MatToolbarModule,\n    RouterModule,\n    MatSelectModule,\n    FormsModule,\n    MatIconModule,\n    I18nModule,\n    StoreModule.forFeature(\n      fromManageAdminReducer.manageAdminFeatureKey,\n      fromManageAdminReducer.manageAdminReducer\n    ),\n    EffectsModule.forFeature([ManageAdminEffects]),\n    MatTableModule,\n    MatSortModule,\n    LacMatTelInputModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    LifeSignalsModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatTooltipModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: KeycloakBearerInterceptor,\n      multi: true,\n    },\n    TranslatePipe,\n  ],\n})\nexport class SharedModule { }\n","import * as ManageAdminStoreActions from \"./manage-admin.actions\";\nimport * as ManageAdminStoreSelectors from \"./manage-admin.selector\";\nimport * as ManageAdminStoreState from \"./manage-admin.reducer\";\n\nexport {\n  ManageAdminStoreActions,\n  ManageAdminStoreSelectors,\n  ManageAdminStoreState,\n};\n","import { Action } from \"@ngrx/store\";\nimport { User } from \"../../../interfaces/user.interface\";\n\nexport enum ManageAdminActionTypes {\n  LOAD_MANAGE_ADMIN_ACTION = \"[MANAGEADMIN] Load Manage Admin Request\",\n  LOAD_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Load Manage Admin Success\",\n  LOAD_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Load Manage Admin Failure\",\n  SAVE_MANAGE_ADMIN_ACTION = \"[MANAGEADMIN] Save Manage Admin\",\n  SAVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Save Manage Admin Success\",\n  AFTER_SAVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] After Save Manage Admin Success\",\n  SAVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Save Manage Admin Failure\",\n  AFTER_SAVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] After Save Manage Admin Failure\",\n  UPDATE_MANAGE_ADMIN_ACTION = \"[MANAGEADMIN] Update Manage Admin\",\n  UPDATE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Update Manage Admin Success\",\n  AFTER_UPDATE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] After Update Manage Admin Success\",\n  UPDATE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Update Manage Admin Failure\",\n  AFTER_UPDATE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] After Update Manage Admin Failure\",\n  INACTIVE_MANAGE_ADMIN = \"[MANAGEADMIN] Inactive Manage Admin\",\n  INACTIVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Inactive Manage Admin Success\",\n  INACTIVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Inactive Manage Admin Failure\",\n  ACTIVE_MANAGE_ADMIN = \"[MANAGEADMIN] Active Manage Admin\",\n  ACTIVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Active Manage Admin Success\",\n  ACTIVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Active Manage Admin Failure\",\n}\n\nexport class LoadManageAdminRequestAction implements Action {\n  readonly type = ManageAdminActionTypes.LOAD_MANAGE_ADMIN_ACTION;\n  constructor(public payload: string) {}\n}\n\nexport class LoadManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.LOAD_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: User[]) {}\n}\n\nexport class LoadManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.LOAD_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class SaveManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.SAVE_MANAGE_ADMIN_ACTION;\n  constructor(public payload: User, public endUrl: string) {}\n}\n\nexport class SaveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.SAVE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class SaveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.SAVE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class UpdateManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_ACTION;\n  constructor(public payload: User, public endUrl: string) {}\n}\n\nexport class UpdateManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UpdateManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class InactiveManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class InactiveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class InactiveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class ActiveManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class ActiveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class ActiveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class AfterSaveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterSaveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_FAILURE;\n  constructor() {}\n}\n\nexport class AfterUpdateManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterUpdateManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_FAILURE;\n  constructor() {}\n}\n\nexport type ManageAdminActions =\n  | LoadManageAdminRequestAction\n  | LoadManageAdminSuccessAction\n  | LoadManageAdminFailureAction\n  | SaveManageAdminAction\n  | SaveManageAdminSuccessAction\n  | SaveManageAdminFailureAction\n  | UpdateManageAdminAction\n  | UpdateManageAdminSuccessAction\n  | UpdateManageAdminFailureAction\n  | InactiveManageAdminAction\n  | InactiveManageAdminSuccessAction\n  | InactiveManageAdminFailureAction\n  | ActiveManageAdminAction\n  | ActiveManageAdminSuccessAction\n  | ActiveManageAdminFailureAction\n  | AfterSaveManageAdminSuccessAction\n  | AfterSaveManageAdminFailureAction\n  | AfterUpdateManageAdminSuccessAction\n  | AfterUpdateManageAdminFailureAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ManageAdminService } from \"../../_services/manage-admin.service\";\nimport * as ManageAdminActions from \"./manage-admin.actions\";\nimport { catchError, map, switchMap } from \"rxjs/operators\";\nimport {\n  ActiveManageAdminFailureAction,\n  ActiveManageAdminSuccessAction,\n  InactiveManageAdminFailureAction,\n  InactiveManageAdminSuccessAction,\n  LoadManageAdminFailureAction,\n  LoadManageAdminSuccessAction,\n  SaveManageAdminFailureAction,\n  SaveManageAdminSuccessAction,\n  UpdateManageAdminFailureAction,\n  UpdateManageAdminSuccessAction,\n} from \"./manage-admin.actions\";\nimport { of as observableOf } from \"rxjs\";\n\n@Injectable()\nexport class ManageAdminEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private manageAdminService: ManageAdminService\n  ) {}\n\n  loadAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.LoadManageAdminRequestAction>(\n        ManageAdminActions.ManageAdminActionTypes.LOAD_MANAGE_ADMIN_ACTION\n      ),\n      switchMap((action: ManageAdminActions.LoadManageAdminRequestAction) => {\n        return this.manageAdminService.getAllAdminList(action.payload).pipe(\n          map(\n            (loadAdminRes) =>\n              new LoadManageAdminSuccessAction(loadAdminRes.data)\n          ),\n          catchError((error) =>\n            observableOf(new LoadManageAdminFailureAction(error))\n          )\n        );\n      })\n    );\n  });\n\n  saveAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.SaveManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.SAVE_MANAGE_ADMIN_ACTION\n      ),\n      switchMap((addAdmin: ManageAdminActions.SaveManageAdminAction) => {\n        return this.manageAdminService\n          .addAdmin(addAdmin.endUrl, addAdmin.payload)\n          .pipe(\n            map(\n              (addAdminRes) =>\n                new SaveManageAdminSuccessAction(addAdminRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new SaveManageAdminFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n\n  updateAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.UpdateManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_ACTION\n      ),\n      switchMap((updateAdmin: ManageAdminActions.UpdateManageAdminAction) => {\n        return this.manageAdminService\n          .updateAdmin(updateAdmin.endUrl, updateAdmin.payload)\n          .pipe(\n            map(\n              (updateAdminRes) =>\n                new UpdateManageAdminSuccessAction(updateAdminRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new UpdateManageAdminFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n\n  inActiveAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.InactiveManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN\n      ),\n      switchMap(\n        (inActiveAdmin: ManageAdminActions.InactiveManageAdminAction) => {\n          return this.manageAdminService\n            .activeInactive(inActiveAdmin.endUrl, {})\n            .pipe(\n              map(\n                (inActiveAdminRes) =>\n                  new InactiveManageAdminSuccessAction(inActiveAdmin.id)\n              ),\n              catchError((error) =>\n                observableOf(new InactiveManageAdminFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n\n  activeAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.ActiveManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN\n      ),\n      switchMap((activeAdmin: ManageAdminActions.ActiveManageAdminAction) => {\n        return this.manageAdminService\n          .activeInactive(activeAdmin.endUrl, {})\n          .pipe(\n            map(\n              (activeAdminRes) =>\n                new ActiveManageAdminSuccessAction(activeAdmin.id)\n            ),\n            catchError((error) =>\n              observableOf(new ActiveManageAdminFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n}\n","import { User } from \"../../../interfaces/user.interface\";\nimport {\n  ManageAdminActions,\n  ManageAdminActionTypes,\n} from \"./manage-admin.actions\";\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\nexport interface ManageAdminState {\n  ADMIN_DATA: User[];\n  error: string;\n  save_admin_success: User;\n  save_admin_error: any;\n  userId: string;\n  tableState: string;\n}\n\nconst initialState: ManageAdminState = {\n  ADMIN_DATA: [],\n  error: \"\",\n  save_admin_success: null,\n  save_admin_error: \"\",\n  userId: \"\",\n  tableState: TableState?.DEFAULT\n};\n\nexport const manageAdminFeatureKey = \"manageadmin\";\n\nexport function manageAdminReducer(\n  state: ManageAdminState = initialState,\n  action: ManageAdminActions\n) {\n  switch (action.type) {\n    case ManageAdminActionTypes.LOAD_MANAGE_ADMIN_ACTION:\n      return {\n        ...state,\n        ADMIN_DATA: [],\n        tableState: TableState.LOADING\n      };\n\n    case ManageAdminActionTypes.LOAD_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        ADMIN_DATA: action.payload,\n        tableState: TableState.SUCCESS\n      };\n\n    case ManageAdminActionTypes.LOAD_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        tableState: TableState.FAILURE\n      };\n\n    case ManageAdminActionTypes.SAVE_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        save_admin_success: action.payload,\n        save_admin_error: \"\",\n        ADMIN_DATA: [...state.ADMIN_DATA, action.payload],\n      };\n\n    case ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        save_admin_success: null,\n        save_admin_error: \"\",\n      };\n\n    case ManageAdminActionTypes.SAVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: action.payload,\n      };\n\n    case ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: \"\",\n        save_admin_success: null,\n      };\n\n    case ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_SUCCESS:\n      const updatedAdminData = state.ADMIN_DATA.map((adminData) => {\n        return adminData.id === action.payload.id ? action.payload : adminData;\n      });\n\n      return {\n        ...state,\n        save_admin_error: \"\",\n        error: \"\",\n        save_admin_success: action.payload,\n        ADMIN_DATA: updatedAdminData,\n      };\n\n    case ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        save_admin_success: null,\n        save_admin_error: \"\",\n      };\n\n    case ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: action.payload,\n      };\n    case ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_SUCCESS:\n      const updatedDataForInactive = state.ADMIN_DATA.map((adminData) => {\n        if (adminData.id === action.payload) {\n          adminData.isActive = false;\n        }\n        return adminData;\n      });\n\n      return {\n        ...state,\n        ADMIN_DATA: updatedDataForInactive,\n      };\n\n    case ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: \"\",\n        save_admin_success: null,\n      };\n    case ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_SUCCESS:\n      const updatedDataForActive = state.ADMIN_DATA.map((adminData) => {\n        if (adminData.id === action.payload) {\n          adminData.isActive = true;\n        }\n        return adminData;\n      });\n\n      return {\n        ...state,\n        ADMIN_DATA: updatedDataForActive,\n      };\n    case ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  manageAdminFeatureKey,\n  ManageAdminState,\n} from \"./manage-admin.reducer\";\nimport { User } from \"../../../interfaces/user.interface\";\n\nconst getManageAdminState = createFeatureSelector<ManageAdminState>(\n  manageAdminFeatureKey\n);\nexport const selectAdminList = (state: ManageAdminState) => state.ADMIN_DATA;\n\nexport const selectManageAdminList = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state\n);\n\nexport const selectManageAdminListError = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.error\n);\n\nexport const addManageAdminSuccess = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.save_admin_success\n);\n\nexport const addManageAdminFailure = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.save_admin_error\n);\n\nexport const updateManageAdminSuccess = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.save_admin_success\n);\n\nexport const updateManageAdminFailure = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state.save_admin_error\n);\n\nexport const selectActiveAdmins = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) =>\n    state?.ADMIN_DATA.filter((c) => c.isActive === true).length\n);\n","import { Component, forwardRef, HostListener, Input, OnInit } from \"@angular/core\";\nimport {\n  ControlValueAccessor,\n  FormBuilder,\n  NG_VALUE_ACCESSOR,\n} from \"@angular/forms\";\nimport { noop } from \"lodash\";\n\n@Component({\n  selector: \"app-tel-input\",\n  templateUrl: \"./tel-input.component.html\",\n  styleUrls: [\"./tel-input.component.scss\"],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TelInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TelInputComponent implements OnInit, ControlValueAccessor {\n  /** Value we will call whenever our form is touched */\n  private onTouchedCallback: () => noop;\n\n  /** Function we will call whenever the value changes */\n  private onChangeCallback: (val: any) => void = noop;\n  isDisabled: boolean;\n  preferredCountries = [\"in\", \"us\", \"za\"];\n\n  public form = this.formBuilder.group({\n    value: [],\n  });\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  @HostListener(\"blur\") onBlur() {\n    this.onTouchedCallback();\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges.subscribe((formValue) => {\n      this.onChangeCallback(formValue.value);\n    });\n  }\n\n  writeValue(value: any): void {\n    this.form.get(\"value\").setValue(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    isDisabled ? this.form.disable() : this.form.enable();\n  }\n\n  change() {\n    const value = this.form.get(\"value\").value;\n    this.form.get(\"value\").setValue(value);\n  }\n}\n","<div [formGroup]=\"form\">\n  <mat-form-field class=\"tel-input\" appearance=\"none\">\n    <lac-mat-country-selector\n      matPrefix\n      [selectorFor]=\"input\"\n      [showDialCode]=\"true\"\n      [disableSearch]=\"true\"\n      [preferredCountries]=\"preferredCountries\"\n      searchPlaceholder=\"Search...\"\n    >\n    </lac-mat-country-selector>\n    <lac-mat-tel-input #input formControlName=\"value\" autocomplete=\"off\"> </lac-mat-tel-input>\n  </mat-form-field>\n</div>\n","let preferenceUnit = JSON.parse(sessionStorage.getItem('userPreference'))?.units;\nexport const priorityColorCode: any = {\n  HIGH: \"#FF4C4C\",\n  LOW: \"#FAFF00\",\n  MEDIUM: \"#FAFF00\",\n};\n\n// Alert Settings Priority Dropdwon Options\nexport const alertPriorityOptions: any = [\n  {\n    value: \"HIGH\",\n    label: \"HIGH\",\n  },\n  {\n    value: \"MEDIUM\",\n    label: \"MEDIUM\",\n  },\n  {\n    value: \"LOW\",\n    label: \"LOW\",\n  },\n];\n// Arrhythmia Alert Settings Priority Dropdwon Options\nexport const arrhythmiaAlertPriorityOptions: any = [\n  {\n    value: \"HIGH\",\n    label: \"HIGH\",\n  },\n  {\n    value: \"MEDIUM\",\n    label: \"MEDIUM\",\n  },\n  {\n    value: \"LOW\",\n    label: \"LOW\",\n  },\n  {\n    value: \"INFORMATIONAL\",\n    label: \"INFORMATIONAL\",\n  },\n];\n// Parameter Alert Settings - Row Items\nexport const ArrhythmiaParameterAlertItems: any = [\n  {\n    alerts: \"SINUS BRADYCARDIA\",\n    key: \"SINUS_BRADYCARDIA\",\n    unit: \"bpm\", \n  },\n  {\n    alerts: \"SINUS TACHYCARDIA\",\n    key: \"SINUS_TACHYCARDIA\",\n    unit: \"bpm\",\n  },\n  {\n    alerts: \"VENTRICULAR FLUTTER\",\n    key: \"VENTRICULAR_FLUTTER\",\n  },\n  {\n    alerts: \"VENTRICULAR TACHYCARDIA\",\n    key: \"VENTRICULAR_TACHYCARDIA\",\n  },\n  {\n    alerts: \"VENT RHYTHM\",\n    key: \"IDIOVENTRICULAR_RYTHM\",\n  },\n  {\n    alerts: \"SUPRAVENTRICULAR TACHYCARDIA\",\n    key: \"SUPRAVENTRICULAR_TACHYCARDIA\",\n  },\n  {\n    alerts: \"AFIB FLUTTER\",\n    key: \"AFIB_FLUTTER\",\n  },\n  {\n    alerts: \"JUNCTIONAL TACHYCARDIA\",\n    key: \"JUNCTIONAL_TACHYCARDIA\",\n  },\n  {\n    alerts: \"FIRST DEGREE AV BLOCK\",\n    key: \"FIRST_DEGREE_AV_BLOCK\",\n  },\n  {\n    alerts: \"SECOND DEGREE AV BLOCK TYPE I\",\n    key: \"SECOND_DEGREE_AV_BLOCK_TYPE_I\",\n  },\n  {\n    alerts: \"SECOND DEGREE AV BLOCK TYPE II\",\n    key: \"SECOND_DEGREE_AV_BLOCK_TYPE_II\",\n  },\n  {\n    alerts: \"PAUSE\",\n    key: \"PAUSE\",\n  },\n  {\n    alerts: \"V COUPLET\",\n    key: \"V_COUPLET\",\n  },\n  {\n    alerts: \"V BIGEMINY\",\n    key: \"V_BIGEMINY\",\n  },\n  {\n    alerts: \"V TRIGEMINY\",\n    key: \"V_TRIGEMINY\",\n  },\n  {\n    alerts: \"PVC RATE\",\n    key: \"PVC_RATE\",\n    unit: \"rate/min\",\n  },\n  {\n    alerts: \"PAC RATE\",\n    key: \"PAC_RATE\",\n    unit: \"rate/min\",\n  },\n  {\n    alerts: \"PVC\",\n    key: \"PVC\",\n  },\n  {\n    alerts: \"PAC\",\n    key: \"PAC\",\n  }\n];\n// Parameter Alert Settings - Row Items\nexport const parameterAlertItems: any = [\n  {\n    alerts: \"Heart Rate\",\n    key: \"HR\",\n    unit: \"bpm\",\n  },\n  {\n    alerts: \"Respiration Rate\",\n    key: \"RR\",\n    unit: \"brpm\",\n  },\n  {\n    alerts: \"SpO2\",\n    key: \"SPO2\",\n    unit: \"%\",\n  },\n  {\n    alerts: \"Body Temperature\",\n    key: \"BODYTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"Systolic\",\n    key: \"BPSYS\",\n    unit: \"mmHg\",\n  },\n  {\n    alerts: \"Diastolic\",\n    key: \"BPDIA\",\n    unit: \"mmHg\",\n  },\n  // {\n  //   alerts: \"Mean\",\n  //   key: \"BP\",\n  //   unit: \"mmHg\",\n  // },\n  {\n    alerts: \"Pulse Rate\",\n    key: \"PR\",\n    unit: \"/Min\",\n  },\n  {\n    alerts: \"Skin Temperature\",\n    key: \"SKINTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"Posture\",\n    key: \"POSTURE_ALERT\",\n    unit: '',\n  },\n];\nexport const AlertHistoryItems: any = [\n  {\n    alerts: \"Heart Rate\",\n    key: \"HR\",\n    unit: \"bpm\",\n  },\n  {\n    alerts: \"Respiration Rate\",\n    key: \"RR\",\n    unit: \"brpm\",\n  },\n  {\n    alerts: \"SpO2\",\n    key: \"SPO2\",\n    unit: \"%\",\n  },\n  {\n    alerts: \"Body Temperature\",\n    key: \"BODYTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"Systolic\",\n    key: \"BPSYS\",\n    unit: \"mmHg\",\n  },\n  {\n    alerts: \"Diastolic\",\n    key: \"BPDIA\",\n    unit: \"mmHg\",\n  },\n  {\n    alerts: \"Pulse Rate\",\n    key: \"PR\",\n    unit: \"/Min\",\n  },\n  {\n    alerts: \"Skin Temperature\",\n    key: \"SKINTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"BP\",\n    key: \"BP\",\n    unit: \"%\",\n  },\n  {\n    alerts: \"Posture\",\n    key: \"POSTURE_ALERT\",\n    unit: 'hrs',\n  },\n];\n\nexport const technicalAlertItems: any = [\n\n  {\n    alerts: \"Biosensor Disconnected\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"BIOSENSOR_DISCONNECTED\",\n  },\n\n  {\n    alerts: \"Relay Disconnected\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"RELAY_DISCONNECTED\",\n  },\n\n  {\n    alerts: \"Battery Low\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"LOW_BATTERY\",\n  },\n\n  {\n    alerts: \"Invalid HR\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_HR_ERROR\",\n  },\n  /* {\n    alerts: \"Temperature Calibration Invalid\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"TEMPERATURE_CALIBRATION\",\n  }, */\n\n  {\n    alerts: \"Invalid RR \",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_RR_ERROR\",\n  },\n\n  {\n    alerts: \"Invalid SpO2\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_SPO2_ERROR\",\n  },\n  {\n    alerts: \"Lead Off\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"LEAD_OFF\",\n  },\n  {\n    alerts: \"Body Temp Unavailable\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_BODY_TEMP_ERROR\",\n  },\n  {\n    alerts: \"Replace Biosensor\",\n    unit: \"\",\n    units: \"\",\n    key: \"REPLACE_BIOSENSOR\",\n  },\n  {\n    alerts: \"Onboard Failed\",\n    unit: \"\",\n    units: \"\",\n    key: \"ONBOARD_FAIL_TECH_ALERT_PATIENT_IN_DISCHARGED_STATE\",\n  },\n  {\n    alerts: \"Invalid SPO2/PR\",\n    unit: \"\",\n    units: \"\",\n    key: \"COMPUTE_SPO2_PR_ERROR\",\n  },\n];\n\nexport const priorityAlertItems: any = [\n  {\n    alerts: \"High\",\n    unit: \"Min\",\n    key: \"HIGH\",\n    percentage: \"%\",\n  },\n\n  {\n    alerts: \"Medium\",\n    unit: \"Min\",\n    key: \"MEDIUM\",\n    percentage: \"%\",\n  },\n\n  {\n    alerts: \"Low\",\n    unit: \"Min\",\n    key: \"LOW\",\n    percentage: \"%\",\n  },\n];\n\n\n// UI access and permissions\n// CLINICAL_FACILITY_ADMIN       = \"CFA\"\n// CLINICAL_FACILITY_ADMIN_CLONE = \"CFAC\"\n// GENERAL_CLINICIAN             = \"GC\"\n// SUPERVISORY_CLINICIAN         = \"SC\"\n// PHYSICIAN                     = \"PHY\"\nexport const uiAccessRoles = {\n  ALERT_CONFIGURATIONS: {\n    ALERT_DESTINATIONS: {\n      PAGE_VIEW: [\"SC\", \"PHY\", \"GC\", \"CFA\", \"CFAC\"],\n      EDIT: [\"SC\", \"CFA\", \"CFAC\"],\n      PATIENT: {\n        PAGE_VIEW: [\"SC\", \"PHY\", \"GC\"],\n        EDIT: [\"GC\", \"PHY\"],\n      },\n    },\n    ALERT_NOTIFICATIONS: {\n      PAGE_VIEW: [\"CFA\", \"CFAC\"],\n    },\n    ALERT_PARAMETER: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    ARRHYTHMIA_PARAMETER: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    ALERT_TECHNICAL: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    ALERT_PRIORITY: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    PARAMETER_ALERT: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n    },\n    ARRHYTHMIA_ALERT: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n    },\n    TECHNICAL_ALERT: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n    },\n    OTHER_SETTINGS: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n  },\n  },\n};\n\nexport const alertConfigMinMaxValues = {\n  parameterAlerts: {\n    HR: {\n      MIN: {\n        HighThr: 60,\n        CondDelay: 20,\n        LowThr: 30,\n      },\n      MAX: {\n        HighThr: 250,\n        CondDelay: 300,\n        LowThr: 160,\n      },\n    },\n    RR: {\n      MIN: {\n        HighThr: 10,\n        CondDelay: 50,\n        LowThr: 6,\n      },\n      MAX: {\n        HighThr: 60,\n        CondDelay: 300,\n        LowThr: 55,\n      },\n    },\n    SPO2: {\n      MIN: {\n        HighThr: 95,\n        CondDelay: 20,\n        LowThr: 70,\n      },\n      MAX: {\n        HighThr: 100,\n        CondDelay: 300,\n        LowThr: 95,\n      },\n    },\n    BODYTEMP: {\n      MIN: {\n        HighThr: preferenceUnit === 'SI'? 37 : 98.6,\n        CondDelay: 60,\n        LowThr: preferenceUnit === 'SI'? 32: 89.6,\n      },\n      MAX: {\n        HighThr: preferenceUnit === 'SI'? 43 : 109.4,\n        CondDelay: 300,\n        LowThr: preferenceUnit === 'SI'? 36 : 96.8,\n      },\n    },\n    BPSYS: {\n      MIN: {\n        HighThr: 75,\n        LowThr: 35,\n      },\n      MAX: {\n        HighThr: 240,\n        LowThr: 150,\n      },\n    },\n    BPDIA: {\n      MIN: {\n        HighThr: 50,\n        LowThr: 15,\n      },\n      MAX: {\n        HighThr: 180,\n        LowThr: 50,\n      },\n    },\n    PR: {\n      MIN: {\n        HighThr: 60,\n        CondDelay: 20,\n        LowThr: 30,\n      },\n      MAX: {\n        HighThr: 250,\n        CondDelay: 300,\n        LowThr: 120,\n      },\n    },\n    SKINTEMP: {\n      MIN: {\n        HighThr: preferenceUnit === 'SI'? 20: 68,\n        CondDelay: 60,\n        LowThr: preferenceUnit === 'SI'? 15: 59,\n      },\n      MAX: {\n        HighThr: preferenceUnit === 'SI'? 45: 113,\n        CondDelay: 300,\n        LowThr: preferenceUnit === 'SI'? 33: 91.4,\n      },\n    },\n    POSTURE_ALERT: {\n      MIN: {\n        HighThr: '',\n        CondDelay: 1,\n        LowThr: '',\n      },\n      MAX: {\n        HighThr: '',\n        CondDelay: 168,\n        LowThr: '',\n      },\n    },\n  },\n  technicalAlert: {\n    LEAD_OFF: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 5,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    BIOSENSOR_DISCONNECTED: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    RELAY_DISCONNECTED: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    LOW_BATTERY: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    /* TEMPERATURE_CALIBRATION: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    }, */\n    COMPUTE_HR_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 5,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    COMPUTE_RR_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    COMPUTE_SPO2_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    COMPUTE_BODY_TEMP_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n  },\n  priorityAlert: {\n    HIGH: {\n      MIN: {\n        Frequency_UnAck: 5,\n        Frequency_Ack: 5,\n        Percentage_Ack: 3,\n        Percentage_UnAck: 3,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        Frequency_Ack: 720,\n        Percentage_Ack: 100,\n        Percentage_UnAck: 100,\n      },\n    },\n    MEDIUM: {\n      MIN: {\n        Frequency_UnAck: 5,\n        Frequency_Ack: 5,\n        Percentage_Ack: 3,\n        Percentage_UnAck: 3,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        Frequency_Ack: 720,\n        Percentage_Ack: 100,\n        Percentage_UnAck: 100,\n      },\n    },\n    LOW: {\n      MIN: {\n        Frequency_UnAck: 5,\n        Frequency_Ack: 5,\n        Percentage_Ack: 3,\n        Percentage_UnAck: 3,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        Frequency_Ack: 720,\n        Percentage_Ack: 100,\n        Percentage_UnAck: 100,\n      },\n    },\n  },\n};\n\nexport const isAllowedRole = (allowedRoles: any, userRoles: any) => {\n  let isAllowed = false;\n  if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n    isAllowed = true;\n  }\n  return isAllowed;\n};\nexport const MY_MOMENT_FORMATS = {\n  fullPickerInput: { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric',\n    minute: 'numeric', hourCycle: 'h23' },\n  datePickerInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n  timePickerInput: { hour: 'numeric', minute: 'numeric', hourCycle: 'h23' },\n  monthYearLabel: {year: 'numeric', month: 'short'},\n  dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n  monthYearA11yLabel: {year: 'numeric', month: 'long'},\n}\nexport const postures = [\n  \"Supine\",\n  \"Prone\",\n  \"Lying on Left\",\n  \"Lying on Right\",\n];\n","import {AbstractControl} from \"@angular/forms\";\nimport {parsePhoneNumberFromString,  findPhoneNumbersInText } from \"libphonenumber-js\";\n\nexport function _validatePhoneNumberInput(c: AbstractControl): object {\n    let value = c?.value || \"\";\n    let inputValue: string = value.toString();\n    if (inputValue !== \"\") {\n        let c_number = findPhoneNumbersInText(inputValue);\n        let c_code = c_number[0]?.number?.country;\n        let c_num = c_number[0]?.number?.nationalNumber;\n        let phoneNumber: any;\n       \n        if(c_code && c_num) {\n            \n            phoneNumber = parsePhoneNumberFromString(c_num.toString(), c_code);\n        }\n        if(c_code === 'IN' && c_num[0] === '1'){\n            if(c_num.length !== 10){\n                return {\n                    phoneNumberInvalid: true\n                }\n            }\n        }else{\n            if(phoneNumber){\n                if(phoneNumber.isValid()){\n                    return null;\n                } else {\n                    return {\n                        phoneNumberInvalid: true\n                    }\n                }\n            } \n            else {\n                return {\n                    phoneNumberInvalid: true\n                }\n            }\n        }\n        \n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n\r\n//Running probeplus keycloak \r\n// redirect : http://keycloak.probeplus.site/* -> http://localhost:4200/#\r\n// web origin : http://keycloak.probeplus.site -> http://localhost:4200\r\nexport const environment= {\r\n  integ: true,\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  //dataApiUrl2: \"http://localhost:8000/\",\r\n  dataApiUrl2: \"http://backend.probeplus.site/\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://www.probeplus.site\",\r\n  keyClockRealm: \"ecgvue\",\r\n  keyClockClientId: \"frontend\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\nexport const environmentLPP = {\r\n  integ: true,\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  //dataApiUrl2: \"http://localhost:8000/\",\r\n  dataApiUrl2: \"http://backend.probeplus.site/\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://www.probeplus.site\",\r\n  keyClockRealm: \"ecgvue\",\r\n  keyClockClientId: \"frontend\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\n//LS Keycloak\r\nexport const environmentLS = {\r\n  integ: true,\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  //dataApiUrl: \"http://localhost:8000/\",\r\n  // dataApiUrl2: \"http://10.10.3.63:8000/\",\r\n  dataApiUrl2: \"http://backend.probeplus.site/\",\r\n  // dataApiUrl2: \"http://keycloak.probeplus.site/\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://alpha.auth.lifesignals.com/auth\",\r\n  // keyClockUrl: \"https://uat2a.auth.lifesignals.com\",\r\n  keyClockRealm: \"lsdev\",\r\n  keyClockClientId: \"InfinityEP4WebUI\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\n//TEST Midhun - ecgvue@ecgvue.com | Life@2023\r\nexport const environmentA = {\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://alpha.auth.lifesignals.com\",\r\n  // keyClockUrl: \"https://uat2a.auth.lifesignals.com\",\r\n\r\n  keyClockRealm: \"lsdev\",\r\n  keyClockClientId: \"InfinityEP4WebUI\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\n\r\n\r\n//UAT2\r\nexport const environment2 = {\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  dataApiUrl: \"https://uat2a.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://uat2a.auth.lifesignals.com\",\r\n  keyClockRealm: \"lsdev\",\r\n  keyClockClientId: \"InfinityEP4WebUI\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\nexport const isLocal = () => environment.dataApiUrl.includes(\"localhost\")\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","var map = {\n\t\"./af\": 62275,\n\t\"./af.js\": 62275,\n\t\"./ar\": 90857,\n\t\"./ar-dz\": 11218,\n\t\"./ar-dz.js\": 11218,\n\t\"./ar-kw\": 14754,\n\t\"./ar-kw.js\": 14754,\n\t\"./ar-ly\": 66680,\n\t\"./ar-ly.js\": 66680,\n\t\"./ar-ma\": 92178,\n\t\"./ar-ma.js\": 92178,\n\t\"./ar-sa\": 56522,\n\t\"./ar-sa.js\": 56522,\n\t\"./ar-tn\": 95682,\n\t\"./ar-tn.js\": 95682,\n\t\"./ar.js\": 90857,\n\t\"./az\": 70164,\n\t\"./az.js\": 70164,\n\t\"./be\": 79774,\n\t\"./be.js\": 79774,\n\t\"./bg\": 60947,\n\t\"./bg.js\": 60947,\n\t\"./bm\": 21832,\n\t\"./bm.js\": 21832,\n\t\"./bn\": 89650,\n\t\"./bn-bd\": 74477,\n\t\"./bn-bd.js\": 74477,\n\t\"./bn.js\": 89650,\n\t\"./bo\": 66005,\n\t\"./bo.js\": 66005,\n\t\"./br\": 98492,\n\t\"./br.js\": 98492,\n\t\"./bs\": 70534,\n\t\"./bs.js\": 70534,\n\t\"./ca\": 52061,\n\t\"./ca.js\": 52061,\n\t\"./cs\": 84737,\n\t\"./cs.js\": 84737,\n\t\"./cv\": 61167,\n\t\"./cv.js\": 61167,\n\t\"./cy\": 77996,\n\t\"./cy.js\": 77996,\n\t\"./da\": 9528,\n\t\"./da.js\": 9528,\n\t\"./de\": 14540,\n\t\"./de-at\": 49430,\n\t\"./de-at.js\": 49430,\n\t\"./de-ch\": 67978,\n\t\"./de-ch.js\": 67978,\n\t\"./de.js\": 14540,\n\t\"./dv\": 83426,\n\t\"./dv.js\": 83426,\n\t\"./el\": 6616,\n\t\"./el.js\": 6616,\n\t\"./en-au\": 63816,\n\t\"./en-au.js\": 63816,\n\t\"./en-ca\": 32162,\n\t\"./en-ca.js\": 32162,\n\t\"./en-gb\": 83305,\n\t\"./en-gb.js\": 83305,\n\t\"./en-ie\": 61954,\n\t\"./en-ie.js\": 61954,\n\t\"./en-il\": 43060,\n\t\"./en-il.js\": 43060,\n\t\"./en-in\": 59923,\n\t\"./en-in.js\": 59923,\n\t\"./en-nz\": 13540,\n\t\"./en-nz.js\": 13540,\n\t\"./en-sg\": 16505,\n\t\"./en-sg.js\": 16505,\n\t\"./eo\": 41907,\n\t\"./eo.js\": 41907,\n\t\"./es\": 86640,\n\t\"./es-do\": 41246,\n\t\"./es-do.js\": 41246,\n\t\"./es-mx\": 56131,\n\t\"./es-mx.js\": 56131,\n\t\"./es-us\": 36430,\n\t\"./es-us.js\": 36430,\n\t\"./es.js\": 86640,\n\t\"./et\": 62551,\n\t\"./et.js\": 62551,\n\t\"./eu\": 32711,\n\t\"./eu.js\": 32711,\n\t\"./fa\": 54572,\n\t\"./fa.js\": 54572,\n\t\"./fi\": 33390,\n\t\"./fi.js\": 33390,\n\t\"./fil\": 87860,\n\t\"./fil.js\": 87860,\n\t\"./fo\": 48216,\n\t\"./fo.js\": 48216,\n\t\"./fr\": 99291,\n\t\"./fr-ca\": 98527,\n\t\"./fr-ca.js\": 98527,\n\t\"./fr-ch\": 58407,\n\t\"./fr-ch.js\": 58407,\n\t\"./fr.js\": 99291,\n\t\"./fy\": 47054,\n\t\"./fy.js\": 47054,\n\t\"./ga\": 49540,\n\t\"./ga.js\": 49540,\n\t\"./gd\": 73917,\n\t\"./gd.js\": 73917,\n\t\"./gl\": 51486,\n\t\"./gl.js\": 51486,\n\t\"./gom-deva\": 56245,\n\t\"./gom-deva.js\": 56245,\n\t\"./gom-latn\": 48868,\n\t\"./gom-latn.js\": 48868,\n\t\"./gu\": 59652,\n\t\"./gu.js\": 59652,\n\t\"./he\": 89019,\n\t\"./he.js\": 89019,\n\t\"./hi\": 42040,\n\t\"./hi.js\": 42040,\n\t\"./hr\": 63402,\n\t\"./hr.js\": 63402,\n\t\"./hu\": 79322,\n\t\"./hu.js\": 79322,\n\t\"./hy-am\": 27609,\n\t\"./hy-am.js\": 27609,\n\t\"./id\": 57942,\n\t\"./id.js\": 57942,\n\t\"./is\": 98275,\n\t\"./is.js\": 98275,\n\t\"./it\": 73053,\n\t\"./it-ch\": 4378,\n\t\"./it-ch.js\": 4378,\n\t\"./it.js\": 73053,\n\t\"./ja\": 46176,\n\t\"./ja.js\": 46176,\n\t\"./jv\": 679,\n\t\"./jv.js\": 679,\n\t\"./ka\": 92726,\n\t\"./ka.js\": 92726,\n\t\"./kk\": 72953,\n\t\"./kk.js\": 72953,\n\t\"./km\": 86957,\n\t\"./km.js\": 86957,\n\t\"./kn\": 59181,\n\t\"./kn.js\": 59181,\n\t\"./ko\": 47148,\n\t\"./ko.js\": 47148,\n\t\"./ku\": 27752,\n\t\"./ku.js\": 27752,\n\t\"./ky\": 65675,\n\t\"./ky.js\": 65675,\n\t\"./lb\": 41263,\n\t\"./lb.js\": 41263,\n\t\"./lo\": 65746,\n\t\"./lo.js\": 65746,\n\t\"./lt\": 11143,\n\t\"./lt.js\": 11143,\n\t\"./lv\": 38753,\n\t\"./lv.js\": 38753,\n\t\"./me\": 44054,\n\t\"./me.js\": 44054,\n\t\"./mi\": 31573,\n\t\"./mi.js\": 31573,\n\t\"./mk\": 30202,\n\t\"./mk.js\": 30202,\n\t\"./ml\": 68523,\n\t\"./ml.js\": 68523,\n\t\"./mn\": 79794,\n\t\"./mn.js\": 79794,\n\t\"./mr\": 56681,\n\t\"./mr.js\": 56681,\n\t\"./ms\": 56975,\n\t\"./ms-my\": 39859,\n\t\"./ms-my.js\": 39859,\n\t\"./ms.js\": 56975,\n\t\"./mt\": 3691,\n\t\"./mt.js\": 3691,\n\t\"./my\": 5152,\n\t\"./my.js\": 5152,\n\t\"./nb\": 7607,\n\t\"./nb.js\": 7607,\n\t\"./ne\": 21526,\n\t\"./ne.js\": 21526,\n\t\"./nl\": 86368,\n\t\"./nl-be\": 40076,\n\t\"./nl-be.js\": 40076,\n\t\"./nl.js\": 86368,\n\t\"./nn\": 68420,\n\t\"./nn.js\": 68420,\n\t\"./oc-lnc\": 51906,\n\t\"./oc-lnc.js\": 51906,\n\t\"./pa-in\": 94504,\n\t\"./pa-in.js\": 94504,\n\t\"./pl\": 54721,\n\t\"./pl.js\": 54721,\n\t\"./pt\": 74645,\n\t\"./pt-br\": 54548,\n\t\"./pt-br.js\": 54548,\n\t\"./pt.js\": 74645,\n\t\"./ro\": 71977,\n\t\"./ro.js\": 71977,\n\t\"./ru\": 26042,\n\t\"./ru.js\": 26042,\n\t\"./sd\": 78849,\n\t\"./sd.js\": 78849,\n\t\"./se\": 27739,\n\t\"./se.js\": 27739,\n\t\"./si\": 50084,\n\t\"./si.js\": 50084,\n\t\"./sk\": 92449,\n\t\"./sk.js\": 92449,\n\t\"./sl\": 23086,\n\t\"./sl.js\": 23086,\n\t\"./sq\": 33139,\n\t\"./sq.js\": 33139,\n\t\"./sr\": 30607,\n\t\"./sr-cyrl\": 30063,\n\t\"./sr-cyrl.js\": 30063,\n\t\"./sr.js\": 30607,\n\t\"./ss\": 40131,\n\t\"./ss.js\": 40131,\n\t\"./sv\": 21665,\n\t\"./sv.js\": 21665,\n\t\"./sw\": 5642,\n\t\"./sw.js\": 5642,\n\t\"./ta\": 33622,\n\t\"./ta.js\": 33622,\n\t\"./te\": 74825,\n\t\"./te.js\": 74825,\n\t\"./tet\": 48336,\n\t\"./tet.js\": 48336,\n\t\"./tg\": 39238,\n\t\"./tg.js\": 39238,\n\t\"./th\": 99463,\n\t\"./th.js\": 99463,\n\t\"./tk\": 39986,\n\t\"./tk.js\": 39986,\n\t\"./tl-ph\": 29672,\n\t\"./tl-ph.js\": 29672,\n\t\"./tlh\": 40043,\n\t\"./tlh.js\": 40043,\n\t\"./tr\": 51212,\n\t\"./tr.js\": 51212,\n\t\"./tzl\": 50110,\n\t\"./tzl.js\": 50110,\n\t\"./tzm\": 80482,\n\t\"./tzm-latn\": 38309,\n\t\"./tzm-latn.js\": 38309,\n\t\"./tzm.js\": 80482,\n\t\"./ug-cn\": 42495,\n\t\"./ug-cn.js\": 42495,\n\t\"./uk\": 54157,\n\t\"./uk.js\": 54157,\n\t\"./ur\": 80984,\n\t\"./ur.js\": 80984,\n\t\"./uz\": 64141,\n\t\"./uz-latn\": 43662,\n\t\"./uz-latn.js\": 43662,\n\t\"./uz.js\": 64141,\n\t\"./vi\": 12607,\n\t\"./vi.js\": 12607,\n\t\"./x-pseudo\": 66460,\n\t\"./x-pseudo.js\": 66460,\n\t\"./yo\": 92948,\n\t\"./yo.js\": 92948,\n\t\"./zh-cn\": 62658,\n\t\"./zh-cn.js\": 62658,\n\t\"./zh-hk\": 39352,\n\t\"./zh-hk.js\": 39352,\n\t\"./zh-mo\": 38274,\n\t\"./zh-mo.js\": 38274,\n\t\"./zh-tw\": 98451,\n\t\"./zh-tw.js\": 98451\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["Validators","MAT_DIALOG_DATA","calculateDischargedDate","createNewPatientForm","epochToDate","getDateFromString","getGender","mapIndividiualToAdmitPatient","populateAdmitPatientValues","populateAssignPatientValues","WeightUnits","HeightUnits","PatientMoreInfoDialogComponent","BehaviorSubject","of","Subject","map","LSvalidators","TableState","SearchCountryField","CountryISO","csc","i0","_r3","AdmitPatientModalComponent","constructor","data","dialogRef","formbuilder","manager","dialog","service","manageGroupService","snackbar","userPreferences","Array","India","UnitedStates","SouthAfrica","name","groupId","parent","type","Date","weight","KG","min","max","POUND","height","CM","INCH","id","thirdParties","pipe","users","duration","t","loc","locations","BillingIndications","types","BillingMethod","methods","minAdmitDate","setDate","getDate","maxDOB","setFullYear","getFullYear","minDOB","doctorsList$","doctorsList$$","asObservable","groups$","cGroup$","locationGroups$","groups","selectGroup","concat","filter","g","clinicalGroups$","heightUnit","getUserHeightUnit","weightUnit","getUserWeightUnit","userPreferenceUnit","getUserUnitSystem","ngAfterContentInit","prescriberList","getFacilityStaff","technicianList","interpreterList","newPatientForm","admissionId","timeZone","timeZoneOffset","calculateAge","day","dob","month","getMonth","year","test","console","log","today","birthDate","age","monthDiff","getdob","currentYear","birthYear","dateOfBirth","options","toLocaleDateString","setupCountryStateCity","countryArray","getAllCountries","selectedCountryData","country","countryCode","_a","isoCode","statesOfCountry","getStatesOfCountry","_b","selectedStateData","state","stateCode","_c","citiesOfStateAndCountry","getCitiesOfState","selectedCityData","city","error","getCountryValues","getStatesByCountry","event","domValue","value","split","selectedCountry","getCityByStateAndCountry","selectedState","option","find","getGroupDetails","fetch","subscribe","length","groupData","push","filteredResults","items","key","searchTxt","item","toString","toLowerCase","indexOf","tabChanged","tabChangeEvent","selectedIndex","index","nextStep","ngOnInit","activePatient","selectedTab","patchId","mode","isEdit","generateAdmissionId","updateModalTitle","getUserTimeZone","getDoctorsList","getCGroups","maxAdmitDate","toLocaleString","getMaxAdmitTime","current","getMinAdmitTime","res","admissionIdCopy","modalTitle","searchPatient","patientId","target","clipboardData","getData","patientvalidated","patientData","populatePatient","toUpperCase","onOptionSelected","getPatientDataOf","url","getActivePatient","selectActivePatient","groupsSubscription","next","initNewPatientForm","clearSelect","controlName","stopPropagation","get","setValue","addClass","i","thirdPartyDevice_entered","updateHeightWeight","patchIds","_d","group","cgroupId","_e","_f","patientGroup","_g","_h","cGroup","_j","_k","pgroupId","_l","_m","_o","_p","pGroup","_q","_r","_s","startTime","_t","_u","getValue","markAllAsTouched","_v","biosensor","_w","_x","deviceId","deviceType","patchDetails","_y","endTime","_z","_0","_1","updateValueAndValidity","openMoreInfoDialog","patches","activePatch","heading","readOnly","open","width","maxWidth","backdropClass","disableClose","afterClosed","response","getActivePatch","getAutogeneratedPatientId","d","openSnackBar","savePatientDetails","formData","submitted","invalid","patient_id_mrn","controls","setControlState","disableFields","first_name","replace","w","c","last_name","mobile_num","mobile","patient","isSelectedFromAuto","updatePatient","resp","addEditState","SUCCESS","close","autoFilledPatient","isDischarged","dispError","createPatient","PATIENT","charsOnly","control","charsOnlyPattern","preventDefault","onWeightUnitChange","weightControl","setValidators","maxWeightKG","validValueForWeightAndHeight","maxWeightPOUND","onHeightUnitChange","heightControl","maxHeightCM","maxHeightINCH","numericsOnly","numericsOnlyPattern","floatOnly","floatOnlyPattern","keypressEvent","e","bioString","blockSpecialRegex","n","Boolean","charAt","match","substring","keydownEvent","code","newDevice","disabled","isDisabled","pattern","onClickClear","patientIDChanged","clearId","loadState","getPatientBy","patientDetails","createdDateTime","gender","estimatedDischarge","procedureDuration","startedOn","patchValue","Object","getRawValue","emitEvent","doctorsList","patientSelected","firstName","lastName","phoneNo","email","autoCompleted","onClickClearAuto","doctorId","activeDoctorsList","forEach","enable","disable","compareObjects","o1","o2","_id","ignoreCase","alphaNumericsOnly","getMaxDischargeDate","admittedDate","getMinDischargeDate","minDischarge","currentTime","getElapsedTime","elapsedTime","getTime","hrs","Math","floor","mins","secs","onGroupSelected","formField","selectDoctor","fetchPatientDetails","encodeURIComponent","getAll","dischargedPatients","Number","convertInchToCm","convertCmToInch","convertPoundToKg","convertKgToPound","ngOnDestroy","unsubscribe","doctorsListSub","selectors","decls","vars","consts","template","ctx","$event","_r26","_r30","_r32","throwError","catchError","environment","ActivePatientsService","backendApiService","dataApiUrl","dataApiUrl2","http","httpClient","BASE_URL","integ","facility_id","getFacilityUsers","usrs","getUsers","doctors","facility_staff","handleError","role","p","x","roles","userList","user","apiURL","savePatient","payload","created_by","fk_technician","post","obj","put","stopProcedure","dischargePatient","URL","getDoctorBy","errorMessage","setSelectedPatientIds","ids","setSelectedTab","tab","getUnassignedPatients","undefined","unassignedPatientsUrl","config","searchObject","page","pageIndex","pageSize","keyword","string","actvePatientsUrl","filterObject","searchString","sort","active","direction","cGroupId","pGroupId","doctor","getClinicalGroups","location","assignGroup","ob","getPanelDetails","panelId","Promise","resolve","reject","apiUrl","getMapping","then","patients","patientsArr","sex","created","stTime","catch","stopMonitoringUnassigned","body","deletePatch","delete","transferRelay","factory","providedIn","SelectionModel","debounceTime","distinctUntilChanged","switchMap","DischargePatientComponent","userPreference","backendApi","rowSelectEnabled","actions","show","class","headerLabel","translateKey","translate","paginator","hide","offline","sortable","headerClass","cellClass","customization","timeFormat","groupsData$","goBackToPage","back","modelChanged","serviceToCallWith","getDischargedPatients","reloadInterval","setInterval","selectDischargePatient","total","tableState","DISCHARGE_PATIENTS","dischargePatients","formSubURL","onSortChange","selectedPatients","clear","isSelected","row","selection","selected","s","includes","onPageChange","onPatientsSelected","openBiosensorModal","searchByGroup","search","searchObjString","JSON","stringify","ref","getPdfReport","admissions","lastAdmission","completedOn","postMapping","from","to","Type","destination","status","clearInterval","viewQuery","KeycloakAuthGuard","UserRoles","AuthGuard","router","keycloak","authService","isAccessAllowed","route","authenticated","login","redirectUri","window","origin","requiredRoles","granted","requiredRole","getRoles","SUPER_ADMIN","navigate","SERVICE_PROVIDER_ADMIN","SERVICE_PROVIDER_ADMIN_CLONE","CLINICAL_FACILITY_ADMIN","CLINICAL_FACILITY_ADMIN_CLONE","SUPERVISORY_CLINICIAN","GENERAL_CLINICIAN","PHYSICIAN"],"sourceRoot":"webpack:///"}