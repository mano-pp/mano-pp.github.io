{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","i0","_r3","AdmitPatientModalComponent","constructor","data","dialogRef","formbuilder","manager","dialog","service","manageGroupService","snackbar","userPreferences","BehaviorSubject","Array","SearchCountryField","CountryISO","name","groupId","parent","type","Date","Subject","weight","KG","min","max","POUND","height","CM","INCH","id","of","thirdParties","pipe","map","users","duration","t","loc","locations","BillingIndications","types","BillingMethod","methods","minAdmitDate","setDate","getDate","maxDOB","setFullYear","getFullYear","minDOB","doctorsList$","doctorsList$$","asObservable","groups$","cGroup$","locationGroups$","groups","selectGroup","concat","filter","g","clinicalGroups$","heightUnit","getUserHeightUnit","weightUnit","getUserWeightUnit","userPreferenceUnit","getUserUnitSystem","ngAfterContentInit","prescriberList","getFacilityStaff","technicianList","interpreterList","newPatientForm","createNewPatientForm","admissionId","timeZone","timeZoneOffset","calculateAge","day","dob","month","getMonth","year","test","console","log","today","birthDate","age","monthDiff","getdob","currentYear","birthYear","dateOfBirth","options","toLocaleDateString","setupCountryStateCity","countryArray","csc","selectedCountryData","country","countryCode","_a","isoCode","statesOfCountry","_b","selectedStateData","state","stateCode","_c","citiesOfStateAndCountry","selectedCityData","city","error","getCountryValues","getStatesByCountry","event","domValue","value","split","selectedCountry","getCityByStateAndCountry","selectedState","option","find","getGroupDetails","fetch","subscribe","length","groupData","push","filteredResults","items","key","searchTxt","item","toString","toLowerCase","indexOf","tabChanged","tabChangeEvent","selectedIndex","index","nextStep","ngOnInit","activePatient","selectedTab","patchId","mode","isEdit","generateAdmissionId","updateModalTitle","getUserTimeZone","getDoctorsList","getCGroups","maxAdmitDate","toLocaleString","getMaxAdmitTime","current","getMinAdmitTime","res","admissionIdCopy","modalTitle","searchPatient","patientId","target","clipboardData","getData","patientvalidated","patientData","populatePatient","toUpperCase","onOptionSelected","getPatientDataOf","url","getActivePatient","selectActivePatient","groupsSubscription","next","initNewPatientForm","clearSelect","controlName","stopPropagation","get","setValue","addClass","i","thirdPartyDevice_entered","updateHeightWeight","patchIds","_d","group","cgroupId","_e","_f","patientGroup","_g","_h","cGroup","_j","_k","pgroupId","_l","_m","_o","_p","pGroup","_q","_r","_s","startTime","_t","populateAdmitPatientValues","_u","getValue","markAllAsTouched","_v","biosensor","_w","_x","deviceId","deviceType","patchDetails","_y","endTime","_z","_0","populateAssignPatientValues","_1","updateValueAndValidity","openMoreInfoDialog","patches","activePatch","heading","readOnly","open","PatientMoreInfoDialogComponent","width","maxWidth","backdropClass","disableClose","afterClosed","response","getActivePatch","getAutogeneratedPatientId","d","openSnackBar","savePatientDetails","formData","submitted","invalid","patient_id_mrn","controls","setControlState","disableFields","first_name","replace","w","c","last_name","mobile_num","mobile","patient","mapIndividiualToAdmitPatient","isSelectedFromAuto","updatePatient","resp","addEditState","TableState","close","autoFilledPatient","isDischarged","dispError","createPatient","PATIENT","charsOnly","control","charsOnlyPattern","preventDefault","onWeightUnitChange","weightControl","WeightUnits","setValidators","LSvalidators","onHeightUnitChange","heightControl","HeightUnits","numericsOnly","numericsOnlyPattern","floatOnly","floatOnlyPattern","keypressEvent","bioString","blockSpecialRegex","n","Boolean","charAt","match","substring","keydownEvent","code","newDevice","disabled","isDisabled","Validators","onClickClear","patientIDChanged","clearId","loadState","getPatientBy","patientDetails","createdDateTime","gender","getGender","estimatedDischarge","procedureDuration","startedOn","calculateDischargedDate","epochToDate","getDateFromString","patchValue","Object","getRawValue","emitEvent","doctorsList","patientSelected","firstName","lastName","phoneNo","email","autoCompleted","onClickClearAuto","doctorId","activeDoctorsList","forEach","enable","disable","compareObjects","o1","o2","_id","ignoreCase","alphaNumericsOnly","getMaxDischargeDate","admittedDate","getMinDischargeDate","minDischarge","currentTime","getElapsedTime","elapsedTime","getTime","hrs","Math","floor","mins","secs","onGroupSelected","formField","selectDoctor","fetchPatientDetails","encodeURIComponent","getAll","dischargedPatients","Number","convertInchToCm","convertCmToInch","convertPoundToKg","convertKgToPound","ngOnDestroy","unsubscribe","doctorsListSub","MAT_DIALOG_DATA","selectors","decls","vars","consts","template","ctx","$event","_r26","_r30","_r32","ConfirmationDialogComponent","stop_biosensor","_remove_biosensor_remove_biosensor_component__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__","getUtcDate","date","UTC","formBuilder","timezone","offset","formGroup","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","src_app_shared_lsValidators_lsvalidators__WEBPACK_IMPORTED_MODULE_0__","country_code","sex","zip_code","street_address_1","street_address_2","em_contact_name","em_contact_country_code","em_contact_number","_validators_phone_no_validator__WEBPACK_IMPORTED_MODULE_1__","fk_prescriber","fk_technician","fk_r_doctor","pri_approver_id","final_approver_id","primary_indication","prescription_id","order_id","total_monitoring_duration","location","additionalInfo","icd","pacemaker","billing_indication","billing_method","patchIdData","individual","trim","cGroupObj","pGroupObj","filteredObj","x","obj","filteredObjNew","objNew","parseInt","additional_info","status","facility_id","created_by","convertToMinutes","days","epoch","parse","convertAdmitDate","t_date","toDateString","getHours","getMinutes","getSeconds","convertDischargeDate","time","monitoringDays","patientsForm","doctors","patchStartTime","disableControls","formContolName","getWeightUnit","getHeightUnit","deviceData","deviceIds","at","len","unit","getClinicalGroupName","list","getDoctorsName","dateStr","defaultAdmitDate","convertToDays","minutes","admitDate","dischargeDate","round","ActivePatientManagerService","activePatientstore$","manageServiceStore$","dispatch","_store__WEBPACK_IMPORTED_MODULE_0__","activePatients$","select","doctors$","_manage_group_store__WEBPACK_IMPORTED_MODULE_1__","unAssignedPatients$","tab","_angular_core__WEBPACK_IMPORTED_MODULE_2__","factory","providedIn","ClinicalGroup","PhysicalGroup","Gender","FilterKeysForActivePatient","FilterKeysForAssignPatient","MonitoringStatus","ActivePatientsTabs","TabMetaDataItems","PatientAdmittedModalComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_4__","_r9","_r12","userPreference","ref","src_environments_environment__WEBPACK_IMPORTED_MODULE_2__","currentPatches","getPatchIdData","isShow","newBiosensorId","patch","clear","toggleStatus","moment__WEBPACK_IMPORTED_MODULE_0__","isAfter","isBefore","endDate","deletePatch","_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_1__","message","confirm","onClickDelete","patternToMatch","JSON","stringify","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","_r4","RemoveBiosensorComponent","ActivePatientsService","backendApiService","environment","http","httpClient","BASE_URL","getFacilityUsers","_this","getUsers","usrs","facility_staff","_this2","catchError","handleError","role","p","roles","userList","user","apiURL","savePatient","payload","post","put","stopProcedure","dischargePatient","URL","getDoctorBy","throwError","errorMessage","setSelectedPatientIds","ids","setSelectedTab","getUnassignedPatients","undefined","unassignedPatientsUrl","config","searchObject","page","pageIndex","pageSize","keyword","string","actvePatientsUrl","filterObject","searchString","sort","active","direction","cGroupId","pGroupId","doctor","getClinicalGroups","assignGroup","ob","getPanelDetails","panelId","Promise","resolve","reject","apiUrl","getMapping","then","patients","patientsArr","created","stTime","stopMonitoringUnassigned","body","transferRelay","ActionTypes","LoadActivePatientsRequestAction","LOAD_ACTIVE_PATIENTS_REQUEST","LoadActivePatientsFailureAction","LOAD_ACTIVE_PATIENTS_FAILURE","LoadActivePatientsSuccessAction","LOAD_ACTIVE_PATIENTS_SUCCESS","LoadUnassignedPatientsRequestAction","LOAD_UNASSIGNED_PATIENTS_REQUEST","LoadUnassignedPatientsFailureAction","LOAD_UNASSIGNED_PATIENTS_FAILURE","LoadUnassignedPatientsSuccessAction","LOAD_UNASSIGNED_PATIENTS_SUCCESS","LoadDoctorsListRequestAction","LOAD_DOCTORS_LIST_REQUEST","LoadDoctorsListFailureAction","LOAD_DOCTORS_LIST_FAILURE","LoadDoctorsListSuccessAction","LOAD_DOCTORS_LIST_SUCCESS","CreateNewPatientRequestAction","CREATE_NEW_PATIENT_REQUEST","CreateNewPatientFailureAction","CREATE_NEW_PATIENT_FAILURE","CreateNewPatientSuccessAction","CREATE_NEW_PATIENT_SUCCESS","UpdatePatientRequestAction","UPDATE_PATIENT_REQUEST","UpdatePatientFailureAction","UPDATE_PATIENT_FAILURE","UpdatePatientSuccessAction","UPDATE_PATIENT_SUCCESS","AssignGroupRequestAction","ASSIGN_GROUP_REQUEST","AssignGroupFailureAction","ASSIGN_GROUP_FAILURE","AssignGroupSuccessAction","ASSIGN_GROUP_SUCCESS","DischargePatientRequestAction","DISCHARGE_PATIENT_REQUEST","DischargePatientFailureAction","DISCHARGE_PATIENT_FAILURE","DischargePatientSuccessAction","DISCHARGE_PATIENT_SUCCESS","StopMonitoringRequestAction","STOP_MONITORING_REQUEST","StopMonitoringFailureAction","STOP_MONITORING_FAILURE","StopMonitoringSuccessAction","STOP_MONITORING_SUCCESS","SetSelectedPatientIdsRequestAction","SET_SELECTED_PATIENTS_IDs_REQUEST","SetSelectedPatientIdsFailureAction","SET_SELECTED_PATIENTS_IDs_FAILURE","SetSelectedPatientIdsSuccessAction","SET_SELECTED_PATIENTS_IDs_SUCCESS","SetSelectedTabRequestAction","SET_SELECTED_TAB_REQUEST","SetSelectedTabFailureAction","SET_SELECTED_TAB_FAILURE","SetSelectedTabSuccessAction","SET_SELECTED_TAB_SUCCESS","initialActivePatientState","ACTIVE_PATIENTS_DATA","UNASSIGNED_PATIENTS_DATA","DOCTORS","PATIENT_IDS","SELECTED_TAB","_models_active_patients_model__WEBPACK_IMPORTED_MODULE_1__","tableState","src_app_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_0__","total","unassignedPatients_total","patientsFeatureKey","ActivePatientsReducer","action","_active_patients_actions__WEBPACK_IMPORTED_MODULE_2__","biosensorStatus","getPatientState","_active_patients_reducer__WEBPACK_IMPORTED_MODULE_0__","selectActivePatientsList","selectUnassignedPatientsList","selectActivePatientsError","createNewPatient","assignGroupPatient","stopMonitoring","getPatientIds","routes","path","loadChildren","SettingsModule","component","_shared_root_root_component__WEBPACK_IMPORTED_MODULE_1__","SummaryModule","SuperAdminModule","ServiceProviderAdminModule","ActivePatientsModule","DischargePatientsModule","__webpack_require__","ManageGroupModule","_profile_profile_component__WEBPACK_IMPORTED_MODULE_0__","redirectTo","pathMatch","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","useHash","relativeLinkResolution","imports","exports","AppComponent","authService","_appRippleOptions","userService","getRoles","userId","getUserId","preference","getUser","units","getTimeZoneOffset","sessionStorage","setItem","logoUrl","facilityName","emr","getCustomizationLogo","AppGlobalRippleOptions","RippleModule","provide","_angular_material_core__WEBPACK_IMPORTED_MODULE_4__","useExisting","HttpLoaderFactory","_ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_11__","_environments_environment__WEBPACK_IMPORTED_MODULE_7__","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_17__","useFactory","_init_keycloak_init_factory__WEBPACK_IMPORTED_MODULE_9__","multi","deps","keycloak_angular__WEBPACK_IMPORTED_MODULE_18__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__","useValue","appearance","floatLabel","_angular_common_http__WEBPACK_IMPORTED_MODULE_20__","useClass","_interceptors_error_interceptor__WEBPACK_IMPORTED_MODULE_13__","ng_pick_datetime__WEBPACK_IMPORTED_MODULE_14__","_utils_helpers__WEBPACK_IMPORTED_MODULE_15__","_guards_auth_guard__WEBPACK_IMPORTED_MODULE_5__","_services_authentication_service__WEBPACK_IMPORTED_MODULE_4__","_services_backendapi_service__WEBPACK_IMPORTED_MODULE_3__","_settings_manage_users_services_manage_users_service__WEBPACK_IMPORTED_MODULE_12__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_21__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_22__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_2__","_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_23__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_24__","_discharge_patients_discharge_patients_module__WEBPACK_IMPORTED_MODULE_10__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_25__","_ngrx_router_store__WEBPACK_IMPORTED_MODULE_26__","_ngrx_store__WEBPACK_IMPORTED_MODULE_27__","_reducers__WEBPACK_IMPORTED_MODULE_6__","metaReducers","_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_28__","logOnly","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_8__","locale_id","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_29__","loader","declarations","_bio_sensor_bio_sensor_component__WEBPACK_IMPORTED_MODULE_16__","BioSensorComponent","SortHeaderComponent","sorter","hostBindings","_r1","SortDirective","column","sortChange","emit","outputs","SortModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_4__","_sort_directive__WEBPACK_IMPORTED_MODULE_0__","_sort_header_sort_header_component__WEBPACK_IMPORTED_MODULE_1__","DischargePatientComponent","backendApi","SelectionModel","rowSelectEnabled","actions","show","class","headerLabel","translateKey","translate","paginator","hide","offline","sortable","headerClass","cellClass","groupsData$","goBackToPage","back","modelChanged","debounceTime","distinctUntilChanged","switchMap","serviceToCallWith","getDischargedPatients","reloadInterval","setInterval","selectDischargePatient","DISCHARGE_PATIENTS","dischargePatients","formSubURL","onSortChange","selectedPatients","isSelected","row","selection","selected","s","includes","onPageChange","onPatientsSelected","openBiosensorModal","searchByGroup","search","searchObjString","getPdfReport","admissions","lastAdmission","completedOn","postMapping","from","to","Type","destination","clearInterval","viewQuery","canActivate","_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__","_shared_root_root_component__WEBPACK_IMPORTED_MODULE_3__","children","_discharge_patient_discharge_patient_component__WEBPACK_IMPORTED_MODULE_2__","_enum_roles_enum__WEBPACK_IMPORTED_MODULE_1__","DischargePatientsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_8__","_discharge_patients_routing_module__WEBPACK_IMPORTED_MODULE_2__","_ngrx_store__WEBPACK_IMPORTED_MODULE_9__","_store_discharge_patients_reducer__WEBPACK_IMPORTED_MODULE_4__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_10__","_store_discharge_patients_effects__WEBPACK_IMPORTED_MODULE_3__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_angular_material_card__WEBPACK_IMPORTED_MODULE_11__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_12__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_13__","_angular_material_button__WEBPACK_IMPORTED_MODULE_14__","_angular_material_input__WEBPACK_IMPORTED_MODULE_15__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_16__","_angular_material_select__WEBPACK_IMPORTED_MODULE_17__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_18__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_19__","_angular_material_list__WEBPACK_IMPORTED_MODULE_20__","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_21__","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_5__","_life_signals_life_signals_module__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_22__","_discharge_patient_discharge_patient_component__WEBPACK_IMPORTED_MODULE_1__","DischargePatientManagerService","store$","src_environments_environment__WEBPACK_IMPORTED_MODULE_1__","err","ErrorEvent","dischargePatients$","DischargePatientService","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","apiurl","_angular_core__WEBPACK_IMPORTED_MODULE_3__","LoadDischargePatientsRequestAction","LOAD_DISCHARGE_PATIENTS_REQUEST","LoadDischargePatientsFailureAction","LOAD_DISCHARGE_PATIENTS_FAILURE","LoadDischargePatientsSuccessAction","LOAD_DISCHARGE_PATIENTS_SUCCESS","DischargePatientsEffects","dischargePatientsService","actions$","_discharge_patients_actions__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","dischargePatientsFeatureKey","src_app_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_1__","DischargePatientsReducer","getDischargePatientState","_discharge_patients_reducer__WEBPACK_IMPORTED_MODULE_0__","selectDischargePatientsList","UserRoles","AuthGuard","router","keycloak","isAccessAllowed","route","authenticated","login","redirectUri","window","origin","requiredRoles","granted","requiredRole","navigate","KeycloakAuthGuard","I18nModule","translateCacheService","init","addLangs","browserLang","getCachedLanguage","getBrowserLang","use","ngModule","providers","initLocalizationService","_localization_service__WEBPACK_IMPORTED_MODULE_0__","_localization_config_service__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_common_http__WEBPACK_IMPORTED_MODULE_7__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__","ngx_translate_cache__WEBPACK_IMPORTED_MODULE_5__","cacheService","translateCacheFactory","cacheMechanism","translateLoaderFactory","_ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_2__","translateService","translateCacheSettings","initService","LocalizationServiceConfig","LocalizationService","singleton","Error","_localeId","localStorage","getItem","useLanguage","lang","setDefaultLang","interpolateParams","instant","initializeKeycloak","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","realm","clientId","initOptions","onLoad","checkLoginIframe","enableBearerInterceptor","bearerPrefix","bearerExcludedUrls","ErrorInterceptor","request","handle","errorCode","LsPageHeaderComponent","inputs","ngContentSelectors","MatPaginatorIntl","rxjs__WEBPACK_IMPORTED_MODULE_0__","startIndex","endIndex","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","ctx_r0","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_intl","_changeDetectorRef","defaults","_intlChanges","changes","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_pageIndex","_length","_updateDisplayedPageSizeOptions","_pageLength","_pageOptions","_initialized","_markInitialized","hasNextPage","previousPageIndex","_emitPageEvent","currentPageIndex","totalPages","ceil","lastIndex","numberOf","result","dataFrom","dataTo","pageLength","hasPreviousPage","getNumberOfPages","maxPageIndex","_displayedPageSizeOptions","slice","a","b","color","selectConfig","features","LsPaginatorComponent","intl","changeDetectorRef","formFieldAppearance","_formFieldAppearance","exportAs","ctx_r16","ctx_r20","row_r44","row_r56","ctx_r15","LsTableComponent","vr","ren","_angular_material_table__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__","tableSort","dataSource","change","changed","allSelected","isAllSelected","currentValue","sliceData","widgets","widget","widgetTemplates","getName","selectOnlyActive","pat","disableMasterSelect","Id","findIndex","selPat","activePatients","columns","hidden","position","label","isActive","checked","deselect","contentQueries","_directives_ls_widget_name_directive__WEBPACK_IMPORTED_MODULE_0__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__","LsWidgetComponent","lsTemplate","LsWidgetNameDirective","lsWidgetName","LSColumnType","LifeSignalsModule","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_angular_material_table__WEBPACK_IMPORTED_MODULE_8__","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_9__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_10__","_angular_material_button__WEBPACK_IMPORTED_MODULE_11__","_angular_material_list__WEBPACK_IMPORTED_MODULE_13__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_14__","_angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_15__","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_3__","_angular_material_card__WEBPACK_IMPORTED_MODULE_16__","_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_17__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_19__","_angular_material_select__WEBPACK_IMPORTED_MODULE_20__","_components_ls_table_ls_table_component__WEBPACK_IMPORTED_MODULE_0__","_components_ls_widget_ls_widget_component__WEBPACK_IMPORTED_MODULE_1__","_directives_ls_widget_name_directive__WEBPACK_IMPORTED_MODULE_2__","_components_ls_page_header_ls_page_header_component__WEBPACK_IMPORTED_MODULE_4__","_components_ls_paginator_ls_paginator_component__WEBPACK_IMPORTED_MODULE_5__","groupNamePattern","GroupType","restrictedGroupNames","ManageGroupsService","autheticationService","cfId","getCfId","LoadGroupsRequestAction","LOAD_GROUPS_REQUEST","LoadGroupsFailureAction","LOAD_GROUPS_FAILURE","LoadGroupsSuccessAction","LOAD_GROUPS_SUCCESS","SaveGroupRequestAction","SAVE_GROUP_REQUEST","SaveGroupFailureAction","SAVE_GROUP_FAILURE","SaveGroupSuccessAction","SAVE_GROUP_SUCCESS","UpdateGroupRequestAction","UPDATE_GROUP_REQUEST","UpdateGroupFailureAction","UPDATE_GROUP_FAILURE","UpdateGroupSuccessAction","UPDATE_GROUP_SUCCESS","RemoveGroupRequestAction","REMOVE_GROUP_REQUEST","RemoveGroupFailureAction","REMOVE_GROUP_FAILURE","RemoveGroupSuccessAction","REMOVE_GROUP_SUCCESS","manageGroupFeatureKey","initialGroupState","CLINICAL_GROUPS","PHYSICAL_GROUPS","groupsLoaded","GroupsReducer","_manage_groups_actions__WEBPACK_IMPORTED_MODULE_1__","setGroups","cgroup","pgroup","newGroupResponse","setGroup","tempCgroup","tempPgroup","_models_manage_groups_model__WEBPACK_IMPORTED_MODULE_0__","hasChildren","expanded","facilityId","FacilityId","getGroupsState","_manage_groups_reducer__WEBPACK_IMPORTED_MODULE_0__","selectGroupsList","ManageGroupState","selectGroupsError","removeGroup","removeGroupError","saveGroup","saveGroupError","FilterPipe","searchText","fieldName","pure","_angular_core__WEBPACK_IMPORTED_MODULE_10__","ctx_r3","ProfileComponent","snackBar","showPreference","getTimeZones","userCopy","countries","country_state_city__WEBPACK_IMPORTED_MODULE_2___default","timeZones","flatMap","timezones","zoneName","gmtOffsetName","logout","valuesUpdated","savePreferences","setTimeout","reload","_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_0__","title","text","resetPassword","reducers","AuthenticationService","keyClockService","rxjs__WEBPACK_IMPORTED_MODULE_1__","logoSource","logoStatus","userDetails","getKeycloakInstance","tokenParsed","spId","uId","MockAuthService","BackendApiService","_snackBar","online$","verticalPosition","horizontalPosition","dismiss","responseType","requestBody","toPromise","param","params","SnackbarService","translateText","prefix","suffix","tran","panelClass","UserPreferenceService","toFixed","ManageUsersService","authHeaders","_angular_common_http__WEBPACK_IMPORTED_MODULE_1__","append","size","sortBy","sortOrder","userData","headers","tz","toLocaleTimeString","timeZoneName","_angular_core__WEBPACK_IMPORTED_MODULE_5__","MockManageUsersService","serviceProviderId","getTimezoneOffset","o","abs","ManageAdminService","endUrl","_angular_common_http__WEBPACK_IMPORTED_MODULE_0__","ConfirmDialogComponent","DataTableClonedViewComponent","adminUsers","_angular_core__WEBPACK_IMPORTED_MODULE_11__","row_r16","DataTableManageAdminComponent","_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_3__","labelClass","style","header","_store_manage_admin__WEBPACK_IMPORTED_MODULE_2__","listAdmin","adminUser$","adminUsersSub","adminUserData","ADMIN_DATA","adminName","source","openActiveInActiveDialogs","doSubscriptionFormSelector","addAdminCallBack","editCallBack","src_environments_environment__WEBPACK_IMPORTED_MODULE_5__","rowData","_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_4__","activeUser","_dialogs_inactive_active_inactive_active_component__WEBPACK_IMPORTED_MODULE_1__","_core_directives_sort_directive__WEBPACK_IMPORTED_MODULE_0__","AboutComponent","versions","ep3Version","EP3","ep4Version","EP4","HospitalComponent","InactiveActiveComponent","_store_manage_admin__WEBPACK_IMPORTED_MODULE_0__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","HeaderComponent","GC","SC","PHY","CFA","CFAC","SPA","SPAC","SA","defaultLogo","LogoSubscription","mapUserRoles","latestLogo$","logo","getLoggedUser","given_name","removeItem","userRoles","_dialogs_hospital_hospital_component__WEBPACK_IMPORTED_MODULE_0__","_dialogs_about_about_component__WEBPACK_IMPORTED_MODULE_1__","MatselectWithsearchComponent","valueUpdated","placeholder","backendSearch","NavigationComponent","isDisable","ctx_r6","ctx_r7","_r2","child_r13","MenuComponent","clickChild","trigger","sequence","styles","changeDetection","option_r16","NestedDropdownComponent","rxjs__WEBPACK_IMPORTED_MODULE_3__","selectedValueSubject","optionsSubject","selectedValue","grp","assignSelection","selectedItem","rootGroupBuffer","closeMenu","parentGroup","openMenu","buffer","Children","onSelectItem","childrentrigger","NestedDropdownService","parentId","PageNavBarComponent","image","RootComponent","SettingCardComponent","src_app_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_2__","selectedTimeParam","parameterAlertsFrom","arrhythmiaAlertsFrom","fetchSummary","timerList","view","dailogRef","src_app_active_patients_admit_patient_modal_admit_patient_modal_component__WEBPACK_IMPORTED_MODULE_1__","minWidth","admitPatientModal","getActivePatientData","src_app_active_patients_patient_admitted_modal_patient_admitted_modal_component__WEBPACK_IMPORTED_MODULE_0__","autoFocus","count","timerIcon","routerUrl","subTitle","showCount","loading","register","SharedModule","_angular_common_http__WEBPACK_IMPORTED_MODULE_23__","keycloak_angular__WEBPACK_IMPORTED_MODULE_24__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_25__","_angular_common__WEBPACK_IMPORTED_MODULE_26__","ngx_pagination__WEBPACK_IMPORTED_MODULE_2__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_27__","_core_directives_sort_module__WEBPACK_IMPORTED_MODULE_5__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_28__","_angular_router__WEBPACK_IMPORTED_MODULE_29__","_angular_material_select__WEBPACK_IMPORTED_MODULE_30__","_angular_forms__WEBPACK_IMPORTED_MODULE_31__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_32__","_ngrx_store__WEBPACK_IMPORTED_MODULE_33__","_store_manage_admin_manage_admin_reducer__WEBPACK_IMPORTED_MODULE_10__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_34__","_store_manage_admin_manage_admin_effects__WEBPACK_IMPORTED_MODULE_9__","_angular_material_table__WEBPACK_IMPORTED_MODULE_35__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_36__","lac_mat_tel_input__WEBPACK_IMPORTED_MODULE_37__","_angular_material_card__WEBPACK_IMPORTED_MODULE_38__","_angular_material_button__WEBPACK_IMPORTED_MODULE_39__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_40__","_life_signals_life_signals_module__WEBPACK_IMPORTED_MODULE_16__","_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_41__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_42__","_angular_material_input__WEBPACK_IMPORTED_MODULE_43__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_44__","_header_header_component__WEBPACK_IMPORTED_MODULE_0__","_pipe_filter_pipe__WEBPACK_IMPORTED_MODULE_1__","_data_table_manage_admin_data_table_manage_admin_component__WEBPACK_IMPORTED_MODULE_3__","_data_table_cloned_view_data_table_cloned_view_component__WEBPACK_IMPORTED_MODULE_4__","_page_nav_bar_page_nav_bar_component__WEBPACK_IMPORTED_MODULE_6__","_setting_card_setting_card_component__WEBPACK_IMPORTED_MODULE_7__","_tel_input_tel_input_component__WEBPACK_IMPORTED_MODULE_15__","_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_11__","_dialogs_inactive_active_inactive_active_component__WEBPACK_IMPORTED_MODULE_12__","_dialogs_hospital_hospital_component__WEBPACK_IMPORTED_MODULE_13__","_dialogs_about_about_component__WEBPACK_IMPORTED_MODULE_14__","_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_17__","_root_root_component__WEBPACK_IMPORTED_MODULE_18__","_nested_dropdown_nested_dropdown_component__WEBPACK_IMPORTED_MODULE_19__","_nested_dropdown_menu_menu_component__WEBPACK_IMPORTED_MODULE_20__","_matselect_withsearch_matselect_withsearch_component__WEBPACK_IMPORTED_MODULE_21__","ManageAdminActionTypes","LoadManageAdminRequestAction","LOAD_MANAGE_ADMIN_ACTION","LoadManageAdminSuccessAction","LOAD_MANAGE_ADMIN_SUCCESS","LoadManageAdminFailureAction","LOAD_MANAGE_ADMIN_FAILURE","SaveManageAdminAction","SAVE_MANAGE_ADMIN_ACTION","SaveManageAdminSuccessAction","SAVE_MANAGE_ADMIN_SUCCESS","SaveManageAdminFailureAction","SAVE_MANAGE_ADMIN_FAILURE","UpdateManageAdminAction","UPDATE_MANAGE_ADMIN_ACTION","UpdateManageAdminSuccessAction","UPDATE_MANAGE_ADMIN_SUCCESS","UpdateManageAdminFailureAction","UPDATE_MANAGE_ADMIN_FAILURE","InactiveManageAdminAction","INACTIVE_MANAGE_ADMIN","InactiveManageAdminSuccessAction","INACTIVE_MANAGE_ADMIN_SUCCESS","InactiveManageAdminFailureAction","INACTIVE_MANAGE_ADMIN_FAILURE","ActiveManageAdminAction","ACTIVE_MANAGE_ADMIN","ActiveManageAdminSuccessAction","ACTIVE_MANAGE_ADMIN_SUCCESS","ActiveManageAdminFailureAction","ACTIVE_MANAGE_ADMIN_FAILURE","AfterSaveManageAdminSuccessAction","AFTER_SAVE_MANAGE_ADMIN_SUCCESS","AfterSaveManageAdminFailureAction","AFTER_SAVE_MANAGE_ADMIN_FAILURE","AfterUpdateManageAdminSuccessAction","AFTER_UPDATE_MANAGE_ADMIN_SUCCESS","AfterUpdateManageAdminFailureAction","AFTER_UPDATE_MANAGE_ADMIN_FAILURE","ManageAdminEffects","manageAdminService","_manage_admin_actions__WEBPACK_IMPORTED_MODULE_0__","getAllAdminList","loadAdminRes","addAdmin","addAdminRes","updateAdmin","updateAdminRes","inActiveAdmin","activeInactive","inActiveAdminRes","activeAdmin","activeAdminRes","initialState","save_admin_success","save_admin_error","_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_1__","manageAdminFeatureKey","manageAdminReducer","updatedAdminData","adminData","updatedDataForInactive","updatedDataForActive","getManageAdminState","_manage_admin_reducer__WEBPACK_IMPORTED_MODULE_0__","selectAdminList","selectManageAdminList","selectManageAdminListError","addManageAdminSuccess","addManageAdminFailure","updateManageAdminSuccess","updateManageAdminFailure","selectActiveAdmins","TelInputComponent","lodash__WEBPACK_IMPORTED_MODULE_0__","onTouchedCallback","form","valueChanges","formValue","onChangeCallback","fn","preferenceUnit","priorityColorCode","HIGH","LOW","MEDIUM","alertPriorityOptions","arrhythmiaAlertPriorityOptions","ArrhythmiaParameterAlertItems","alerts","parameterAlertItems","AlertHistoryItems","technicalAlertItems","priorityAlertItems","percentage","uiAccessRoles","ALERT_CONFIGURATIONS","ALERT_DESTINATIONS","PAGE_VIEW","EDIT","ALERT_NOTIFICATIONS","ALERT_PARAMETER","PAGE_VEW","ARRHYTHMIA_PARAMETER","ALERT_TECHNICAL","ALERT_PRIORITY","PARAMETER_ALERT","ARRHYTHMIA_ALERT","TECHNICAL_ALERT","OTHER_SETTINGS","alertConfigMinMaxValues","parameterAlerts","HR","MIN","HighThr","CondDelay","LowThr","MAX","RR","SPO2","BODYTEMP","BPSYS","BPDIA","PR","SKINTEMP","POSTURE_ALERT","technicalAlert","LEAD_OFF","Frequency_UnAck","Frequency_Ack","BIOSENSOR_DISCONNECTED","RELAY_DISCONNECTED","LOW_BATTERY","COMPUTE_HR_ERROR","COMPUTE_RR_ERROR","COMPUTE_SPO2_ERROR","COMPUTE_BODY_TEMP_ERROR","priorityAlert","Percentage_Ack","Percentage_UnAck","isAllowedRole","allowedRoles","isAllowed","some","ai","MY_MOMENT_FORMATS","fullPickerInput","hour","minute","hourCycle","datePickerInput","timePickerInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","postures","_validatePhoneNumberInput","inputValue","c_number","c_code","number","c_num","nationalNumber","phoneNumber","phoneNumberInvalid","isValid","integ","production","environmentName","dataApiUrl2","dataApiUrl","keyClockUrl","keyClockRealm","keyClockClientId","version","customization","snackBarDuration","enableTrends","enablePlethRR","timeFormat","environmentLPP","environmentLS","environmentA","environment2","isLocal","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","webpackContext"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/active-patients/admit-patient-modal/admit-patient-modal.component.html","webpack:///src/app/active-patients/admit-patient-modal/admit-patient-modal.component.ts","webpack:///src/app/active-patients/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/active-patients/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/active-patients/forms/active-patients.form.ts","webpack:///src/app/active-patients/manager/active-patient-manager.service.ts","webpack:///src/app/active-patients/models/active-patients.model.ts","webpack:///src/app/active-patients/patient-admitted-modal/patient-admitted-modal.component.ts","webpack:///src/app/active-patients/patient-admitted-modal/patient-admitted-modal.component.html","webpack:///src/app/active-patients/patient-more-info-dialog/patient-more-info-dialog.component.html","webpack:///src/app/active-patients/patient-more-info-dialog/patient-more-info-dialog.component.ts","webpack:///src/app/active-patients/remove-biosensor/remove-biosensor.component.ts","webpack:///src/app/active-patients/remove-biosensor/remove-biosensor.component.html","webpack:///src/app/active-patients/services/active-patients.service.ts","webpack:///src/app/active-patients/store/active-patients.actions.ts","webpack:///src/app/active-patients/store/active-patients.reducer.ts","webpack:///src/app/active-patients/store/active-patients.selector.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bio-sensor/bio-sensor.component.ts","webpack:///src/app/bio-sensor/bio-sensor.component.html","webpack:///src/app/core/directives/sort-header/sort-header.component.html","webpack:///src/app/core/directives/sort-header/sort-header.component.ts","webpack:///src/app/core/directives/sort.directive.ts","webpack:///src/app/core/directives/sort.module.ts","webpack:///src/app/discharge-patients/discharge-patient/discharge-patient.component.html","webpack:///src/app/discharge-patients/discharge-patient/discharge-patient.component.ts","webpack:///src/app/discharge-patients/discharge-patients-routing.module.ts","webpack:///src/app/discharge-patients/discharge-patients.module.ts","webpack:///src/app/discharge-patients/manager/discharge-patient-manager.service.ts","webpack:///src/app/discharge-patients/service/discharge-patient.service.ts","webpack:///src/app/discharge-patients/store/discharge-patients.actions.ts","webpack:///src/app/discharge-patients/store/discharge-patients.effects.ts","webpack:///src/app/discharge-patients/store/discharge-patients.reducer.ts","webpack:///src/app/discharge-patients/store/discharge-patients.selector.ts","webpack:///src/app/enum/roles.enum.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/i18n/i18n.module.ts","webpack:///src/app/i18n/localization-config.service.ts","webpack:///src/app/i18n/localization.service.ts","webpack:///src/app/init/keycloak-init.factory.ts","webpack:///src/app/interceptors/error.interceptor.ts","webpack:///src/app/life-signals/_components/ls-page-header/ls-page-header.component.html","webpack:///src/app/life-signals/_components/ls-page-header/ls-page-header.component.ts","webpack:///src/app/life-signals/_components/ls-paginator/ls-paginator-intl.ts","webpack:///src/app/life-signals/_components/ls-paginator/ls-paginator.component.ts","webpack:///src/app/life-signals/_components/ls-paginator/ls-paginator.component.html","webpack:///src/app/life-signals/_components/ls-table/ls-table.component.html","webpack:///src/app/life-signals/_components/ls-table/ls-table.component.ts","webpack:///src/app/life-signals/_components/ls-widget/ls-widget.component.html","webpack:///src/app/life-signals/_components/ls-widget/ls-widget.component.ts","webpack:///src/app/life-signals/_directives/ls-widget-name.directive.ts","webpack:///src/app/life-signals/_models/ls-column.model.ts","webpack:///src/app/life-signals/life-signals.module.ts","webpack:///src/app/manage-group/models/manage-groups.model.ts","webpack:///src/app/manage-group/services/manage-groups.service.ts","webpack:///src/app/manage-group/store/manage-groups.actions.ts","webpack:///src/app/manage-group/store/manage-groups.reducer.ts","webpack:///src/app/manage-group/store/manage-groups.selector.ts","webpack:///src/app/pipe/filter.pipe.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/reducers/index.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/backendapi.service.ts","webpack:///src/app/services/snackbar.service.ts","webpack:///src/app/services/user-preference.service.ts","webpack:///src/app/settings/manage-users/services/manage-users.service.ts","webpack:///src/app/shared/_services/manage-admin.service.ts","webpack:///src/app/shared/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/shared/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/shared/data-table-cloned-view/data-table-cloned-view.component.html","webpack:///src/app/shared/data-table-cloned-view/data-table-cloned-view.component.ts","webpack:///src/app/shared/data-table-manage-admin/data-table-manage-admin.component.html","webpack:///src/app/shared/data-table-manage-admin/data-table-manage-admin.component.ts","webpack:///src/app/shared/dialogs/about/about.component.ts","webpack:///src/app/shared/dialogs/about/about.component.html","webpack:///src/app/shared/dialogs/hospital/hospital.component.ts","webpack:///src/app/shared/dialogs/hospital/hospital.component.html","webpack:///src/app/shared/dialogs/inactive-active/inactive-active.component.html","webpack:///src/app/shared/dialogs/inactive-active/inactive-active.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/lsValidators/lsvalidators.ts","webpack:///src/app/shared/matselect-withsearch/matselect-withsearch.component.html","webpack:///src/app/shared/matselect-withsearch/matselect-withsearch.component.ts","webpack:///src/app/shared/navigation/navigation.component.html","webpack:///src/app/shared/navigation/navigation.component.ts","webpack:///src/app/shared/nested-dropdown/menu/menu.component.html","webpack:///src/app/shared/nested-dropdown/menu/menu.component.ts","webpack:///src/app/shared/nested-dropdown/nested-dropdown.component.html","webpack:///src/app/shared/nested-dropdown/nested-dropdown.component.ts","webpack:///src/app/shared/nested-dropdown/nested-dropdown.service.ts","webpack:///src/app/shared/page-nav-bar/page-nav-bar.component.ts","webpack:///src/app/shared/page-nav-bar/page-nav-bar.component.html","webpack:///src/app/shared/root/root.component.ts","webpack:///src/app/shared/root/root.component.html","webpack:///src/app/shared/setting-card/setting-card.component.html","webpack:///src/app/shared/setting-card/setting-card.component.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/store/manage-admin/manage-admin.actions.ts","webpack:///src/app/shared/store/manage-admin/manage-admin.effects.ts","webpack:///src/app/shared/store/manage-admin/manage-admin.reducer.ts","webpack:///src/app/shared/store/manage-admin/manage-admin.selector.ts","webpack:///src/app/shared/tel-input/tel-input.component.ts","webpack:///src/app/shared/tel-input/tel-input.component.html","webpack:///src/app/utils/helpers.ts","webpack:///src/app/validators/phone-no.validator.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","<mat-card class=\"dialog-header\">\r\n    <h1 mat-dialog-title>\r\n        {{ modalTitle | translate}}\r\n    </h1>\r\n    <!--<button mat-button mat-dialog-close>\r\n        <mat-icon>close</mat-icon>\r\n    </button>-->\r\n</mat-card>\r\n<mat-dialog-content cdkFocusInitial tabindex=\"-1\" class=\"mat-dialog-popup\">\r\n    <form [formGroup]=\"newPatientForm\" class=\"dialog-form\" autocomplete=\"off\">\r\n        <mat-tab-group [(selectedIndex)]=\"selectedIndex\" (selectedTabChange)=\"tabChanged($event)\">\r\n            <!--Patient Demographics Tab-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.patient_demo'|translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.patient_id\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control editplaceholder\"\r\n                            [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn')  &&  newPatientForm.get('patient_id_mrn').touched && newPatientForm.get('patient_id_mrn').value != '' ? 'error-msg': ''\">\r\n                            <input matInput formControlName=\"patient_id_mrn\" minlength=\"3\" maxlength=\"13\"\r\n                                [class.disabled]=\"isEdit\" [readonly]=\"isEdit\"\r\n                                *ngIf=\"selectedTab === 'ACTIVE_PATIENT' || isEdit\" name=\"option\"\r\n                                [matAutocomplete]=\"discharged\" (keyup)=\"fetchPatientDetails($event, 'keyup')\"\r\n                                (paste)=\"fetchPatientDetails($event, 'paste')\" (keypress)=\"alphaNumericsOnly($event)\" />\r\n                            <mat-autocomplete #discharged=\"matAutocomplete\" (optionSelected)=\"patientSelected($event)\">\r\n                                <mat-option *ngFor=\"let dischargedPatient of dischargedPatients\"\r\n                                    [value]=\"dischargedPatient.patient_id_mrn\">\r\n                                    {{dischargedPatient.patient_id_mrn}} - {{dischargedPatient.first_name}}\r\n                                    {{dischargedPatient.last_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput\r\n                                formControlName=\"patient_id_mrn\" name=\"option\" [matAutocomplete]=\"auto\" minlength=\"3\"\r\n                                maxlength=\"13\" *ngIf=\"selectedTab === 'ASSIGN_PATIENT'\" (blur)=\"populatePatient($event)\"\r\n                                (keyup)=\"searchPatient($event, 'keyup')\" (paste)=\"searchPatient($event, 'paste')\"\r\n                                (keypress)=\"alphaNumericsOnly($event)\">\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onOptionSelected($event)\">\r\n                                <mat-option *ngFor=\"let patient of patientData\" [value]=\"patient.patient_id_mrn\">\r\n                                    {{patient.patient_id_mrn}} - {{patient.first_name}} {{patient.last_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <mat-error\r\n                                *ngIf=\"!newPatientForm.get('patient_id_mrn').hasError('required') && newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn')\">\r\n                                {{\"active-patients-module.errors.invalidpatient_id_mrnPattern\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('patient_id_mrn').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error\r\n                                *ngIf=\"newPatientForm.get('patient_id_mrn').hasError('minlength') && !newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn')\">\r\n                                {{\"active-patients-module.errors.minLength\" | translate}}\r\n                            </mat-error>\r\n                            <mat-icon class=\"cursor-pointer\" color=\"primary\"\r\n                                *ngIf=\"(isSelectedFromAuto || autoCompleted) && loadState !== 'LOADING'\"\r\n                                (click)=\"onClickClearAuto()\" matSuffix>\r\n                                close</mat-icon>\r\n                            <mat-progress-spinner diameter=\"30\" strokeWidth=\"3\" *ngIf=\"loadState === 'LOADING'\"\r\n                                mode=\"indeterminate\" color=\"primary\" matSuffix></mat-progress-spinner>\r\n                        </mat-form-field>\r\n                        <mat-hint\r\n                            *ngIf=\"!newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn') || newPatientForm.get('patient_id_mrn').hasError('required')\"\r\n                            class=\"auto-gen d-flex\"\r\n                            [ngClass]=\"selectedTab === 'ASSIGN_PATIENT' ? 'justify-content-between' : 'justify-content-end'\">\r\n\r\n                            <div>\r\n                                <span\r\n                                    *ngIf=\"selectedTab === 'ASSIGN_PATIENT' && !isSelectedFromAuto && !isEdit && !newPatientForm.get('patient_id_mrn').hasError('validatepatient_id_mrn') && !(newPatientForm.get('patient_id_mrn').hasError('required') && newPatientForm.get('patient_id_mrn').touched) && !newPatientForm.get('patient_id_mrn').hasError('minlength')\">\r\n                                    {{ \"active-patients-module.form_label.id_desc_assign\" | translate }}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"cursor-pointer\" (click)=\"getAutogeneratedPatientId()\"\r\n                                *ngIf=\"!isEdit && !isSelectedFromAuto && !autoCompleted\"><img\r\n                                    src=\"assets/icons/refresh-icon.svg\" alt=\"image\" class=\"me-1\" /> {{\r\n                                \"active-patients-module.form_label.autogenerate_new_id\" | translate }}\r\n                            </div>\r\n                        </mat-hint>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.first_name\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('first_name').hasError('pattern') && newPatientForm.get('first_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"first_name\"\r\n                                (keypress)=\"charsOnly('first_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('invalidRange') \">\r\n                                {{\"First \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.last_name\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"last_name\"\r\n                                (keypress)=\"charsOnly('last_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"26\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('required')\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('invalidRange')\">\r\n                                {{\"Last \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.dob\" | translate }}\r\n                                    <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                                    <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                        \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                                </mat-label>\r\n                                <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                                    <input matInput formControlName=\"dob\" [matDatepicker]=\"picker\" [min]=\"minDOB\"\r\n                                        [max]=\"maxDOB\" (click)=\"picker.open()\" [(ngModel)]=\"dob\" [placeholder]=\"dob\"\r\n                                        (dateChange)=\"calculateAge()\" />\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\" class=\"matdate-picker\">\r\n                                    </mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker></mat-datepicker>\r\n                                    <mat-error>\r\n                                        <mat-error *ngIf=\"newPatientForm.get('dob').hasError('required') && submitted\">\r\n                                            {{\"active-patients-module.errors.required\" | translate}}\r\n                                        </mat-error>\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <mat-label class=\"matlabel\">\r\n                                    {{ \"active-patients-module.form_label.age\" | translate }}\r\n                                </mat-label>\r\n                                <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                                    <input autocomplete=\"off\" matInput formControlName=\"age\" [(ngModel)]=\"age\"\r\n                                        (focusout)=\"getdob()\" (keypress)=\"numericsOnly('age', $event)\"\r\n                                        [readonly]=\"isEdit\" class=\"firstName\" maxlength=\"3\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.gender\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"sex\">\r\n                                <mat-option value=\"M\">Male</mat-option>\r\n                                <mat-option value=\"F\">Female</mat-option>\r\n                                <!-- <mat-option value=\"OTHER\">Other</mat-option> -->\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('sex').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\" for=\"email\">{{ \"active-patients-module.form_label.weight\" |\r\n                            translate }}\r\n                        </mat-label>\r\n                        <div class=\"d-flex\">\r\n                            <mat-form-field appearance=\"fill\" class=\"formfield-control\"\r\n                                [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                                <input autocomplete=\"off\" matInput type=\"text\" formControlName=\"weight\"\r\n                                    [maxlength]=\"320\" id=\"weight\" style=\"width: 90%;\" />\r\n                                <span class=\"text-danger text-end\">\r\n                                    <mat-select formControlName=\"weightUnit\" style=\"width: 10%;\" [disabled]=\"true\"\r\n                                        [(ngModel)]=\"this.weightUnit\" [compareWith]=\"ignoreCase\"\r\n                                        (selectionChange)=\"onWeightUnitChange()\">\r\n                                        <mat-option value=\"KG\">KG</mat-option>\r\n                                        <mat-option value=\"POUND\">POUND</mat-option>\r\n                                    </mat-select>\r\n                                </span>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\" for=\"email\">{{ \"active-patients-module.form_label.height\" |\r\n                            translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput type=\"text\" formControlName=\"height\" [maxlength]=\"320\"\r\n                                id=\"height\" style=\"width: 85%;\" />\r\n                            <span class=\"text-danger text-end\">\r\n                                <mat-select formControlName=\"heightUnit\" style=\"width: 15%;\" [disabled]=\"true\"\r\n                                    [compareWith]=\"ignoreCase\" [(ngModel)]=\"this.heightUnit\"\r\n                                    (selectionChange)=\"onHeightUnitChange()\">\r\n                                    <mat-option value=\"CM\">CM</mat-option>\r\n                                    <mat-option value=\"INCH\">INCH</mat-option>\r\n                                </mat-select>\r\n                            </span>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('patient_id_mrn').hasError('required')||newPatientForm.get('first_name').hasError('required')||newPatientForm.get('last_name').hasError('required')||newPatientForm.get('dob').hasError('required')||newPatientForm.get('sex').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" >\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Patient Contact Tab-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.patient_contact'|translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.primary_contact\" | translate                         }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('mobile').hasError('required') && newPatientForm.get('mobile').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"mobile\"\r\n                                (keypress)=\"numericsOnly('mobile', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"10\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('mobile').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <!-- <mat-label class=\"matsection_heading\">\r\n                    <p></p>\r\n                </mat-label> -->\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.email\" | translate }}\r\n\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('email').hasError('email') && newPatientForm.get('email').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"email\" [readonly]=\"isEdit\"\r\n                                class=\"firstName\" maxlength=\"50\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('email').hasError('email')\">\r\n                                {{ \"admit-patients-module.errors.invalid_email\" | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.country\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n                            <mat-select formControlName=\"country\" (selectionChange)=\"getStatesByCountry($event)\">\r\n                                <mat-option *ngFor=\"let country of countryArray\"\r\n                                    value=\"{{ getCountryValues(country) }}\">\r\n                                    {{ country['name'] }}\r\n                                    ({{ country['flag'] }})\r\n                                </mat-option>\r\n                             \r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('country').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('first_name').hasError('invalidRange') \">\r\n                                {{\"First \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.zip_code\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"zip_code\"\r\n                                (keypress)=\"numericsOnly('zip_code', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"6\" />\r\n                            <mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('mustNumbersOnly')\">\r\n                                    {{\"active-patients-module.errors.mustNumbersOnly\" | translate}}\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('zip_code').hasError('required') && submitted\">\r\n                                    {{\"active-patients-module.errors.required\" | translate}}\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('last_name').hasError('invalidRange')\">\r\n                                    {{\"Last \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                                </mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 ps-0 pe-0\">\r\n                    <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.street_addr1\" | translate }}\r\n\r\n                        <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                            \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                        [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                        <input autocomplete=\"off\" matInput formControlName=\"street_address_1\" [readonly]=\"isEdit\"\r\n                            class=\"firstName\" maxlength=\"25\" />\r\n\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-12 ps-0 pe-0\">\r\n                    <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.street_addr2\" | translate }}\r\n\r\n                        <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                            \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                    </mat-label>\r\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                        [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                        <input autocomplete=\"off\" matInput formControlName=\"street_address_2\" [readonly]=\"isEdit\"\r\n                            class=\"firstName\" maxlength=\"25\" />\r\n\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.state\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n\r\n                            <input matInput formControlName=\"state\" minlength=\"2\" maxlength=\"64\"\r\n                                [matAutocomplete]=\"state\" [required]=\"statesOfCountry.length > 0\" />\r\n                            <mat-autocomplete #state=\"matAutocomplete\"\r\n                                (optionSelected)=\"getCityByStateAndCountry($event)\">\r\n                                <mat-option\r\n                                    *ngFor=\"let state of filteredResults(statesOfCountry, 'name', newPatientForm.value.state)\"\r\n                                    value=\"{{ state['name'] }}\">{{ state['name'] }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('state').hasError('mustCharsOnly')\">\r\n                                    {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"newPatientForm.get('state').hasError('required') && submitted\">\r\n                                    {{\"active-patients-module.errors.required\" | translate}}\r\n                                </mat-error>\r\n                            </mat-error>\r\n\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 pe-0\">\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.city\" | translate }}\r\n                            <span class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"city\" minlength=\"2\" maxlength=\"64\"\r\n                                [matAutocomplete]=\"city\" />\r\n                            <mat-autocomplete #city=\"matAutocomplete\">\r\n                                <mat-option\r\n                                    *ngFor=\"let city of filteredResults(citiesOfStateAndCountry, 'name', newPatientForm.value.city)\"\r\n                                    value=\"{{ city['name'] }}\">{{ city['name'] }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <mat-error *ngIf=\"newPatientForm.get('city').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('city').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.emergency_contact_name\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"em_contact_name\"\r\n                                (keypress)=\"charsOnly('em_contact_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <!-- <mat-label class=\"matsection_heading\">\r\n                    <p></p>\r\n                </mat-label> -->\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.emergency_contact_number\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"em_contact_number\"\r\n                                (keypress)=\"numericsOnly('em_contact_number', $event)\" [readonly]=\"isEdit\"\r\n                                class=\"firstName\" maxlength=\"25\" />\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('mobile').hasError('required')||newPatientForm.get('country').hasError('required')||newPatientForm.get('zip_code').hasError('required')||newPatientForm.get('state').hasError('required')||newPatientForm.get('city').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Provider Info-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.provider_info'|translate\">\r\n                <div class=\"row separate-line\">\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.prescribing_physician\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"fk_prescriber\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of prescriberList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('fk_prescriber').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.referal_physician\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"fk_r_doctor\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of clinicUsers() | async\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('fk_r_doctor').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.interp_physician\" | translate\r\n                            }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"final_approver_id\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of interpreterList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error\r\n                                *ngIf=\"newPatientForm.get('final_approver_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.prelim_interp_physician\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"pri_approver_id\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of technicianList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('pri_approver_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.technician\" | translate }}\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"fk_technician\">\r\n                                <mat-option [value]=\"user?.id\" *ngFor=\"let user of technicianList\">\r\n                                    {{user?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('pri_approver_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('fk_prescriber').hasError('required')||newPatientForm.get('fk_r_doctor').hasError('required')||newPatientForm.get('final_approver_id').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Procedure Info-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.procedure_info' | translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.prescription_id\" | translate\r\n                            }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"prescription_id\"\r\n                                (keypress)=\"charsOnly('last_name', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('prescription_id').hasError('mustCharsOnly')\">\r\n                                {{\"active-patients-module.errors.mustCharsOnly\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('prescription_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('prescription_id').hasError('invalidRange')\">\r\n                                {{\"Last \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.order_id\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('order_id').hasError('required') && newPatientForm.get('order_id').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"order_id\"\r\n                                (keypress)=\"charsOnly('order_id', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('order_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('order_id').hasError('invalidRange') \">\r\n                                {{\"First \"+(\"active-patients-module.errors.invalid_range_for_name\" | translate)}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-12 pd-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.primary_indication\" |\r\n                            translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                            <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                                \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('primary_indication').hasError('required') && newPatientForm.get('primary_indication').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"primary_indication\"\r\n                                [readonly]=\"isEdit\" class=\"firstName\" maxlength=\"25\" />\r\n                            <mat-error *ngIf=\"newPatientForm.get('primary_indication').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.biosensor_id\" | translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"patchIds\" type=\"text\" minlength=\"5\"\r\n                                maxlength=\"5\" (keypress)=\"alphaNumericsOnly($event)\"\r\n                                [readonly]=\"isEdit || selectedTab === 'ASSIGN_PATIENT'\"\r\n                                (click)=\"(isEdit || selectedTab === 'ASSIGN_PATIENT') ? openMoreInfoDialog() : ''\" />\r\n\r\n                            <mat-error\r\n                                *ngIf=\"(newPatientForm.get('patchIds').hasError('maxlength') || newPatientForm.get('patchIds').hasError('minlength')) && !newPatientForm.get('patchIds').hasError('biosensorPattern')\">\r\n                                {{\"active-patients-module.errors.biosensorLength\" | translate}}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"newPatientForm.get('patchIds').hasError('biosensorPattern')\">\r\n                                {{\"active-patients-module.errors.biosensorPattern\" | translate}}\r\n                            </mat-error>\r\n                            <button mat-flat-button matSuffix type=\"button\" color=\"primary\" (click)=\"openMoreInfoDialog()\" class=\"biosenser-checked\">\r\n                                <img src=\"assets/icons/plus.png\">\r\n                            </button>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div>\r\n                            <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.procedure_duration\" | translate }}\r\n                                <span class=\"required-field\">*</span>\r\n                            </mat-label>\r\n                            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                                <mat-select formControlName=\"total_monitoring_duration\">\r\n                                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of procDuration() | async\">\r\n                                        {{item?.name}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"newPatientForm.get('total_monitoring_duration').hasError('required') && submitted\">\r\n                                    {{\"active-patients-module.errors.required\" | translate}}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.location_group\" | translate }}\r\n                            <span *ngIf=\"!isEdit\" class=\"required-field\">*</span>\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"location\">\r\n                                <mat-option [value]=\"loc?.name\" *ngFor=\"let loc of groupData[0]\">\r\n                                    {{loc?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"newPatientForm.get('order_id').hasError('required') && submitted\">\r\n                                {{\"active-patients-module.errors.required\" | translate}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <div *ngIf=\"newPatientForm.get('prescription_id').hasError('required')||newPatientForm.get('order_id').hasError('required')||newPatientForm.get('primary_indication').hasError('required')||newPatientForm.get('total_monitoring_duration').hasError('required')||newPatientForm.get('location').hasError('required');then thenblock;else elseblock\"></div>\r\n                    <ng-template #thenblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\" [disabled]=\"true\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                    <ng-template #elseblock>\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                            {{ \"active-patients-module.button.next\" | translate }}\r\n                        </button>\r\n                    </ng-template>\r\n                </div>           \r\n            </mat-tab>\r\n\r\n            <!--Additional Info-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.additional_info'| translate\">\r\n                <div class=\"row separate-line\">\r\n                    <div class=\"col-md-12 ps-0 pe-0\">\r\n\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.additional_information\" | translate }}\r\n                  \r\n                    <span *ngIf=\"isEdit\" class=\"required-field cannotEdit\">{{\r\n                        \"active-patients-module.form_label.cannot_edit\" | translate }}</span>\r\n                </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"isEdit\"\r\n                            [ngClass]=\"newPatientForm.get('last_name').hasError('pattern') && newPatientForm.get('last_name').touched ? 'error-msg': ''\">\r\n                            <input autocomplete=\"off\" matInput formControlName=\"additionalInfo\"\r\n                                (keypress)=\"charsOnly('additionalInfo', $event)\" [readonly]=\"isEdit\" class=\"firstName\"\r\n                                maxlength=\"25\" />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6 ps-0\">\r\n                        <div class=\"d-flex\">\r\n                            <input type=\"checkbox\" class=\"mat-checkbox-input mt-3 mb-3\"\r\n                                style=\"display: block !important;\" id=\"mat-checkbox-303-input\" tabindex=\"-1\"\r\n                                aria-label=\"select row NaN\" aria-checked=\"false\" />\r\n                            <label class=\"mt-3 mx-2\">{{ \"active-patients-module.form_label.pacemaker\" | translate\r\n                                }}</label>\r\n                        </div>\r\n                        <div class=\"d-flex\">\r\n                            <input type=\"checkbox\" class=\"mat-checkbox-input mb-3\" style=\"display: block !important;\"\r\n                                id=\"mat-checkbox-303-input\" tabindex=\"-1\" aria-label=\"select row NaN\"\r\n                                aria-checked=\"false\" />\r\n                            <label class=\" mx-2\">{{ \"active-patients-module.form_label.icd\" | translate }}</label>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"nextStep()\" type=\"button\">\r\n                        {{ \"active-patients-module.button.next\" | translate }}\r\n                    </button>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <!--Billing Info Tab-->\r\n            <mat-tab [label]=\"'admit-patients-module.form_label.billing_info'| translate\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.billing_indication\" | translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"billingIndication\">\r\n                                <mat-option [value]=\"type?.id\" *ngFor=\"let type of billingIndications() | async\">\r\n                                    {{type?.name}}\r\n                                </mat-option>\r\n                            </mat-select>                            \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <mat-label class=\"matlabel\">{{ \"active-patients-module.form_label.billing_method\" | translate }}\r\n                        </mat-label>\r\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\r\n                            <mat-select formControlName=\"billingMethod\">\r\n                                <mat-option [value]=\"method?.id\" *ngFor=\"let method of billingMethods() | async\">\r\n                                    {{method?.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mx-4\" align=\"end\">\r\n                    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n                        {{ \"active-patients-module.button.cancel\" | translate }}\r\n                    </button>\r\n                    <span (click)=\"submitted=true\">\r\n                        <button mat-flat-button color=\"primary\" class=\"fill-btn\"\r\n                            (click)=\"savePatientDetails(newPatientForm)\">\r\n                            {{ \"active-patients-module.button.save\" | translate }}\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n        <div class=\"required-all\">\r\n            <span>{{\"active-patients-module.form_label.mandatory\" | translate}}</span>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<!-- <mat-dialog-actions class=\"mx-4\">\r\n    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n        {{ \"active-patients-module.button.cancel\" | translate }}\r\n    </button>\r\n    <span (click)=\"submitted=true\">\r\n        <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"savePatientDetails(newPatientForm)\">\r\n            {{ \"active-patients-module.button.next\" | translate }}\r\n        </button>\r\n    </span>\r\n</mat-dialog-actions> -->","import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport {FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MatDialog,\r\n} from \"@angular/material/dialog\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\n\r\nimport {\r\n  calculateDischargedDate,\r\n  createNewPatientForm, epochToDate, getDateFromString, getGender,\r\n  mapIndividiualToAdmitPatient,\r\n  populateAdmitPatientValues,\r\n  populateAssignPatientValues,\r\n} from \"../forms/active-patients.form\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport {\r\n  DOCTORS,\r\n  NewPatient2,\r\n  ActivePatient,\r\n  WeightUnits,\r\n  HeightUnits,\r\n} from \"../models/active-patients.model\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { BehaviorSubject, of, Subject, Subscription } from \"rxjs\";\r\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\r\nimport {  map } from \"rxjs/operators\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { LSvalidators } from \"src/app/shared/lsValidators/lsvalidators\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { UserPreferenceService } from \"@services/user-preference.service\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\r\nimport csc from \"country-state-city\";\r\nimport axios from 'axios';\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\n\r\n@Component({\r\n  selector: \"app-admit-patient-modal\",\r\n  templateUrl: \"./admit-patient-modal.component.html\",\r\n  styleUrls: [\"./admit-patient-modal.component.scss\"],\r\n})\r\nexport class AdmitPatientModalComponent implements OnInit, AfterContentInit, OnDestroy{\r\n  form: FormGroup;\r\n  public newPatientForm: FormGroup;\r\n  public doctorsList$: Observable<DOCTORS[]>;\r\n  private doctorsList$$: BehaviorSubject<DOCTORS[]> = new BehaviorSubject<DOCTORS[]>([]);\r\n  private cGroup$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<any[]>;\r\n  public locationGroups$: Observable<any[]>;\r\n  public clinicalGroups$: Observable<any[]>;\r\n  public thirdPartyDevice: Array<any> = new Array();\r\n  SearchCountryField = SearchCountryField;\r\n  CountryISO = CountryISO;\r\n  preferredCountries: CountryISO[] = [\r\n    CountryISO.India,\r\n    CountryISO.UnitedStates,\r\n    CountryISO.SouthAfrica,\r\n  ];\r\n  countryArray = [];\r\n  statesOfCountry = [];\r\n  selectedCountry: string;\r\n  countryCode: string;\r\n  selectedState: string;\r\n  stateCode: string;\r\n  citiesOfStateAndCountry = [];\r\n  selectedCountryData = [];\r\n  selectedStateData = [];\r\n  selectedCityData = [];\r\n  \r\n  thirdPartyDevice_entered: boolean[] = [false];\r\n  selectGroup = [{name: 'None', groupId: null, parent: 'ROOT', type: null}];\r\n  admissionId = '';\r\n  admissionIdCopy = '';\r\n  today = new Date();\r\n  minAdmitDate = new Date();\r\n  maxAdmitDate;\r\n  maxDOB = new Date();\r\n  minDOB = new Date();\r\n  selectedTab: string = 'ACTIVE_PATIENT';\r\n  patientIDChanged: Subject<string> = new Subject<string>();\r\n  patientData: Array<any> = new Array();\r\n  modalTitle: string = '';\r\n  userPreferenceUnit = 'SI';\r\n  weightUnit = \"KG\";\r\n  heightUnit = \"CM\";\r\n  autoCompleted = false;\r\n  patientvalidated =true;\r\n  minMaxValues = {\r\n    weight: {\r\n      KG: {\r\n        min: 20,\r\n        max: 250\r\n      },\r\n      POUND: {\r\n        min: 44,\r\n        max: 552\r\n      }\r\n    },\r\n    height: {\r\n      CM: {\r\n        min: 80,\r\n        max: 300\r\n      },\r\n      INCH: {\r\n        min: 31.5,\r\n        max: 119\r\n      }\r\n    }\r\n  }\r\n  submitted = false;\r\n  doctorsList = [];\r\n  prescriberList = [];\r\n  technicianList = [];\r\n  interpreterList = [];\r\n  activeDoctorsList = [];\r\n  dischargedPatients = [];\r\n  groups = [];\r\n  autoFilledPatient;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<AdmitPatientModalComponent>,\r\n    public formbuilder: FormBuilder,\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private manageGroupService: ManageGroupsService,\r\n    private snackbar: SnackbarService,\r\n    private userPreferences: UserPreferenceService\r\n  ) {\r\n    this.minAdmitDate.setDate(this.minAdmitDate.getDate() - 30);\r\n    this.maxDOB.setFullYear(this.minAdmitDate.getFullYear() - 10);\r\n    this.minDOB.setFullYear(this.minAdmitDate.getFullYear() - 150);\r\n    this.doctorsList$ = this.doctorsList$$.asObservable();\r\n    this.groups$ = this.cGroup$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: any[]) => {\r\n      return this.selectGroup.concat(groups.filter(g => g.type === \"PHYSICAL\"))\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: any[]) => {\r\n      return this.selectGroup.concat(groups.filter(g => g.type === \"CLINICAL\"))\r\n    }));\r\n    this.heightUnit = this.userPreferences.getUserHeightUnit();\r\n    this.weightUnit = this.userPreferences.getUserWeightUnit();\r\n    this.userPreferenceUnit = this.userPreferences.getUserUnitSystem();\r\n  }\r\n  ngAfterContentInit(): void {\r\n    //Set up some provider choices\r\n    this.prescriberList = this.service.getFacilityStaff('prescriber'); \r\n    this.technicianList = this.service.getFacilityStaff('ecg_technician'); \r\n    this.interpreterList = this.service.getFacilityStaff('interpreter');\r\n    this.newPatientForm = createNewPatientForm(this.formbuilder, this.weightUnit, this.heightUnit, this.admissionId, this.timeZone, this.timeZoneOffset);\r\n  }\r\n\r\n  age:number;\r\n  dob:string;\r\n  country:string;\r\n  state: string;\r\n  city: string;\r\n  selectedIndex:number=0;\r\n  groupData=[];\r\n  \r\n  calculateAge(): number {\r\n      const day = new Date(this.dob).getDate();\r\n      const month = new Date(this.dob).getMonth() + 1;\r\n      const year = new Date(this.dob).getFullYear();\r\n      const test = `${year}-${month}-${day}`;\r\n    console.log(test);\r\n    const today = new Date();\r\n    const birthDate = new Date(this.dob);\r\n  \r\n    this.age  = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n  \r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n      this.age--;\r\n    }\r\n    return this.age;\r\n  }\r\n\r\n  getdob(){\r\n    var currentYear = new Date().getFullYear();\r\n\r\n    var birthYear = currentYear - this.age ;\r\n    var dateOfBirth = new Date(birthYear, 0, 2); \r\n    var options = { \r\n      year: 'numeric', \r\n      month: '2-digit', \r\n      day: '2-digit',\r\n      timeZone: 'UTC' \r\n    };\r\n    \r\n    this.dob = dateOfBirth.toLocaleDateString('en-US', options as Intl.DateTimeFormatOptions);\r\n  }\r\n\r\n  setupCountryStateCity() {\r\n    this.countryArray = csc.getAllCountries() || [];\r\n    try {\r\n      this.selectedCountryData = this.countryArray.filter((data) => {\r\n        return data.name === this.country;\r\n      });\r\n      this.countryCode = this.selectedCountryData[0]?.isoCode;\r\n      this.statesOfCountry =\r\n        csc.getStatesOfCountry(this.selectedCountryData[0]?.isoCode) || [];\r\n      this.selectedStateData = this.statesOfCountry.filter((data) => {\r\n        return data.name === this.state;\r\n      });\r\n      this.stateCode = this.selectedStateData[0]?.isoCode;\r\n      this.citiesOfStateAndCountry =\r\n        csc.getCitiesOfState(this.countryCode, this.stateCode) || [];\r\n      this.selectedCityData = this.citiesOfStateAndCountry.filter((data) => {\r\n        return data.name === this.city;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n    getCountryValues(country) {\r\n      return country.isoCode + \"|\" + country.name;\r\n    }\r\n\r\n    getStatesByCountry(event) {\r\n      try {\r\n        const domValue = event.value;\r\n        this.countryCode = domValue.split(\"|\")[0];\r\n        this.selectedCountry = domValue.split(\"|\")[1];\r\n        this.selectedCountryData = this.countryArray.filter((data) => {\r\n          return data.name === this.selectedCountry;\r\n        });\r\n        this.statesOfCountry = csc.getStatesOfCountry(this.countryCode);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    getCityByStateAndCountry(event) {\r\n      this.selectedState = event.option.value;\r\n      this.stateCode = this.statesOfCountry.find(state => state.name === this.selectedState)?.isoCode || '';\r\n      this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n        this.countryCode,\r\n        this.stateCode\r\n      );\r\n    }\r\n\r\n    getGroupDetails() {\r\n      this.manageGroupService.fetch().subscribe(groups => {\r\n        if (groups['data'].length > 0) {\r\n          this.groupData.push(groups['data']);\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n    filteredResults(items, key, searchTxt) {\r\n      if(!items || !items.length) return items;\r\n      if(!searchTxt || !searchTxt.length) return items;\r\n      return items.filter(item => {\r\n        return item[key].toString().toLowerCase().indexOf(searchTxt.toLowerCase()) > -1\r\n      });\r\n    }\r\n\r\n    public tabChanged(tabChangeEvent: MatTabChangeEvent): void {\r\n        this.selectedIndex = tabChangeEvent.index;\r\n    }\r\n\r\n    public nextStep() {\r\n        this.selectedIndex += 1;\r\n    }\r\n\r\n  loadState = 'DEFAULT';\r\n  error: any;\r\n  patientIDChangedSub: Subscription;\r\n  patientId: string;\r\n  isEdit = false;\r\n  timeZone;\r\n  timeZoneOffset;\r\n\r\n  ngOnInit(): void {\r\n    // this.setupCountryStateCity();\r\n    this.getGroupDetails();\r\n    if (this.data?.activePatient) {\r\n      this.selectedTab = 'ACTIVE_PATIENT';\r\n    } else if (this.data?.patchId) {\r\n      this.selectedTab = 'ASSIGN_PATIENT';\r\n    }\r\n    if (this.data?.mode === 'EDIT') {\r\n      this.isEdit = true;\r\n    }\r\n    if(!this.isEdit) {\r\n      this.generateAdmissionId();\r\n    }\r\n    this.userPreferenceUnit = this.userPreferences.getUserUnitSystem();\r\n    if(this.userPreferenceUnit === 'IS') {\r\n      this.weightUnit = \"POUND\";\r\n      this.heightUnit = \"INCH\";\r\n    }\r\n    this.updateModalTitle();\r\n    // this.timeZone = sessionStorage.getItem('timezone');\r\n    this.timeZoneOffset = this.userPreferences.getUserTimeZone();\r\n    this.getDoctorsList();\r\n    this.getCGroups();\r\n    this.maxAdmitDate = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    this.setupCountryStateCity();\r\n    \r\n  }\r\n\r\n  getMaxAdmitTime() {\r\n    let current = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    return current < this.maxAdmitDate ? current : this.maxAdmitDate;\r\n  }\r\n  getMinAdmitTime() {\r\n    return this.minAdmitDate < this.maxAdmitDate ? this.minAdmitDate : this.maxAdmitDate;\r\n  }\r\n  generateAdmissionId(){\r\n    this.service.generateAdmissionId()\r\n        .subscribe((res: any) => {\r\n          this.admissionId = res.data;\r\n          this.admissionIdCopy = res.data; \r\n        });\r\n  }\r\n  updateModalTitle() {\r\n    this.modalTitle = (this.selectedTab === 'ACTIVE_PATIENT') ? \r\n                        ((this.isEdit) ? 'active-patients-module.table.edit_patient_title' : \r\n                          'active-patients-module.table.admit_patient_title') : \r\n                        'active-patients-module.table.assign_patient_title';\r\n  }\r\n\r\n  searchPatient(event, type) {\r\n    let patientId;\r\n    if(type === 'keyup') {\r\n      patientId = event.target.value;\r\n    } else {\r\n      patientId = event.clipboardData.getData('text');\r\n    }\r\n    if (patientId.length > 3) {\r\n      this.patientvalidated = false;\r\n      this.service.searchPatient(patientId)\r\n        .subscribe((res: any) => {\r\n          this.patientData = res.data.items;\r\n          this.patientvalidated = true;\r\n        }, (error) => {\r\n          this.error = error;\r\n          this.patientvalidated = true;\r\n        },\r\n        );\r\n    }else{\r\n      this.patientData =[];\r\n      this.patientvalidated = true;\r\n    }\r\n  }\r\n\r\n  populatePatient(event) {\r\n    if (this.patientData?.length && this.patientData[0]?.patientId.toUpperCase() === event.target.value.toUpperCase()) {\r\n      this.patientvalidated = false;\r\n      let event = { option: { value: this.patientData[0]?.patientId } }\r\n      this.onOptionSelected(event);\r\n    }\r\n}\r\n\r\n  getPatientDataOf(id) {\r\n    this.patientData = [];\r\n    let url = `patients/?sortBy=PatientID:desc&page=1&size=5&patientid=${id}`\r\n    this.manager.getActivePatient(url);\r\n    return this.manager.selectActivePatient();\r\n  }\r\n\r\n  groupsSubscription: Subscription;\r\n  getCGroups() {\r\n    this.groupsSubscription = this.manageGroupService.fetch().subscribe(groups => {\r\n      this.groups = groups['data'];\r\n      if (groups['data'].length > 0) {\r\n        this.cGroup$.next(groups['data']);\r\n      }\r\n      this.initNewPatientForm();\r\n    })\r\n  }\r\n\r\n  /* Clear Select on location and Clinclical */\r\n  clearSelect(controlName, event) {\r\n    event.stopPropagation();\r\n    this.newPatientForm.get(controlName).setValue(null);\r\n  }\r\n\r\n  addClass(event: KeyboardEvent, i: number): void {\r\n    this.thirdPartyDevice_entered[i] = true;\r\n  }\r\n\r\n  initNewPatientForm() {\r\n    if (this.data?.activePatient) {\r\n      this.data.activePatient = this.updateHeightWeight(this.data?.activePatient);\r\n      this.patchIds = this.data?.activePatient?.patchIds;\r\n      if(!this.groups.find(group => group.groupId === this.data?.activePatient?.cgroupId) && this.data?.activePatient?.cgroupId) {\r\n        let patientGroup = {groupId: this.data?.activePatient?.cGroup.id, name: this.data?.activePatient?.cGroup.name, type: 'CLINICAL'}\r\n        this.groups = [patientGroup, ...this.groups];\r\n        console.log('gps', this.groups);\r\n        this.cGroup$.next(this.groups);\r\n      }\r\n      if(!this.groups.find(group => group.groupId === this.data?.activePatient?.pgroupId) && this.data?.activePatient?.pgroupId) {\r\n        let patientGroup = {groupId: this.data?.activePatient?.pGroup.id, name: this.data?.activePatient?.pGroup.name, type: 'PHYSICAL'}\r\n        this.groups = [patientGroup, ...this.groups];\r\n        this.cGroup$.next(this.groups);\r\n      }\r\n      if(this.patchIds.length && this.patchIds[0]?.startTime) {\r\n        this.maxAdmitDate = new Date(new Date(this.patchIds[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n        // if(this.patchIds[0]?.startTime < this.data?.activePatient?.startedOn) {\r\n        //   this.data.activePatient.startedOn = this.patchIds[0]?.startTime;\r\n        // }\r\n      }\r\n\r\n      populateAdmitPatientValues(\r\n        this.data?.activePatient,\r\n        this.newPatientForm,\r\n        this.doctorsList$$.getValue(),\r\n        this.cGroup$.getValue(),\r\n          this.weightUnit,\r\n          this.heightUnit,\r\n          this.timeZone\r\n      );\r\n      this.newPatientForm.markAllAsTouched();\r\n    } else if (this.data?.patchId) {\r\n      let biosensor = this.data?.patchId;\r\n      if(!this.patchIds?.length) {\r\n        this.patchIds.push({\r\n          deviceId: biosensor?.patchId,\r\n          deviceType: \"Biosensor Id\",\r\n          startTime: biosensor?.patchDetails[0]?.startTime,\r\n          endTime: biosensor?.patchDetails[0]?.endTime\r\n        });\r\n      }\r\n      this.maxAdmitDate = new Date(new Date(biosensor?.patchDetails[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n\r\n      populateAssignPatientValues(this.data?.patchId, this.newPatientForm,\r\n        this.doctorsList$$.getValue(), this.admissionId, this.maxAdmitDate)\r\n    } else {\r\n      this.newPatientForm = createNewPatientForm(this.formbuilder, this.weightUnit, this.heightUnit, this.admissionId, this.timeZone, this.timeZoneOffset);\r\n      this.newPatientForm.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  patchIds: Array<any> = new Array();\r\n  openMoreInfoDialog() {\r\n    let patches = {\r\n      activePatch: this.data?.activePatient?.activePatch || '',\r\n      patchIds: this.patchIds,\r\n      heading: \"active-patients-module.dialog.biosensor_information\",\r\n      readOnly: this.selectedTab === 'ASSIGN_PATIENT'\r\n    }\r\n    this.dialog.open(PatientMoreInfoDialogComponent, {\r\n      width: \"700px\",\r\n      //minWidth: \"700px\",\r\n      maxWidth: \"95vw\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: patches\r\n    }).afterClosed()\r\n      .subscribe(response => {\r\n        if (response) {\r\n          this.patchIds = response;\r\n          this.newPatientForm.get(\"patchIds\").setValue(response[0]?.deviceId)\r\n        }\r\n      });\r\n  }\r\n\r\n  getActivePatch() {\r\n    if(this.data?.activePatient) {\r\n      return this.data?.activePatient?.activePatch\r\n    } \r\n  }\r\n\r\n  getAutogeneratedPatientId() {\r\n    this.service.getAutogeneratedPatientId().subscribe(d => {\r\n      this.newPatientForm.get(\"patient_id_mrn\").setValue(d['data']);\r\n    }, error => {\r\n      if (error) {\r\n        let key = \"errors.err_generic_message\";\r\n        if (error === 'AUTO_GENERATE_NOT_ENABLED') {\r\n          key = \"errors.\" + error;\r\n        }\r\n        this.snackbar.openSnackBar(key, 'bottom', 'center', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  doctorsListSub: Subscription;\r\n  getDoctorsList() {\r\n    /*\r\n    this.doctorsListSub = this.manager.getDoctorsList().subscribe((list) => {\r\n      console.log(list);\r\n      this.doctorsList = list.map(doctor => {\r\n        return {\r\n          ...doctor,\r\n          displayName: `${doctor?.firstName} ${doctor?.lastName}`\r\n        }\r\n      });\r\n      console.log(this.doctorsList);\r\n      this.activeDoctorsList = this.doctorsList.filter(phy => phy.isActive === true || phy.id === this.data?.activePatient?.doctorId);\r\n      this.doctorsList$$.next(this.activeDoctorsList);\r\n    });\r\n    */\r\n  }\r\n\r\n    savePatientDetails(formData) {\r\n    this.submitted = true;\r\n    if(this.newPatientForm.invalid) {\r\n      this.newPatientForm.markAllAsTouched();\r\n      return;\r\n    } else if (!this.patientvalidated || this.patientData?.length) {\r\n      this.snackbar.openSnackBar(\"errors.assigned_patient_id_searching\", 'bottom', 'center', true);\r\n      if (this.patientData[0]?.patient_id_mrn.toUpperCase() === this.newPatientForm?.controls['patient_id_mrn']?.value.toUpperCase()) {\r\n        this.onOptionSelected({ option: { value: this.patientData[0].patient_id_mrn } });\r\n        this.patientData = [];\r\n        return;\r\n      }\r\n    } else {\r\n      this.setControlState(this.disableFields, true);\r\n      formData = this.newPatientForm;\r\n      formData.value.first_name = formData?.value?.first_name ? formData?.value.first_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n      formData.value.last_name = formData?.value?.last_name ? formData?.value.last_name?.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) : '';\r\n     \r\n      const mobile_num = formData.get(\"mobile\").value;\r\n      if (mobile_num !==null && mobile_num !==\"\") {\r\n        //const parsedValue = parsePhoneNumberFromString(formData.get(\"mobile\").value);\r\n        formData.value.mobile = mobile_num.toString();\r\n      }\r\n      let patient: NewPatient2 = mapIndividiualToAdmitPatient(formData, this.cGroup$.getValue(), this.patchIds, this.timeZoneOffset);\r\n      if (this.data?.mode === 'EDIT' || this.isSelectedFromAuto) {\r\n        this.manager.updatePatient(patient).subscribe((resp: any) => {\r\n          if (resp.addEditState === TableState.SUCCESS) {\r\n            this.dialogRef.close(patient);\r\n          } else if (resp.error) {\r\n            if(this.isSelectedFromAuto) {\r\n              this.setControlState(this.disableFields, false);\r\n            }\r\n            if(this.autoFilledPatient?.isDischarged) {\r\n              this.setControlState(['admissionId'], true);\r\n            }\r\n            this.dispError(resp.error);\r\n          }\r\n        });\r\n      } else {\r\n        this.manager.createPatient(patient).subscribe(resp => {\r\n          if (resp.PATIENT && resp.addEditState === TableState.SUCCESS) {\r\n            this.dialogRef.close(patient);\r\n          } else if (resp.error) {\r\n            this.dispError(resp.error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  dispError(error: string) {\r\n    switch (error) {\r\n      case \"PATCHES_ALREADY_IN_USE\":\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n        break;\r\n      case \"PREVIOUS_ADMISSION_NOT_DISCHARGED\":\r\n        this.snackbar.openSnackBar(\"errors.prev_admission_not_discharged\", 'bottom', 'center', true);\r\n        break;\r\n      case \"PATIENT_ALREADY_DISCHARGED\":\r\n        this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n        break;\r\n      case \"DEVICES_ALREADY_IN_USE\":\r\n        this.snackbar.openSnackBar(\"errors.devices_already_in_use\", 'bottom', 'center', true);\r\n        break;\r\n      case \"ADMISSION_ID_ALREADY_EXIST\":\r\n        this.snackbar.openSnackBar(\"errors.admission_id_exist\", 'bottom', 'center', true);\r\n        break;\r\n      case \"MORE_THAN_ONE_PATCH_STREAMING\" :\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n        break;\r\n      case \"ADMITTED_ON_TIME_IS_INVALID\" :\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n        break;\r\n      case \"PATCH_STATE_STREAMING\" :\r\n        this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n        break;\r\n      default:\r\n        this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n    }\r\n  }\r\n\r\n\r\n  charsOnly(control: string, event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n \r\n  onWeightUnitChange() {\r\n    let weightControl = null;\r\n    weightControl = this.newPatientForm.get(\"weight\");\r\n    if(this.weightUnit === WeightUnits.KG) {\r\n      weightControl.setValidators([LSvalidators.maxWeightKG,LSvalidators.validValueForWeightAndHeight]);\r\n      weightControl.updateValueAndValidity();\r\n    } else if(this.weightUnit === WeightUnits.POUND) {\r\n      weightControl.setValidators([LSvalidators.maxWeightPOUND,LSvalidators.validValueForWeightAndHeight]);\r\n      weightControl.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  onHeightUnitChange() {\r\n    let heightControl = null;\r\n    heightControl = this.newPatientForm.get(\"height\");\r\n    if(this.heightUnit === HeightUnits.CM) {\r\n      heightControl.setValidators([LSvalidators.maxHeightCM,LSvalidators.validValueForWeightAndHeight]);\r\n      heightControl.updateValueAndValidity();\r\n    } else if(this.heightUnit === HeightUnits.INCH) {\r\n      heightControl.setValidators([LSvalidators.maxHeightINCH,LSvalidators.validValueForWeightAndHeight]);\r\n      heightControl.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  numericsOnly(control: string, event: KeyboardEvent) {\r\n    let numericsOnlyPattern = /^[0-9]$/;\r\n    let key = event.key;\r\n    if (numericsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  floatOnly(control: string, event) {\r\n    let floatOnlyPattern = /^[0-9\\.]*$/;\r\n    let key\r\n    if(control === 'keyboard') {\r\n      key = event.key;\r\n    } else {\r\n      key = event.clipboardData.getData('text');\r\n    }\r\n    if (floatOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  bioString: string = \"\";\r\n\r\n  keypressEvent(e: KeyboardEvent) {\r\n    if (this.bioString.length < 5) {\r\n      this.bioString = this.bioString + e.key;\r\n      let blockSpecialRegex = /[~`!@#$%^&()_={}[\\]:;,.<>+\\/?-]/;\r\n      let key = e.key;\r\n      let n = Boolean(this.bioString.charAt(0).match(/[a-zA-Z]/));\r\n      if (!n && this.bioString.length > 0) {\r\n        this.bioString = this.bioString.substring(0, this.bioString.length - 1);\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n\r\n      if (blockSpecialRegex.test(key)) {\r\n        e.preventDefault();\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  keydownEvent(e: KeyboardEvent) {\r\n    if (e.code === \"Backspace\" && this.bioString.length > 0) {\r\n      this.bioString = this.bioString.substring(0, this.bioString.length - 1);\r\n    }\r\n  }\r\n\r\n  newDevice(): FormGroup {\r\n    return this.formbuilder.group({\r\n      deviceId: [{value: null, disabled: this.isDisabled}, Validators.pattern(\"^[a-zA-Z0-9]+$\")],\r\n      deviceType: {value: null, disabled: this.isDisabled},\r\n    });\r\n  }\r\n\r\n  onClickClear(event, group: FormGroup, type) {\r\n    event.stopPropagation();\r\n    this.patientIDChanged.next(null);\r\n    group.controls[type].setValue(null);\r\n    group.controls[\"deviceType\"].setValue(null);\r\n    this.newPatientForm.updateValueAndValidity();\r\n  }\r\n  clearId(group: FormGroup, type) {\r\n    group.controls[type].setValue(null);\r\n  }\r\n\r\n disableFields = ['patientId', 'admissionId','firstName', 'lastName', 'dob', 'gender','patchIds'];\r\n  isSelectedFromAuto: boolean = false;\r\n  isDisabled = false;\r\n  onOptionSelected(event) {\r\n    this.getCGroups();\r\n    this.loadState = 'LOADING';\r\n    this.setControlState(this.disableFields, false);\r\n    this.isSelectedFromAuto = true;\r\n    this.service.getPatientBy(event.option.value)\r\n        .subscribe(res => {\r\n          this.loadState = 'SUCCESS';\r\n          let patient: any = res.data;\r\n          if(patient?.patchIds?.length && patient?.patchIds[0]?.startTime) {\r\n            this.maxAdmitDate = new Date(new Date(patient.patchIds[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n          }\r\n          this.autoFilledPatient = res.data;\r\n          patient = this.updateHeightWeight(patient);\r\n\r\n          if(!this.groups.find(group => group.groupId === patient?.cgroupId) && patient?.cgroupId) {\r\n            let patientGroup = {groupId: patient.cGroup.id, name: patient.cGroup.name, type: 'CLINICAL'};\r\n            this.groups = [patientGroup, ...this.groups];\r\n            this.cGroup$.next(this.groups);\r\n          }\r\n          if(!this.groups.find(group => group.groupId === patient?.pgroupId) && patient?.pgroupId) {\r\n            let patientGroup = {groupId: patient.pGroup.id, name: patient.pGroup.name, type: 'PHYSICAL'};\r\n            this.groups = [patientGroup, ...this.groups];\r\n            this.cGroup$.next(this.groups);\r\n          }\r\n          const patientDetails = {\r\n            ...patient,\r\n            createdDateTime: patient.createdDateTime ? new Date(patient.createdDateTime) : null,\r\n            admissionId: patient?.isDischarged ? this.admissionId: patient?.admissionId || this.admissionId,\r\n            cGroup: patient?.cgroupId ? patient?.cgroupId : null,\r\n            pGroup: patient?.pgroupId ? patient?.pgroupId : null,\r\n            gender: patient?.gender ? getGender(patient?.gender) : null,\r\n            weightUnit: patient?.weightUnit ? patient.weightUnit.toUpperCase() : this.weightUnit,\r\n            heightUnit: patient?.heightUnit ? patient.heightUnit.toUpperCase() : this.heightUnit,\r\n            weight: patient?.weight ? patient.weight : null,\r\n            height: patient?.height ? patient.height : null,\r\n            estimatedDischarge: patient?.procedureDuration && patient.startedOn ? (patient?.isDischarged ? null : calculateDischargedDate(patient.startedOn, patient.procedureDuration, this.timeZone)) : null,\r\n            startedOn: patient?.startedOn ? (patient?.isDischarged ? this.maxAdmitDate : patient.startedOn < this.data?.patchId?.patchDetails[0]?.startTime ? epochToDate(patient.startedOn, this.timeZone) : this.maxAdmitDate) : null,\r\n            dob: patient?.dob ? getDateFromString(patient.dob) : '',\r\n            patchIds: patient?.isDischarged ? null : patient?.patchIds,\r\n          }\r\n          if(!patient?.admissionId || patient?.isDischarged) {\r\n            this.setControlState(['admissionId'], true);\r\n          }\r\n          if(patientDetails?.patchIds) {\r\n            this.patchIds = [...patientDetails?.patchIds, {deviceId: this.data?.patchId?.patchId, startTime: this.data?.patchId?.patchDetails[0].startTime, endTime: this.data?.patchId?.patchDetails[0].endTime}];\r\n          } else {\r\n            this.patchIds = [{deviceId: this.data?.patchId?.patchId, startTime: this.data?.patchId?.patchDetails[0].startTime, endTime: this.data?.patchId?.patchDetails[0].endTime}]\r\n          }\r\n          delete patientDetails.patchIds;\r\n          this.newPatientForm.patchValue({\r\n            ...this.newPatientForm.getRawValue(),\r\n            ...patientDetails\r\n          })\r\n          this.newPatientForm.updateValueAndValidity({ emitEvent: true });\r\n          this.doctorsList$$.next(this.doctorsList);\r\n          this.patientData = [];\r\n          this.patientvalidated = true;\r\n        })\r\n  }\r\n  patientSelected(event) {\r\n    this.service.getPatientBy(event.option.value)\r\n        .subscribe(res => {\r\n          const patient: ActivePatient = res.data;\r\n          const patientDetails = {\r\n            patientId: patient?.patientId,\r\n            admissionId: this.admissionId,\r\n            firstName: patient?.firstName,\r\n            lastName: patient?.lastName,\r\n            dob: patient?.dob,\r\n            gender: patient?.gender,\r\n            phoneNo: patient?.phoneNo,\r\n            email: patient?.email\r\n          }\r\n          populateAdmitPatientValues(\r\n              patientDetails,\r\n              this.newPatientForm,\r\n              this.doctorsList$$.getValue(),\r\n              this.cGroup$.getValue(),\r\n              this.weightUnit,\r\n              this.heightUnit,\r\n              this.timeZone\r\n          );\r\n          this.setControlState(['patientId'], false);\r\n          this.isDisabled = false;\r\n          this.autoCompleted = true;\r\n        });\r\n  }\r\n\r\n  onClickClearAuto() {\r\n    this.isSelectedFromAuto = false;\r\n    this.maxAdmitDate = new Date(new Date(this.data?.patchId?.patchDetails[0]?.startTime*1000).toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    if(this.autoCompleted) {\r\n      this.newPatientForm.patchValue({\r\n        patchIds : null\r\n      });\r\n      this.patchIds = null;\r\n    } else {\r\n      let biosensor = this.data?.patchId;\r\n      this.patchIds = [{\r\n        deviceId: biosensor?.patchId,\r\n        deviceType: \"Biosensor Id\",\r\n        startTime: biosensor?.patchDetails[0]?.startTime,\r\n        endTime: biosensor?.patchDetails[0]?.endTime\r\n      }]\r\n    }\r\n    this.autoCompleted = false;\r\n    this.newPatientForm.patchValue({\r\n      patientId: null,\r\n      admissionId: this.admissionIdCopy,\r\n      firstName: null,\r\n      lastName: null,\r\n      phoneNo: null,\r\n      email: null,\r\n      dob: null,\r\n      age: null,\r\n      gender: null,\r\n      weight: null,\r\n      height: null,\r\n      weightUnit: this.weightUnit,\r\n      heightUnit: this.heightUnit,\r\n      cGroup: null,\r\n      pGroup: null,\r\n      startedOn: null,\r\n      procedureDuration: null,\r\n      estimatedDischarge: null,\r\n      doctorId: null,\r\n      createdDateTime: new Date()\r\n\r\n    });\r\n    this.setControlState(this.disableFields, true);\r\n    this.doctorsList$$.next(this.activeDoctorsList);\r\n  }\r\n\r\n  setControlState(controls: string[], state: boolean) {\r\n    controls.forEach(control => {\r\n      if (state) {\r\n        this.newPatientForm?.controls[control]?.enable();\r\n      }\r\n      else {\r\n        this.newPatientForm?.controls[control]?.disable();\r\n      }\r\n    });\r\n    //this.isDisabled = !state;\r\n  }\r\n\r\n  compareObjects(o1: any, o2: any): boolean {\r\n    return o1?.name === o2?.name && o1?._id === o2?._id;\r\n  }\r\n\r\n  ignoreCase(o1: any, o2: any): boolean {\r\n    return o1.toUpperCase() === o2.toUpperCase();\r\n  }\r\n\r\n  thirdParties = [\r\n    {\r\n      name: \"Dr Shetty\",\r\n      id: \"1\"\r\n    },\r\n    {\r\n      name: \"Dr Doom\",\r\n      id: \"2\"\r\n    }\r\n  ];\r\n  clinicUsers = () => {\r\n    return of(this.thirdParties).pipe(map(users => {\r\n      return users;\r\n    }));\r\n  };\r\n\r\n  BillingIndications = [\r\n    {\r\n      name: \"Billing1\",\r\n      id: \"1\"\r\n    },\r\n    {\r\n      name: \"Billing2\",\r\n      id: \"2\"\r\n    }\r\n  ];  \r\n\r\n  BillingMethod = [\r\n    {\r\n      name: \"Cash\",\r\n      id: \"PC\"\r\n    },\r\n    {\r\n      name: \"Credit Card\",\r\n      id: \"CC\"\r\n    }\r\n  ];  \r\n\r\n  duration = [\r\n    {name: '5-day', id: 5},\r\n    {name: '7-day', id: 7}\r\n  ]\r\n  procDuration = () => {\r\n    return of(this.duration).pipe(map(t => {\r\n      return t;\r\n    }));       \r\n  }\r\n\r\n  loc = [\r\n    {name: 'Clinic1', id: 1},\r\n    {name: 'Clinic2', id: 2}\r\n  ]  \r\n  facilityLocation = () => {\r\n    return of(this.loc).pipe(map(locations => {\r\n      return locations;\r\n    }));       \r\n  }\r\n\r\n  billingIndications = () => {\r\n    return of(this.BillingIndications).pipe(map(types => {\r\n      return types;\r\n    }));    \r\n  }  \r\n\r\n  billingMethods = () => {\r\n    return of(this.BillingMethod).pipe(map(methods => {\r\n      return methods;\r\n    }));\r\n  };\r\n\r\n  alphaNumericsOnly(event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z0-9]+$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  getMaxDischargeDate(){\r\n    let admittedDate = new Date(this.newPatientForm.get('startedOn').value);\r\n    return new Date(admittedDate.setDate(admittedDate.getDate() + 30));\r\n\r\n  }\r\n  getMinDischargeDate(){\r\n    let admittedDate = new Date(this.newPatientForm.get('startedOn').value);\r\n    let minDischarge = new Date(admittedDate.setDate(admittedDate.getDate() + 1));\r\n    let currentTime = new Date(new Date().toLocaleString(\"en-US\", { timeZone: this.timeZone }));\r\n    return minDischarge > currentTime ? minDischarge : currentTime\r\n\r\n  }\r\n  getElapsedTime() {\r\n    let elapsedTime = (new Date().getTime() - (new Date(this.newPatientForm.get('startedOn').value).getTime()))/1000;\r\n    let hrs = Math.floor(elapsedTime/3600); //hours\r\n    let mins = Math.floor(elapsedTime % 3600 / 60);//mins\r\n    //let secs = Math.floor(elapsedTime % 3600 % 60); //seconds\r\n    let secs = '00';\r\n    return hrs + \" : \" + mins + \" : \" + secs;\r\n  }\r\n  onGroupSelected(formField, value) {\r\n    this.newPatientForm.get(formField).setValue(value)\r\n  }\r\n  selectDoctor(value) {\r\n    this.newPatientForm.get('doctorId').setValue(value)\r\n  }\r\n  fetchPatientDetails(event, type) {\r\n    let patientId;\r\n    if(type === 'keyup') {\r\n      patientId = event.target.value;\r\n    } else {\r\n      patientId = event.clipboardData.getData('text');\r\n    }\r\n    patientId = encodeURIComponent(patientId);\r\n    if (patientId) {\r\n      let url = `patients/?sortBy=PatientID:desc&page=1&size=5&isDischarged=true&patientid=${patientId}`\r\n      this.service.getAll(url).subscribe((res:any) =>{\r\n        if(res.data?.items?.length) {\r\n          if(res.data?.items[0].patientId === event?.target?.value) {\r\n            this.dischargedPatients = [res.data?.items[0]];\r\n          } else {\r\n            this.dischargedPatients = [];\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  updateHeightWeight(patient) {\r\n    if (patient.heightUnit.toUpperCase() !== this.userPreferences.getUserHeightUnit().toUpperCase() && patient.height) {\r\n      patient.heightUnit = this.userPreferences.getUserHeightUnit();\r\n      if (this.userPreferences.getUserHeightUnit().toUpperCase() === \"CM\") {\r\n        patient.height = Number(this.userPreferences.convertInchToCm(patient.height));\r\n      } else {\r\n        patient.height = Number(this.userPreferences.convertCmToInch(patient.height));\r\n      }\r\n    }\r\n    if (patient.weightUnit.toUpperCase() !== this.userPreferences.getUserWeightUnit().toUpperCase() && patient.weight) {\r\n      patient.weightUnit = this.userPreferences.getUserWeightUnit();\r\n      if (this.userPreferences.getUserWeightUnit().toUpperCase() === \"KG\") {\r\n        patient.weight = Number(this.userPreferences.convertPoundToKg(patient.weight));\r\n      } else {\r\n        patient.weight = Number(this.userPreferences.convertKgToPound(patient.weight));\r\n      }\r\n    }\r\n    return patient;\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.groupsSubscription) {\r\n      this.groupsSubscription.unsubscribe();\r\n    }\r\n    if (this.doctorsListSub) {\r\n      this.doctorsListSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\nimport { RemoveBiosensorComponent } from \"../remove-biosensor/remove-biosensor.component\";\n\n@Component({\n  selector: \"app-confirmation-dialog\",\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.scss\"],\n})\nexport class ConfirmationDialogComponent {\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialog : MatDialog\n  ) {}\n\n  submitYes(): void {\n    this.dialogRef.close(true);\n    if(this.data.stop_biosensor){\n      this.dialogRef.afterClosed().subscribe((res)=>{\n        this.dialog.open(RemoveBiosensorComponent,{\n          maxWidth: \"90vw\",\n          // minWidth: \"500px\",\n          width: \"500px\",\n          backdropClass: \"backdropBackground\",\n          disableClose: true\n        });\n    })\n    }\n   \n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n   <!-- {{ \"active-patients-module.table.discharge_patient_title\" | translate }}-->\n   {{ data.heading | translate }}\n  </h1>\n  <!--<button mat-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>-->\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup discharge-dialog\">\n  <div class=\"dialog-form\">\n    <p>{{ data.message | translate }}</p>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    mat-dialog-close\n    color=\"warn\"\n    class=\"fill-btn\"\n  >\n    {{ \"active-patients-module.button.cancel\" | translate }}\n  </button>\n  <button\n    mat-flat-button\n    color=\"primary\"\n    (click)=\"submitYes()\"\n    class=\"fill-btn\"\n  >\n    {{ \"active-patients-module.button.confirm\" | translate }}\n  </button>\n</div>\n","import {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n} from \"@angular/forms\";\r\nimport { LSvalidators } from \"src/app/shared/lsValidators/lsvalidators\";\r\n\r\nimport {\r\n  DOCTORS,\r\n  NewPatient,\r\n  NewPatient2,\r\n  UnassignedPatient,\r\n} from \"../models/active-patients.model\";\r\nimport {_validatePhoneNumberInput} from \"../../validators/phone-no.validator\";\r\n\r\nexport function getUtcDate(date:Date): Date {\r\n\r\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n}\r\n\r\nexport function createNewPatientForm(formBuilder: FormBuilder, weightUnit, heightUnit, admissionId, timezone, offset): FormGroup {\r\n  const formGroup = formBuilder.group({\r\n    patient_id_mrn: [null, [Validators.required, LSvalidators.validatePatientId]],\r\n    first_name: [null, [Validators.required, LSvalidators.validatePatientName, LSvalidators.validatePatientNameMinMaxLength]],\r\n    last_name: [null, [Validators.required, LSvalidators.validatePatientName, LSvalidators.validatePatientNameMinMaxLength]],\r\n    email: [null, Validators.email],\r\n    country_code:[null],\r\n    //mobile: [null, [_validatePhoneNumberInput?.bind(this), Validators.required]],\r\n    mobile: [null],\r\n    dob: [null, Validators.required],\r\n    age: [null, [LSvalidators.numericsOnly]],\r\n    sex: [null, Validators.required],\r\n    weight: [null, [LSvalidators.validValueForWeightAndHeight]],\r\n    height: [null, [LSvalidators.validValueForWeightAndHeight]],\r\n    country:[null, [Validators.required]],\r\n    zip_code:[null,[Validators.required]],\r\n    street_address_1:[null],\r\n    street_address_2:[null],\r\n    city:[null,[Validators.required]],\r\n    state:[null,[Validators.required]],\r\n    em_contact_name:[null],\r\n    em_contact_country_code:[null],\r\n    em_contact_number: [null, [_validatePhoneNumberInput?.bind(this)]],\r\n    fk_prescriber:[null,[Validators.required]],\r\n    fk_technician:[null],\r\n    fk_r_doctor:[null,[Validators.required]],\r\n    pri_approver_id:[null],\r\n    final_approver_id:[null,[Validators.required]],\r\n    primary_indication:[null,[Validators.required]],\r\n    prescription_id:[null, [Validators.required]],\r\n    order_id:[null, [Validators.required]],\r\n    biosensor:[null],\r\n    total_monitoring_duration:[null,[Validators.required]],\r\n    location:[null, [Validators.required]],\r\n\r\n    additionalInfo:[null],\r\n    icd:[false],\r\n    pacemaker:[false],\r\n\r\n    billing_indication:[null],\r\n    billing_method:[null],\r\n    // status:[null],\r\n\r\n    // facility_id:[null],\r\n    // created_by:[null],\r\n\r\n    patchIds: [[], [LSvalidators.biosensorPattern]],\r\n\r\n  });\r\n  \r\n  return formGroup;\r\n}\r\n\r\nexport function mapIndividiualToAdmitPatient(formData: FormGroup, cGroup, patchIdData, timezone): NewPatient2 {\r\n  let individual = formData.value;\r\n  let patchIds: Array<{ deviceId: \"\" }> = new Array();\r\n  let patientId = individual.patient_id_mrn.trim();\r\n  let admissionId = individual.admissionId;\r\n  let cGroupObj = null;\r\n  let pGroupObj = null;\r\n  if (cGroup?.length > 0) {\r\n    let filteredObj = cGroup.filter(x => x.groupId === formData.value.cGroup);\r\n    if (filteredObj[0]) {\r\n      let obj = {\r\n        id: filteredObj[0].groupId,\r\n        name: filteredObj[0].name\r\n      }\r\n      cGroupObj = obj;\r\n    } else {\r\n      cGroupObj = null;\r\n    }\r\n  }\r\n  if (cGroup?.length > 0) {\r\n    let filteredObjNew = cGroup.filter(x => x.groupId === formData.value.pGroup);\r\n    if (filteredObjNew[0]) {\r\n      let objNew = {\r\n        id: filteredObjNew[0].groupId,\r\n        name: filteredObjNew[0].name\r\n      }\r\n      pGroupObj = objNew;\r\n    } else {\r\n      pGroupObj = null;\r\n    }\r\n  }\r\n\r\n  if (typeof individual.patchIds === \"string\"  && patchIdData?.length === 0) {\r\n    patchIds.push({ deviceId: individual.patchIds.toUpperCase() });\r\n  } else {\r\n    patchIds = [...patchIdData]\r\n  }\r\nindividual.dob=\"2022-10-10\"\r\n  let patient: NewPatient2 = {\r\n    patient_id_mrn: patientId,\r\n    first_name: individual.first_name,\r\n    last_name: individual.last_name,\r\n    email: individual?.email,\r\n    country_code:individual.country_code,\r\n    mobile: individual?.mobile,\r\n    // dob: individual.dob ? getUtcDate(individual.dob).toISOString() : null,\r\n    dob: individual.dob ,\r\n\r\n    \r\n    age: parseInt(individual.age),\r\n    sex: individual.sex,\r\n    weight: individual.weight,\r\n    height: individual.height,\r\n    country:individual.country,\r\n    zip_code:individual.zip_code,\r\n    street_address_1:individual.street_address_1,\r\n    street_address_2:individual.street_address_2,\r\n    city:individual.city,\r\n    state:individual.state,\r\n    em_contact_name:individual.em_contact_name,\r\n    em_contact_country_code:individual.em_contact_country_code,\r\n    em_contact_number:individual.em_contact_number,\r\n    fk_prescriber:individual.fk_prescriber,\r\n    fk_technician:individual.fk_technician,\r\n    fk_r_doctor:individual.fk_r_doctor,\r\n    pri_approver_id:individual.pri_approver_id,\r\n    final_approver_id:individual.final_approver_id,\r\n    primary_indication:individual.primary_indication,\r\n    total_monitoring_duration:individual.total_monitoring_duration,\r\n    order_id:individual.order_id,\r\n    pacemaker:individual.pacemaker,\r\n    icd:individual.icd,\r\n    additional_info:individual.additional_info,\r\n    prescription_id:individual.prescription_id,\r\n    billing_indication:individual.billing_indication,\r\n    billing_method:individual.billing_method,\r\n    location:individual.location,\r\n    biosensor:individual.biosensor,\r\n    status:individual.status,\r\n    facility_id:individual.facility_id,\r\n    created_by:individual.created_by,\r\n  };\r\n  return patient;\r\n}\r\n\r\nexport function convertToMinutes(days) {\r\n  return days * 24 * 60;\r\n}\r\n\r\nexport function epoch(date) {\r\n  let epoch = Date.parse(date);\r\n  return epoch / 1000;\r\n}\r\n\r\nexport function convertAdmitDate(date, timezone){\r\n   let t_date = date.toDateString()  + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()  + \" \" + timezone;\r\n\tlet epoch = Date.parse(t_date);\r\n\treturn epoch / 1000;\r\n}\r\nexport function convertDischargeDate(startedOn, date, timezone){\r\n  let t_date = date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate();\r\n  let time = startedOn.getHours() + ':' + startedOn.getMinutes() + ':' + startedOn.getSeconds()  + \" \" + timezone\r\n  date = t_date+\" \"+time;\r\n  let epoch = Date.parse(date);\r\n  return epoch / 1000;\r\n}\r\nexport function calculateDischargedDate(admittedDate, monitoringDays, timezone) {\r\n  return new Date(new Date((admittedDate * 1000) + (monitoringDays*60*1000)).toLocaleString(\"en-US\", { timeZone: timezone }));\r\n}\r\n\r\n\r\n\r\nexport function populateAssignPatientValues(individual: UnassignedPatient,\r\n  patientsForm: FormGroup,\r\n  doctors: DOCTORS[], admissionId, patchStartTime): FormGroup {\r\n  if (!patientsForm) {\r\n    return;\r\n  }\r\n  patientsForm.get(\"patchIds\").setValue(individual.patchId);\r\n  patientsForm.get(\"admissionId\").setValue(admissionId);\r\n  patientsForm.get(\"startedOn\").setValue(patchStartTime)\r\n  return patientsForm;\r\n}\r\n\r\nexport function populateAdmitPatientValues(\r\n  individual,\r\n  patientsForm: FormGroup,\r\n  doctors: DOCTORS[],\r\n  cGroup: any[],\r\n  weightUnit,\r\n  heightUnit,\r\n  timezone\r\n): FormGroup {\r\n  if (!patientsForm) {\r\n    return;\r\n  }\r\n  if(!individual?.weightUnit) {\r\n    individual.weightUnit = weightUnit\r\n  }\r\n  if(!individual?.heightUnit) {\r\n    individual.heightUnit = heightUnit\r\n  }\r\n  // patientsForm.patchValue(individual);\r\n  let disableControls = ['firstName', 'lastName', 'dob', 'gender'];\r\n  disableControls.forEach((formContolName) => {\r\n    patientsForm.get(formContolName).disable();\r\n  });\r\n  patientsForm.get(\"patientId\").setValue(individual.patientId);\r\n  patientsForm.get(\"admissionId\").setValue(individual?.admissionId ? individual.admissionId : '');\r\n  patientsForm.get(\"dob\").setValue(individual.dob ? getDateFromString(individual.dob) : '');\r\n  //patientsForm.get(\"age\").setValue(individual.dob ? individual.age : null);\r\n  patientsForm.get(\"phoneNo\").setValue(individual.phoneNo ? individual.phoneNo : null);\r\n  patientsForm.get(\"email\").setValue(individual.email ? individual.email : null);\r\n  patientsForm.get(\"gender\").setValue(getGender(individual.gender));\r\n  if(individual?.weight) {\r\n    patientsForm.get(\"weight\").setValue(individual?.weight);\r\n  }\r\n  if(individual?.height) {\r\n    patientsForm.get(\"height\").setValue(individual?.height);\r\n  }\r\n  patientsForm.get(\"weightUnit\").setValue(getWeightUnit(individual.weightUnit));\r\n  patientsForm.get(\"heightUnit\").setValue(getHeightUnit(individual.heightUnit));\r\n  patientsForm.get(\"firstName\").setValue(individual.firstName);\r\n  patientsForm.get(\"lastName\").setValue(individual.lastName);\r\n  //patientsForm.get('doctorId').setValue(getDoctorsName(doctors || [], individual.doctorId));\r\n  patientsForm.get('doctorId').setValue(individual.doctorId);\r\n  // patientsForm.get('cGroup').setValue(getClinicalGroupName(cGroup, individual?.cGroup?.groupId));\r\n  // patientsForm.get('pGroup').setValue(individual.pgroupId);\r\n\r\n  patientsForm.get('cGroup').setValue(individual.cgroupId);\r\n  patientsForm.get('pGroup').setValue(individual.pgroupId);\r\n  patientsForm.get('createdDateTime').setValue(individual.createdDateTime || new Date());\r\n  individual.patchIds = individual.patchIds || [];\r\n  let deviceData: any = [];\r\n  deviceData = individual.deviceIds || [];\r\n  let items = patientsForm.get('deviceIds') as FormArray;\r\n  if (deviceData?.length) {\r\n    for (let i = 0; i < deviceData?.length; i++) {\r\n      (items.at(i) as FormGroup).get('deviceId').patchValue(deviceData[i]?.deviceId);\r\n      (items.at(i) as FormGroup).get('deviceType').patchValue(deviceData[i]?.deviceType);\r\n    }\r\n  }\r\n\r\n  if (individual?.patchIds?.length) {\r\n    let len = individual?.patchIds?.length;\r\n    patientsForm.get(\"patchIds\").setValue(individual?.activePatch || individual.patchIds[len-1]?.deviceId);\r\n  }\r\n  if(individual?.startedOn) {\r\n    patientsForm\r\n        .get(\"startedOn\")\r\n        .setValue(epochToDate(individual.startedOn, timezone));\r\n  }\r\n  if(individual?.procedureDuration && individual.startedOn) {\r\n    patientsForm\r\n        .get(\"estimatedDischarge\")\r\n        .setValue(calculateDischargedDate(individual.startedOn, individual.procedureDuration, timezone));\r\n  }\r\n  return patientsForm;\r\n}\r\n\r\nexport function getGender(gender) {\r\n  switch(gender){\r\n    case 'M': return 'MALE';\r\n    case 'F': return 'FEMALE';\r\n    case 'O': return 'OTHER';\r\n    default:  return gender;\r\n  }\r\n}\r\n\r\nfunction getWeightUnit(unit) {\r\n  return unit.toUpperCase() === 'KG' ? 'KG' : 'POUND';\r\n}\r\n\r\nfunction getHeightUnit(unit) {\r\n  return unit.toUpperCase() === 'CM' ? 'CM' : 'INCH';\r\n}\r\n\r\nfunction getClinicalGroupName(list, id) {\r\n  let cGroup = list?.filter((x) => {\r\n    if (x.groupId === id) {\r\n      return x;\r\n    } else {\r\n      return false;\r\n    }\r\n  }) || [];\r\n\r\n  if (cGroup.length > 0 && cGroup[0]?.groupId) {\r\n    return cGroup[0]?.groupId;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction getDoctorsName(list, id) {\r\n  let doctors =\r\n    list?.filter((x) => {\r\n      if (x.id === id) {\r\n        return x;\r\n      }\r\n    }) || [];\r\n\r\n  if (doctors.length > 0 && doctors[0]?.id) {\r\n    return doctors[0]?.id;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function getDateFromString(dateStr) {\r\n  const day = new Date(this.dob).getDate();\r\n    const month = new Date(this.dob).getMonth() + 1;\r\n    const year = new Date(this.dob).getFullYear();\r\n    const test = `${year}-${month}-${day}`;\r\n    console.log(\"hjsd\",test);\r\n  return test;\r\n}\r\n\r\nexport function epochToDate(epoch, timezone) {\r\n  return new Date(new Date(epoch * 1000).toLocaleString(\"en-US\", { timeZone: timezone }));\r\n}\r\nexport function defaultAdmitDate(timezone, offset) {\r\n  console.log('default time');\r\n  let date = new Date();\r\n  let t_date = date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate() + \" \" + 10 + \":\" + 0 + \":\" + 0 + \" \" + offset;\r\n  return new Date(new Date(t_date).toLocaleString(\"en-US\", { timeZone: timezone }));\r\n}\r\n\r\nexport function convertToDays(minutes) {\r\n  return minutes / (24 * 60);\r\n}\r\nexport function monitoringDays(admitDate, dischargeDate, timezone) {\r\n  return Math.round((convertDischargeDate(admitDate, dischargeDate, timezone) - convertAdmitDate(admitDate, timezone))/60);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\nimport { DOCTORS } from \"../models/active-patients.model\";\r\nimport {\r\n  ActivePatientsStoreState,\r\n  ActivePatientsStoreActions,\r\n  ActivePatientsStoreSelectors,\r\n} from \"../store\";\r\nimport {\r\n  ManageGroupsStoreActions,\r\n  ManageGroupsStoreSelectors,\r\n  ManageGroupsStoreState,\r\n} from \"../../manage-group/store\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ActivePatientManagerService {\r\n  activePatients$: Observable<ActivePatientsStoreState.State>;\r\n  unAssignedPatients$: Observable<ActivePatientsStoreState.State>;\r\n  selectedPatientIds$: Observable<String[]>;\r\n  doctors$: Observable<DOCTORS[]>;\r\n  patientIds: Array<string> = new Array();\r\n  groups$: Observable<Group[]>;\r\n\r\n  constructor(\r\n    private activePatientstore$: Store<ActivePatientsStoreState.State>,\r\n    private manageServiceStore$: Store<ManageGroupsStoreState.ManageGroupState>\r\n  ) { }\r\n\r\n  getActivePatient(url: string) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.LoadActivePatientsRequestAction({ url })\r\n    );\r\n  }\r\n\r\n  selectActivePatient(): Observable<ActivePatientsStoreState.State> {\r\n    this.activePatients$ = this.activePatientstore$.select(\r\n      ActivePatientsStoreSelectors.selectActivePatientsList\r\n    );\r\n    return this.activePatients$;\r\n  }\r\n\r\n  updatePatient(patient) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.UpdatePatientRequestAction(patient)\r\n    );\r\n    return this.selectActivePatient();\r\n  }\r\n\r\n  createPatient(patient) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.CreateNewPatientRequestAction(patient)\r\n    );\r\n    return this.activePatientstore$.select(ActivePatientsStoreSelectors.createNewPatient);\r\n  }\r\n\r\n  dischargePatient(patientId) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.DischargePatientRequestAction(patientId)\r\n    );\r\n  }\r\n\r\n  getDoctorsList(): Observable<DOCTORS[]> {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.LoadDoctorsListRequestAction()\r\n    );\r\n    this.doctors$ = this.activePatientstore$.select(\r\n      ActivePatientsStoreSelectors.doctorsList\r\n    );\r\n    return this.doctors$;\r\n  }\r\n\r\n  stopMonitoring(patientId) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.StopMonitoringRequestAction(patientId)\r\n    );\r\n  }\r\n\r\n  fetchGroups() {\r\n    this.manageServiceStore$.dispatch(\r\n      new ManageGroupsStoreActions.LoadGroupsRequestAction()\r\n    );\r\n    return this.manageServiceStore$.select(\r\n      ManageGroupsStoreSelectors.selectGroupsList\r\n    );\r\n  }\r\n\r\n  assignGroup(groups) {\r\n    // this.manageServiceStore$.dispatch(\r\n    //   new ManageGroupsStoreActions.SaveGroupRequestAction(groups)\r\n    // );\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.AssignGroupRequestAction(groups)\r\n    )\r\n\r\n    // return this.manageServiceStore$.select(\r\n    //   ManageGroupsStoreSelectors.selectGroupsList\r\n    // );\r\n    return this.activePatientstore$.select(ActivePatientsStoreSelectors.assignGroupPatient);\r\n  }\r\n\r\n  // assignGroupToPatient(patient, groups) {\r\n  //   this.assignGroup(groups).subscribe(g => {\r\n  //     if(g?.CLINICAL_GROUPS && groups.cGroup) {\r\n  //       const obj = {\r\n  //         id: g?.CLINICAL_GROUPS[0]?.groupId,\r\n  //         name: g?.CLINICAL_GROUPS[0]?.name\r\n  //       }\r\n  //       patient.cGroup = obj;\r\n  //     }else{\r\n  //       patient.cGroup = null;\r\n  //     }\r\n  //     if(g?.PHYSICAL_GROUPS && groups.pGroup) {\r\n  //       const obj = {\r\n  //         id: g?.PHYSICAL_GROUPS[0]?.groupId,\r\n  //         name: g?.PHYSICAL_GROUPS[0]?.name\r\n  //       }\r\n  //       patient.pGroup = obj;\r\n  //     }else{\r\n  //       patient.pGroup = null;\r\n  //     }  \r\n  //   });\r\n  // }\r\n\r\n  fetchUnAssignedPatientsData(url) {\r\n    this.activePatientstore$.dispatch(\r\n      new ActivePatientsStoreActions.LoadUnassignedPatientsRequestAction({ url })\r\n    );\r\n  }\r\n\r\n  selectUnassignedPatients() {\r\n    this.unAssignedPatients$ = this.activePatientstore$.select(\r\n      ActivePatientsStoreSelectors.selectUnassignedPatientsList\r\n    );\r\n    return this.unAssignedPatients$;\r\n  }\r\n\r\n  setSelectedTab(tab:string) {\r\n    this.activePatientstore$.dispatch(new ActivePatientsStoreActions.SetSelectedTabRequestAction(tab));\r\n  }\r\n\r\n  getSelectedTab() {\r\n    return this.activePatientstore$.select(ActivePatientsStoreSelectors.selectedTab);\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\n\r\nexport interface UnassignedPatient {\r\n  gender: string;\r\n  patchId : Array<string>;\r\n  biosensorStatus: string;\r\n}\r\n\r\nexport interface ActivePatient {\r\n  activePatch: string;\r\n  age: number;\r\n  phoneNo: string;\r\n  email: string;\r\n  name: string;\r\n  biosensorStatus: string;\r\n  archivalStatus: string;\r\n  cgroupId: string;\r\n  cGroup: Group;\r\n  pGroup: Group;\r\n  clinicalInfo: null;\r\n  createdDateTime: string;\r\n  deviceIds: null;\r\n  dob: string;\r\n  doctorId: string;\r\n  fk_r_doctor?:string;\r\n  fk_prescriber:string;\r\n  firstName: string;\r\n  first_name?: string;\r\n  gender: string;\r\n  height: number;\r\n  heightUnit: string;\r\n  isDischarged: boolean;\r\n  isUnassigned: boolean;\r\n  lastName: string;\r\n  last_name?: string;\r\n  patchIds: Array<PatchId>;\r\n  patientId: string;\r\n  patient_id_mrn: string;\r\n  admissionId: string;\r\n  pgroupId: string;\r\n  procedureDuration: number;\r\n  startedOn: number;\r\n  weight: number;\r\n  weightUnit: string;\r\n  estimatedDischarge: number;\r\n  prescriber_user_name?: string;\r\n  doctor_user_name:string;\r\n  prescription_id:string;\r\n  location:string;\r\n  biosensor?:Array<Biosensor>;\r\n}\r\n\r\nexport interface DOCTORS {\r\n  createdDateTime: string;\r\n  email: string;\r\n  facilityId: string;\r\n  firstName: string;\r\n  first_name?:string;\r\n  id: string;\r\n  _id?:string;\r\n  isActive: boolean;\r\n  enable?: boolean;\r\n  lastName: string;\r\n  last_name?:string;\r\n  phoneNo: string;\r\n  roles: Array<string>;\r\n  serviceProviderId: string;\r\n}\r\n\r\nexport interface NewPatient2 {\r\n  patient_id_mrn: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  country_code:string;\r\n  mobile: string;\r\n  dob: string;\r\n  age: number;\r\n  sex: string;\r\n  weight: number;\r\n  height: number;\r\n  country:string;\r\n  zip_code:number;\r\n  street_address_1:string;\r\n  street_address_2:string;\r\n  city: string;\r\n  state:string;\r\n  em_contact_name:string;\r\n  em_contact_country_code:string;\r\n  em_contact_number:string;\r\n  fk_prescriber:string;\r\n  fk_technician:string;\r\n  fk_r_doctor:string;\r\n  pri_approver_id:string;\r\n  final_approver_id:string;\r\n  primary_indication:string;\r\n  total_monitoring_duration:string;\r\n  order_id:string;\r\n  pacemaker:boolean;\r\n  icd:boolean\r\n  additional_info:string;\r\n  prescription_id:string;\r\n  billing_indication:string;\r\n  billing_method:string;\r\n  location:string;\r\n  biosensor:Array<Biosensor>;\r\n  status:string;\r\n  facility_id:string;\r\n  created_by:string;\r\n}\r\n\r\nexport interface NewPatient {\r\n  patient_id_mrn: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  country_code:string;\r\n  mobile: string;\r\n  dob: string;\r\n  age: number;\r\n  sex: string;\r\n  weight: number;\r\n  height: number;\r\n  country:string;\r\n  zip_code:number;\r\n  street_address_1:string;\r\n  street_address_2:string;\r\n  city: string;\r\n  state:string;\r\n  em_contact_name:string;\r\n  em_contact_country_code:string;\r\n  em_contact_number:string;\r\n  fk_prescriber:string;\r\n  fk_technician:string;\r\n  fk_r_doctor:string;\r\n  pri_approver_id:string;\r\n  final_approver_id:string;\r\n  primary_indication:string;\r\n  monitoring_duration:string;\r\n  order_id:string;\r\n  pacemaker:boolean;\r\n  icd:boolean\r\n  additional_info:string;\r\n  prescription_id:string;\r\n  billing_indication:string;\r\n  billing_method:string;\r\n  location:string;\r\n  biosensor:Array<Biosensor>;\r\n  status:string;\r\n  facility_id:string;\r\n  created_by:string;\r\n\r\n  admissionId: string;\r\n  primaryContact:string;\r\n  weightUnit: string;\r\n  heightUnit: string;\r\n  doctorId: string;\r\n  cGroup: string;\r\n  pGroup: string;\r\n  patchIds: Array<PatchId>;\r\n  deviceIds: Array<ThirdPartyIds>;\r\n  createdDateTime: Date;\r\n  startedOn: number;\r\n  procedureDuration: number;\r\n  estimatedDischarge: number;\r\n  prescribingPhysician:string;\r\n  technicianName:string;\r\n  referalPhysician:string;\r\n  interpPhysician:string,\r\n  prelimInterpPhysician:string;\r\n  locationGroup:string;\r\n}\r\n\r\nexport interface eNewPatient {\r\n  patientId: string;\r\n  admissionId: string;\r\n  dob: string;\r\n  age: number;\r\n  phoneNo: string;\r\n  primaryContact:string;\r\n  email: string;\r\n  gender: string;\r\n  weight: number;\r\n  height: number;\r\n  weightUnit: string;\r\n  heightUnit: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  doctorId: string;\r\n  cGroup: string;\r\n  pGroup: string;\r\n  patchIds: Array<PatchId>;\r\n  deviceIds: Array<ThirdPartyIds>;\r\n  createdDateTime: Date;\r\n  startedOn: number;\r\n  procedureDuration: number;\r\n  estimatedDischarge: number;\r\n  country:string;\r\n  zipCode:number;\r\n  street1:string;\r\n  street2:string;\r\n  city: string;\r\n  state:string;\r\n  emergencyContactName:string;\r\n  emergencyContactNumber:string;\r\n  prescribingPhysician:string;\r\n  technicianName:string;\r\n  referalPhysician:string;\r\n  interpPhysician:string,\r\n  prelimInterpPhysician:string;\r\n  locationGroup:string;\r\n  primaryIndication:string;\r\n  monitoringDuration:string;\r\n  orderId:string;\r\n  prescriptionId:string;\r\n  additionalInfo:string;\r\n  billingIndication:string;\r\n  billingMethod:string;\r\n}\r\n\r\nexport interface Biosensor {\r\n  biosensor_id:string;\r\n  monitoring_started_on:string;\r\n  monitoring_duration:number;\r\n}\r\n\r\nexport interface AssignGroup {\r\n  patientId: string;\r\n  cGroup: Group;\r\n  pGroup: Group;\r\n}\r\n\r\nexport interface ThirdPartyIds {\r\n  deviceId: string;\r\n  deviceType: string;\r\n}\r\n\r\nexport interface PatchId {\r\n  startTime?: Boolean;\r\n  deviceId: string;\r\n}\r\n\r\nexport enum ClinicalGroup {\r\n  ONCOLOGY = \"Oncology\",\r\n}\r\n\r\nexport enum PhysicalGroup {\r\n  REMOTE = \"Remote\",\r\n  INPATIENT = \"Inpatient\",\r\n}\r\n\r\nexport enum Gender {\r\n  MALE = \"Male\",\r\n  FEMALE = \"Female\",\r\n  OTHER = \"Other\"\r\n}\r\n\r\nexport enum FilterKeysForActivePatient {\r\n  PATIENTID = \"MRN\",\r\n  PATCHID = \"Biosensor ID\",\r\n  PATIENTFIRSTNAME = \"Patient First Name\"\r\n}\r\n\r\nexport enum FilterKeysForAssignPatient {\r\n  PATCHID = \"Biosensor ID\",\r\n  // PATIENTNAME = \"PATIENTNAME\"\r\n}\r\n\r\nexport enum MonitoringStatus {\r\n  ACTIVE = \"ACTIVE\",\r\n  STOP = \"STOP\",\r\n  INPROGRESS = \"INPROGRESS\",\r\n  STREAMING = \"Streaming\",\r\n  FINALIZE_IN_PROGRESS = \"finalizeInProgress\",\r\n  FINALIZED = \"finalized\"\r\n}\r\n\r\nexport enum ActivePatientsTabs {\r\n  ASSIGN_PATIENT = \"Assign Patient\",\r\n  ACTIVE_PATIENT = \"Active Patient\",\r\n}\r\n\r\nexport interface TabMetaData {\r\n  name: string;\r\n  pageNumber: number;\r\n  url: string;\r\n  searchString: string;\r\n  sortBy: string;\r\n  size: number;\r\n}\r\n\r\nexport enum TabMetaDataItems {\r\n  PAGE_NUMBER = 'PAGENUMBER',\r\n  SIZE = 'SIZE',\r\n  SORTBY = 'SORTBY',\r\n  SEARCH_OBJECT = 'SEARCH_OBJECT'\r\n}\r\n\r\nexport interface AddToDashboard {\r\n  createdBy: string;\r\n  createdById: string;\r\n  createdDateTime: string;\r\n  facilityId: string;\r\n  panelId: string;\r\n  panelType: string;\r\n  patientIds: Array<string>\r\n  patients: Array<{}>\r\n}\r\n\r\nexport interface PatientData {\r\n  activePatient: ActivePatient;\r\n  patchId: UnassignedPatient\r\n}\r\n\r\nexport interface Patch {\r\n  deviceId: string;\r\n  deviceType: string;\r\n  endTime: number;\r\n  startTime: number\r\n}\r\n\r\nexport enum WeightUnits {\r\n  KG = \"KG\",\r\n  POUND = \"POUND\"\r\n}\r\n\r\nexport enum HeightUnits {\r\n  CM = \"CM\",\r\n  INCH = \"INCH\"\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-patient-admitted-modal',\n  templateUrl: './patient-admitted-modal.component.html',\n  styleUrls: ['./patient-admitted-modal.component.scss']\n})\nexport class PatientAdmittedModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"message-modal p-4 d-flex align-items-center justify-content-between\">\n    <h5 class=\"mb-0\">{{data?.title|translate}}</h5>\n    <button mat-dialog-close mat-flat-button color=\"primary\" class=\"me-2\">{{'active-patients-module.button.ok'|translate}}</button>\n</div>\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{ heading | translate }}\n    </h1>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup moreinfo-dialog\">\n    <div class=\"dialog-form\">\n        <div class=\"table-responsive\">\n            <table mat-table class=\"table-format-cell mat-table\" aria-label=\"Table\">\n                <thead>\n                    <tr>\n                        <th>\n                            <img alt=\"bio sensor icon\" class=\"me-2\" src=\"assets/icons/biosensor.svg\"  /> {{ \"active-patients-module.form_label.biosensor_id\" | translate }}\n                        </th>\n                        <th>\n                            {{ \"active-patients-module.form_label.added_on\" | translate }}\n                        </th>\n                        <th>\n                            {{ \"active-patients-module.form_label.removed_on\" | translate }}\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let patch of patchIdData\" [class.expired]=\"(patch.endTime && isFutureDate(patch.endTime))\">\n                        <td class=\"d-flex align-items-center\">\n                            <img alt=\"bio sensor icon\" class=\"me-2\" src=\"assets/icons/biosensor.svg\"  />\n                            <span class=\"mx-1\">{{patch.deviceId}}</span>\n                            <button mat-icon-button (click)=\"openDeleteConfirmationModal(patch)\" *ngIf=\"displayDeleteIcon(patch) && !readOnly\" class=\"rounded delete-btn ms-2\">\n                                <mat-icon class=\"justify-content-center\">delete_outline</mat-icon>\n                              </button>\n                        </td>\n                        <td>\n                            <ng-container *ngIf=\"!readOnly; else diff_pattern_for_startTime\">\n                                {{ patch.startTime ? ( patch.startTime*1000 | date:'MMM d, y / ' : timeZone ) : '-'}}\n                                <strong>{{ patch.startTime ? ( patch.startTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-container>\n                            <ng-template #diff_pattern_for_startTime>\n                                {{ patch.startTime ? ( patch.startTime*1000 | date:'d MMM y / ' : timeZone ) : '-'}}\n                                <strong>{{ patch.startTime ? ( patch.startTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-template>\n                        </td>\n                        <td>\n                            <ng-container *ngIf=\"!readOnly; else diff_pattern_for_endTime\">\n                                {{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:'MMM d, y / ' : timeZone ) : '-' }}\n                                <strong>{{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-container>\n                            <ng-template #diff_pattern_for_endTime>\n                                {{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:'MMM d, y / ' : timeZone ) : '-' }}\n                                <strong>{{ (patch.endTime && isFutureDate(patch.endTime)) ? ( patch.endTime*1000 | date:timeFmt : timeZone ) : ''}}</strong>\n                            </ng-template>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"isShow\">\n                        <td class=\"d-flex align-items-center\">\n                            <div class=\"add-Biosensor-Id\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <mat-form-field appearance=\"fill\" floatLabel=\"never\" class=\"input-control\">\n                                            <input matInput [(ngModel)]=\"newBiosensorId\" maxlength=\"5\" minlength=\"5\" type=\"text\" autocomplete=\"off\" (keypress)=\"alphaNumericsOnly($event)\" pattern=\"^[a-zA-Z]{1}[a-zA-Z0-9]{4}$\" #biosensorIdCtrl=\"ngModel\">\n                                            <mat-error *ngIf=\"!biosensorIdCtrl.hasError('minlength') && biosensorIdCtrl.hasError('pattern')\">{{\"active-patients-module.errors.biosensorPatternValid\" | translate}}</mat-error>\n                                            <mat-error *ngIf=\"(biosensorIdCtrl.hasError('maxlength') || biosensorIdCtrl.hasError('minlength'))\">\n                                                {{\"active-patients-module.errors.biosensorLength\" | translate}}\n                                            </mat-error>\n                                            <button mat-icon-button color=\"warn\" *ngIf=\"newBiosensorId?.length\" matSuffix class=\"btn-boxed btn-no-shadow\" (click)=\"clear()\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                                            <button mat-mini-fab color=\"primary\" matSuffix *ngIf=\"!checkIfExisting() && (newBiosensorId?.length === 5) && !biosensorIdCtrl.hasError('pattern')\" class=\"btn-boxed tick-checked\" (click)=\"addBiosensorId()\">\n                      <mat-icon>check</mat-icon>\n                    </button>\n                                        </mat-form-field>\n                                        <div class=\"error-message\" *ngIf=\"checkIfExisting()\">{{\"active-patients-module.errors.biosensor_id_repeated\" | translate}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        <td>-</td>\n                        <td>-</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"add-items mt-2\" *ngIf=\"!readOnly\">\n            <button mat-flat-button mat-dialog-add color=\"primary\" (click)=\"addNew()\">\n        <!--<mat-icon >add</mat-icon>{{\"active-patients-module.button.add_new\" | translate}}-->\n        <!--<mat-icon *ngIf=\"!isShow\">add</mat-icon>\n          <mat-icon *ngIf=\"isShow\">close</mat-icon>-->\n        {{ isShow ? (\"active-patients-module.button.cancel\" | translate) : (\"active-patients-module.button.add_new\" | translate) }}\n      </button>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions class=\"me-4\">\n    <ng-container *ngIf=\"!readOnly; else okButton\">\n        <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\n      {{ \"active-patients-module.button.cancel\" | translate }}\n    </button>\n        <button mat-flat-button color=\"primary\" (click)=\"onClickSave()\" class=\"fill-btn\"\n                [disabled]=\"!validateBiosensor() || !patchesUpdated\" [class.disabled]=\"!validateBiosensor() || !patchesUpdated\">\n      {{ \"active-patients-module.button.save\" | translate }}\n    </button>\n    </ng-container>\n    <ng-template #okButton>\n        <button mat-flat-button mat-dialog-close color=\"primary\" class=\"fill-btn\">\n      {{ \"active-patients-module.button.ok\" | translate }}\n    </button>\n    </ng-template>\n\n</mat-dialog-actions>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as moment from \"moment\";\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\nimport { Patch } from \"../models/active-patients.model\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\n\nexport interface PatchesData {\n  heading? : string,\n  readOnly?: boolean,\n  activePatch: string,\n  patchIds: Patch[]\n}\n\n@Component({\n  selector: \"app-patient-more-info\",\n  templateUrl: \"./patient-more-info-dialog.component.html\",\n  styleUrls: [\"./patient-more-info-dialog.component.scss\"],\n})\nexport class PatientMoreInfoDialogComponent implements OnInit {\n  isShow : boolean = false;\n  readOnly : boolean = false;\n  heading : string =\"\";\n  patchIdData : Patch[] = new Array();\n  newBiosensorId: string;\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  currentPatches;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: PatchesData,\n  private dialog: MatDialog,\n  private userPreference: UserPreferenceService,\n  private ref: MatDialogRef<PatientMoreInfoDialogComponent>) {\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.patchIdData = [...data.patchIds || []];\n    this.currentPatches = [...this.patchIdData];\n    this.readOnly = data.readOnly;\n    this.heading = data.heading;\n  }\n\n  ngOnInit(): void {\n    this.getPatchIdData();\n  }\n\n  toggleStatus(){\n    this.isShow = !this.isShow;\n  }\n  addNew() {\n    this.newBiosensorId = \"\";\n    this.bioString = \"\";\n    this.isShow = !this.isShow;\n  }\n\n  checkIfExisting(){\n    return this.patchIdData.filter(p => p.deviceId?.toUpperCase() === this.newBiosensorId?.toUpperCase()).length;\n  }\n\n  onClickDelete(patch: Patch){\n    this.patchIdData = [\n      ...this.patchIdData.filter(d => patch.deviceId !== d.deviceId)\n    ]\n    this.clear();\n  }\n  bioString: string = \"\";\n\n  keypressEvent(e: KeyboardEvent) {\n    if (this.bioString.length < 5) {\n      this.bioString = this.bioString + e.key;\n      let blockSpecialRegex = /[~`!@#$%^&()_={}[\\]:;,.<>+\\/?-]/;\n      let key = e.key;\n      let n = Boolean(this.bioString.charAt(0).match(/[a-zA-Z]/));\n      if (!n && this.bioString.length > 0) {\n        this.bioString = this.bioString.substring(0, this.bioString.length - 1);\n        e.preventDefault();\n        return false;\n      }\n\n      if (blockSpecialRegex.test(key)) {\n        e.preventDefault();\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  clear(){\n    this.newBiosensorId = '';\n    this.bioString = '';\n  }\n\n  onClickSave(){\n    this.ref.close(this.patchIdData);\n  }\n\n  keydownEvent(e: KeyboardEvent) {\n    if (e.code === \"Backspace\" && this.bioString.length > 0) {\n      this.bioString = this.bioString.substring(0, this.bioString.length - 1);\n    }\n  }\n\n  addBiosensorId() {\n    let obj = {\n      deviceId: this.newBiosensorId.toUpperCase(), \n      deviceType: \"Biosensor Id\",\n      startTime: 0,\n      endTime: 0, \n    };\n    this.patchIdData.push(obj);\n    this.toggleStatus();\n  }\n\n  getPatchIdData(){\n    this.data.patchIds = [...this.patchIdData || []];\n  }\n\n  displayDeleteIcon(patchId) {\n    var date = moment(patchId.endTime*1000);\n    if(patchId.deviceId === this.data.activePatch) {\n      return false;\n    } else if (patchId.startTime && date.isAfter(new Date())) {\n      return false;\n    } else if (patchId.startTime && date.isBefore(new Date())) {\n      return false;\n    } else if (!patchId.startTime) {\n      return true;\n    }\n  }\n\n  isFutureDate(endDate) {\n    return !moment(endDate*1000).isAfter(new Date());\n  }\n\n  openDeleteConfirmationModal(patch) {\n    const deletePatch = this.dialog.open(ConfirmationDialogComponent, {\n      maxWidth: \"90vw\",\n      width: \"500px\",\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n      data: {\n        heading: \"active-patients-module.dialog.delete_patch\",\n        message: \"active-patients-module.dialog.delete_patch_message\",\n        stop_biosensor : false\n      },\n    });\n    deletePatch.afterClosed().subscribe((confirm: boolean) => {\n      if (confirm) {\n        this.onClickDelete(patch);\n      }\n    });\n  }\n\n  validateBiosensor() {\n    let patternToMatch = /^[a-zA-Z]{1}[a-zA-Z0-9]{4}$/;\n    return (patternToMatch.test(this.newBiosensorId) || this.newBiosensorId === '');\n  }\n  alphaNumericsOnly(event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z0-9]+$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  patchesUpdated() {\n    return (JSON.stringify(this.currentPatches) !== JSON.stringify(this.patchIdData))\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-remove-biosensor',\n  templateUrl: './remove-biosensor.component.html',\n  styleUrls: ['./remove-biosensor.component.scss']\n})\nexport class RemoveBiosensorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{'active-patients-module.dialog.remove_biosensor' | translate}}\n    </h1>\n  </mat-card>\n  \n  <mat-dialog-content class=\"mat-dialog-popup remove-dialog\" cdkInitialFocus>\n    <div class=\"dialog-form\">\n      <p>\n        {{'active-patients-module.dialog.remove_biosensor_message' | translate}}\n      </p>\n    </div>\n  </mat-dialog-content>\n  <div mat-dialog-actions >\n    <button\n      mat-flat-button\n      color=\"primary\"\n      mat-dialog-close\n      class=\"fill-btn\"\n    >\n      {{ \"active-patients-module.button.ok\" | translate }}\n    </button>\n  </div>\n  ","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, of, throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { LSTableConfig } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\r\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport {\r\n  ActivePatient,\r\n  DOCTORS,\r\n  NewPatient,\r\n  UnassignedPatient,\r\n} from \"../models/active-patients.model\";\r\nimport { BackendApiService } from \"@services/backendapi.service\";\r\nimport { Patient } from \"src/app/shared/shared.interface\";\r\nimport { env } from \"process\";\r\nimport { error } from \"console\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class ActivePatientsService {\r\n  BASE_URL: string = environment.dataApiUrl;\r\n  URL:string=environment.dataApiUrl2;\r\n  http: HttpClient;\r\n  facility_id: string;\r\n  facility_staff: DOCTORS[] = [];\r\n\r\n  constructor(\r\n    private manageGroupService: ManageGroupsService,\r\n    private backendApiService: BackendApiService) {\r\n    this.http = backendApiService.httpClient;\r\n    this.BASE_URL = (environment.integ) ? environment.dataApiUrl2 : environment.dataApiUrl;\r\n    this.facility_id = \"CFPI8P\";\r\n\r\n  }\r\n\r\n  async getFacilityUsers() {\r\n    let usrs = await this.getUsers();\r\n    console.log(\"Getting facility users\");\r\n    usrs.subscribe((doctors) => { \r\n      this.facility_staff = doctors.data.items;\r\n      console.log(\"STAFF:>\", this.facility_staff);\r\n    });\r\n  }\r\n\r\n  async getUsers() {\r\n    //Get all users of the facility..\r\n    let url = `${this.BASE_URL}get_users/${this.facility_id}?page=1&sort_order=asc&limit=100`;\r\n    let users = this.http.get<any>(url).pipe(catchError(this.handleError));\r\n    return users;\r\n  }\r\n\r\n  getFacilityStaff(role: string): DOCTORS[] {\r\n\r\n    //Filter users according to prescibers.\r\n    let p = this.facility_staff.filter(x =>   (x.roles[0][role] === 1) && x.enable)\r\n\r\n    let userList = [];\r\n    userList = p.map(user => ({id: user.id, name: `${user?.first_name} ${user?.last_name}`}))\r\n    return userList;\r\n  }\r\n\r\n  getAll(url) {\r\n    if (url) {\r\n      //Hard-code baseurl to probeplus\r\n      //this.BASE_URL = \"http://www.probeplus.site/\";\r\n      let apiURL = `${this.BASE_URL}${url}`;\r\n      return this.http\r\n        .get<ActivePatient[]>(apiURL)\r\n        .pipe(catchError(this.handleError));\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  savePatient(data) {\r\n    let url = this.BASE_URL +\"patient_register/\";\r\n    //TODO: Integrate with location API in drop-down\r\n    data.payload.facility_id = \"F001\";\r\n    data.payload.created_by = \"U001\";\r\n    data.payload.fk_technician=\"USRJNC139\"\r\n    return this.http\r\n      .post<NewPatient>(url, data.payload)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updatePatient(obj) {\r\n    let url = this.BASE_URL + \"patients/\";\r\n    return this.http\r\n      .put<{ data: NewPatient }>(url, obj.payload)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  getAutogeneratedPatientId() {\r\n    let url ='https://alpha.api.lifesignals.com/api/v1/resources/patients/generate-id';\r\n    return this.http.post(url, '').pipe(catchError(this.handleError));\r\n  }\r\n\r\n  stopProcedure(patientId) {\r\n    let url = this.BASE_URL + `patients/${patientId}/stop-procedure`;\r\n    return this.http\r\n      .post<NewPatient>(url, \"\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  dischargePatient(patientId) {\r\n    patientId = encodeURIComponent(patientId);\r\n    let url = this.BASE_URL + `patients/${patientId}/discharge`;\r\n    return this.http\r\n      .post<NewPatient>(url, \"\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getDoctorsList() {\r\n    let role = \"prescriber\";\r\n    // drop_down_user/6479a6323525db4f78d50831?role=prescriber'\r\n    let url = this.URL+`get_users_based_role/CFPI8P?role=prescriber`;\r\n    console.log(url);\r\n    // let url = \"http://www.probeplus.site/drop_down_user/6479a6323525db4f78d50831?role=admin\";\r\n    return this.http.get<DOCTORS[]>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getDoctorBy(id) {\r\n    let url = this.BASE_URL + \"clinical-facilities/physicians?Id=\" + id;\r\n    return this.http.get<any>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  handleError(error: any) {\r\n     return throwError(error.errorMessage || `Error: ${error}`);\r\n  }\r\n\r\n  setSelectedPatientIds(ids: string[]) {\r\n    return of(ids);\r\n  }\r\n\r\n  setSelectedTab(tab: string) {\r\n    return of(tab);\r\n  }\r\n\r\n  getUnassignedPatients(url) {\r\n    if (url) {\r\n      let apiURL = `${this.BASE_URL}${url}`;\r\n      return this.http\r\n        .get<UnassignedPatient[]>(apiURL)\r\n        .pipe(catchError(this.handleError));\r\n    } else {\r\n      return of(undefined);\r\n    }\r\n  }\r\n\r\n  getPatientBy(id) {\r\n    id = encodeURIComponent(id);\r\n    let apiURL = `${this.BASE_URL}patients/${id}`;\r\n    return this.http\r\n      .get<{ data: ActivePatient }>(apiURL)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private cGroup$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  groups$: Observable<any[]> = this.cGroup$.asObservable();\r\n\r\n  getCGroups(): Observable<Group[]> {\r\n    if (this.cGroup$.getValue()) {\r\n      return this.cGroup$.asObservable();\r\n    } else {\r\n      return this.manageGroupService.fetch()\r\n        .pipe(map(groups => {\r\n          if (groups['data']?.length > 0) {\r\n            this.cGroup$.next(groups['data']);\r\n          }\r\n          return groups['data'] || [];\r\n        }));\r\n    }\r\n  }\r\n\r\n  unassignedPatientsUrl(config: LSTableConfig, searchObject) {\r\n    return `patches/unassigned?&page=${config.page.pageIndex + 1}&size=${config.page.pageSize}&${searchObject?.keyword?.toLowerCase()}=${searchObject?.string}`;\r\n  }\r\n\r\n  actvePatientsUrl(config: LSTableConfig, searchObject, filterObject) {\r\n    let searchString = encodeURIComponent(searchObject.string)\r\n    // let url = `patients/?sortBy=${config.sort.active}:${config.sort.direction}&isDischarged=false&page=${config.page.pageIndex + 1}&size=${config.page.pageSize}`;\r\n    // let url = `current_patient/?offset=${config.page.pageIndex+1}&limit=${config.page.pageSize}`;\r\n    let url = `current_patient/?page=${config.page.pageIndex + 1}&limit=${config.page.pageSize}&sort=${config.sort.active}&order=${config.sort.direction}`;\r\n    // let url = \"patient_details\"\r\n    if (searchObject?.keyword && searchString) {\r\n      url = url + `&${searchObject?.keyword?.toLowerCase()}=${searchString}`;\r\n    }\r\n    if (filterObject?.cGroupId) {\r\n      url = url + `&cGroupId=${filterObject?.cGroupId}`;\r\n    }\r\n    if (filterObject?.pGroupId) {\r\n      url = url + `&pGroupId=${filterObject?.pGroupId}`;\r\n    }\r\n    if(filterObject?.doctor)\r\n    {\r\n      url = url + `&fk_prescriber=USR111111`;\r\n    }\r\n    return url;\r\n  }\r\n \r\n  getClinicalGroups(location: string) {\r\n    return this.groups$.pipe(map((groups: any[]) => {\r\n      return groups.filter(g => g.type === location);\r\n    }));\r\n  }\r\n\r\n  assignGroup(ob) {\r\n    let url = this.BASE_URL + \"patients/assign-group\";\r\n    return this.http.post<Group>(url, ob.payload).pipe(catchError(this.handleError));\r\n  }\r\n  getPanelDetails(panelId: string): Promise<Array<Patient>> {\r\n    return new Promise((resolve, reject) => {\r\n      const apiUrl = this.BASE_URL + 'dashboard/panels/';\r\n      this.backendApiService.getMapping(apiUrl + panelId)\r\n        .then(response => {\r\n          const data = response?.data?.patients;\r\n          if (data) {\r\n            const patientsArr = data.map((patient) => ({\r\n              patchId: patient?.patchId,\r\n              patientId: patient?.patientId,\r\n              doctorId: patient?.doctorId,\r\n              firstName: patient?.firstName,\r\n              lastName: patient?.lastName,\r\n              age: patient?.age,\r\n              cGroup: patient?.cGroup,\r\n              pGroup: patient?.pGroup,\r\n              sex: patient?.gender,\r\n              created: new Date(patient?.stTime * 1000)\r\n            }));\r\n            resolve(patientsArr);\r\n          }\r\n        }).catch(reject);\r\n    });\r\n  }\r\n  generateAdmissionId() {\r\n    let url = this.BASE_URL + \"patients/admissions/generate-id\";\r\n    return this.http.post(url, \"\").pipe(catchError(this.handleError));\r\n  }\r\n  searchPatient(id) {\r\n    id = encodeURIComponent(id);\r\n    let apiURL = this.BASE_URL + `patients/details/search?page=1&size=5&sortBy=PatientID:desc&PatientID=${id}`;\r\n    return this.http\r\n      .get(apiURL)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  stopMonitoringUnassigned(patchIds) {\r\n    let url = this.BASE_URL + `patches/stop-procedure/bulk`;\r\n    let body = {\r\n      \"patchIdList\": patchIds\r\n    }\r\n    return this.http\r\n      .post<NewPatient>(url, body)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  deletePatch(patchId) {\r\n    let url = this.BASE_URL + `patches/unassigned/${patchId}`;\r\n    return this.http.delete<any>(url).pipe(catchError(this.handleError));\r\n  }\r\n  transferRelay(patchId) {\r\n    let url = this.BASE_URL + `patients/relay-transfer/${patchId}`;\r\n    return this.http\r\n      .post<NewPatient>(url, {})\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { Action } from \"@ngrx/store\";\nimport {\n  ActivePatient,\n  AssignGroup,\n  DOCTORS,\n  NewPatient,\n  UnassignedPatient,\n} from \"../models/active-patients.model\";\n\nexport enum ActionTypes {\n  LOAD_ACTIVE_PATIENTS_REQUEST = \"[ACTIVEPATIENTS] Load active patients request\",\n  LOAD_ACTIVE_PATIENTS_FAILURE = \"[ACTIVEPATIENTS] Load active patients Failure\",\n  LOAD_ACTIVE_PATIENTS_SUCCESS = \"[ACTIVEPATIENTS] Load active patients Success\",\n\n  LOAD_UNASSIGNED_PATIENTS_REQUEST = \"[UNASSIGNEDPATIENTS] Load unassigned patients request\",\n  LOAD_UNASSIGNED_PATIENTS_FAILURE = \"[UNASSIGNEDPATIENTS] Load unassigned patients Failure\",\n  LOAD_UNASSIGNED_PATIENTS_SUCCESS = \"[UNASSIGNEDPATIENTS] Load unassigned patients Success\",\n\n  LOAD_DOCTORS_LIST_REQUEST = \"[DOCTORS] Load doctors list request\",\n  LOAD_DOCTORS_LIST_FAILURE = \"[DOCTORS] Load doctors list Failure\",\n  LOAD_DOCTORS_LIST_SUCCESS = \"[DOCTORS] Load doctors list Success\",\n\n  CREATE_NEW_PATIENT_REQUEST = \"[ACTIVEPATIENTS] Create new patient request\",\n  CREATE_NEW_PATIENT_FAILURE = \"[ACTIVEPATIENTS] Create new patient Failure\",\n  CREATE_NEW_PATIENT_SUCCESS = \"[ACTIVEPATIENTS] Create new patient Success\",\n\n  UPDATE_PATIENT_REQUEST = \"[ACTIVEPATIENTS] Update patient request\",\n  UPDATE_PATIENT_FAILURE = \"[ACTIVEPATIENTS] Update patient Failure\",\n  UPDATE_PATIENT_SUCCESS = \"[ACTIVEPATIENTS] Update patient Success\",\n\n  ASSIGN_GROUP_REQUEST = \"[ASSIGNGROUP] assign group request\",\n  ASSIGN_GROUP_FAILURE = \"[ASSIGNGROUP] assign group Failure\",\n  ASSIGN_GROUP_SUCCESS = \"[ASSIGNGROUP] assign group Success\",\n\n  DISCHARGE_PATIENT_REQUEST = \"[ACTIVEPATIENTS] DISCHARGE patient request\",\n  DISCHARGE_PATIENT_FAILURE = \"[ACTIVEPATIENTS] DISCHARGE patient Failure\",\n  DISCHARGE_PATIENT_SUCCESS = \"[ACTIVEPATIENTS] DISCHARGE patient Success\",\n\n  STOP_MONITORING_REQUEST = \"[ACTIVEPATIENTS] Stop Monitoring patient request\",\n  STOP_MONITORING_FAILURE = \"[ACTIVEPATIENTS] Stop Monitoring patient Failure\",\n  STOP_MONITORING_SUCCESS = \"[ACTIVEPATIENTS] Stop Monitoring patient Success\",\n\n  SET_SELECTED_PATIENTS_IDs_REQUEST = \"[ACTIVEPATIENTS] Set selected patient ids request\",\n  SET_SELECTED_PATIENTS_IDs_FAILURE = \"[ACTIVEPATIENTS] Set selected patient ids Failure\",\n  SET_SELECTED_PATIENTS_IDs_SUCCESS = \"[ACTIVEPATIENTS] Set selected patient ids Success\",\n\n  SET_SELECTED_TAB_REQUEST = \"[TableTab] Set selected patient ids request\",\n  SET_SELECTED_TAB_FAILURE = \"[TableTab] Set selected patient ids Failure\",\n  SET_SELECTED_TAB_SUCCESS = \"[TableTab] Set selected patient ids Success\",\n}\n\nexport class LoadActivePatientsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_ACTIVE_PATIENTS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class LoadActivePatientsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_ACTIVE_PATIENTS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class LoadActivePatientsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_ACTIVE_PATIENTS_SUCCESS;\n  constructor(\n    public payload: { data: { patients: ActivePatient[]; total: number } }\n  ) {}\n}\n\nexport class LoadUnassignedPatientsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_UNASSIGNED_PATIENTS_REQUEST;\n  constructor(public payload: { url: string }) {}\n}\n\nexport class LoadUnassignedPatientsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_UNASSIGNED_PATIENTS_FAILURE;\n  constructor(public payload: { error: any }) {}\n}\n\nexport class LoadUnassignedPatientsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_UNASSIGNED_PATIENTS_SUCCESS;\n  constructor(\n    public payload: { data:{ items : UnassignedPatient[]; total: number } }\n  ) {}\n}\n\nexport class LoadDoctorsListRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_DOCTORS_LIST_REQUEST;\n}\n\nexport class LoadDoctorsListFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_DOCTORS_LIST_FAILURE;\n  constructor(public payload: { error: any }) {}\n}\n\nexport class LoadDoctorsListSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_DOCTORS_LIST_SUCCESS;\n  constructor(public payload: { doctors: DOCTORS[] }) {}\n}\n\nexport class CreateNewPatientRequestAction implements Action {\n  readonly type = ActionTypes.CREATE_NEW_PATIENT_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class CreateNewPatientFailureAction implements Action {\n  readonly type = ActionTypes.CREATE_NEW_PATIENT_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class CreateNewPatientSuccessAction implements Action {\n  readonly type = ActionTypes.CREATE_NEW_PATIENT_SUCCESS;\n  constructor(public payload: { newPatient: NewPatient }) {}\n}\n\nexport class UpdatePatientRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_PATIENT_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class UpdatePatientFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_PATIENT_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class UpdatePatientSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_PATIENT_SUCCESS;\n  constructor(public payload: { updatedData: NewPatient }) {}\n}\n\nexport class AssignGroupRequestAction implements Action {\n  readonly type = ActionTypes.ASSIGN_GROUP_REQUEST;\n  constructor(public payload: any) {}\n}\n\nexport class AssignGroupFailureAction implements Action {\n  readonly type = ActionTypes.ASSIGN_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class AssignGroupSuccessAction implements Action {\n  readonly type = ActionTypes.ASSIGN_GROUP_SUCCESS;\n  constructor(public payload: { updatedData: any }) {}\n}\n\nexport class DischargePatientRequestAction implements Action {\n  readonly type = ActionTypes.DISCHARGE_PATIENT_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class DischargePatientFailureAction implements Action {\n  readonly type = ActionTypes.DISCHARGE_PATIENT_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class DischargePatientSuccessAction implements Action {\n  readonly type = ActionTypes.DISCHARGE_PATIENT_SUCCESS;\n  constructor(public payload: { dischargedPatient: NewPatient }) {}\n}\n\nexport class StopMonitoringRequestAction implements Action {\n  readonly type = ActionTypes.STOP_MONITORING_REQUEST;\n  constructor(public payload: NewPatient) {}\n}\n\nexport class StopMonitoringFailureAction implements Action {\n  readonly type = ActionTypes.STOP_MONITORING_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class StopMonitoringSuccessAction implements Action {\n  readonly type = ActionTypes.STOP_MONITORING_SUCCESS;\n  constructor(public payload: { patient: NewPatient }) {}\n}\n\nexport class SetSelectedPatientIdsRequestAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_PATIENTS_IDs_REQUEST;\n  constructor(public payload: string[]) {}\n}\n\nexport class SetSelectedPatientIdsFailureAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_PATIENTS_IDs_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class SetSelectedPatientIdsSuccessAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_PATIENTS_IDs_SUCCESS;\n  constructor(public payload: { patientIds: string[] }) {}\n}\n\nexport class SetSelectedTabRequestAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_TAB_REQUEST;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTabFailureAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_TAB_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class SetSelectedTabSuccessAction implements Action {\n  readonly type = ActionTypes.SET_SELECTED_TAB_SUCCESS;\n  constructor(public payload: { selectedTab: string }) {}\n}\n\nexport type ActivePatientsActions =\n  | LoadActivePatientsFailureAction\n  | LoadActivePatientsRequestAction\n  | LoadActivePatientsSuccessAction\n  | LoadDoctorsListFailureAction\n  | LoadDoctorsListRequestAction\n  | LoadDoctorsListSuccessAction\n  | CreateNewPatientFailureAction\n  | CreateNewPatientRequestAction\n  | CreateNewPatientSuccessAction\n  | UpdatePatientRequestAction\n  | UpdatePatientFailureAction\n  | UpdatePatientSuccessAction\n  | DischargePatientRequestAction\n  | DischargePatientFailureAction\n  | DischargePatientSuccessAction\n  | StopMonitoringFailureAction\n  | StopMonitoringRequestAction\n  | StopMonitoringSuccessAction\n  | SetSelectedPatientIdsFailureAction\n  | SetSelectedPatientIdsRequestAction\n  | SetSelectedPatientIdsSuccessAction\n  | LoadUnassignedPatientsRequestAction\n  | LoadUnassignedPatientsFailureAction\n  | LoadUnassignedPatientsSuccessAction\n  | SetSelectedTabRequestAction\n  | SetSelectedTabFailureAction\n  | SetSelectedTabSuccessAction\n  | AssignGroupFailureAction\n  | AssignGroupRequestAction\n  | AssignGroupSuccessAction;\n","import { TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport {\r\n  ActivePatient,\r\n  NewPatient,\r\n  DOCTORS,\r\n  UnassignedPatient,\r\n  ActivePatientsTabs,\r\n} from \"../models/active-patients.model\";\r\nimport { ActivePatientsActions, ActionTypes } from \"./active-patients.actions\";\r\n\r\nexport interface State {\r\n  ACTIVE_PATIENTS_DATA?: ActivePatient[];\r\n  UNASSIGNED_PATIENTS_DATA?: UnassignedPatient[];\r\n  PATIENT?: NewPatient;\r\n  DOCTORS?: DOCTORS[];\r\n  error?: any;\r\n  PATIENT_IDS?: string[];\r\n  SELECTED_TAB?: string;\r\n  tableState?: string;\r\n  addEditState?: string;\r\n  total?: number;\r\n  unassignedPatients_total ?: number;\r\n}\r\n\r\nconst initialActivePatientState: State = {\r\n  ACTIVE_PATIENTS_DATA: [],\r\n  UNASSIGNED_PATIENTS_DATA: [],\r\n  PATIENT: null,\r\n  DOCTORS: [],\r\n  error: \"\",\r\n  PATIENT_IDS: null,\r\n  SELECTED_TAB: ActivePatientsTabs.ACTIVE_PATIENT,\r\n  tableState: TableState.DEFAULT,\r\n  addEditState: TableState.DEFAULT,\r\n  total: 0,\r\n  unassignedPatients_total:0\r\n};\r\n\r\nexport const patientsFeatureKey = \"patient\";\r\n\r\nexport function ActivePatientsReducer(\r\n  state: State = initialActivePatientState,\r\n  action: ActivePatientsActions\r\n) {\r\n  switch (action.type) {\r\n    case ActionTypes.LOAD_ACTIVE_PATIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ACTIVE_PATIENTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        //ACTIVE_PATIENTS_DATA: [],\r\n        tableState: TableState.FAILURE,\r\n        total: 0\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_ACTIVE_PATIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ACTIVE_PATIENTS_DATA: action.payload[\"data\"].patients,\r\n        tableState: TableState.SUCCESS,\r\n        total: action.payload[\"data\"].total\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_UNASSIGNED_PATIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_UNASSIGNED_PATIENTS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        tableState: TableState.FAILURE,\r\n        UNASSIGNED_PATIENTS_DATA: [],\r\n        error: action.payload.error,\r\n        unassignedPatients_total: 0\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_UNASSIGNED_PATIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        UNASSIGNED_PATIENTS_DATA: action.payload[\"data\"].items,\r\n        tableState: TableState.SUCCESS,\r\n        unassignedPatients_total: action.payload[\"data\"].total,\r\n        error: null\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_DOCTORS_LIST_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        //tableState: TableState.LOADING,\r\n        DOCTORS: []\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_DOCTORS_LIST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.LOAD_DOCTORS_LIST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        DOCTORS: action.payload[\"doctors\"][\"data\"],\r\n      };\r\n    }\r\n\r\n    case ActionTypes.CREATE_NEW_PATIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        PATIENT : null,\r\n        error: null,\r\n        addEditState: TableState.DEFAULT,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.CREATE_NEW_PATIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        addEditState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.CREATE_NEW_PATIENT_SUCCESS: {\r\n      return {\r\n      ...state,\r\n      PATIENT: action.payload[\"newPatient\"][\"data\"],\r\n      ACTIVE_PATIENTS_DATA: [\r\n          ...state.ACTIVE_PATIENTS_DATA,\r\n          action.payload[\"newPatient\"][\"data\"]\r\n        ],\r\n        total: state?.total + 1,\r\n        addEditState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_PATIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        addEditState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_PATIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        addEditState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_PATIENT_SUCCESS: {\r\n      let resp: ActivePatient[] = [];\r\n      if (state.SELECTED_TAB === ActivePatientsTabs.ASSIGN_PATIENT && action.payload[\"updatedData\"][\"data\"]) {\r\n        resp = state.ACTIVE_PATIENTS_DATA;\r\n      } else if (state.SELECTED_TAB === ActivePatientsTabs.ACTIVE_PATIENT) {\r\n        resp = state.ACTIVE_PATIENTS_DATA?.map((x) => {\r\n          if (x?.patientId === ((action.payload[\"updatedData\"][\"data\"] !== undefined) ? action.payload[\"updatedData\"][\"data\"][\"patientId\"] : action.payload[\"updatedData\"][\"patientId\"])) {\r\n            x = (action.payload[\"updatedData\"][\"data\"] !== undefined) ? action.payload[\"updatedData\"][\"data\"] : action.payload[\"updatedData\"];\r\n            return x;\r\n          } else {\r\n            return x;\r\n          }\r\n        })\r\n      }\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        addEditState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.STOP_MONITORING_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.STOP_MONITORING_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.STOP_MONITORING_SUCCESS: {\r\n\r\n      return {\r\n        ...state,\r\n        ACTIVE_PATIENTS_DATA: state.ACTIVE_PATIENTS_DATA?.map((x) => {\r\n          if (x && x[\"patientId\"] === action.payload[\"patient\"][\"data\"]) {\r\n            x.biosensorStatus = \"STOPPED\";\r\n            return x;\r\n          } else {\r\n            return x;\r\n          }\r\n        }),\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_PATIENTS_IDs_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_PATIENTS_IDs_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_PATIENTS_IDs_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        PATIENT_IDS: action.payload[\"patientIds\"],\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_TAB_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_TAB_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SET_SELECTED_TAB_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        SELECTED_TAB: action.payload[\"selectedTab\"],\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ASSIGN_GROUP_REQUEST: {\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ASSIGN_GROUP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.ASSIGN_GROUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.DISCHARGE_PATIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        tableState: TableState.LOADING,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.DISCHARGE_PATIENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        tableState: TableState.FAILURE,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.DISCHARGE_PATIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ACTIVE_PATIENTS_DATA: state?.ACTIVE_PATIENTS_DATA?.filter(\r\n        (x) => {\r\n        if (x.patientId !== action.payload[\"dischargedPatient\"][\"data\"]) {\r\n        return x;\r\n        }\r\n        }\r\n        ),\r\n        total: state?.total - 1,\r\n        tableState: TableState.SUCCESS,\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { State, patientsFeatureKey } from \"./active-patients.reducer\";\n\nconst getPatientState = createFeatureSelector<State>(patientsFeatureKey);\n\nexport const selectActivePatientsList = createSelector(\n  getPatientState,\n  (state) => {\n    return {\n      ...state,\n      error: state?.error,\n      tableState: state?.tableState\n    }\n  }\n);\n\nexport const selectUnassignedPatientsList = createSelector(\n  getPatientState,\n  (state) => {\n    return {\n      ...state,\n      error: state?.error,\n      tableState: state?.tableState\n    }\n  }\n);\n\nexport const selectActivePatientsError = createSelector(\n  getPatientState,\n  (state) => state?.error\n);\n\nexport const createNewPatient = createSelector(\n  getPatientState,\n  (state) => {\n    return{\n      PATIENT : state?.PATIENT,\n      error : state?.error,\n      addEditState: state?.addEditState\n    }\n  }\n);\n\nexport const updatePatient = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const assignGroupPatient = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const dischargePatient = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const stopMonitoring = createSelector(\n  getPatientState,\n  (state) => state.PATIENT\n);\n\nexport const doctorsList = createSelector(\n  getPatientState,\n  (state) => state?.DOCTORS\n);\n\nexport const getPatientIds = createSelector(\n  getPatientState,\n  (state) => state.PATIENT_IDS\n);\n\nexport const selectedTab = createSelector(\n  getPatientState,\n  (state) => state.SELECTED_TAB\n)\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\nimport { RootComponent } from \"./shared/root/root.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"settings\",\r\n    loadChildren: () =>\r\n      import(\"./settings/settings.module\").then(\r\n        (module) => module.SettingsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"summary\",\r\n    component: RootComponent,\r\n    loadChildren: () =>\r\n      import(\"./summary/summary.module\").then((module) => module.SummaryModule)\r\n  },\r\n  {\r\n    path: \"super-admin\",\r\n    loadChildren: () =>\r\n      import(\"./super-admin/super-admin.module\").then(\r\n        (module) => module.SuperAdminModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"service-provider-admin\",\r\n    loadChildren: () =>\r\n      import(\"./service-provider-admin/service-provider-admin.module\").then(\r\n        (module) => module.ServiceProviderAdminModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"patients\",\r\n    loadChildren: () =>\r\n      import(\"./active-patients/active-patients.module\").then(\r\n        (module) => module.ActivePatientsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"pending-interpretation\",\r\n    loadChildren: () =>\r\n      import(\"./pending-interpretation/pending-interpretation.module\").then(\r\n        (module) => module.ActivePatientsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"discharge\",\r\n    loadChildren: () =>\r\n      import(\"./discharge-patients/discharge-patients.module\").then(\r\n        (module) => module.DischargePatientsModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"manage-group\",\r\n    loadChildren: () =>\r\n      import(\"./manage-group/manage-group.module\").then(\r\n        (module) => module.ManageGroupModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"profile\",\r\n    component: ProfileComponent,\r\n  },\r\n  {\r\n    //default route after login from SSO, auth guard logic will handle whether to stay in summary page or not\r\n    path: \"\",\r\n    redirectTo: \"/summary\",\r\n    pathMatch: \"full\"\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      relativeLinkResolution: \"legacy\",\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, Injectable, NgModule, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport {\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  RippleGlobalOptions,\r\n} from \"@angular/material/core\";\r\nimport {ManageUsersService} from \"./settings/manage-users/services/manage-users.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private _appRippleOptions: AppGlobalRippleOptions,\r\n    private userService: ManageUsersService\r\n  ) {\r\n    this._appRippleOptions.disabled = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"SAA : \" + this.authService.getRoles());\r\n    let userId = this.authService.getUserId();\r\n    console.log(\"uId : \" + userId);\r\n    let preference;\r\n    this.userService.getUser(userId)\r\n        .subscribe((response: any) => {\r\n          if(response.status === 'OK') {\r\n            preference = {\r\n              units: response?.data?.units || 'SI',\r\n              timeZone: this.userService.getTimeZoneOffset(response?.data?.timezone),\r\n            };\r\n            sessionStorage.setItem('userPreference', JSON.stringify(preference));\r\n            sessionStorage.setItem('timezone', response?.data?.timezone);\r\n            sessionStorage.setItem('facility-logo', response.data.logoUrl);\r\n            sessionStorage.setItem('first_name',response.data.firstName);\r\n            sessionStorage.setItem('facilityName',response.data?.facilityName);\r\n            sessionStorage.setItem('emr',response.data?.emr);\r\n            this.authService.getCustomizationLogo(true);\r\n          } else {\r\n            preference = {\r\n              units: '',\r\n              timeZone: '',\r\n            };\r\n            sessionStorage.setItem('userPreference', JSON.stringify(preference));\r\n          }\r\n        }, error => {\r\n          preference = {\r\n            units: '',\r\n            timeZone: '',\r\n          };\r\n          sessionStorage.setItem('userPreference', JSON.stringify(preference));\r\n        })\r\n\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AppGlobalRippleOptions implements RippleGlobalOptions {\r\n  /** Whether ripples should be disabled globally. */\r\n  disabled: boolean = false;\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: MAT_RIPPLE_GLOBAL_OPTIONS, useExisting: AppGlobalRippleOptions },\r\n  ],\r\n})\r\nexport class RippleModule {}\r\n","<router-outlet></router-outlet>\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { APP_INITIALIZER, NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\n\r\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from \"@angular/common/http\";\r\nimport { SharedModule } from \"src/app/shared/shared.module\";\r\nimport { BackendApiService } from \"./services/backendapi.service\";\r\nimport { AuthenticationService } from \"./services/authentication.service\";\r\nimport { AuthGuard } from \"./guards/auth.guard\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreRouterConnectingModule } from \"@ngrx/router-store\";\r\nimport { reducers, metaReducers } from \"./reducers\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { I18nModule } from \"./i18n/i18n.module\";\r\nimport { KeycloakAngularModule, KeycloakService } from \"keycloak-angular\";\r\nimport { initializeKeycloak } from \"./init/keycloak-init.factory\";\r\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\r\nimport { DischargePatientsModule } from \"./discharge-patients/discharge-patients.module\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { ManageUsersService } from \"./settings/manage-users/services/manage-users.service\";\r\nimport {ErrorInterceptor} from \"./interceptors/error.interceptor\";\r\nimport {OWL_DATE_TIME_FORMATS, OwlDateTimeModule, OwlNativeDateTimeModule} from \"ng-pick-datetime\";\r\nimport {MY_MOMENT_FORMATS} from \"@utils/helpers\";\nimport { BioSensorComponent } from './bio-sensor/bio-sensor.component';\r\n\r\n/**\r\n * The http loader factory : Loads the files from define path.\r\n * @param {HttpClient} http\r\n * @returns {TranslateHttpLoader}\r\n * @constructor\r\n */\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, \"../assets/i18n/\", \".json?v=\"+environment.version);\r\n}\r\n@NgModule({\r\n    declarations: [AppComponent, BioSensorComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        MatFormFieldModule,\r\n        SharedModule,\r\n        MatSnackBarModule,\r\n        MatProgressSpinnerModule,\r\n        DischargePatientsModule,\r\n        EffectsModule.forRoot([]),\r\n        StoreRouterConnectingModule.forRoot(),\r\n        StoreModule.forRoot(reducers, {metaReducers}),\r\n        StoreDevtoolsModule.instrument({\r\n            name: \"Lifesignals\",\r\n            logOnly: environment.production\r\n        }),\r\n        KeycloakAngularModule,\r\n        HttpClientModule,\r\n        I18nModule.forRoot({locale_id: \"en-US\"}), // iniating with default language: en-US\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            },\r\n        }),\r\n        OwlDateTimeModule,\r\n        OwlNativeDateTimeModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: APP_INITIALIZER,\r\n            useFactory: initializeKeycloak,\r\n            multi: true,\r\n            deps: [KeycloakService]\r\n        },\r\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill', floatLabel: 'never'}},\r\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n        {provide: OWL_DATE_TIME_FORMATS, useValue: MY_MOMENT_FORMATS},\r\n        AuthGuard,\r\n        AuthenticationService,\r\n        BackendApiService,\r\n        ManageUsersService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bio-sensor',\n  templateUrl: './bio-sensor.component.html',\n  styleUrls: ['./bio-sensor.component.scss']\n})\nexport class BioSensorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>bio-sensor works!</p>\n","<div class=\"sort-col\">\n  <ng-content></ng-content>\n  <div\n    *ngIf=\"enableSort; else disbledSort\"\n    [ngClass]=\"{\n      arrow: true,\n      asc: sorter?.active === ref && sorter?.direction === 'asc',\n      desc: sorter?.active === ref && sorter?.direction === 'desc'\n    }\"\n  >\n    <mat-icon aria-hidden=\"false\" aria-label=\"sort icon\" class=\"cursor-pointer\"\n      >arrow_upward</mat-icon\n    >\n  </div>\n\n  <ng-template #disbledSort>\n    <mat-icon\n      aria-hidden=\"false\"\n      aria-label=\"sort icon\"\n      class=\"cursor-pointer arrow-hide\"\n      >arrow_upward</mat-icon\n    >\n  </ng-template>\n</div>\n","import { Component, HostListener, Input, OnInit } from \"@angular/core\";\nimport { SortDirective } from \"../sort.directive\";\n\n@Component({\n  selector: \"app-sort-header\",\n  templateUrl: \"./sort-header.component.html\",\n  styleUrls: [\"./sort-header.component.scss\"],\n})\nexport class SortHeaderComponent {\n  @Input()\n  ref: string;\n\n  @Input() enableSort = true;\n\n  constructor(public sorter: SortDirective) {}\n\n  @HostListener(\"click\")\n  sort() {\n    this.sorter.sort(this.ref);\n  }\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\nimport { SortChangeEvent } from \"./sort.interface\";\n\n@Directive({\n  selector: \"[appSort]\",\n})\nexport class SortDirective {\n  active = null;\n  direction = null;\n  @Output() sortChange = new EventEmitter<SortChangeEvent>();\n\n  constructor() {}\n\n  sort(column: string) {\n    let direction = this.direction;\n    if (this.active !== column) {\n      this.direction = null;\n      this.active = column;\n    }\n    if (this.direction === null) {\n      direction = \"desc\";\n    } else if (this.direction === \"asc\") {\n      direction = \"desc\";\n    } else if (this.direction === \"desc\") {\n      direction = null;\n    }\n\n    this.sortChange.emit({\n      column,\n      direction,\n    });\n    this.direction = direction;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { SortDirective } from \"./sort.directive\";\nimport { SortHeaderComponent } from \"./sort-header/sort-header.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [SortDirective, SortHeaderComponent],\n  exports: [SortDirective, SortHeaderComponent],\n})\nexport class SortModule {}\n","<ls-page-header type=\"discharge_patients\">\n    <ng-container page-actions>\n        <div class=\"d-flex justify-content-end me-4\">\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group my-2\">\n            </div>\n            <div class=\"d-block d-lg-none my-2 \">\n            </div>\n        </div>\n    </ng-container>\n\n</ls-page-header>\n<!-- discharge patient topheader after-->\n\n<!--<div class=\"row align-items-center\">\n        <div class=\"col-10 col-sm-10 col-md-10 col-lg-8 col-xl-8 col-xxl-7\">\n            \n        </div>\n        <div class=\"col-2 col-sm-2 col-md-2 col-lg-4 col-lg-4 col-xxl-5\">\n\n        </div>\n    </div>-->\n<div class=\"px-3\">\n    <div class=\"table-scroll\">\n\n        <div class=\"mat-discharge-table without-tab-table comman-table-users head-border\">\n            <ls-table [data]=\"dischargePatients\" (sortChange)=\"onSortChange($event)\" [columns]=\"columns\"\n                [config]=\"config\" (page)=\"onPageChange($event)\" [Id]=\"'patientId'\" [isSelected]=\"isSelected\"\n                (selected)=\"onPatientsSelected($event)\">\n                <ng-container table-header>\n                    <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\n                        <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{ \"active-patients-module.filter\" | translate }}</label>\n                        <div class=\"col-sm-12 col-md-12 col-lg-8 col-xl-8 col-xxl-7 select-col discharge-select-dropdown\">\n                            <div class=\"row\">\n                                <div class=\"col-12 col-sm-6\">\n                                    <!--                                    <mat-form-field class=\"selectfilter whiteselect me-2\" appearance=\"fill\" floatLabel=\"never\">-->\n                                    <!--                                        <mat-label>{{ \"discharge-patients-module.location\" | translate }}-->\n                                    <!--                                        </mat-label>-->\n                                    <!--                                        <mat-select class=\"search-filter-select\" #locationMatSelect (selectionChange)=\"searchByGroup('LOCATION', locationGroup, $event)\" [(ngModel)]=\"locationGroup\">-->\n                                    <!--                                            <mat-option [value]=\"null\">-->\n                                    <!--                                                Select-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                            <mat-option [value]=\"group\" *ngFor=\"let group of locationGroups$ | async\">-->\n                                    <!--                                                {{group?.name}}-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                        </mat-select>-->\n                                    <!--                                    </mat-form-field>-->\n                                    <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\" [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\" [label]=\"'discharge-patients-module.location' | translate\" (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\n                                    [showSelect]=\"true\">\n                                    </app-nested-dropdown>\n                                </div>\n                                <div class=\"col-12 col-sm-6\">\n                                    <!--                                    <mat-form-field class=\"selectfilter whiteselect me-2\" appearance=\"fill\" floatLabel=\"never\">-->\n                                    <!--                                        <mat-label>{{ \"discharge-patients-module.clinical_conditions\" | translate }}-->\n                                    <!--                                        </mat-label>-->\n                                    <!--                                        <mat-select class=\"search-filter-select\" #clinicalMatSelect (selectionChange)=\"searchByGroup('CLINICAL', clinicalGroup, $event)\" [(ngModel)]=\"clinicalGroup\">-->\n                                    <!--                                            <mat-option [value]=\"null\">-->\n                                    <!--                                                Select-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                            <mat-option *ngFor=\"let cgroup of clinicalGroups$ | async\" [value]=\"cgroup\">-->\n                                    <!--                                                {{cgroup?.name}}-->\n                                    <!--                                            </mat-option>-->\n                                    <!--                                        </mat-select>-->\n                                    <!--                                    </mat-form-field>-->\n                                    <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\" [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\" [label]=\"'discharge-patients-module.clinical_conditions' | translate\" (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\n                                    [showSelect]=\"true\">\n                                    </app-nested-dropdown>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-12 col-lg-4 col-xl-4 col-xxl-4 mt-2 mt-lg-0\">\n                            <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\n                                <mat-label>{{ \"discharge-patients-module.search\" | translate }}\n                                </mat-label>\n                                <input [(ngModel)]=\"searchObjString\" matInput type=\"search\" (keyup)=\"search()\"\n                                    id=\"searchString\" autocomplete=\"off\" />\n                                <mat-icon class=\"clear-icon\" *ngIf=\"searchObjString\" (click)=\"clear()\">close\n                                </mat-icon>\n                                <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </ng-container>\n\n                <ng-template lsWidgetName=\"firstName\" let-row>{{row?.firstName}} {{row?.lastName}}\n                </ng-template>\n                   <ng-template lsWidgetName=\"admissionId\" let-row>\n                    <div  [class.card-space]=\"row?.admissions.length > 1\"> \n                       <div *ngFor=\"let admission of row?.admissions\">\n                        {{admission.admissionId}}</div>\n                    </div> \n                   </ng-template> \n                <ng-template lsWidgetName=\"patchesHeading\">\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\n                     {{'discharge-patients-module.table.patches' | translate}} \n                </ng-template>\n                <ng-template lsWidgetName=\"patches\" let-row>\n                    <div  [class.card-space]=\"row?.admissions.length > 1\">\n                        <div *ngFor=\"let admission of row?.admissions\">\n                            <button mat-flat-button color=\"primary\" class=\"btn-boxed px-2 btn-no-shadow me-2\" (click)=\"openBiosensorModal(admission)\"><img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\"/></button>\n                           <span class=\"patch-input\">{{admission.patchIds[0]?.deviceId}}</span>\n                        </div>\n                    </div>\n                    <!-- <div class=\"d-flex justify-content-center align-items-center\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"openBiosensorModal(row)\"\n                            class=\"btn-boxed btn-no-shadow me-2\" [disabled]=\"!row.patchIds?.length\"\n                            [class.disabled]=\"!row.patchIds?.length\">\n                            <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\n                        </button>\n                        <div class=\"biosensor-id mx-1\" *ngIf=\"row.patchIds?.length\">\n                            {{ row.patchIds[0]?.deviceId || \"-\" }}\n                        </div>\n                        <div class=\"biosensor-id mx-1\" *ngIf=\"!row.patchIds?.length\"> \n                        </div>\n                    </div> -->\n                </ng-template>\n                <ng-template lsWidgetName=\"startedOn\" let-row> \n                    <div  [class.card-space]=\"row?.admissions.length > 1\">\n                     <div *ngFor=\"let admission of row?.admissions\">\n                      {{ (admission.startedOn > 0) ? (admission.startedOn*1000 | date: \"MMM d, y / \": timeZone) : \"\"}}\n                        <strong>{{(admission.startedOn > 0) ? (admission.startedOn*1000 | date: timeFmt: timeZone) : \"-\"}}</strong>\n                     </div></div>\n                 </ng-template>\n                                \n                <ng-template lsWidgetName=\"completedOn\" let-row>\n                    <div  [class.card-space]=\"row?.admissions.length > 1\">\n                    <div *ngFor=\"let admission of row?.admissions\">\n                        {{ (admission.completedOn > 0) ? (admission.completedOn*1000 | date: \"MMM d, y / \": timeZone) : \"\"}}\n                        <strong>{{(admission.completedOn > 0) ? (admission.completedOn*1000 | date: timeFmt: timeZone) : \"-\"}}</strong>\n                    </div></div>\n                </ng-template>\n                <ng-template lsWidgetName=\"statusHeading\" class=\"pe-2\">\n                    {{'discharge-patients-module.table.status' | translate}}\n                    <mat-icon>filter_list</mat-icon>\n                </ng-template>\n                <ng-template lsWidgetName=\"status\" let-row>\n                    <!-- <mat-list class=\"taglist small-tags pt-0\">\n                            <mat-list-item class=\"mx-1 small-tag sepsis-tag\">{{ \"discharge-patients-module.table.status.archived\" | translate }}\n                            </mat-list-item>\n                            <mat-list-item class=\"mx-1 small-tag sepsis-tag\">{{ \"discharge-patients-module.table.status.immediate_access\" | translate }}\n                            </mat-list-item>\n                        </mat-list>-->\n                        <div  [class.card-space]=\"row?.admissions.length > 1\"><div><span class=\"taglist small-tags pt-0 justify-content-start\">-</span></div></div>\n                </ng-template>\n            </ls-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { DischargePatientManagerService } from \"../manager/discharge-patient-manager.service\";\nimport {\n  LSColumn,\n  LSTableConfig,\n} from \"src/app/life-signals/_models/ls-column.model\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { Sort } from \"@angular/material/sort\";\nimport { DischargePatientsStoreState } from \"../store\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { Subscription } from \"rxjs/internal/Subscription\";\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\nimport { BehaviorSubject } from \"rxjs/internal/BehaviorSubject\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { map } from \"rxjs/internal/operators/map\";\nimport { MatSelect } from \"@angular/material/select\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, switchMap } from \"rxjs/operators\";\nimport { PatientMoreInfoDialogComponent } from \"src/app/active-patients/patient-more-info-dialog/patient-more-info-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserPreferenceService } from \"@services/user-preference.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { SnackbarService } from \"@services/snackbar.service\";\n\n@Component({\n  selector: \"app-discharge-patient\",\n  templateUrl: \"./discharge-patient.component.html\",\n  styleUrls: [\"./discharge-patient.component.scss\"],\n})\nexport class DischargePatientComponent implements OnInit, OnDestroy {\n  selectedPatients: SelectionModel<any> = new SelectionModel<any>(true);\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\n  public groups$: Observable<Group[]>;\n  public locationGroups$: Observable<Group[]>;\n  public clinicalGroups$: Observable<Group[]>;\n  dischargePatients: any[];\n  selectGroup: Group[] = [{name: \"Select\", groupId: null, parent: 'ROOT', type: null}];\n  reloadInterval;\n  groupsSubscription: Subscription;\n  searchObjString : string;\n  config: LSTableConfig = {\n    id: \"discharge-patients-module.table\",\n    rowSelectEnabled: true,\n    actions: {\n      show: false,\n      class: [],\n      headerLabel: \"\",\n    },\n    page: {\n      pageIndex: 0,\n      pageSize: 20,\n    },\n    translateKey: \"discharge-patients-module.table\",\n    translate: true,\n    paginator: {\n      hide: false,\n      offline: false,\n    },\n    sort: {\n      active: 'completedOn',\n      direction: \"desc\"\n    }\n  };\n  columns: LSColumn[] = [\n    {\n      id: \"patientId\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n      cellClass: [\"bold-text\", \"box-text\"],\n    },\n    {\n      id: \"firstName\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n      cellClass: [\"box-text\"],\n    },\n    {\n      id: \"admissionId\",\n      headerClass: [\"text-start\"],\n      //style: \"max-width: 140px; width: 140px;\",\n      sortable: true,\n      cellClass: [\"d-flex\"],\n    },\n    /*{\n      id: \"groups\",\n      sortable: false,\n      cellClass: [\"d-flex\", \"justify-content-center\", \"align-items-center\"],\n    },*/\n    {\n      id: \"patches\",\n      headerClass: [\"text-start\"],\n      //style: \"max-width: 140px; width: 140px;\",\n      sortable: true,\n      cellClass: [\"d-flex\", \"justify-content-start\"],\n    },\n    {\n      id: \"startedOn\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n      cellClass: [\"d-flex\", \"justify-content-start\"],\n    },\n    {\n      id: \"completedOn\",\n      sortable: true,\n      headerClass: [\"text-start\"],\n     cellClass: [\"d-flex\", \"justify-content-start\"],\n    },\n    {\n      id: \"status\",\n      sortable: false,\n      headerClass: [\"text-start\"],\n    },\n  ];\n\n  searchObject: { keyword: string; string: string } = {\n    keyword: undefined,\n    string: \"\",\n  };\n  filterObject: { cGroupId: string; pGroupId: string } = {\n    cGroupId: null,\n    pGroupId: null,\n  };\n  timeZone: string;\n  readonly timeFmt: string = environment.customization.timeFormat;\n  @ViewChild('locationMatSelect') locationMatSelect: MatSelect;\n  @ViewChild('clinicalMatSelect') clinicalMatSelect: MatSelect;\n\n  model: string;\n  modelChanged: Subject<string> = new Subject<string>();\n  constructor(\n    private manager: DischargePatientManagerService,\n    private dialog: MatDialog,\n    private location: Location,\n    private userPreference: UserPreferenceService,\n    private manageGroupService: ManageGroupsService,\n    private backendApi: BackendApiService,\n    private snackbar: SnackbarService\n  ) {\n    this.groups$ = this.groupsData$.asObservable();\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"PHYSICAL\")\n    }));\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"CLINICAL\")\n    }));\n  }\n\n  goBackToPage(): void {\n    this.location.back();\n  }\n\n  ngOnInit() {\n    this.getGroupDetails();\n    this.timeZone = this.userPreference.getUserTimeZone();\n    this.modelChanged.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(() =>\n        this.serviceToCallWith()))\n      .subscribe();\n    this.getDischargedPatients();\n    this.reloadInterval = setInterval(() => {\n      this.getDischargedPatients();\n    }, 30000);\n    this.manager.selectDischargePatient()\n      .subscribe((response: DischargePatientsStoreState.State) => {\n        this.config = {\n          ...this.config,\n          page: {\n            ...this.config.page,\n            length: response?.total\n          },\n          tableState: response?.tableState\n        }\n        if (response?.DISCHARGE_PATIENTS?.length) {\n          this.dischargePatients = response.DISCHARGE_PATIENTS.map((x) => {\n            return {\n              ...x,\n              name: `${x.firstName} ${x.lastName}`,\n            };\n          });\n        } else {\n          this.dischargePatients = []; \n        }\n      });\n  }\n\n  formSubURL(config: LSTableConfig, searchObject?: any) {\n    const page = config?.page;\n    const sort = config?.sort;\n    if(this.config.sort.active === \"\" || this.config.sort.direction === \"\"){\n      this.config={\n      ...this.config,\n      sort:{\n        active: \"completedOn\",\n        direction: \"desc\"\n      }\n      };\n    }\n    let url = `patients/admissions?page=${page?.pageIndex + 1}&size=${\n      page?.pageSize\n    }&sortBy=${this.config.sort?.active}:${this.config.sort?.direction}&isDischarged=true`;\n    if (searchObject?.keyword && searchObject?.string) {\n      let searchString = encodeURIComponent(searchObject.string)\n      url = `${url}&${searchObject?.keyword}=${searchString}`;\n    }\n    if (this.filterObject?.cGroupId) {\n      url = `${url}&cGroupId=${this.filterObject?.cGroupId}`;\n    }\n    if (this.filterObject?.pGroupId) {\n      url = `${url}&pGroupId=${this.filterObject?.pGroupId}`;\n    }\n    return url;\n  }\n\n  onSortChange(event: Sort){\n    this.config = {\n      ...this.config,\n      sort:{\n        active : event.active,\n        direction : event.direction\n      }\n    }\n    //this.config.sort.active = event.active;\n    //this.config.sort.direction = event.direction;\n    this.selectedPatients.clear();\n    this.getDischargedPatients();\n  }\n\n  isSelected(row, selection: SelectionModel<any>) {\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\n  }\n\n  onPageChange(event: PageEvent) {\n    this.dischargePatients = undefined;\n    this.config.page = {\n      ...event,\n    };\n    //this.selectedPatients.clear();\n    this.getDischargedPatients();\n  }\n\n  onPatientsSelected(e: SelectionModel<any>) {\n    this.selectedPatients = e;\n  }\n\n  openBiosensorModal(patient) {\n      let patches = {\n        activePatch: patient.activePatch,\n        patchIds: patient.patchIds,\n        readOnly: true,\n        heading: \"active-patients-module.dialog.biosensor_information\"\n      }\n      this.dialog.open(PatientMoreInfoDialogComponent, {\n        width: \"700px\",\n        //minWidth: \"700px\",\n        maxWidth: \"95vw\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data: patches,\n      });\n  }\n\n  getDischargedPatients(){\n    this.dischargePatients = undefined;\n    let url = this.formSubURL(this.config, this.searchObject);\n    this.manager.fetch(url)\n    /*.subscribe((response: any) => {\n      this.config.page.length = response?.total;\n      this.dischargePatients = response?.items?.map((item) => {\n        return {\n          ...item,\n          name: `${item.firstName} ${item.lastName}`,\n          startedOn: item.startedOn ? new Date(item.startedOn) : null,\n          completedOn: item.completedOn ? new Date(item.completedOn) : null,\n          biosensorId: item.activePatch,\n        };\n      });\n    });*/\n  }\n  searchByGroup(key, groupId) {\n    if(key === 'CLINICAL') {\n      this.filterObject.cGroupId = groupId;\n    } else {\n      this.filterObject.pGroupId = groupId;\n    }\n    this.config.page.pageIndex = 0;\n    this.selectedPatients.clear();\n    this.dischargePatients = undefined;\n    let url = this.formSubURL(this.config, this.searchObject);\n    this.manager.fetch(url)\n  }\n\n  search() {\n    this.searchObject.keyword = 'searchText';\n    if (this.searchObject.keyword) {\n      this.searchObject = {\n        keyword: this.searchObject.keyword,\n        string: this.searchObjString || \"\",\n      };\n      this.config.page.pageIndex = 0;\n      this.modelChanged.next(JSON.stringify(this.searchObject));\n      this.selectedPatients.clear();\n      //this.getDischargedPatients();\n    }/* else {\n      this.searchObject = {\n        keyword: '',\n        string: ''\n      }\n      this.modelChanged.next(JSON.stringify(this.searchObject));\n    }*/\n  }\n\n  serviceToCallWith() {\n    let ref;\n    this.manager.fetch(this.formSubURL(this.config,this.searchObject));\n    ref = this.manager.selectDischargePatient();\n    return ref;\n  }\n\n\n  clear() {\n    this.searchObjString = '';\n    this.search();\n  }\n  \n  getGroupDetails() {\n    this.groupsSubscription = this.manageGroupService.fetch().subscribe(groups => {\n      if (groups['data'].length > 0) {\n        this.groupsData$.next(groups['data']);\n        \n      }\n    })\n  }\n\n  getPdfReport() {\n    const patient = this.selectedPatients.selected[0];\n    const admissions = this.selectedPatients.selected[0].admissions;\n    let lastAdmission = admissions[0];\n    for (let i = 1; i < admissions.length; i++) {\n      if (admissions[i].completedOn > lastAdmission.completedOn) {\n        lastAdmission = admissions[i];\n      }\n    }\n    const url = \"patients/reports\";\n    this.backendApi\n      .postMapping(environment.dataApiUrl + url, {\n        patientId: patient.patientId,\n        admissionId: lastAdmission.admissionId,\n        from: lastAdmission.startedOn,\n        to: lastAdmission.completedOn,\n        Type: 'MONITORING_REPORT',\n        destination: []\n      })\n      .then((resp) => {\n        if (resp?.status === \"OK\") {\n          this.snackbar.openSnackBar(\n            \"active-patients-module.dialog.pdf_report_request\",\n            \"bottom\",\n            \"center\",\n            true\n          );\n        } else {\n          this.snackbar.openSnackBar(\n            \"errors.err_generic_message\",\n            \"bottom\",\n            \"center\",\n            true\n          );\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.reloadInterval);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { UserRoles } from \"../enum/roles.enum\";\nimport { DischargePatientComponent } from \"./discharge-patient/discharge-patient.component\";\nimport { RootComponent } from \"../shared/root/root.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: RootComponent,\n    children: [\n      {\n        path: \"patients\",\n        component: DischargePatientComponent,\n        canActivate: [AuthGuard],\n        data: {\n          roles: [\n            UserRoles.SUPERVISORY_CLINICIAN\n          ],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DischargePatientsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { DischargePatientComponent } from \"./discharge-patient/discharge-patient.component\";\nimport { DischargePatientsRoutingModule } from \"./discharge-patients-routing.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { DischargePatientsEffects } from \"./store/discharge-patients.effects\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport * as fromDischargePatients from \"./store/discharge-patients.reducer\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\nimport {MatMenuModule} from '@angular/material/menu';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [DischargePatientComponent],\n  imports: [\n    CommonModule,\n    DischargePatientsRoutingModule,\n    StoreModule.forFeature(\n      fromDischargePatients.dischargePatientsFeatureKey,\n      fromDischargePatients.DischargePatientsReducer\n    ),\n    EffectsModule.forFeature([DischargePatientsEffects]),\n    SharedModule,\n    MatCardModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSortModule,\n    MatListModule,\n    MatPaginatorModule,\n    I18nModule,\n    LifeSignalsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class DischargePatientsModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  DischargePatientsStoreState,\n  DischargePatientsStoreActions,\n  DischargePatientsStoreSelectors,\n} from \"../store\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivePatient } from \"src/app/active-patients/models/active-patients.model\";\nimport { catchError } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DischargePatientManagerService {\n  BASE_URL: string = environment.dataApiUrl;\n  dischargePatients$: Observable<DischargePatientsStoreState.State>;\n\n  constructor(private store$: Store<DischargePatientsStoreState.State>, private http: HttpClient) { }\n\n  fetch(url: string) {\n    this.store$.dispatch(\n      new DischargePatientsStoreActions.LoadDischargePatientsRequestAction({ url })\n    );\n  }\n\n  getPatientBy(id) {\n    let apiURL = `${this.BASE_URL}/patients/${id}`;\n    return this.http\n      .get<{ data: ActivePatient }>(apiURL)\n      .pipe(catchError((err) => {\n        let errorMessage = \"\";\n        if (err.error instanceof ErrorEvent) {\n          errorMessage = `Error: ${err.error.message}`;\n        } else {\n          errorMessage = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n        }\n        return throwError(errorMessage);\n      }));\n  }\n\n  selectDischargePatient() {\n    this.dischargePatients$ = this.store$.select(\n      DischargePatientsStoreSelectors.selectDischargePatientsList\n    );\n    return this.dischargePatients$;\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs/internal/observable/throwError\";\nimport { catchError } from \"rxjs/internal/operators/catchError\";\nimport { DischargePatient } from \"../models/discharge-patient.model\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DischargePatientService {\n  BASE_URL: string = environment.dataApiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  get(apiurl: string) {\n    let url =\n      this.BASE_URL +apiurl;\n      \n    return this.http\n      .get<{ items: DischargePatient[]; total: number }>(url)\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(error: any) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport { DischargePatient } from \"../models/discharge-patient.model\";\n\nexport enum ActionTypes {\n  LOAD_DISCHARGE_PATIENTS_REQUEST = \"[DISCHARGEPATIENTS] Load discharge patients request\",\n  LOAD_DISCHARGE_PATIENTS_FAILURE = \"[DISCHARGEPATIENTS] Load discharge patients Failure\",\n  LOAD_DISCHARGE_PATIENTS_SUCCESS = \"[DISCHARGEPATIENTS] Load discharge patients Success\",\n}\n\nexport class LoadDischargePatientsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_DISCHARGE_PATIENTS_REQUEST;\n  constructor(public payload: {url :string}) {}\n}\n\nexport class LoadDischargePatientsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_DISCHARGE_PATIENTS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class LoadDischargePatientsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_DISCHARGE_PATIENTS_SUCCESS;\n  constructor(public payload: { items: DischargePatient[]; total: number }) {}\n}\n\nexport type DischargePatientsActions =\n  | LoadDischargePatientsFailureAction\n  | LoadDischargePatientsRequestAction\n  | LoadDischargePatientsSuccessAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { of } from \"rxjs\";\nimport { map, catchError, exhaustMap } from \"rxjs/operators\";\nimport { DischargePatientService } from \"../service/discharge-patient.service\";\nimport * as featureActions from \"./discharge-patients.actions\";\n\n@Injectable()\nexport class DischargePatientsEffects {\n  constructor(\n    private dischargePatientsService: DischargePatientService,\n    private actions$: Actions\n  ) {}\n\n  loadDischargedPatients = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadDischargePatientsRequestAction>(\n        featureActions.ActionTypes.LOAD_DISCHARGE_PATIENTS_REQUEST\n      ),\n      exhaustMap((action) =>\n        this.dischargePatientsService.get(action.payload.url).pipe(\n          map(\n            (response) =>\n              new featureActions.LoadDischargePatientsSuccessAction(response)\n          ),\n          catchError((error) =>\n            of(new featureActions.LoadDischargePatientsFailureAction(error))\n          )\n        )\n      )\n    )\n  );\n}\n","import { DischargePatient } from \"../models/discharge-patient.model\";\nimport {\n  ActionTypes,\n  DischargePatientsActions,\n} from \"./discharge-patients.actions\";\nimport { TableState } from \"src/app/life-signals/_models/ls-column.model\";\n\n\nexport const dischargePatientsFeatureKey = \"dischargePatient\";\n\nexport interface State {\n  DISCHARGE_PATIENTS: DischargePatient[];\n  error: string;\n  total : number;\n  tableState : TableState\n}\n\nconst initialActivePatientState: State = {\n  DISCHARGE_PATIENTS: [],\n  error: \"\",\n  total : 0,\n  tableState : TableState.DEFAULT\n};\n\nexport function DischargePatientsReducer(\n  state: State = initialActivePatientState,\n  action: DischargePatientsActions\n) {\n  switch (action.type) {\n    case ActionTypes.LOAD_DISCHARGE_PATIENTS_REQUEST: {\n      return {\n        ...state,\n        error: null,\n        tableState : TableState.LOADING\n      };\n    }\n\n    case ActionTypes.LOAD_DISCHARGE_PATIENTS_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n        total : 0,\n        tableState : TableState.FAILURE\n      };\n    }\n\n    case ActionTypes.LOAD_DISCHARGE_PATIENTS_SUCCESS: {\n      return {\n        ...state,\n        DISCHARGE_PATIENTS: action.payload[\"data\"][\"items\"],\n        total : action.payload[\"data\"][\"total\"],\n        tableState : TableState.SUCCESS\n      };\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  State,\n  dischargePatientsFeatureKey,\n} from \"./discharge-patients.reducer\";\n\nconst getDischargePatientState = createFeatureSelector<State>(\n  dischargePatientsFeatureKey\n);\n\nexport const selectDischargePatientsList = createSelector(\n  getDischargePatientState,\n  (state) => state\n);\n\nexport const selectActivePatientsError = createSelector(\n  getDischargePatientState,\n  (state) => state\n);\n","export enum UserRoles {\n  SERVICE_PROVIDER_ADMIN = \"SPA\",\n  SERVICE_PROVIDER_ADMIN_CLONE = \"SPAC\",\n  CLINICAL_FACILITY_ADMIN = \"CFA\",\n  CLINICAL_FACILITY_ADMIN_CLONE = \"CFAC\",\n  GENERAL_CLINICIAN = \"GC\",\n  SUPERVISORY_CLINICIAN = \"SC\",\n  PHYSICIAN = \"PHY\",\n  SUPER_ADMIN = \"SA\",\n  CLINICAL_FACILITY_USER = \"CFU\",\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { KeycloakAuthGuard, KeycloakService } from \"keycloak-angular\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { UserRoles } from \"../enum/roles.enum\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(\n    protected readonly router: Router,\n    protected readonly keycloak: KeycloakService,\n    private authService: AuthenticationService\n  ) {\n    super(router, keycloak);\n  }\n\n  isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean | UrlTree> {\n    return new Promise<boolean | UrlTree>(async (resolve, reject) => {\n      if (!this.authenticated) {\n        this.keycloak\n          .login({\n            redirectUri: window.location.origin + state.url,\n          })\n          .then();\n        resolve(false);\n        return;\n      }\n\n      const requiredRoles = route.data.roles;\n      let granted = false;\n      if (!requiredRoles || requiredRoles.length === 0) {\n        granted = true;\n      } else {\n        console.log(requiredRoles);\n        for (const requiredRole of requiredRoles) {\n          if (this.authService.getRoles().indexOf(requiredRole) > -1) {\n            granted = true;\n            break;\n          }\n        }\n      }\n\n      //if required roles are not met, based on current role route to their landing page\n      if (granted === false) {\n\n        if (this.authService.getRoles().indexOf(UserRoles.SUPER_ADMIN) > -1) {\n          this.router.navigate([\"/super-admin\"]).then();\n        } else if (\n            (this.authService.getRoles().indexOf(UserRoles.SERVICE_PROVIDER_ADMIN) > -1)\n            || (this.authService.getRoles().indexOf(UserRoles.SERVICE_PROVIDER_ADMIN_CLONE) > -1)\n        ) {\n          this.router\n            .navigate([\"/service-provider-admin/clinical-facility-management\"])\n            .then();\n        } else if (\n          this.authService.getRoles().indexOf(UserRoles.CLINICAL_FACILITY_ADMIN) >\n            -1 ||\n            this.authService.getRoles().indexOf(UserRoles.CLINICAL_FACILITY_ADMIN_CLONE) >\n            -1 ||\n          this.authService.getRoles().indexOf(UserRoles.SUPERVISORY_CLINICIAN) >\n            -1 ||\n          this.authService.getRoles().indexOf(UserRoles.GENERAL_CLINICIAN) > -1 ||\n          this.authService.getRoles().indexOf(UserRoles.PHYSICIAN) > -1\n        ) {\n          this.router.navigate([\"/summary\"]).then();\n        }\n      }\n\n      resolve(granted);\n    });\n    // if (!this.authenticated) {\n    //     await this.keycloak.login({\n    //         redirectUri: window.location.origin + state.url,\n    //     });\n    // }\n    //\n    // return this.authenticated;\n  }\n}\n","import {\n  APP_INITIALIZER,\n  LOCALE_ID,\n  ModuleWithProviders,\n  NgModule,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { LocalizationService } from \"./localization.service\";\nimport { LocalizationServiceConfig } from \"./localization-config.service\";\nimport {\n  TranslateModule,\n  TranslateService,\n} from \"@ngx-translate/core\";\nimport {\n  TranslateCacheModule,\n  TranslateCacheService,\n  TranslateCacheSettings,\n} from \"ngx-translate-cache\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule.forChild(),\n    TranslateCacheModule.forRoot({\n      cacheService: {\n        provide: TranslateCacheService,\n        useFactory: translateCacheFactory,\n        deps: [TranslateService, TranslateCacheSettings],\n      },\n      cacheMechanism: \"Cookie\",\n    }),\n  ],\n  exports: [TranslateModule],\n})\nexport class I18nModule {\n  public static forRoot(config: any): ModuleWithProviders<I18nModule> {\n    return {\n      ngModule: I18nModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initLocalizationService,\n          deps: [LocalizationService],\n          multi: true,\n        },\n        LocalizationService,\n        { provide: LOCALE_ID, useValue: config.locale_id }, // using the initial value\n        { provide: LocalizationServiceConfig, useValue: config },\n      ],\n    };\n  }\n  constructor(\n    translate: TranslateService,\n    translateCacheService: TranslateCacheService\n  ) {\n    translateCacheService.init();\n    translate.addLangs([\"en\", \"fr\"]);\n    const browserLang =\n      translateCacheService.getCachedLanguage() || translate.getBrowserLang();\n    //  const browserLang = 'en';\n    translate.use(browserLang.match(/en|fr/) ? browserLang : \"en\");\n  }\n}\n\n// eslint-disable-next-line\nexport function translateLoaderFactory(httpClient: HttpClient) {\n  return new TranslateHttpLoader(httpClient);\n}\n\n// eslint-disable-next-line\nexport function translateCacheFactory(\n  translateService: TranslateService,\n  translateCacheSettings: TranslateCacheSettings\n) {\n  return new TranslateCacheService(translateService, translateCacheSettings);\n}\n/**\n * Initialize the localization service.\n * @param {LocalizationService} service\n * @returns {() => Promise<void>}\n */\nexport function initLocalizationService(service: LocalizationService) {\n  return () => service.initService();\n}\n","import { Injectable } from \"@angular/core\";\n\n/**\n * Class representing the localization config\n */\n@Injectable()\nexport class LocalizationServiceConfig {\n  public locale_id: string = \"\";\n}\n","import { Injectable, Optional, SkipSelf } from \"@angular/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { LocalizationServiceConfig } from \"./localization-config.service\";\n\n/**\n * Class representing the translation service.\n */\n@Injectable()\nexport class LocalizationService {\n  private _localeId: string = \"en-US\"; // default\n\n  /**\n   * @constructor\n   * @param {LocalizationService} singleton - the localization service\n   * @param {LocalizationServiceConfig} config - the localization config\n   * @param {TranslateService} translateService - the translate service\n   */\n  constructor(\n    @Optional() @SkipSelf() private singleton: LocalizationService,\n    private config: LocalizationServiceConfig,\n    private translateService: TranslateService\n  ) {\n    if (this.singleton) {\n      throw new Error(\n        \"LocalizationService is already provided by the root module\"\n      );\n    }\n    this._localeId = this.config.locale_id;\n  }\n\n  /**\n   * Initialize the service.\n   * @returns {Promise<void>}\n   */\n  public initService(): Observable<any> {\n    // language code same as file name.\n    this._localeId = localStorage.getItem(\"language\") || \"en-US\";\n    return this.useLanguage(this._localeId);\n  }\n\n  /**\n   * change the selected language\n   * @returns {Promise<void>}\n   */\n  public useLanguage(lang: string): Observable<any> {\n    this.translateService.setDefaultLang(lang);\n    return this.translateService.use(lang).pipe(\n      map((res) => {\n        console.log(res);\n        return res;\n      })\n    );\n  }\n\n  /**\n   * Gets the instant translated value of a key (or an array of keys).\n   * @param key\n   * @param interpolateParams\n   * @returns {string|any}\n   */\n  public translate(key: string | string[], interpolateParams?: object): string {\n    return this.translateService.instant(key, interpolateParams) as string;\n  }\n}\n","import { KeycloakService } from \"keycloak-angular\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nexport function initializeKeycloak(keycloak: KeycloakService) {\r\n  return () =>\r\n    keycloak.init({\r\n      config: {\r\n        url: environment.keyClockUrl,\r\n        realm: environment.keyClockRealm,\r\n        clientId: environment.keyClockClientId\r\n      },\r\n      initOptions: {\r\n        onLoad: \"login-required\",\r\n        checkLoginIframe: false\r\n      },\r\n      enableBearerInterceptor: true,\r\n      bearerPrefix: \"\",\r\n      bearerExcludedUrls: [\"https://webui-s3.s3.ap-south-1.amazonaws.com/\"]\r\n    });\r\n}\r\n","import { Injectable, NgZone } from \"@angular/core\";\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next\n            .handle(request)\n            .pipe(\n                catchError((error: HttpErrorResponse) => {\n                    let errorMessage;\n                    // Client-side error.\n                    if (error.error instanceof ErrorEvent) {\n                        errorMessage = {\n                            errorMessage: `${error.error.message}`,\n                        };\n                        console.log(errorMessage);\n                        // Server-side error.\n                    } else {\n                        console.log(error);\n                        if (error.status === 404) {\n                            errorMessage = {\n                                errorCode: `${error.status}`,\n                                errorMessage: `${error.error}`,\n                            };\n                        } else {\n                            errorMessage = {\n                                errorCode: `${error.status}`,\n                                errorMessage: `${error.error.message}`,\n                            };\n                        }\n\n                    }\n                    return throwError(errorMessage);\n                })\n            )\n    }\n}\n","<mat-card class=\"topbar-card\">\r\n  <div class=\"row align-items-center\">\r\n    <div class=\"col-6 col-md-5\">\r\n      <div class=\"button-row\">\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'active_patients'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"active-patients-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'posted_final'\"><button\r\n           mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n           <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"posted-final-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'pending-interp'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"pending-interp-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'interp-history'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"interp-history-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'archived'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"archived-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'admit_patients'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"admit-patients-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'discharge_patients'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"discharge-patients-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'manage_groups'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"manage-group-module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'parameter_alerts'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"parameter-alerts-module.page_heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'arrhythmia_alerts'\"><button\r\n                mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n          <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n          <span class=\"title-bar\">{{ \"home_alerts.label_arrhythmia_alerts\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'technical_alerts'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"alert_config_module.technical_alert\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'alert_configuration'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"alert_config_module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'additional_devices'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"additional_devices.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'manage_relays'\"><button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"manage_relays_module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'manage_users'\"> <button\r\n            mat-flat-button class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"manage_users_module.page-heading\" | translate }}</span>\r\n        </div>\r\n        <div class=\"d-flex align-items-center justify-content-start\" *ngIf=\"type === 'profile'\"><button mat-flat-button\r\n            class=\"breadcrum-button\" (click)=\"goBack()\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n          </button>\r\n          <span class=\"title-bar\">{{ \"shared.profile\" | translate }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-6 col-md-7 d-flex justify-content-end align-items-center\">\r\n      <ng-content [select]=\"page-header\"></ng-content>\r\n      <figure class=\"rightside-image\">\r\n        <img *ngIf=\"type === 'active_patients'\"  src=\"assets/icons/current_patients.png\" alt=\"current patients\" />\r\n        <img *ngIf=\"type === 'posted_final'\"  src=\"assets/icons/posted_final.png\" alt=\"Posted Final\" />\r\n        <img *ngIf=\"type === 'pending-interp'\"  src=\"assets/icons/pending_interp.png\" alt=\"Pending Interpretation\" />\r\n        <img *ngIf=\"type === 'interp-history'\"  src=\"assets/icons/inter_history.png\" alt=\"Interpretation History\" />\r\n        <img *ngIf=\"type === 'archived'\"  src=\"assets/icons/archive.png\" alt=\"Archived\" />\r\n        <img *ngIf=\"type === 'admit_patients'\"  src=\"assets/icons/admit-patients.png\" alt=\"admit patients\" />\r\n        <img *ngIf=\"type === 'discharge_patients'\"  src=\"assets/icons/discharge-patients.png\" alt=\"discharge patients\" />\r\n        <img *ngIf=\"type === 'manage_groups'\"  src=\"assets/icons/patient-group-management.png\" alt=\"patient group management\" />\r\n        <img *ngIf=\"type === 'parameter_alerts'\"  src=\"assets/icons/parameter-alerts.png\" alt=\"parameter alerts\" />\r\n        <img *ngIf=\"type === 'arrhythmia_alerts'\"  src=\"assets/icons/arrhythmia-alerts.png\" alt=\"arrhythmia alerts\" />\r\n        <img *ngIf=\"type === 'technical_alerts'\"  src=\"assets/icons/technical-alerts.png\" alt=\"technical alerts\" />\r\n        <img *ngIf=\"type === 'manage_relays'\"  src=\"assets/icons/managerelay.png\" alt=\"managerelay\" />\r\n        <img *ngIf=\"type === 'alert_configuration'\"  src=\"assets/icons/notif-icon.png\" alt=\"notif icon\" />\r\n        <img *ngIf=\"type === 'additional_devices'\"  src=\"assets/icons/miscelaneous.png\" alt=\"miscelaneous\" />\r\n        <img *ngIf=\"type === 'manage_users'\"  src=\"assets/icons/manageuser.png\" alt=\"manageuser\" />\r\n\r\n      </figure>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n","import { Location } from \"@angular/common\";\nimport { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"ls-page-header\",\n  templateUrl: \"./ls-page-header.component.html\",\n  styleUrls: [\"./ls-page-header.component.scss\"],\n})\nexport class LsPageHeaderComponent {\n  @Input() type: string;\n  constructor(private router: Router, private location: Location) {}\n\n  goBack() {\n    this.location.back();\n  }\n\n  goBackToSummary() {\n    this.router.navigate([\"summary\"]);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n import {Injectable, Optional, SkipSelf} from '@angular/core';\n import {Subject} from 'rxjs';\n \n /**\n  * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n  * include it in a custom provider\n  */\n @Injectable({providedIn: 'root'})\n export class MatPaginatorIntl {\n   /**\n    * Stream to emit from when labels are changed. Use this to notify components when the labels have\n    * changed after initialization.\n    */\n   readonly changes: Subject<void> = new Subject<void>();\n \n   /** A label for the page size selector. */\n   itemsPerPageLabel: string = 'Items per page:';\n \n   /** A label for the button that increments the current page. */\n   nextPageLabel: string = 'Next page';\n \n   /** A label for the button that decrements the current page. */\n   previousPageLabel: string = 'Previous page';\n \n   /** A label for the button that moves to the first page. */\n   firstPageLabel: string = 'First page';\n \n   /** A label for the button that moves to the last page. */\n   lastPageLabel: string = 'Last page';\n \n   /** A label for the range of items within the current page and the length of the whole list. */\n   getRangeLabel: (page: number, pageSize: number, length: number) => string = (\n     page: number,\n     pageSize: number,\n     length: number,\n   ) => {\n     if (length == 0 || pageSize == 0) {\n       return `0 of ${length}`;\n     }\n \n     length = Math.max(length, 0);\n \n     const startIndex = page * pageSize;\n \n     // If the start index exceeds the list length, do not try and fix the end index to the end.\n     const endIndex =\n       startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n \n     return `${startIndex + 1} – ${endIndex} of ${length}`;\n   };\n }\n \n /** @docs-private */\n export function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\n   return parentIntl || new MatPaginatorIntl();\n }\n \n /** @docs-private */\n export const MAT_PAGINATOR_INTL_PROVIDER = {\n   // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n   provide: MatPaginatorIntl,\n   deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n   useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n };","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  coerceNumberProperty,\n  coerceBooleanProperty,\n  BooleanInput,\n  NumberInput,\n  coerceArray,\n} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n  Directive,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MatPaginatorIntl } from './ls-paginator-intl';\nimport {\n  HasInitialized,\n  mixinInitialized,\n  ThemePalette,\n  mixinDisabled,\n  CanDisable,\n} from '@angular/material/core';\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n  /** The current page index. */\n  pageIndex: number;\n\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex?: number;\n\n  /** The current page size */\n  pageSize: number;\n\n  /** The current total number of items being paged */\n  length: number;\n}\n\n/** Object that can be used to configure the default options for the paginator module. */\nexport interface MatPaginatorDefaultOptions {\n  /** Number of items to display on a page. By default set to 50. */\n  pageSize?: number;\n\n  /** The set of provided page size options to display to the user. */\n  pageSizeOptions?: number[];\n\n  /** Whether to hide the page size selection UI from the user. */\n  hidePageSize?: boolean;\n\n  /** Whether to show the first/last buttons UI to the user. */\n  showFirstLastButtons?: boolean;\n\n  /** The default form-field appearance to apply to the page size options selector. */\n  formFieldAppearance?: any;\n}\n\n/** Injection token that can be used to provide the default options for the paginator module. */\nexport const MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken<MatPaginatorDefaultOptions>(\n  'MAT_PAGINATOR_DEFAULT_OPTIONS',\n);\n\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class { }));\n\n/** Object that can used to configure the underlying `MatSelect` inside a `MatPaginator`. */\nexport interface MatPaginatorSelectConfig {\n  /** Whether to center the active option over the trigger. */\n  disableOptionCentering?: boolean;\n\n  /** Classes to be passed to the select panel. */\n  panelClass?: string | string[] | Set<string> | { [key: string]: any };\n}\n\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatPaginatorBase<\n  O extends {\n    pageSize?: number;\n    pageSizeOptions?: number[];\n    hidePageSize?: boolean;\n    showFirstLastButtons?: boolean;\n  },\n  >\n  extends _MatPaginatorMixinBase\n  implements OnInit, OnDestroy, CanDisable, HasInitialized {\n  private _initialized: boolean;\n  private _intlChanges: Subscription;\n  public lastIndex;\n  dataFrom = 0;\n  dataTo = 0;\n\n  /** Theme color to be used for the underlying form controls. */\n  @Input() color: ThemePalette;\n  @Input() tableState;\n\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  @Input()\n  get pageIndex(): number {\n    return this._pageIndex;\n  }\n  set pageIndex(value: NumberInput) {\n    this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _pageIndex = 0;\n\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  @Input()\n  get length(): number {\n    return this._length;\n  }\n  set length(value: NumberInput) {\n    this._length = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _length = 0;\n\n  /** Number of items to display on a page. By default set to 50. */\n  @Input()\n  get pageSize(): number {\n    return this._pageSize;\n  }\n  set pageSize(value: NumberInput) {\n    this._pageSize = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSize: number;\n  /** Number of items to displayed on a page. */\n  @Input()\n  get pageLength(): number {\n    return this._pageLength;\n  }\n  set pageLength(value: NumberInput) {\n    this._pageLength = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageLength: number;\n\n  /** The set of provided page size options to display to the user. */\n  @Input()\n  get pageSizeOptions(): number[] {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(value: number[] | readonly number[]) {\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions: number[] = [];\n\n  /** Whether to hide the page size selection UI from the user. */\n  @Input()\n  get hidePageSize(): boolean {\n    return this._hidePageSize;\n  }\n  set hidePageSize(value: BooleanInput) {\n    this._hidePageSize = coerceBooleanProperty(value);\n  }\n  private _hidePageSize = false;\n\n  /** Whether to hide the page size selection UI from the user. */\n  get pageOptions(): number[] {\n    return this._pageOptions;\n  }\n  set pageOptions(value: number[]) {\n    this._pageOptions = coerceArray(value);\n  }\n  private _pageOptions = [];\n\n  /** Whether to show the first/last buttons UI to the user. */\n  @Input()\n  get showFirstLastButtons(): boolean {\n    return this._showFirstLastButtons;\n  }\n  set showFirstLastButtons(value: BooleanInput) {\n    this._showFirstLastButtons = coerceBooleanProperty(value);\n  }\n  private _showFirstLastButtons = false;\n\n  /** Used to configure the underlying `MatSelect` inside the paginator. */\n  @Input() selectConfig: MatPaginatorSelectConfig = {};\n\n  /** Event emitted when the paginator changes the page size or page index. */\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions: number[];\n\n  constructor(\n    public _intl: MatPaginatorIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    defaults?: O,\n  ) {\n    super();\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n\n    if (defaults) {\n      const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n\n      if (pageSize != null) {\n        this._pageSize = pageSize;\n      }\n\n      if (pageSizeOptions != null) {\n        this._pageSizeOptions = pageSizeOptions;\n      }\n\n      if (hidePageSize != null) {\n        this._hidePageSize = hidePageSize;\n      }\n\n      if (showFirstLastButtons != null) {\n        this._showFirstLastButtons = showFirstLastButtons;\n      }\n    }\n  }\n\n  ngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._markInitialized();\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  /** Advances to the next page if it exists. */\n  nextPage(): void {\n    if (!this.hasNextPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex + 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  getPageOptions(): number[] {\n    const currentPageIndex = this.pageIndex;\n    const totalPages = Math.ceil(this.length / this.pageSize);\n    this.lastIndex = Math.ceil(this.length / this.pageSize);\n    const numberOf = totalPages < 3 ? totalPages : 3;\n    let index = 0;\n    if (currentPageIndex + numberOf === totalPages) {\n      index = currentPageIndex;\n    } else if (currentPageIndex + numberOf > totalPages) {\n      index = totalPages - (numberOf-1);\n    } else if (currentPageIndex + numberOf < totalPages) {\n      index = currentPageIndex;\n    }\n    let result = [];\n    if(currentPageIndex < 1 || currentPageIndex + 1 > totalPages) {\n      for (let i = 0; i < numberOf; i++) {\n        result.push(index + i);\n      }\n    } else {\n      for (let i = -1; i < numberOf-1; i++) {\n        result.push(index + i);\n      }\n    }\n    return result;\n  }\n  getDataIndex() {\n    if(this.tableState !== 'LOADING') {\n       this.dataFrom = (this.pageIndex)*this.pageSize + 1;\n       this.dataTo = (this.pageIndex*this.pageSize) + this.pageLength;\n    }\n    return `${this.dataFrom} - ${this.dataTo}`;\n  }\n\n  /** Move back to the previous page if it exists. */\n  previousPage(): void {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  toPage(index): void {\n    this.pageIndex = index;\n    this._emitPageEvent(index);\n  }\n\n  /** Move to the first page if not already there. */\n  firstPage(): void {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the last page if not already there. */\n  lastPage(): void {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Whether there is a previous page. */\n  hasPreviousPage(): boolean {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n\n  /** Whether there is a next page. */\n  hasNextPage(): boolean {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n\n  /** Calculate the number of pages */\n  getNumberOfPages(): number {\n    if (!this.pageSize) {\n      return 0;\n    }\n\n    return Math.ceil(this.length / this.pageSize);\n  }\n  showFirstLastIndex() {\n    return (Math.ceil(this.length / this.pageSize) > 4)\n  }\n\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  private _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) {\n      return;\n    }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize =\n        this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  private _emitPageEvent(previousPageIndex: number) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length,\n    });\n  }\n}\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n@Component({\n  selector: 'ls-paginator',\n  exportAs: 'lsPaginator',\n  templateUrl: 'ls-paginator.component.html',\n  styleUrls: ['ls-paginator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LsPaginatorComponent extends _MatPaginatorBase<MatPaginatorDefaultOptions> {\n  /** If set, styles the \"page size\" form field with the designated style. */\n  _formFieldAppearance?: any;\n\n  constructor(\n    intl: MatPaginatorIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_PAGINATOR_DEFAULT_OPTIONS) defaults?: MatPaginatorDefaultOptions,\n  ) {\n    super(intl, changeDetectorRef, defaults);\n\n    if (defaults && defaults.formFieldAppearance != null) {\n      this._formFieldAppearance = defaults.formFieldAppearance;\n    }\n  }\n}\n","<div class=\"mat-paginator-outer-container\">\n    <div class=\"mat-paginator-container\" *ngIf=\"length > 0\">\n        <div class=\"mat-paginator-page-size\" *ngIf=\"!hidePageSize\">\n            <div class=\"mat-paginator-page-size-label\" *ngIf=\"pageLength > 0\">\n                <!-- {{_intl.itemsPerPageLabel}} -->\n                Showing <b>{{getDataIndex()}}</b> out of <b>{{length}}</b> results\n            </div>\n\n            <!-- <div class=\"mat-paginator-page-size-value\" *ngIf=\"_displayedPageSizeOptions.length <= 1\">{{pageSize}}</div> -->\n        </div>\n\n        <div class=\"ms-md-2 mat-paginator-range-actions\">\n            <!-- <div class=\"mat-paginator-range-label\">\n                {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\n            </div> -->\n\n            <!-- <button mat-icon-button type=\"button\"\n                class=\"mat-paginator-navigation-first\"\n                (click)=\"firstPage()\"\n                [attr.aria-label]=\"_intl.firstPageLabel\"\n                [matTooltip]=\"_intl.firstPageLabel\"\n                [matTooltipDisabled]=\"_previousButtonsDisabled()\"\n                [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_previousButtonsDisabled()\"\n                *ngIf=\"showFirstLastButtons\">\n          <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n            <path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"/>\n          </svg>\n        </button> -->\n            <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-previous\" (click)=\"previousPage()\"\n                [attr.aria-label]=\"_intl.previousPageLabel\" [matTooltip]=\"_intl.previousPageLabel\"\n                [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_previousButtonsDisabled()\">\n                <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n                    <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" />\n                </svg>\n            </button>\n<!--            <span class=\"mx-4\">Prev</span>-->\n            <div *ngIf=\"showFirstLastIndex() && this.pageIndex > 1\" type=\"button\" class=\"mat-paginator-page\" [class.active]=\"pageIndex === 1\" (click)=\"toPage(0)\">\n                1\n            </div>\n            <div class=\"mat-paginator-page\" *ngIf=\"showFirstLastIndex() && this.pageIndex > 2\">\n                ...\n            </div>\n            <div type=\"button\" class=\"mat-paginator-page\" [class.active]=\"index === pageIndex\" (click)=\"toPage(index)\" *ngFor=\"let index of getPageOptions()\">\n                {{index + 1}}\n            </div>\n            <div class=\"mat-paginator-page\" *ngIf=\"showFirstLastIndex()&& ((this.pageIndex + 3) < this.lastIndex)\">\n                ...\n            </div>\n            <div *ngIf=\"showFirstLastIndex() && ((this.pageIndex + 2) < this.lastIndex)\" type=\"button\" class=\"mat-paginator-page\" [class.active]=\"lastIndex === pageIndex\" (click)=\"toPage(lastIndex-1)\">\n                {{lastIndex}}\n            </div>\n<!--            <span class=\"mx-4\">Next</span>-->\n            <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-next\" (click)=\"nextPage()\"\n                [attr.aria-label]=\"_intl.nextPageLabel\" [matTooltip]=\"_intl.nextPageLabel\"\n                [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_nextButtonsDisabled()\">\n                <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n                    <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" />\n                </svg>\n            </button>\n            <!-- <button mat-icon-button type=\"button\"\n                class=\"mat-paginator-navigation-last\"\n                (click)=\"lastPage()\"\n                [attr.aria-label]=\"_intl.lastPageLabel\"\n                [matTooltip]=\"_intl.lastPageLabel\"\n                [matTooltipDisabled]=\"_nextButtonsDisabled()\"\n                [matTooltipPosition]=\"'above'\"\n                [disabled]=\"_nextButtonsDisabled()\"\n                *ngIf=\"showFirstLastButtons\">\n          <svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\">\n            <path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"/>\n          </svg>\n        </button> -->\n        </div>\n    </div>\n</div>\n","<div class=\"row align-items-center m-0\">\r\n  <div class=\"col-12 col-sm-12 col-md-7 col-lg-7 col-xl-12 px-2\">\r\n    <ng-content select=\"[table-header]\"></ng-content>\r\n  </div>\r\n \r\n</div>\r\n<div style=\"height: 4px;\">\r\n  <mat-progress-bar mode=\"indeterminate\" style=\"width: 100%; height: 4px;\" *ngIf=\"config?.tableState === 'LOADING'\">\r\n  </mat-progress-bar>\r\n</div>\r\n<div class=\"table-responsive scroll-assist\">\r\n  <table [id]=\"config?.id\" mat-table class=\"table-format-cell\" matSort [dataSource]=\"dataSource\" aria-label=\"Table\"\r\n  [matSortDisabled]=\"!dataSource?.data?.length\">\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"selectExtraHeader\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n         <mat-checkbox *ngIf=\"dataSource?.data?.length !== 0 && config?.rowSelectEnabled\"\r\n          (change)=\"$event ? masterToggle() : null\" [checked]=\"selection?.hasValue() && this.allSelected\"\r\n          [disabled]=\"disableMasterSelect\" [indeterminate]=\"selection?.hasValue() && !this.allSelected\">\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\" [ngClass]=\"((row?.admissions != undefined) && (row?.admissions).length > 1) ? 'manage-data-row' : ''\">\r\n         <mat-checkbox (click)=\"$event.stopPropagation()\" *ngIf=\"config?.rowSelectEnabled\"\r\n          (change)=\"checkboxChange($event, row)\"\r\n          [checked]=\"isSelected ? isSelected(row, selection) : selection?.isSelected(row)\"\r\n          [disabled]=\"selectOnlyActive && row.activePatch === ''\"\r\n          [aria-label]=\"checkboxLabel(row)\">\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container [matColumnDef]=\"column?.id\" *ngFor=\"let column of columns\">\r\n      <ng-container *ngIf=\"!column?.sortable && widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [class]=\"column?.headerClass\" [style]=\"column?.style\">\r\n          <ls-widget *ngIf=\"widgetTemplates[column?.id + 'Heading']\"\r\n            [lsTemplate]=\"widgetTemplates[column?.id + 'Heading']\">\r\n          </ls-widget>\r\n        </th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"column?.sortable && widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [mat-sort-header]=\"column.id\" [class]=\"column?.headerClass\"\r\n          [style]=\"column?.style\">\r\n          <ls-widget *ngIf=\"widgetTemplates[column?.id + 'Heading']\"\r\n            [lsTemplate]=\"widgetTemplates[column?.id + 'Heading']\">\r\n          </ls-widget>\r\n        </th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!column?.sortable && !widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [class]=\"column?.headerClass\" [style]=\"column?.style\">\r\n          {{ config?.translate\r\n          ? (getHeaderTranslation(column) | translate)\r\n          : getHeaderTranslation(column) }}\r\n        </th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"column?.sortable && !widgetTemplates[column?.id + 'Heading']\">\r\n        <th mat-header-cell *matHeaderCellDef [mat-sort-header]=\"column.id\" [class]=\"column?.headerClass\"\r\n          [style]=\"column?.style\">\r\n          {{ config?.translate\r\n          ? (getHeaderTranslation(column) | translate)\r\n          : getHeaderTranslation(column) }}\r\n        </th>\r\n      </ng-container>\r\n      <td mat-cell *matCellDef=\"let row\" [ngClass]=\"((row?.admissions != undefined) && (row?.admissions).length > 1) ? 'manage-data-row px-2' : 'px-2'\">\r\n        <div [class]=\"column?.cellClass\" [style]=\"column?.style\">\r\n          <span *ngIf=\"!widgetTemplates[column?.id]\" [class]=\"column?.labelClass\">{{ row[column?.id] }}</span>\r\n          <ls-widget *ngIf=\"widgetTemplates[column?.id]\" [lsTemplate]=\"widgetTemplates[column?.id]\" [value]=\"row\">\r\n          </ls-widget>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\" *ngIf=\"config?.actions?.show\">\r\n      <th mat-header-cell *matHeaderCellDef [style]=\"config?.actions?.header?.style\"\r\n        [class]=\"config?.actions?.header?.class\">\r\n        <ng-container *ngIf=\"!widgetTemplates['actionsHeading']\">{{\r\n          config?.actions?.headerLabel\r\n          }}</ng-container>\r\n        <ls-widget *ngIf=\"widgetTemplates['actionsHeading']\" [lsTemplate]=\"widgetTemplates['actionsHeading']\">\r\n        </ls-widget>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\" class=\"px-2\">\r\n        <ls-widget [lsTemplate]=\"widgetTemplates?.actions\" [value]=\"row\" [class]=\"config?.actions?.class\"\r\n          [style]=\"config?.actions?.style\"></ls-widget>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actionsExtraHeader\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"px-2\"></th>\r\n    </ng-container>\r\n\r\n    <ng-container [matColumnDef]=\"column.id + 'ExtraHeader'\" *ngFor=\"let column of columns\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <ls-widget [lsTemplate]=\"widgetTemplates[column.id + 'ExtraHeader']\" [class]=\"config?.extraHeader?.class\"\r\n          [style]=\"config?.extraHeader?.style\"></ls-widget>\r\n      </th>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"config?.footer\">\r\n      <ng-container matColumnDef=\"footer\">\r\n        <td mat-footer-cell *matFooterCellDef [attr.colspan]=\"config?.footer?.colspan\" [class]=\"config?.footer?.class\">\r\n          <ls-widget [lsTemplate]=\"widgetTemplates?.footer\" [style]=\"config?.footer?.style\"></ls-widget>\r\n        </td>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"getDisplayedColumns()\"></tr>\r\n    <ng-container *ngIf=\"config?.showExtraHeader\">\r\n      <tr mat-header-row *matHeaderRowDef=\"getExtraHeaderDisplayedColumns()\" class=\"extra-header\"></tr>\r\n    </ng-container>\r\n    <tr mat-row *matRowDef=\"let row; columns: getDisplayedColumns()\"\r\n      [class.active]=\"isSelected ? isSelected(row, selection) : selection?.isSelected(row)\"></tr>\r\n    <ng-container *ngIf=\"config?.footer\">\r\n      <tr mat-footer-row *matFooterRowDef=\"['footer']\"></tr>\r\n    </ng-container>\r\n  </table>\r\n  <div class=\"text-center my-4 mx-2\"\r\n    *ngIf=\"config?.tableState !== 'LOADING' && config?.tableState !== 'FAILURE' && dataSource.data?.length === 0\">\r\n    No data found\r\n  </div>\r\n  <div class=\"mat-error text-center my-4 mx-2\" *ngIf=\"config?.tableState === 'FAILURE' && dataSource.data?.length === 0\">\r\n    Something went wrong. Please try again.\r\n  </div>\r\n</div>\r\n<div class=\"col-12 col-sm-12 col-md-5 col-lg-5 col-xl-12 px-2\">\r\n  <ls-paginator *ngIf=\"config?.paginator?.hide === false\" (page)=\"onPage($event)\" class=\"sticky-paginator\"\r\n    [length]=\"config?.page?.length\" [pageSize]=\"config?.page?.pageSize\" [pageLength]=\"dataSource?.data?.length\" [pageIndex]=\"config?.page?.pageIndex\"\r\n    showFirstLastButtons [tableState] = config?.tableState >\r\n  </ls-paginator>\r\n</div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef,\n  Renderer2,\n} from \"@angular/core\";\nimport {  PageEvent } from \"@angular/material/paginator\";\nimport { MatSort, Sort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { LsWidgetNameDirective } from \"../../_directives/ls-widget-name.directive\";\nimport { LSColumn, LSTableConfig } from \"../../_models/ls-column.model\";\n\n@Component({\n  selector: \"ls-table\",\n  templateUrl: \"./ls-table.component.html\",\n  styleUrls: [\"./ls-table.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LsTableComponent\n  implements AfterViewInit, OnChanges, AfterContentInit {\n  dataSource = new MatTableDataSource<any>([]);\n  @Input() selection = new SelectionModel<any>(true, []);\n  @Output() page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n  @Output() selected: EventEmitter<SelectionModel<any>> = new EventEmitter();\n  @Input() config: LSTableConfig;\n  @Input() error: any;\n  @Input() tableSort = false;\n  @Output() configChange: EventEmitter<LSTableConfig> =\n    new EventEmitter<LSTableConfig>();\n  @Output() sortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\n  @Input() data: any[];\n  @Input() columns: LSColumn[] = [];\n  @Input() Id = \"\";\n  @Input() selectOnlyActive = false;\n  disableMasterSelect = false;\n  allSelected = false;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ContentChildren(LsWidgetNameDirective)\n  widgets: QueryList<LsWidgetNameDirective>;\n  widgetTemplates: any = {};\n\n  ngAfterViewInit(): void {\n    if(this.tableSort) {\n      this.dataSource.sort = this.sort;\n    }\n    this.sort.sortChange.subscribe((change) => {\n      this.config = {\n        ...this.config,\n        sort: { ...change }\n      };\n      this.sortChange.emit(change);\n    })\n    this.selection.changed.subscribe((change) => {\n      this.selected.emit(this.selection);\n      this.allSelected = this.isAllSelected();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes?.data?.currentValue) {\n      if (this.config?.paginator?.offline) {\n        this.data = changes?.data?.currentValue;\n        this.config.page.length = this.data?.length;\n        this.sliceData(<PageEvent>this.config?.page);\n      } else {\n        this.dataSource.data = changes?.data?.currentValue || [];\n        this.allSelected = this.isAllSelected();\n      }\n    }\n  }\n\n  constructor(private vr: ViewContainerRef, private snackbar: SnackbarService, private ren: Renderer2) { }\n\n  ngAfterContentInit() {\n    this.widgets.forEach((widget) => {\n      this.widgetTemplates[widget.getName()] = widget.template;\n    });\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    let patients;\n    if (this.selectOnlyActive) {\n      patients = this.dataSource.data.filter((pat) => pat.activePatch?.length);\n      if (!patients.length) {\n        this.disableMasterSelect = true;\n        return false;\n      } else {\n        this.disableMasterSelect = false;\n      }\n    } else {\n      patients = this.dataSource.data;\n    }\n    if (this.Id.length) {\n      for (const pat of patients) {\n        if (this.selection.selected\n          .findIndex((selPat) => selPat[this.Id] === pat[this.Id]) === -1) {\n          return false;\n        }\n      }\n    } else {\n      for (const pat of patients) {\n        if (!this.selection.selected\n          .includes(pat)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  @Input() isSelected;\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.allSelected) {\n      this.selection.clear();\n      return;\n    }\n    if (this.selectOnlyActive) {\n      const activePatients = this.dataSource.data\n        .filter((pat) => pat.activePatch?.length);// Only Active monitoring\n      if (activePatients.length) {\n        this.selection.select(...activePatients);\n        this.snackbar.openSnackBar(activePatients.length\n          + \" Current Patients selected\", 'bottom', 'center');\n        this.allSelected = true;\n      } else {\n        this.allSelected = false;\n        this.snackbar.openSnackBar(\"No Patients to select\", 'bottom', 'center');\n      }\n    } else {\n      this.selection.select(...this.dataSource.data);\n      this.allSelected = true;\n    }\n  }\n\n  getDisplayedColumns() {\n    let columns = [];\n    if (this.config?.rowSelectEnabled) {\n      columns.push(\"select\");\n    }\n    columns = [\n      ...columns,\n      ...this.columns?.filter((c) => !c?.hidden).map((c) => c?.id),\n    ];\n    if (this.config?.actions?.show) {\n      columns.push(\"actions\");\n    }\n    return columns;\n  }\n\n  getExtraHeaderId(column: LSColumn) {\n    return `${column?.id}ExtraHeader`;\n  }\n\n  getExtraHeaderDisplayedColumns() {\n    let columns = [];\n    if (this.config?.rowSelectEnabled) {\n      columns.push(\"select\");\n    }\n    columns = [\n      ...columns,\n      ...this.columns?.filter((c) => !c?.hidden).map((c) => c?.id),\n    ];\n    if (this.config?.actions?.show) {\n      columns.push(\"actions\");\n    }\n    return columns.map(c => `${c}ExtraHeader`);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.allSelected ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n\n  getHeaderTranslation(column: LSColumn) {\n    if (this.config.translate) {\n      return `${this.config.translateKey || this.config.id}.${column.label || column.id\n        }`;\n    } else {\n      return column.label;\n    }\n  }\n\n  getExtraHeaderTranslation(column: LSColumn) {\n    if (this.config.translate) {\n      return `${this.config.translateKey || this.config.id}.${column.label || column.id}_extra_heading`;\n    } else {\n      return column.label;\n    }\n  }\n\n  onPage(event: PageEvent) {\n    this.config = {\n      ...this.config,\n      page: {\n        ...this.config.page,\n        pageSize: event.pageSize,\n        pageIndex: event.pageIndex\n      }\n    }\n    if (this.config?.paginator?.offline) {\n      this.sliceData(event);\n    } else {\n      this.page.emit(event);\n    }\n  }\n\n  sliceData(event: PageEvent) {\n    const data = this.data;\n    const startIndex = event.pageIndex * event.pageSize;\n    this.dataSource.data = data?.slice(\n      startIndex,\n      startIndex + this.config?.page?.pageSize > event?.length\n        ? this.config?.page?.length\n        : startIndex + this.config?.page?.pageSize\n    );\n  }\n\n  isActive(row) {\n    if (this.config?.isActive) {\n      return this.config?.isActive(row);\n    } else {\n      return this.selection.isSelected(row);\n    }\n  }\n  checkboxChange(event, row) {\n    if (event.checked) {\n      this.selection?.select(row);\n    } else {\n      this.selection?.deselect(row);\n      if (this.Id) {\n        this.selection.selected.map(s => {\n          if (s[this.Id] === row[this.Id]) {\n            this.selection?.deselect(s);\n          }\n        })\n      }\n    }\n  }\n}\n","<ng-container *ngTemplateOutlet=\"lsTemplate; context: { $implicit: value }\">\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  TemplateRef,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"ls-widget\",\n  templateUrl: \"./ls-widget.component.html\",\n  styleUrls: [\"./ls-widget.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LsWidgetComponent {\n  @Input() value: any;\n  @Input() lsTemplate: TemplateRef<any>;\n\n  constructor() {}\n}\n","import { Directive, Input, TemplateRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"[lsWidgetName]\",\n})\nexport class LsWidgetNameDirective {\n  @Input() type: string;\n\n  @Input() lsWidgetName: string;\n\n  constructor(public template: TemplateRef<any>) {}\n\n  getName(): string {\n    return this.lsWidgetName;\n  }\n  getType(): string {\n    return this.type;\n  }\n}\n","import { Sort } from \"@angular/material/sort\";\n\nexport interface LSColumn {\n  id: string;\n  label?: string;\n  headerClass?: string | string[];\n  extraHeaderClass?: string | string[];\n  cellClass?: string | string[];\n  style?: string;\n  extraHeaderStyle?: string;\n  sortable?: boolean;\n  type?: LSColumnType;\n  config?: any;\n  labelClass?: string;\n  hidden?: boolean;\n  colspan?: number;\n}\n\nexport enum LSColumnType {\n  \"TEXT\" = \"TEXT\",\n  \"TAG_LIST\" = \"TAG_LIST\",\n  \"ACTIONS\" = \"ACTIONS\",\n}\n\nexport interface LSTableConfig {\n  id: string;\n  rowSelectEnabled?: boolean;\n  actions?: LSActions;\n  showExtraHeader?: boolean;\n  extraHeader?: {\n    class?: string[];\n    style?: string;\n  }\n  page?: {\n    pageSize?: number;\n    pageIndex?: number;\n    length?: number;\n  };\n  translateKey?: string;\n  translate?: boolean;\n  paginator?: {\n    offline?: boolean;\n    hide?: boolean;\n  };\n  isActive?: Function;\n  sort?: Sort;\n  footer?: {\n    colspan?: number;\n    style?: string;\n    class?: string[];\n  };\n  tableState?: TableState;\n}\n\nexport enum TableState {\n  LOADING = \"LOADING\",\n  DEFAULT = \"DEFAULT\",\n  SUCCESS = \"SUCCESS\",\n  NO_DATA = \"NO_DATA\",\n  FAILURE = \"FAILURE\"\n}\n\nexport interface LSActions {\n  headerLabel?: string;\n  header?: {\n    style?: string;\n    class?: string[];\n  };\n  style?: string;\n  class?: string[];\n  show?: boolean;\n  contentSelector?: string;\n}\n\nexport interface LSAction {\n  label?: string;\n  type?: string;\n  color?: string;\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LsTableComponent } from \"./_components/ls-table/ls-table.component\";\nimport { LsWidgetComponent } from \"./_components/ls-widget/ls-widget.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { LsWidgetNameDirective } from \"./_directives/ls-widget-name.directive\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { LsPageHeaderComponent } from \"./_components/ls-page-header/ls-page-header.component\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { LsPaginatorComponent } from './_components/ls-paginator/ls-paginator.component';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@NgModule({\n  declarations: [\n    LsTableComponent,\n    LsWidgetComponent,\n    LsWidgetNameDirective,\n    LsPageHeaderComponent,\n    LsPaginatorComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatProgressBarModule,\n    I18nModule,\n    MatCardModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule\n  ],\n    exports: [\n        LsTableComponent,\n        LsWidgetComponent,\n        LsWidgetNameDirective,\n        LsPageHeaderComponent,\n        LsPaginatorComponent,\n    ],\n})\nexport class LifeSignalsModule {}\n","export const groupNamePattern = /^[a-zA-Z0-9][a-zA-Z0-9-_ ]*[a-zA-Z0-9]$/\r\nexport interface Group {\r\n  ancestor?: string[];\r\n  type?: string;\r\n  name: string;\r\n  parent?: string;\r\n  groupId?: string;\r\n  facilityId?: string;\r\n  facility_id?:string;\r\n  isShow?: boolean;\r\n  expanded?: boolean;\r\n  hasChildren?: boolean;\r\n  children?: string[];\r\n  id?: string;\r\n  tempName?: string;\r\n  parentCard?: boolean\r\n}\r\n\r\nexport interface AssignGroup {\r\n  patientId: string,\r\n  cGroup: GroupObj,\r\n  pGroup: GroupObj\r\n}\r\n\r\nexport interface GroupObj {\r\n  id: string,\r\n  name: string\r\n}\r\n\r\nexport enum GroupType {\r\n  CLINICAL = \"clinical\",\r\n  PHYSICAL = \"physical\"\r\n}\r\n\r\nexport interface GroupResponse {\r\n  name: string,\r\n  groupId: string,\r\n  FacilityId: string,\r\n  type: GroupType,\r\n  alertId: string,\r\n  alertDestId: string,\r\n  miscSettingsId: string,\r\n  children: string[],\r\n  parent: string,\r\n  ancestor: string[],\r\n  AlertIsInherited: boolean,\r\n  isShow?: boolean;\r\n  expanded?: boolean;\r\n  deleted?: boolean;\r\n}\r\nexport const restrictedGroupNames = [\r\n   \"ROOT\",\r\n   \"UNASSIGNED\",\r\n   \"ALL\"\r\n]\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { Group } from \"../models/manage-groups.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { GetAPIResponse } from \"src/app/models/api.model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ManageGroupsService {\r\n  BASE_URL: string = environment.dataApiUrl;\r\n  URL:string=environment.dataApiUrl2;\r\n  private cfId: string = \"\";\r\n  constructor(\r\n    private http: HttpClient,\r\n    private autheticationService: AuthenticationService\r\n  ) {\r\n    this.cfId = this.autheticationService.getCfId();\r\n  }\r\n\r\n  save(ob) {\r\n    // let url = this.BASE_URL + \"clinical-facilities/groups\";\r\n    let url = this.URL+`create_location`;\r\n    return this.http.post<Group>(url, ob).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  update(ob) {\r\n    // let url = this.BASE_URL + \"clinical-facilities/groups\";\r\n    let url = this.URL+`update_location`;\r\n    return this.http.put<Group>(url, ob).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  remove(ob) {\r\n    let url = this.BASE_URL + `clinical-facilities/groups/${ob}`;\r\n    return this.http.delete<Group>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  fetch() {\r\n    // let url = this.BASE_URL + `clinical-facilities/${this.cfId}/groups?sortBy=name:asc`;\r\n    let url = this.URL+`get_locations`;\r\n    return this.http.get<GetAPIResponse>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  handleError(error: any) {\r\n    if (error.errorMessage) {\r\n      return throwError(error.errorMessage);\r\n    } else {\r\n      return throwError(`Error: ${error}`);\r\n    }\r\n  }\r\n}\r\n","import { Action } from \"@ngrx/store\";\nimport { Group, GroupResponse } from \"../models/manage-groups.model\";\n\nexport enum ActionTypes {\n  LOAD_GROUPS_REQUEST = \"[Group] Load groups request\",\n  LOAD_GROUPS_FAILURE = \"[Group] Load groups Failure\",\n  LOAD_GROUPS_SUCCESS = \"[Group] Load groups Success\",\n\n  SAVE_GROUP_REQUEST = \"[Group] save group request\",\n  SAVE_GROUP_FAILURE = \"[Group] save group Failure\",\n  SAVE_GROUP_SUCCESS = \"[Group] save group Success\",\n\n  UPDATE_GROUP_REQUEST = \"[Group] update group request\",\n  UPDATE_GROUP_FAILURE = \"[Group] update group Failure\",\n  UPDATE_GROUP_SUCCESS = \"[Group] update group Success\",\n\n  REMOVE_GROUP_REQUEST = \"[Group] remove group request\",\n  REMOVE_GROUP_FAILURE = \"[Group] remove group Failure\",\n  REMOVE_GROUP_SUCCESS = \"[Group] remove group Success\",\n}\n\nexport class LoadGroupsRequestAction implements Action {\n  readonly type = ActionTypes.LOAD_GROUPS_REQUEST;\n  constructor() {}\n}\n\nexport class LoadGroupsFailureAction implements Action {\n  readonly type = ActionTypes.LOAD_GROUPS_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class LoadGroupsSuccessAction implements Action {\n  readonly type = ActionTypes.LOAD_GROUPS_SUCCESS;\n  constructor(public payload: { groups: GroupResponse[] }) {}\n}\n\nexport class SaveGroupRequestAction implements Action {\n  readonly type = ActionTypes.SAVE_GROUP_REQUEST;\n  constructor(public payload: Group) {}\n}\n\nexport class SaveGroupFailureAction implements Action {\n  readonly type = ActionTypes.SAVE_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class SaveGroupSuccessAction implements Action {\n  readonly type = ActionTypes.SAVE_GROUP_SUCCESS;\n  constructor(public payload: { group: Group }) {}\n}\n\nexport class UpdateGroupRequestAction implements Action {\n  readonly type = ActionTypes.UPDATE_GROUP_REQUEST;\n  constructor(public payload: Group) {}\n}\n\nexport class UpdateGroupFailureAction implements Action {\n  readonly type = ActionTypes.UPDATE_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class UpdateGroupSuccessAction implements Action {\n  readonly type = ActionTypes.UPDATE_GROUP_SUCCESS;\n  constructor(public payload: { group: Group }) {}\n}\n\nexport class RemoveGroupRequestAction implements Action {\n  readonly type = ActionTypes.REMOVE_GROUP_REQUEST;\n  constructor(public payload: string) {}\n}\n\nexport class RemoveGroupFailureAction implements Action {\n  readonly type = ActionTypes.REMOVE_GROUP_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\n\nexport class RemoveGroupSuccessAction implements Action {\n  readonly type = ActionTypes.REMOVE_GROUP_SUCCESS;\n  constructor(public payload: { group: any }) {}\n}\n\nexport type GroupsActions =\n  | LoadGroupsFailureAction\n  | LoadGroupsRequestAction\n  | LoadGroupsSuccessAction\n  | SaveGroupFailureAction\n  | SaveGroupRequestAction\n  | SaveGroupSuccessAction\n  | UpdateGroupFailureAction\n  | UpdateGroupRequestAction\n  | UpdateGroupSuccessAction\n  | RemoveGroupFailureAction\n  | RemoveGroupRequestAction\n  | RemoveGroupSuccessAction;\n","import { Group, GroupResponse, GroupType } from \"../models/manage-groups.model\";\r\nimport { ActionTypes, GroupsActions } from \"./manage-groups.actions\";\r\n\r\nexport const manageGroupFeatureKey = \"manageGroups\";\r\n\r\nexport interface ManageGroupState {\r\n  CLINICAL_GROUPS: GroupResponse[];\r\n  PHYSICAL_GROUPS: GroupResponse[];\r\n  error: string;\r\n  groupsLoaded: boolean;\r\n}\r\n\r\nconst initialGroupState: ManageGroupState = {\r\n  CLINICAL_GROUPS: [],\r\n  PHYSICAL_GROUPS: [],\r\n  error: \"\",\r\n  groupsLoaded: false\r\n};\r\n\r\nexport function GroupsReducer(\r\n  state: ManageGroupState,\r\n  action: GroupsActions\r\n) {\r\n  state = state || initialGroupState;\r\n  switch (action.type) {\r\n    case ActionTypes.UPDATE_GROUP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        groupsLoaded: false\r\n      }\r\n    }\r\n    case ActionTypes.SAVE_GROUP_REQUEST: {\r\n      return{\r\n        ...state,\r\n        groupsLoaded: false,\r\n        error : null\r\n      }\r\n    }\r\n    case ActionTypes.LOAD_GROUPS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        groupsLoaded: false,\r\n      };\r\n    }\r\n    case ActionTypes.REMOVE_GROUP_REQUEST:{\r\n      return{\r\n        ...state,\r\n        error: null\r\n      };\r\n    }\r\n    case ActionTypes.UPDATE_GROUP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error : action.payload,\r\n        groupsLoaded: true\r\n      }\r\n    }\r\n    case ActionTypes.SAVE_GROUP_FAILURE: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        error : action.payload,\r\n        groupsLoaded: true\r\n      }\r\n    }\r\n    case ActionTypes.LOAD_GROUPS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n    case ActionTypes.REMOVE_GROUP_FAILURE: {\r\n      return{\r\n        ...state,\r\n        error : action.payload\r\n      }\r\n    }\r\n    case ActionTypes.LOAD_GROUPS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        CLINICAL_GROUPS: setGroups(action.payload).cgroup,\r\n        PHYSICAL_GROUPS: setGroups(action.payload).pgroup,\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n\r\n    case ActionTypes.SAVE_GROUP_SUCCESS: {\r\n      let newGroupResponse = setGroup(action.payload['group']['data']);\r\n      let tempCgroup: Group[] = [...state.CLINICAL_GROUPS];\r\n      let tempPgroup: Group[] = [...state.PHYSICAL_GROUPS];\r\n      if (newGroupResponse.type === GroupType.CLINICAL) {\r\n        tempCgroup = [...tempCgroup, <GroupResponse>newGroupResponse];\r\n      } else if (newGroupResponse.type === GroupType.PHYSICAL) {\r\n        tempPgroup.map((g)=>{\r\n          if(g.groupId === newGroupResponse.parent){\r\n            g.children.push(newGroupResponse.groupId);\r\n            g.hasChildren = true;\r\n            g.expanded = true;\r\n          }\r\n        })\r\n        tempPgroup = [...tempPgroup, <GroupResponse>newGroupResponse];\r\n      }\r\n      return {\r\n        ...state,\r\n        CLINICAL_GROUPS: [...tempCgroup],\r\n        PHYSICAL_GROUPS: [...tempPgroup],\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n\r\n    case ActionTypes.UPDATE_GROUP_SUCCESS: {\r\n      let newGroupResponse = setGroup(action.payload['group']['data']);\r\n      let tempCgroup: Group[] = [...state.CLINICAL_GROUPS];\r\n      let tempPgroup: Group[] = [...state.PHYSICAL_GROUPS];\r\n      if (newGroupResponse.type === GroupType.CLINICAL) {\r\n        tempCgroup = [...tempCgroup.map(t => {\r\n          return {\r\n            ...t,\r\n            name: t.groupId === newGroupResponse.groupId ? newGroupResponse?.name : t.name\r\n          }\r\n        })];\r\n      } else if (newGroupResponse.type === GroupType.PHYSICAL) {\r\n        tempPgroup = [...tempPgroup.map(t => {\r\n          return {\r\n            ...t,\r\n            name: t.groupId === newGroupResponse.groupId ? newGroupResponse?.name : t.name\r\n          }\r\n        })];\r\n      }\r\n      return {\r\n        ...state,\r\n        CLINICAL_GROUPS: [...tempCgroup],\r\n        PHYSICAL_GROUPS: [...tempPgroup],\r\n        groupsLoaded: true\r\n      };\r\n    }\r\n    case ActionTypes.REMOVE_GROUP_SUCCESS:{\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setGroup(group) {\r\n  let obj: Group = {\r\n    type: group.type,\r\n    name: group.name,\r\n    parent: group.parent,\r\n    groupId: group.groupId,\r\n    facilityId: group.facilityId,\r\n    children: group.children\r\n  };\r\n  return obj;\r\n}\r\n\r\nfunction setGroups(payload: { groups: GroupResponse[] }) {\r\n  let pGroup = new Array();\r\n  let cGroup = new Array();\r\n\r\n  payload[\"groups\"].map(group => {\r\n    let obj: Group = {\r\n      type: group.type,\r\n      name: group.name,\r\n      parent: group.parent,\r\n      groupId: group.groupId,\r\n      facilityId: group.FacilityId,\r\n      hasChildren: !!group.children?.length,\r\n      children: group.children\r\n    }\r\n    if (obj.type === GroupType.CLINICAL) {\r\n      cGroup.push(obj);\r\n    } else if (obj.type === GroupType.PHYSICAL) {\r\n      pGroup.push(obj);\r\n    }\r\n  });\r\n  return { cgroup: cGroup, pgroup: pGroup };\r\n}\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { ManageGroupState, manageGroupFeatureKey } from \"./manage-groups.reducer\";\n\nconst getGroupsState = createFeatureSelector<ManageGroupState>(manageGroupFeatureKey);\n\nexport const selectGroupsList = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState\n);\nexport const groupsLoaded = createSelector(\n    getGroupsState,\n    (ManageGroupState) => ManageGroupState?.groupsLoaded\n);\n\nexport const selectGroupsError = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState?.error\n);\n\nexport const removeGroup = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState\n);\n\nexport const removeGroupError = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState?.error\n);\n\nexport const saveGroup = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState\n);\n\nexport const saveGroupError = createSelector(\n  getGroupsState,\n  (ManageGroupState) => ManageGroupState?.error\n);\n\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"filter\",\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], searchText: string, fieldName: string): any[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLowerCase();\n    return items.filter((item) => {\n      return item[fieldName].toLowerCase().includes(searchText);\n    });\n  }\n}\n","<app-header></app-header>\n<ls-page-header type=\"profile\"></ls-page-header>\n<div class=\"loading-indicator\" *ngIf=\"loader\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n</div>\n<div *ngIf=\"!loader\">\n    <div class=\"container-fluid\">\n        <div class=\"sub-title fw-bold mb-2 pt-4\">\n            {{ \"shared.user_details\" | translate }}\n        </div>\n        <div class=\"profile-card\">\n            <div class=\"row mx-n2\">\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.username\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.firstName }}\n                                {{ user.lastName }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.user_id\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.id }}</span>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row mx-n2\">\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.phone_no\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.phoneNo || '-' }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-1 px-2 mx-2 \">\n                        <div class=\"col-4\">\n                            <label> {{ \"shared.password\" | translate }}</label>\n                        </div>\n                        <div class=\"col-8\">\n                            <div class=\"d-flex justify-content-end\"> <button mat-button class=\"btn reset-btn\" (click)=\"confirmResetPassword()\">\n                  <mat-icon class=\"fw-normal\"> refresh </mat-icon>\n                  <span class=\"mx-1\">{{ \"shared.reset_password\" | translate }}</span>\n                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"row mx-n2\">\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-6\">\n                            <label> {{ \"shared.email\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <span class=\"fw-normal d-flex justify-content-start justify-content-sm-end\">{{ user.email || '-' }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-md-6 px-2 mb-3\">\n                    <div class=\"row align-items-center py-3 px-2 mx-2 \">\n                        <div class=\"col-sm-3\">\n                            <label> {{ \"shared.roles\" | translate }}</label>\n                        </div>\n                        <div class=\"col-sm-9 roles\">\n                            <span *ngFor=\"let role of user.roles\">\n                                {{ 'profile-module.roles.' + role | translate }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n\n            <div *ngIf=\"showPreference\">\n                <div class=\"sub-title mb-2 px-3 pt-4\">\n                    {{ \"shared.preferences\" | translate }}\n                </div>\n\n                <div class=\"row mx-n2\">\n                    <div class=\"col-md-6 px-2 mb-3\">\n                        <div class=\"row align-items-center py-1 mx-2 \">\n                            <div class=\"col-4\">\n                                <label>{{ \"shared.units\" | translate }}</label>\n                            </div>\n                            <div class=\"col-8\">\n                                <div class=\"d-flex justify-content-end\">\n                                    <mat-select placeholder=\"Select\" appearance=\"fill\" class=\"mat-sel whiteselect selectfilter\" [(ngModel)]=\"user.units\" (ngModelChange)=\"updated()\">\n                                        <mat-option *ngFor=\"let unit of units\" [value]=\"unit.value\">\n                                            {{ unit.name }}\n                                        </mat-option>\n                                    </mat-select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6 px-2 mb-3\">\n                        <div class=\"row align-items-center py-1 mx-2 \">\n                            <div class=\"col-5\">\n                                <label> {{ \"shared.time_zone\" | translate }}</label>\n                            </div>\n                            <div class=\"col-7\">\n                                <div class=\"d-flex justify-content-end\">\n                                    <app-matselect-withsearch class=\"mat-sel\" [key]=\"'name'\" [value]=\"'name'\" [selected]=\"user.timezone\"\n                                        (valueUpdated)=\"selectZone($event)\" [items]=\"timeZones\"></app-matselect-withsearch>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class=\"row bottom-tab mt-4\">\n            <!-- <div class=\"col-sm-12 my-4 d-flex\" *ngIf=\"version\">\n                <div class=\"mr-2\">{{ \"shared.version\" | translate }}:&nbsp;</div>\n                <div>{{version}}</div>\n            </div> -->\n            <div class=\"col-sm-6\">\n                <!--        <button mat-flat-button color=\"warn\" (click)=\"logout()\">-->\n                <!--          <span>{{ \"shared.logout\" | translate }}</span>-->\n                <!--        </button>-->\n            </div>\n            <div class=\"col-sm-12 text-end\">\n                <span *ngIf=\"valuesUpdated\">\n          <button mat-flat-button color=\"warn\" class=\"fill-btn\" (click)=\"cancel()\">\n            {{ \"shared.cancel\" | translate }}\n          </button>\n          <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"save()\">\n            {{ \"shared.save\" | translate }}\n          </button>\n        </span>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { BackendApiService } from \"../services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { ManageUsersService } from \"../settings/manage-users/services/manage-users.service\";\nimport { CFUser } from \"../interfaces/manage-users.interface\";\nimport { ConfirmDialogComponent } from \"../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport csc from \"country-state-city\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"],\n})\nexport class ProfileComponent implements OnInit {\n  version = environment.version;\n  searchTxt;\n  constructor(\n    private location: Location,\n    public backendApiService: BackendApiService,\n    private authService: AuthenticationService,\n    private userService: ManageUsersService,\n    private snackBar: SnackbarService,\n    private dialog: MatDialog,\n  ) { }\n  units = [\n    { name: \"Metric Units\", value: \"SI\" },\n    { name: \"Imperial Units\", value: \"IS\" },\n  ];\n  timeZones;\n  logoutResponse: any;\n  role: number;\n  user: CFUser;\n  private userCopy: CFUser;\n  userId;\n  loader = true;\n  selectedUnit;\n  valuesUpdated = false;\n  duration = 3000;\n  showPreference = true;\n  roles;\n  browserOffset;\n  ngOnInit() {\n    // this.user = sessionStorage.getItem(\"user\");\n    this.roles = this.authService.getRoles() || [];\n    if (this.roles.indexOf('SPA') > -1 || this.roles.indexOf('SA') > -1) {\n      this.showPreference = false;\n    }\n    this.userId = this.authService.getUserId();\n    this.getTimeZones();\n    this.getUser();\n  }\n  getUser() {\n    this.userService.getUser(this.userId).subscribe(\n      (response: any) => {\n        this.user = response.data;\n        this.user.timezone = this?.user?.timezone || this.userService.getTimeZoneOffset('');\n        this.userCopy = JSON.parse(JSON.stringify(this.user));\n        this.loader = false;\n      }, console.log);\n  }\n  getTimeZones() {\n    let countries = csc.getAllCountries() || [];\n    this.timeZones = countries.flatMap(country => {\n      return country.timezones.map(timeZone => ({\n        name: timeZone.zoneName,\n        offset: timeZone.gmtOffsetName\n      }));\n    });\n  }\n  back() {\n    this.location.back();\n  }\n  logout() {\n    this.authService.logout();\n  }\n  cancel() {\n    this.valuesUpdated = false;\n    this.user = JSON.parse(JSON.stringify(this.userCopy));\n  }\n  save() {\n    let userPreference = {\n      units: this.user.units,\n      timeZone: this.user.timezone,\n    };\n    this.loader = true;\n    this.userService.savePreferences(this.userId, userPreference).subscribe(\n      (response: any) => {\n        if (response.status === \"OK\") {\n          this.snackBar.openSnackBar(\"shared.\" + response.message, 'bottom', 'center', true);\n          setTimeout(() => {\n            window.location.reload();\n          }, 3000);\n        } else {\n          this.loader = false;\n          this.snackBar.openSnackBar(\"shared.OPERATION_FAILED\", 'bottom', 'center', true);\n        }\n      },\n      (error) => {\n        this.loader = false;\n        console.log(error);\n        this.snackBar.openSnackBar(\"shared.OPERATION_FAILED\", 'bottom', 'center', true);\n      }\n    );\n  }\n  confirmResetPassword() {\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"270px\",\n      maxWidth: \"95vw\",\n      \n      data: {\n        body: {\n          title: \"manage_users_module.reset_password\",\n          text: \"manage_users_module.reset_password_confirm\",\n        },\n      },\n\n      disableClose: true,\n    });\n    confirm.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.resetPassword();\n      }\n    });\n  }\n  resetPassword() {\n    this.loader = true;\n    this.snackBar.openSnackBar(\"shared.Reset_success\", 'bottom', 'center', true);\n    this.userService.resetPassword(this.userId).subscribe(\n      (response: any) => {\n        console.log(response);\n        if (response.status === \"OK\") {\n          // this.duration = 10000;\n          this.logout();\n        }\n      },\n      (error) => {\n        this.loader = false;\n        this.snackBar.openSnackBar(\"shared.OPERATION_FAILED\", 'bottom', 'center', true);\n      }\n    );\n  }\n  selectZone(value) {\n    this.user.timezone = value;\n    this.valuesUpdated = true;\n  }\n  updated() {\n    this.valuesUpdated = true;\n  }\n}\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer,\n} from \"@ngrx/store\";\nimport { environment } from \"../../environments/environment\";\n\nexport interface AppState {}\n\nexport const reducers: ActionReducerMap<AppState> = {};\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production\n  ? []\n  : [];\n","import { Injectable } from \"@angular/core\";\r\nimport { KeycloakService } from \"keycloak-angular\";\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment, isLocal } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private logoSource = new BehaviorSubject<boolean>(false);\r\n  public latestLogo$ = this.logoSource.asObservable();\r\n\r\n  constructor(\r\n    private keyClockService: KeycloakService\r\n  ) { }\r\n\r\n  getCustomizationLogo(logoStatus: boolean) {\r\n    this.logoSource.next(logoStatus);\r\n  }\r\n\r\n  getLoggedUser() {\r\n    const userDetails = this.keyClockService.getKeycloakInstance()?.tokenParsed;\r\n    return userDetails;\r\n  }\r\n\r\n  logout() {\r\n    window.sessionStorage.clear();\r\n    this.keyClockService.logout(window.location.origin).catch(console.log);\r\n  }\r\n\r\n  getRoles(): string[] {\r\n    if (isLocal()) {\r\n      return [\"PHY\", \"CFA\"];\r\n    }\r\n    return (\r\n      (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed?.roles ||\r\n      []\r\n    );\r\n  }\r\n  getCfId(): string {\r\n    return (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed\r\n      ?.cfId;\r\n  }\r\n  getSPId(): string {\r\n    return (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed\r\n      ?.spId;\r\n  }\r\n  getUserId(): string {\r\n    if (isLocal()) {\r\n      return \"1\";\r\n    }\r\n    return (this.keyClockService.getKeycloakInstance() || {})?.tokenParsed?.uId;\r\n  }\r\n}\r\n\r\nexport class MockAuthService {\r\n  getLoggedUser() {\r\n    return {};\r\n  }\r\n\r\n  getRoles() {\r\n    return [];\r\n  }\r\n\r\n  getUserId() {\r\n    return \"\";\r\n  }\r\n\r\n  getSPId() {\r\n    return \"\";\r\n  }\r\n  getCfId() {\r\n    return \"\";\r\n  }\r\n  logout() {\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { fromEvent, merge } from \"rxjs\";\nimport { mapTo } from \"rxjs/operators\";\n\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable()\nexport class BackendApiService {\n  dataSource = new BehaviorSubject<any>({});\n  data = this.dataSource.asObservable();\n  online$: Observable<any>;\n\n  constructor(\n    public httpClient: HttpClient,\n    private _snackBar: MatSnackBar,\n  ) {\n    this.online$ = merge(\n      fromEvent(window, \"online\").pipe(mapTo(true)),\n      fromEvent(window, \"offline\").pipe(mapTo(false))\n    );\n    this.online$.subscribe((data) => {\n      if (!data) {\n        this._snackBar.open(\n          \"No Internet Connection, check your network\",\n          null,\n          {\n            verticalPosition: \"top\", // 'top' | 'bottom'\n            horizontalPosition: \"center\",\n          }\n        );\n      } else {\n        this._snackBar.dismiss();\n        this._snackBar.open(\"Internet Connection is restored\", null, {\n          duration: 2000,\n          verticalPosition: \"top\", // 'top' | 'bottom'\n          horizontalPosition: \"center\",\n        });\n      }\n    });\n  }\n\n  downloadBlob(url) {\n    return this.httpClient\n      .get(url, {\n        responseType: 'blob'\n      });\n  }\n\n  postMapping(url, requestBody) {\n    return this.httpClient\n      .post<any>(url, requestBody)\n      .toPromise()\n      .then(\n        (data) => {\n          return data;\n        },\n        (error) => {\n          // console.log('API error : ' + JSON.stringify(error));\n          return error;\n        }\n      );\n  }\n\n  getMapping(url, param = {}) {\n    return this.httpClient\n      .get<any>(url, { params: param })\n      .toPromise()\n      .then(\n        (data) => {\n          return data;\n        },\n        (error) => {\n          // console.log('API error : ' + JSON.stringify(error));\n          return error;\n        }\n      );\n  }\n\n  put(url, requestBody) {\n    return this.httpClient\n      .put<any>(url, requestBody)\n      .toPromise()\n      .then(\n        (data) => {\n          return data;\n        },\n        (error) => {\n          // console.log('API error : ' + JSON.stringify(error));\n          return error;\n        }\n      );\n  }\n\n  callGetApi(url, param = {}) {\n    return this.httpClient.get<any>(url, { params: param });\n  }\n\n\n  deleteApi(url) {\n    return this.httpClient.delete<any>(url).toPromise();\n  }\n\n  getUserRole() {\n    return sessionStorage.getItem(\"user_level\");\n  }\n\n  post(url, requestBody) {\n    return this.httpClient.post<any>(url, requestBody);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SnackbarService {\n  constructor(private snackBar: MatSnackBar, private translate: TranslateService) { }\n\n  openSnackBar(message, verticalPosition, horizontalPosition, translateText = false, prefix = '', suffix = '') {\n    if (translateText) {\n      this.translate.get(message).subscribe((tran) => {\n        this.snackBar.open(prefix + tran + suffix, \"\", {\n          duration: environment.customization.snackBarDuration,\n          verticalPosition: verticalPosition,\n          horizontalPosition: horizontalPosition\n        });\n      });\n    } else {\n      this.snackBar.open(message, \"\", {\n        duration: environment.customization.snackBarDuration,\n        verticalPosition: verticalPosition, // 'top' | 'bottom'\n        horizontalPosition: horizontalPosition // 'start' | 'center' | 'end' | 'left' | 'right'\n      });\n    }\n  }\n\n  openCustomSnackBar(message, verticalPosition, horizontalPosition, translateText = false, prefix = '', suffix = '') {\n    if (translateText) {\n      this.translate.get(message).subscribe((tran) => {\n        this.snackBar.open(prefix + tran + suffix, \"\", {\n          duration: environment.customization.snackBarDuration,\n          verticalPosition: verticalPosition,\n          horizontalPosition: horizontalPosition,\n          panelClass: \"custom-snackbar\"\n        });\n      });\n    } else {\n      this.snackBar.open(message, \"\", {\n        duration: environment.customization.snackBarDuration,\n        verticalPosition: verticalPosition, // 'top' | 'bottom'\n        horizontalPosition: horizontalPosition, // 'start' | 'center' | 'end' | 'left' | 'right'\n        panelClass: \"custom-snackbar\"\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserPreferenceService {\n\n  constructor() { }\n\n  convertCtoF(value): number {\n    return Math.round(value * 18 + 320) / 10;\n  }\n\n  convertFtoC(value): number {\n    return Math.round((value - 32) / 0.18) / 10;\n  }\n\n  convertInchToCm(value): string {\n    return (value * 2.54).toFixed(1);\n  }\n\n  convertCmToInch(value): string {\n    return (value / 2.54).toFixed(1);\n  }\n\n  convertKgToPound(value): string {\n    return (value * 2.20462262185).toFixed(1);\n  }\n\n  convertPoundToKg(value): string {\n    return (value / 2.20462262185).toFixed(1);\n  }\n\n  getUserTimeZone(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return preference?.timeZone;\n  }\n\n  getUserUnitSystem(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return preference?.units;\n  }\n\n  getUserWeightUnit(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return (preference?.units === 'IS') ? 'POUND' : 'KG';\n  }\n\n  getUserHeightUnit(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return (preference?.units === 'IS') ? 'INCH' : 'CM';\n  }\n\n  getUserTempUnit(): string {\n    let preference = JSON.parse(sessionStorage.getItem('userPreference'));\n    return (preference?.units === 'IS') ? 'F' : 'C';\n  }\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, of, throwError } from \"rxjs\";\r\nimport { delay, catchError } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport {\r\n  AddUser,\r\n  CFUser,\r\n  CFUserList,\r\n} from \"../../../interfaces/manage-users.interface\";\r\n\r\n@Injectable()\r\nexport class ManageUsersService {\r\n  URL:string=environment.dataApiUrl2;\r\n  URL1:string=environment.dataApiUrl;\r\n\r\n  \r\n  constructor(private http: HttpClient) { }\r\n  getAdminUsersList(param) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    let params = new HttpParams();\r\n\r\n    // Begin assigning parameters\r\n    const url = param.url;\r\n    params = params.append(\"page\", param.page);\r\n    params = params.append(\"limit\", param.size);\r\n    params = params.append(\"sort\", param.sortBy);\r\n    params = params.append(\"sort_order\", param.sortOrder);\r\n    params = params.append(\"search_query\", param.searchText);\r\n    return this.http\r\n      // .get<CFUserList>(environment.dataApiUrl + url, { params })\r\n\r\n    \r\n\r\n      .get<CFUserList>(this.URL+`get_users/CFPI8P`,{params})\r\n\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  addUser(userData) {\r\n    console.log(\"adduserData\", userData);\r\n    const url = \"clinical-facilities/users\";\r\n    return this.http\r\n      // .post<AddUser>(environment.dataApiUrl + url, userData)\r\n      .post<AddUser>(this.URL+`create_user`, userData)\r\n      \r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  editUser(userData) {\r\n    console.log(\"edituserData\", userData);\r\n    const url = \"clinical-facilities/users\";\r\n    return this.http\r\n      // .put<AddUser>(environment.dataApiUrl + url, userData)\r\n       .put<AddUser>(this.URL+`update_user/`+userData.id, userData)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  enableUser(userId) {\r\n    const url =this.URL+ \"users/\" + userId + \"/enable\";\r\n    return this.http\r\n      .post(environment.dataApiUrl + url, \"\")\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  disableUser(userData) {\r\n    const url =this.URL+ \"update_user/\" + userData.id ;\r\n    let data={\r\n      userData\r\n    }\r\n    return this.http\r\n      .put(url, data)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  getUser(userId) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    const url = \"users/\" + userId;\r\n    return this.http\r\n      // .get(environment.dataApiUrl + url, { headers: authHeaders })\r\n      .get(this.URL+`get_user/`+userId, userId)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  resetPassword(userId) {\r\n    const url = \"users/\" + userId + \"/reset-password\";\r\n    return this.http\r\n      .post(environment.dataApiUrl + url, \"\")\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  savePreferences(userId, body) {\r\n    const url = \"users/\" + userId + \"/preferences\";\r\n    return this.http\r\n      .post(environment.dataApiUrl + url, body)\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  handleError(error: any) {\r\n    console.log(\"error\", error);\r\n    let errorMessage = \"\";\r\n    // Client-side error.\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Error: ${error.error.message}`;\r\n      // Server-side error.\r\n    } else {\r\n      errorMessage = error.error.message;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n  getGroups(cfId) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    const url = \"clinical-facilities/\" + cfId + \"/groups?sortBy=name:asc\";\r\n    // const url=\"drop_down_user/647889c12bec4eb7b2120a2a?role=admin\";\r\n    return this.http\r\n    \r\n      // .get<any>(environment.dataApiUrl + url, { headers: authHeaders })\r\n      .get<any>(this.URL+`get_locations`, { headers: authHeaders })\r\n      .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n  getUserPreferences(userId) {\r\n    const authHeaders = new HttpHeaders({\r\n      \"X-Skip-Interceptor\": \"\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    });\r\n    const url = \"users/\" + userId;\r\n    this.http.get(environment.dataApiUrl + url, { headers: authHeaders })\r\n      .subscribe((response: any) => {\r\n        if (response.status === 'Ok') {\r\n          return {\r\n            units: response?.data?.units || '',\r\n            timeZone: response?.data?.timezone || '',\r\n          };\r\n        } else {\r\n          return '';\r\n        }\r\n      })\r\n  }\r\n\r\n  getTimeZoneOffset(tz: string) {\r\n    const date = new Date();\r\n    let offset: Array<string>;\r\n    try {\r\n      offset = date.toLocaleTimeString(\"en-US\", {\r\n        // @ts-ignore\r\n        timeZoneName: \"longOffset\",\r\n        timeZone: tz\r\n      }).split(' ');\r\n    } catch {\r\n      offset = date.toLocaleTimeString(\"en-US\", {\r\n        // @ts-ignore\r\n        timeZoneName: \"longOffset\"\r\n      }).split(' ');\r\n    }\r\n    return offset[offset.length - 1];\r\n  }\r\n\r\n  editGroups(userData) {\r\n    console.log(\"edituserData\", userData);\r\n    const url = \"clinical-facilities/users/groups\";\r\n    return this.http\r\n        .post<AddUser>(environment.dataApiUrl + url, userData)\r\n        .pipe(delay(100), catchError(this.handleError));\r\n  }\r\n}\r\n\r\nexport class MockManageUsersService {\r\n  getUser(id): Observable<{ data: CFUser }> {\r\n    return of({\r\n      data: {\r\n        id: \"\",\r\n        firstName: \"First name\",\r\n        lastName: \"Last name\",\r\n        email: \"email@address.com\",\r\n        createdDateTime: \"\",\r\n        facilityId: \"\",\r\n        isActive: true,\r\n        phoneNo: 0,\r\n        roles: [],\r\n        serviceProviderId: \"\",\r\n        timezone: \"\",\r\n        units: \"\"\r\n      }\r\n    })\r\n  }\r\n\r\n  getBrowserTimeZone() {\r\n    var offset = new Date().getTimezoneOffset(), o = Math.abs(offset);\r\n    return 'GMT' + (offset < 0 ? \"+\" : \"-\") + (\"00\" + Math.floor(o / 60)).slice(-2) + \":\" + (\"00\" + (o % 60)).slice(-2);\r\n  }\r\n\r\n  savePreferences(id, preference) {\r\n    return of({\r\n      status: \"OK\",\r\n      message: \"Saved successfully\"\r\n    });\r\n  }\r\n\r\n  resetPassword(id) {\r\n    return of({ status: \"OK\" });\r\n  }\r\n\r\n  getAdminUsersList(): Observable<CFUserList> {\r\n    return of({\r\n      data: {\r\n        items: [],\r\n        total: 0\r\n      },\r\n      message: \"LOADED\",\r\n      status: \"OK\"\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {\n  AddEditUserResponse,\n  UserResponse,\n} from \"../../interfaces/user.interface\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ManageAdminService {\n  constructor(\n    private httpClient: HttpClient\n  ) {}\n\n  getAllAdminList(endUrl: string) {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.httpClient\n      .get<UserResponse>(endUrl, { headers: authHeaders });\n  }\n\n  addAdmin(endUrl, requestBody) {\n    return this.httpClient\n      .post<AddEditUserResponse>(endUrl, requestBody);\n  }\n\n  updateAdmin(endUrl, requestBody) {\n    return this.httpClient\n      .put<AddEditUserResponse>(endUrl, requestBody);\n  }\n\n  activeInactive(endUrl, requestBody) {\n    return this.httpClient\n      .post<any>(endUrl, requestBody);\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ data.body?.title | translate }}\n  </h1>\n  <!--<button mat-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>-->\n</mat-card>\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <div class=\"py-4\">\n    <p class=\"m-0\">{{ data.body?.text | translate }}</p>\n    <p *ngIf=\"data.body?.message\">{{ data.body.message | translate}}</p>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions>\n  <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\n    {{ \"manage_users_module.cancel\" | translate }}\n  </button>\n  <button mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"confirm()\">\n    {{ \"manage_users_module.confirm\" | translate }}\n  </button>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-confirm-dialog\",\n  templateUrl: \"./confirm-dialog.component.html\",\n  styleUrls: [\"./confirm-dialog.component.scss\"],\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  confirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<div class=\"heading ps-4 mb-2\">\n  <h2>{{ \"clinical_facility.manage_admin_cfa.headingadministrators\" | translate }}</h2>\n</div>\n<div class=\"table-container scroll-assist table-responsive\">\n  <table class=\"mat-table custom-table\" aria-label=\"Table\">\n    <tbody class=\"border-0\">\n      <tr class=\"mat-row\" *ngFor=\"let admin of adminUsers\">\n        <td style=\"width: 163px;\">\n          <div style=\"width: 163px;\">\n            <span *ngIf=\"!admin?.isActive\" class=\"status-tag inactive\">Inactive</span>\n            <span *ngIf=\"admin?.isActive\" class=\"status-tag\">Active</span>\n          </div>\n        </td>\n        <td style=\"width: 240px;\">\n          <div class=\"\" style=\"width: 240px;\">\n            <strong class=\"name d-block font-size-16 text-truncate\">{{admin?.firstName}} {{admin?.lastName}}</strong>\n            <span class=\"creator-name\">Created by <b>{{admin?.createdBy}}</b></span>\n          </div>\n        </td>\n        <td style=\"width: 240px;\">\n          <div class=\"\" style=\"width: 240px;\">\n            <span class=\"phone-number\">{{admin?.phoneNo || '-'}}</span>\n          </div>\n        </td>\n        <td>\n          <div>\n            <span class=\"email\">{{admin?.email || '-'}}</span>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import {Component, Input, OnInit} from \"@angular/core\";\n\n@Component({\n  selector: \"app-data-table-cloned-view\",\n  templateUrl: \"./data-table-cloned-view.component.html\",\n  styleUrls: [\"./data-table-cloned-view.component.scss\"],\n})\nexport class DataTableClonedViewComponent {\n  @Input() adminUsers = [];\n  constructor() {}\n}\n","<div class=\"table-responsive text-nowrap head-border\" style=\"margin-bottom: 20px\">\n    <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [data]=\"adminUserData\" [columns]=\"columns\" [tableSort]=\"true\">\n        <ng-template lsWidgetName=\"actionsHeading\" let-row>\n            <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"openAddAdminDialog()\">\n            <mat-icon>add</mat-icon>\n            {{ (\"buttons.btn_add_admin\"  | translate )+ ((role === \"SA\")?\" (DEFAULT) \":\"\")}}\n          </button>\n        </ng-template>\n        <ng-template *ngIf=\"role === 'SA'\" lsWidgetName=\"adminNameHeading\" let-row>\n            Administrator\n        </ng-template>\n        <ng-template lsWidgetName=\"active\" let-row>\n            <mat-slide-toggle [checked]=\"row?.isActive\" (change)=\"toggleSwitch(row, $event)\"></mat-slide-toggle>\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-row>\n            {{row?.email || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"adminName\" let-row>\n            <span [matTooltip]=\"row.adminName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.adminName.length < 40\">\n            {{row.adminName}}\n          </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"phoneNo\" let-row>\n            {{row?.phoneNo || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"actions\" let-row>\n            <button mat-mini-fab color=\"primary\" (click)=\"openEditAdminDialog(row)\" class=\"btn-boxed btn-no-shadow me-4 edit-btn\"\n                    [disabled]=\"!row['isActive'] && source === 'SPA'\">\n        <mat-icon class=\"edit-icon-size\">edit</mat-icon>\n      </button>\n\n            <button type=\"button\" [disabled]=\"!row['isActive']\" color=\"primary\" mat-flat-button class=\"me-3\" [ngClass]=\"(!row['isActive'])?'':'cursor-pointer'\" (click)=\"confirmResetPassword(row)\">\n        <mat-icon>refresh</mat-icon\n        >{{ \"buttons.btn_reset_password\" | translate }}\n      </button>\n        </ng-template>\n    </ls-table>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from \"@angular/core\";\nimport { BackendApiService } from \"../../services/backendapi.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { User } from \"../../interfaces/user.interface\";\nimport { SortDirective } from \"../../core/directives/sort.directive\";\nimport { InactiveActiveComponent } from \"../dialogs/inactive-active/inactive-active.component\";\nimport { select, Store } from \"@ngrx/store\";\nimport {\n  ManageAdminStoreActions,\n  ManageAdminStoreSelectors,\n  ManageAdminStoreState\n} from \"../store/manage-admin\";\nimport {\n  LSColumn,\n  LSColumnType,\n  LSTableConfig,\n  TableState\n} from \"../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"../confirm-dialog/confirm-dialog.component\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\nimport {ManageAdminState} from \"../store/manage-admin/manage-admin.reducer\";\n\n@Component({\n  selector: \"app-data-table-manage-admin\",\n  templateUrl: \"./data-table-manage-admin.component.html\",\n  styleUrls: [\"./data-table-manage-admin.component.scss\"],\n})\nexport class DataTableManageAdminComponent implements OnInit, OnDestroy {\n  @ViewChild(SortDirective) sorter: SortDirective;\n  @Input() endUrl: string;\n  @Output() editCallBack = new EventEmitter<any>();\n  @Output() addAdminCallBack = new EventEmitter<any>();\n  @Output() resetPasswordCallBack = new EventEmitter<any>();\n  @Output() sortChange = new EventEmitter<any>();\n  adminUser$: Observable<ManageAdminState>;\n  adminUserData: User[];\n  columns: LSColumn[] = [\n    {\n      id: \"active\",\n      label: \"active\",\n      headerClass: [\"text-start\"],\n      sortable: false,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n      style: \"max-width: 163px; width: 163px;\",\n    },\n    {\n      id: \"adminName\",\n      label: \"adminName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"font-size-16\"],\n      style: \"max-width: 240px; width: 240px;\",\n    },\n    {\n      id: \"phoneNo\",\n      label: \"phoneNo\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n      style: \"max-width: 240px; width: 240px;\",\n    },\n    {\n      id: \"email\",\n      label: \"email\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n  ];\n  config: LSTableConfig = {\n    id: \"manage-admin-table\",\n    rowSelectEnabled: false,\n    actions: {\n      header: {\n        class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n      },\n      show: true,\n      headerLabel: \"\",\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n    },\n    translateKey: \"manage-admin-table\",\n    translate: true,\n    isActive: (row) => {\n      return row.isActive;\n    },\n    tableState: TableState.DEFAULT\n  };\n  @Input() source;\n  activeUser: Subscription;\n  adminUsersSub: Subscription;\n  role = \"\";\n\n  constructor(\n    private backendApiService: BackendApiService,\n    private dialog: MatDialog,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    private snackbar: SnackbarService,\n    private authService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.store$.dispatch(\n      new ManageAdminStoreActions.LoadManageAdminRequestAction(this.endUrl)\n    );\n\n    this.listAdmin();\n    this.role = this.authService.getRoles()[0];\n  }\n\n  listAdmin() {\n    this.adminUser$ = this.store$.select(\n      ManageAdminStoreSelectors.selectManageAdminList\n    );\n    this.adminUsersSub = this.adminUser$.subscribe((response) => {\n      this.config.tableState = <TableState>response?.tableState;\n        this.adminUserData = response.ADMIN_DATA.map((x) => {\n          return {\n            ...x,\n            adminName: `${x.firstName} ${x.lastName}`,\n          };\n        });\n    });\n  }\n\n  toggleSwitch(data, event: MatSlideToggleChange) {\n    if (data.isActive) {\n      event.source.checked = true;\n      this.openActiveInActiveDialogs(event, \"INACTIVE\", data);\n    } else {\n      event.source.checked = false;\n      if (this.source === \"SPA\") this.doSubscriptionFormSelector(event, data);\n      else this.openActiveInActiveDialogs(event, \"ACTIVE\", data);\n    }\n  }\n\n  openAddAdminDialog() {\n    this.addAdminCallBack.emit();\n  }\n\n  openEditAdminDialog(data) {\n    this.editCallBack.emit(data);\n  }\n\n  resetPassword(data) {\n    this.backendApiService\n      .postMapping(\n        environment.dataApiUrl + 'users/' + data.id + '/reset-password',\n        {}\n      )\n      .then((response) => {\n        if (response.status === \"OK\") {\n          this.openSnackBar(\"reset_success\");\n        }\n      });\n  }\n\n  confirmResetPassword(rowData) {\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      maxWidth: \"96vw\",\n      //height: \"250px\",\n      data: {\n        body: {\n          title: \"manage_admin.reset_password\",\n          text: \"manage_admin.reset_password_confirm_message\",\n        },\n      },\n      \n      disableClose: true,\n    });\n    confirm.afterClosed().subscribe((data) => {\n      console.log(data);\n      if (data) {\n        this.resetPassword(rowData);\n      }\n    });\n  }\n\n  openSnackBar(message: string) {\n    this.snackbar.openSnackBar(\"manage_admin.\" + message, \"top\", \"center\", true);\n  }\n\n  doSubscriptionFormSelector(event, userData) {\n    this.activeUser = this.store$\n      .pipe(select(ManageAdminStoreSelectors.selectActiveAdmins))\n      .subscribe((data) => {\n        if (data >= 1) {\n          this.snackbar.openSnackBar(\"error_message.err_already_enabled_spa\", \"top\", \"center\", true);\n        } else {\n          this.openActiveInActiveDialogs(event, \"ACTIVE\", userData);\n        }\n      });\n    this.activeUser.unsubscribe();\n  }\n\n  openActiveInActiveDialogs(event, mode, data) {\n    const dialogRef = this.dialog.open(InactiveActiveComponent, {\n      width: \"auto\",\n      maxWidth: \"96vw\",\n      data: { userData: data, mode: mode },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      event.checked = result;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.activeUser) {\n      this.activeUser.unsubscribe();\n    }\n    if (this.adminUsersSub) this.adminUsersSub.unsubscribe();\n  }\n  onSortChange(event) {\n    let sort = {\n      active: event.active,\n      direction: event.direction\n    }\n    this.sortChange.emit(JSON.stringify(sort));\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\n// import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-hospital\",\n  templateUrl: \"./about.component.html\",\n  styleUrls: [\"./about.component.scss\"],\n})\nexport class AboutComponent implements OnInit {\n  uiVersion: string = environment.version.toUpperCase();\n  ep4Version: string;\n  ep3Version: string;\n  constructor(\n    // private dialogRef: MatDialogRef<AboutComponent>,\n    // @Inject(MAT_DIALOG_DATA) public data: any,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    let apiURL = `${environment.dataApiUrl}info/version`;\n    return this.http\n      .get<{\n        data: {\n          EP3: string;\n          EP4: string;\n        }\n      }>(apiURL).subscribe(resp => {\n        const versions = resp?.data;\n        this.ep3Version = versions?.EP3?.toUpperCase();\n        this.ep4Version = versions?.EP4?.toUpperCase();\n      });\n  }\n}\n","<mat-card class=\"dialog-header\">\n    <div class=\"assign-header\">\n        <h1 mat-dialog-title>\n            {{'profile-module.about' | translate}}\n        </h1>\n    </div>\n    <button mat-button mat-dialog-close>\n        <mat-icon>close</mat-icon>\n    </button>\n</mat-card>\n<mat-dialog-content class=\"mat-dialog-popup about-group-dialog\">\n    <div class=\"about-group-content pt-5 px-3\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\"></div>\n            <div class=\"col-sm-5\"><div class=\"brand-logo mb-5 text-center text-md-start\"><img  src=\"assets/icons/moniter-portal.png\" alt=\"moniter-portal\" /></div></div>\n            <div class=\"col-sm-4\"><div class=\"brand-logo mb-5 text-center text-md-start\"><img  src=\"assets/icons/server-software.png\" alt=\"software-server\" /></div></div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Product</div>\n            <div class=\"col-sm-5 pb-2\">UbiqVue™ Active Monitoring Portal</div>\n            <div class=\"col-sm-4 pb-2\">UbiqVue™ Central Server Software</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Model #</div>\n            <div class=\"col-sm-5 pb-2\">UA 2550-C</div>\n            <div class=\"col-sm-4 pb-2\">UA2550-S</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Version</div>\n            <div class=\"col-sm-5 pb-2\">{{uiVersion}}</div>\n            <div class=\"col-sm-4 pb-2\">{{ep4Version}}</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Release date</div>\n            <div class=\"col-sm-5 pb-2\">-</div>\n            <div class=\"col-sm-4 pb-2\">-</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Unique device identifier</div>\n            <div class=\"col-sm-5 pb-2 text-break\">B353UA2550C1/$$7{{uiVersion}}</div>\n            <div class=\"col-sm-4 pb-2 text-break\" *ngIf=\"ep4Version\">B353UA2550S1/$$7{{ep4Version}}</div>\n        </div>\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-3 pb-2\">Medical device class</div>\n            <div class=\"col-sm-5 pb-2\">EU MDD 93/42/EEC, Class IIb <br/> <br/> FDA Class II</div>\n            <div class=\"col-sm-4 pb-2\">EU MDD 93/42/EEC, Class IIb <br/>  <br/>FDA Class II</div>\n        </div>\n        <div class=\"border-top mt-2 pt-3\">\n        <div class=\"row\">\n            <div class=\"col-5 col-sm-3\">\n                <div class=\"title-head pb-2\">Manufactured by</div>\n                <div class=\"group-blocker\">\n                    <figure class=\"mb-2\">\n                        <img  src=\"assets/icons/icons-group.svg\" alt=\"icons-group\" style=\"max-width: 42px;\" />\n                    </figure>\n                </div>\n            </div>\n            <div class=\"col-7 col-sm-9\">\n                <div class=\"d-flex\">\n                    <div class=\"group-content\">\n                        <p class=\"mb-1\">\n                            LifeSignals, Inc.<br/>\n                            426 S Hillview Drive, <br />\n                            Milpitas, CA 95035, USA <br />\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-5 col-sm-3\">\n                <div class=\"title-head pb-3\">Contact</div>\n                <div class=\"group-blocker\"><img src=\"assets/icons/ce-logo.png\" alt=\"ce-logo\" /></div>\n            </div>\n            <div class=\"col-7 col-sm-9\">\n                <a href=\"mailto:info@lifesignals.com\">info@lifesignals.com</a>, <a href=\"https://www.lifesignals.com\">www.lifesignals.com</a>\n            </div>\n        </div>\n    </div>\n    </div>\n</mat-dialog-content>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: \"app-hospital\",\n  templateUrl: \"./hospital.component.html\",\n  styleUrls: [\"./hospital.component.scss\"],\n})\nexport class HospitalComponent implements OnInit {\n  mode: string;\n  constructor(\n    private dialogRef: MatDialogRef<HospitalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    \n  }\n\n  \n}\n","<mat-card class=\"dialog-header\">\n    <div class=\"assign-header\">\n        <h1 mat-dialog-title>\n            {{'profile-module.select_hospital' | translate}}\n        </h1>\n    </div>\n    <!--<button mat-button mat-dialog-close>\n        <mat-icon>close</mat-icon>\n    </button>-->\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup hospital-group-dialog\">\n    <div class=\"hospital-group-content\">\n        <form>\n            <div class=\"row align-items-center\">\n                <div class=\"col-sm-6\">\n                    <h2>\n                        {{'profile-module.select_the_clinical_facility' | translate}}\n                    </h2>\n                </div>\n                <div class=\"col-sm-6\">\n                    <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter\">\n                        <mat-label> {{'profile-module.select_a_clinical_facility' | translate}}</mat-label>\n                        <mat-select class=\"search-filter-select\">\n                            <mat-option value=\"option1\"> Apollo INR</mat-option>\n                            <mat-option value=\"option2\">Forties Hospital\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n\n        </form>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\n        {{'profile-module.button.cancel' | translate}}\n    </button>\n    <button mat-flat-button mat-dialog-close color=\"primary\" class=\"fill-btn\">\n        {{'profile-module.button.done' | translate}}\n    </button>\n</mat-dialog-actions>","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    <!--{{ \"shared_label.active_inactive.label_are_you_sure\" | translate }}-->\n    {{(mode === 'INACTIVE' ? (\"shared_label.active_inactive.decativate\" | translate) : \"shared_label.active_inactive.activate\" | translate) +\" \"+(\"shared_label.active_inactive.administrator\" | translate)}}\n  </h1>\n  <button class=\"me-2\"  mat-button mat-dialog-close (click)=\"onCancel()\" *ngIf=\"userData?.roles?.indexOf('SPA') === -1\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <div class=\"my-4\">\n    <label>\n      <!--Are you sure you want to make this Admin {{ mode }}?-->\n      <!--                All the Admins created by them will also become INACTIVE.-->\n      <p>{{\"shared_label.active_inactive.select_confirm\"|translate}}</p>\n      {{\"shared_label.active_inactive.note\"|translate}} <i>{{\"shared_label.active_inactive.message\"|translate}} {{mode === 'INACTIVE' ? (\"shared_label.active_inactive.deactivated\"|translate) :(\"shared_label.active_inactive.activated\"|translate)}}</i>\n    </label>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions align=\"end\">\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"warn\" (click)=\"onCancel()\">\n    Cancel\n  </button>\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"primary\" (click)=\"onConfirm()\">\n    Confirm\n  </button>\n</div>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { User } from \"../../../interfaces/user.interface\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  ManageAdminStoreActions,\n  ManageAdminStoreState,\n} from \"../../store/manage-admin\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-inactive-active\",\n  templateUrl: \"./inactive-active.component.html\",\n  styleUrls: [\"./inactive-active.component.scss\"],\n})\nexport class InactiveActiveComponent implements OnInit {\n  userData: User;\n  mode: string;\n  constructor(\n    private dialogRef: MatDialogRef<InactiveActiveComponent>,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    this.userData = this.data.userData;\n    this.mode = this.data.mode;\n    console.log(this.userData);\n  }\n\n  onCancel() {\n    if (this.mode === \"INACTIVE\") {\n      this.dialogRef.close(true);\n    } else {\n      this.dialogRef.close(false);\n    }\n  }\n\n  onConfirm() {\n    if (this.mode === \"INACTIVE\") {\n      const url = environment.dataApiUrl + 'users/' + this.userData.id + '/disable';\n      this.store$.dispatch(\n        new ManageAdminStoreActions.InactiveManageAdminAction(\n          url,\n          this.userData.id\n        )\n      );\n      this.dialogRef.close(false);\n    } else {\n      const url = environment.dataApiUrl + 'users/' + this.userData.id + '/enable';\n      this.store$.dispatch(\n        new ManageAdminStoreActions.ActiveManageAdminAction(\n          url,\n          this.userData.id\n        )\n      );\n      this.dialogRef.close(true);\n    }\n  }\n}\n","<mat-toolbar class=\"mat-navbar navbar position-sticky top-0 \">\n    <div class=\"logoBar\">\n        <a><img [src]=\"logo\" alt=\"logo\" class=\"logo-default\" /></a>\n    </div>\n    <div class=\"select-tabs mx-auto d-none d-lg-block\">\n        <app-navigation></app-navigation>\n    </div>\n    <div class=\"user-info\">\n        <div class=\"user\">\n            {{ user }}\n        </div>\n        <div class=\"role\" *ngIf=\"userRoles.SA || userRoles.SPA || userRoles.SPAC\">\n            {{ ('profile-module.roles.' + ((userRoles.SPA || userRoles.SPAC) ? 'SPA' : 'SA')) | translate }}\n        </div>\n    </div>\n    <div class=\"d-flex align-items-center align-items-lg-center d-lg-block\">\n        <div class=\"profileBar\" [matMenuTriggerFor]=\"belowMenu\"\n            [ngClass]=\"(userRoles.SA || userRoles.SPA || userRoles.SPAC)?'profile-role':''\">\n            <div class=\"user-icon\">\n                <div>\n                    <mat-icon>person</mat-icon>\n                </div>\n            </div>\n\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.GC\">\n                <div class=\"user-information gc-icon\" [matTooltip]=\"'profile-module.roles.GC' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"before\">\n                    <mat-icon>add</mat-icon>\n                </div>\n            </div>\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.SC\">\n                <div class=\"user-information\" [matTooltip]=\"'profile-module.roles.SC' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"before\">\n                    S<sub>+</sub></div>\n            </div>\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.PHY\">\n                <div class=\"user-information\" [matTooltip]=\"'profile-module.roles.PHY' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"below\">\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/stethoscope.svg\" />\n                </div>\n            </div>\n            <div class=\"userinfo-area\" *ngIf=\"userRoles.CFA || userRoles.CFAC\">\n                <div class=\"user-information\" [matTooltip]=\"'profile-module.roles.CFA' | translate\"\n                    matTooltipClass=\"whitebackground\" matTooltipPosition=\"below\">\n                    <mat-icon>settings</mat-icon>\n                </div>\n            </div>\n\n\n        </div>\n        <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\" class=\"setting-card-menu profile-card-menu\">\n            <button mat-menu-item (click)=\"navigateUrl('/profile')\">\n                <mat-icon>perm_identity</mat-icon> {{'profile-module.my_profile' | translate}}\n            </button>\n            <!-- <button mat-menu-item (click)=\"openHospialModel()\" *ngIf=\"user_role !== 'SPA' && user_role !== 'SA'\">\n                            <mat-icon><img class=\"align-top\"  src=\"assets/icons/hospital-icon.svg\" alt=\"hospital-icon\" /></mat-icon> {{'profile-module.clinical_facility' | translate}}\n                        </button> -->\n            <button mat-menu-item (click)=\"openAboutModel()\">\n                <mat-icon>error_outline</mat-icon> {{'profile-module.about' | translate}}\n            </button>\n            <button mat-menu-item>\n                <a href=\"https://lifesignals.zendesk.com/hc/en-us\" target=\"_blank\"\n                    class=\"d-block\"><mat-icon>help_outline</mat-icon>\n                    {{'profile-module.help' | translate}}</a>\n            </button>\n            <button mat-menu-item (click)=\"logout()\">\n                <mat-icon>power_settings_new</mat-icon> {{'profile-module.logout' | translate}}\n            </button>\n        </mat-menu>\n        <div class=\"ms-2 d-block d-lg-none\">\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <mat-icon class=\"justify-content-center\">menu</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"mobile-menu d-block d-lg-none\">\n                <div class=\"select-tabs\">\n                    <app-navigation></app-navigation>\n                </div>\n            </mat-menu>\n        </div>\n    </div>\n\n</mat-toolbar>","import { Component, OnInit, DoCheck, OnDestroy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BackendApiService } from \"../../services/backendapi.service\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { HospitalComponent } from \"../dialogs/hospital/hospital.component\";\nimport { AboutComponent } from \"../dialogs/about/about.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.scss\", \"../../../assets/css/style.scss\"],\n})\nexport class HeaderComponent implements OnInit, DoCheck,OnDestroy {\n  logoutResponse: any;\n  role: number;\n  user: string = '';\n  userRoles = {\n    GC: false,\n    SC: false,\n    PHY: false,\n    CFA: false,\n    CFAC: false,\n    SPA: false,\n    SPAC: false,\n    SA: false\n  };\n  logo: string;\n  defaultLogo:string;\n  LogoSubscription: any;\n\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    public backendApiService: BackendApiService,\n    private authService: AuthenticationService\n  ) {\n    this.defaultLogo = 'assets/images/' + (environment.customization.logo || 'logo.svg');\n  }\n  ngOnDestroy(): void {\n    this.LogoSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.mapUserRoles();\n    this.LogoSubscription= this.authService.latestLogo$.subscribe((data)=>{\n      this.logo = ((sessionStorage.getItem('facility-logo') == null ||sessionStorage.getItem('facility-logo') == '') ? this.defaultLogo: sessionStorage.getItem('facility-logo'));\n    });\n  }\n \n  ngDoCheck(): void {\n    this.user = ((sessionStorage.getItem('first_name') !== null) ? sessionStorage.getItem('first_name'): this.authService.getLoggedUser()?.given_name);\n  }\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n\n  logout() {\n    sessionStorage.removeItem(\"token_id\");\n    sessionStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"user_level\");\n    sessionStorage.removeItem(\"patchesInDashboard\");\n    sessionStorage.removeItem(\"gridView\");\n    this.authService.logout();\n  }\n\n  mapUserRoles() {\n    const roles = this.authService.getRoles();\n    for (let role in this.userRoles) {\n      this.userRoles[role] = roles.includes(role);\n    }\n  }\n\n  // /**This function is used to open dialog */\n  openHospialModel(): void {\n    this.dialog.open(HospitalComponent, {\n      maxWidth: \"90vw\",\n      width: \"500px\",\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    })\n  }\n\n  // /**This About is used to open dialog */\n  openAboutModel(): void {\n    this.dialog.open(AboutComponent, {\n      maxWidth: \"90vw\",\n      width: \"890px\",\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    })\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport class LSvalidators {\r\n    static charsOnly(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[a-zA-Z ]+$/;\r\n        if (control.value !== null && control.value !== undefined && !patternToMatch.test(control.value)) {\r\n            return { 'mustCharsOnly': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static numericsOnly(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[0-9]+$/;\r\n        if (control.value !== null && control.value !== undefined && control.value !== \"\" && !patternToMatch.test(control.value)) {\r\n            return { 'mustNumbersOnly': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validValueForWeightAndHeight(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[0-9.]+$/;\r\n        if (control?.value && !patternToMatch.test(control.value)) {\r\n            return { 'invalidWeightAndHeightValue': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static biosensorPattern(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[a-zA-Z]{1}[a-zA-Z0-9]*$/;\r\n        if (control.value !== null &&  control.value !== undefined  && control.value.length !== 0   && !patternToMatch.test(control.value)) {\r\n            return { 'biosensorPattern': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validatePatientId(control: AbstractControl): { [key: string]: boolean } | null {\r\n        let patternToMatch = /^[a-zA-Z0-9]*$/;\r\n        if (control.value !== undefined && !patternToMatch.test(control.value)) {\r\n            return { 'validatePatientId': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validatePatientName(control: AbstractControl): { [key: string]: boolean } | null { \r\n        let patternToMatch = /^[a-zA-Z][a-zA-Z. ]*$/;\r\n        if (control.value !== null && control.value !== undefined && control.value !== \"\" && !patternToMatch.test(control.value)) {\r\n            return { 'mustCharsOnly': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static validatePatientNameMinMaxLength(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined  && control.value !== \"\" && (control.value.length > 25)) {\r\n            return { 'invalidRange': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxHeightCM(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 300 || control.value < 80)) {\r\n            return { 'invalidHeightCM': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxHeightINCH(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 119 || control.value < 31.5)) {\r\n            return { 'invalidHeightINCH': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxWeightKG(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 250 || control.value < 20)) {\r\n            return { 'invalidWeightKG': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxWeightPOUND(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && (control.value > 552 || control.value < 44)) {\r\n            return { 'invalidWeightPOUND': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static max30days(control: AbstractControl): { [key: string]: boolean } | null { \r\n        if (control.value !== null && control.value !== undefined && control.value !== \"\" && control.value > 30) {\r\n            return { 'max30days': true };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","<mat-select [placeholder]=\"placeholder ? (placeholder | translate) : 'Select'\" class=\"search-select whiteselect selectfilter\" [(ngModel)]=\"selected\" (ngModelChange)=\"updated()\"\n             [disabled]=\"disabled\" (opened)=\"clearFilter()\">\n    <div class=\"searchbar-top\" *ngIf=\"!backendSearch\"><input matInput placeholder=\"search\" [(ngModel)]=\"searchText\" class=\"search-option\" autocomplete=\"off\"></div>\n    <div class=\"searchbar-top\" *ngIf=\"backendSearch\"><input matInput placeholder=\"search\" [(ngModel)]=\"searchText\" (keyup)=\"reloadItems(searchText)\" class=\"search-option\" autocomplete=\"off\"></div>\n    <mat-option disabled *ngIf=\"backendSearch? !items?.length :!filteredResults(items, key, searchText)?.length\">{{backendSearch && !searchText ? (\"profile-module.search_users\" | translate) : \"profile-module.no_results\" | translate}}</mat-option>\n    <mat-option *ngFor=\"let item of backendSearch? items : filteredResults(items, key, searchText)\" [value]=\"value ? item[value]: item\">\n        {{ item[key] }}\n    </mat-option>\n</mat-select>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-matselect-withsearch',\n  templateUrl: './matselect-withsearch.component.html',\n  styleUrls: ['./matselect-withsearch.component.scss']\n})\nexport class MatselectWithsearchComponent implements OnInit {\n\n  constructor() { }\n  @Input() items;\n  @Input() key;\n  @Input() value;\n  @Input() selected;\n  @Input() disabled;\n  @Input() placeholder;\n  @Input() backendSearch:boolean = false;\n  @Output() valueUpdated = new EventEmitter<string>();\n  @Output() reload = new EventEmitter<string>();\n  searchText;\n\n  ngOnInit(): void {\n  }\n  filteredResults(items, key, searchTxt) {\n    if(!items || !items.length) return items;\n    if(!searchTxt || !searchTxt.length) return items;\n      return items.filter(item => {\n        return item[key].toString().toLowerCase().indexOf(searchTxt.toLowerCase()) > -1\n      });\n  }\n  reloadItems(searchText) {\n    this.reload.emit(searchText);\n  }\n  clearFilter() {\n    this.searchText = '';\n    this.reload.emit('')\n  }\n  updated() {\n    this.valueUpdated.emit(this.selected);\n  }\n\n}\n","<span class=\"menu-items\" *ngIf=\"getRole('SA')\">\r\n    <a routerLinkActive=\"active-link\" routerLink=\"/super-admin\">Service Provider Listing</a>\r\n  </span>\r\n  <span *ngIf=\"getRole('SPA') || getRole('SPAC')\">\r\n    <span class=\"menu-items\">\r\n      <a routerLinkActive=\"active-link\" routerLink=\"/service-provider-admin/user-management\">User Management</a>\r\n    </span>\r\n    <span class=\"menu-items\">\r\n      <a routerLinkActive=\"active-link\" routerLink=\"/service-provider-admin/clinical-facility-management\">Clinical\r\n        Facility Management</a>\r\n    </span>\r\n  </span>\r\n  <span *ngIf=\"\r\n        getRole('CFA') ||\r\n        getRole('CFAC') ||\r\n        getRole('SC') ||\r\n        getRole('GC') ||\r\n        getRole('PHY')\r\n      \">\r\n    <span class=\"menu-items\">\r\n      <a routerLink=\"/summary\" [ngClass]=\"(router.url.includes('/summary')) ? 'active-link' : ''\">Home</a>\r\n    </span>\r\n    <span class=\"menu-items\">\r\n      <a [class.disabled]=\"isDisable\" routerLink=\"/dashboard\" [ngClass]=\"(router.url.includes('/dashboard')) ? 'active-link' : ''\"\r\n      [matMenuTriggerFor]=\"reportsMenu\" >My Reports</a>\r\n    </span>\r\n    <span class=\"menu-items\">\r\n      <a routerLink=\"/settings\" [ngClass]=\"(router.url.includes('/settings')) ? 'active-link' : ''\">Settings</a>\r\n    </span>\r\n  </span>\r\n\r\n  <mat-menu #reportsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"after\" class=\"reports-card-menu\">\r\n      <button mat-menu-item routerLink=\"/pending-interpretation/pending-interpretation\">\r\n        <img alt=\"icon\" src=\"assets/icons/pending_interp_white.png\"/>\r\n        <span class=\"text\">{{'home_alerts.label_pi' | translate}}</span>\r\n      </button>\r\n\r\n      <button mat-menu-item routerLink=\"/posted-final\">\r\n        <img alt=\"icon\" src=\"assets/icons/posted_final_white.png\"/>\r\n        <span class=\"text\">{{'home_alerts.label_posted_final' | translate}}</span>\r\n      </button>\r\n\r\n      <button mat-menu-item routerLink=\"/patients/active-patients\">\r\n        <img alt=\"icon\" src=\"assets/icons/current_patients_white.png\"/>\r\n        <span class=\"text\">{{'active-patients-module.page-heading' | translate}}</span>\r\n      </button>\r\n  </mat-menu>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"@services/authentication.service\";\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  \n  roles;\n  isDisable = false;\n  \n  constructor(\n    private authService : AuthenticationService,\n    public router : Router) { }\n    \n  ngOnInit(){\n    this.roles = this.authService.getRoles();    \n    if (this.roles.indexOf(\"CFA\") > -1) {\n      this.isDisable = true;      \n    }\n  }\n\n  getRole(role) {\n    return this.authService.getRoles().indexOf(role) > -1;\n  }\n\n  getRoleToDisplay() {\n    return this.authService.getRoles();\n  }\n}\n","<button [disabled]=\"disabled\" *ngIf=\"!service?.getChildren(option[key], options).length\" mat-menu-item class=\"nested-menu-item\"\n    (click)=\"onClickChild(option)\" (mouseenter)=\"mouseMove(undefined, option, 'ENTER', false)\" (mouseleave)=\"mouseMove(undefined, option, 'LEAVE', false)\">\n    {{ option[displayKey] }}\n</button>\n<button [disabled]=\"disabled\" *ngIf=\"service?.getChildren(option[key], options).length\" mat-menu-item class=\"nested-menu-item\"\n    [matMenuTriggerFor]=\"subchildren\" #subTrigger=\"matMenuTrigger\" (mouseenter)=\"mouseMove(subTrigger, option, 'ENTER', true)\" (mouseleave)=\"mouseMove(subTrigger, option, 'LEAVE', true)\"\n    (click)=\"onClickChild(option)\">\n    {{ option[displayKey] }}\n</button>\n<mat-menu #subchildren=\"matMenu\">\n    <ng-container *ngFor=\"let child of service?.getChildren(option[key], options)\">\n        <app-menu (sequence)=\"onSequence($event)\" [displayKey]=\"displayKey\" [options]=\"options\" [option]=\"child\" [key]=\"key\" [parent]=\"option[key]\"\n            (clickChild)=\"onClickChild($event)\"></app-menu>\n    </ng-container>\n</mat-menu>\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\nimport { Group } from 'src/app/manage-group/models/manage-groups.model';\nimport { NestedDropdownService } from '../nested-dropdown.service';\n\nexport interface MenuMove{\n  option: any;\n  trigger: MatMenuTrigger;\n  direction: \"ENTER\" | \"LEAVE\";\n  hasChildren: boolean;\n}\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuComponent implements OnInit {\n  @Input() options: Group[];\n  @Input() parent: string;\n  @Input() key: string;\n  @Input() disabled: boolean = false;\n  @Input() displayKey: string;\n  @Input() option: Group;\n  @Output() clickChild: EventEmitter<Group> = new EventEmitter<Group>();\n  @Output() sequence: EventEmitter<MenuMove> = new EventEmitter<MenuMove>();\n  @ViewChild(\"subchildren\", { static: false }) subchildren: MatMenu;\n  constructor(public readonly service: NestedDropdownService) { }\n\n  ngOnInit(): void {\n    console.log();\n  }\n\n  onClickChild(item: Group) {\n    this.clickChild.emit(item);\n  }\n\n  mouseMove(trigger: MatMenuTrigger, option: Group, direction: \"ENTER\" | \"LEAVE\", hasChildren: boolean) {\n    this.sequence.emit({ option, trigger, direction, hasChildren });\n  }\n\n  onSequence(event: MenuMove){\n    this.sequence.emit(event);\n  }\n\n}\n","\n<label class=\"toplabel d-block pb-0 pb-md-1 ps-0 ps-lg-2 pt-2 pt-sm-0\">{{label | titlecase}}</label>\n<div #childrentrigger=\"matMenuTrigger\" (menuOpened)=\"onMenuOpened()\" [matMenuTriggerFor]=\"children\" *ngIf=\"!disabled\"\n  class=\"w100 nested-select d-flex flex-row align-items-center justify-content-between\">\n  <div class=\"w100 d-flex menu-column text-truncate flex-column align-items-start\">\n    <mat-label [class.normal-label]=\"(selectedItem)?!selectedItem[displayKey]:'true'\">{{label | titlecase}}</mat-label>\n    <span class=\"select-value\">{{selectedItem?.[displayKey] || (assignGroup ? null : ( noSelection ? ('active-patients-module.form_label.none' | translate) :(selectedValue === 'ROOT' ? 'Unassigned': (customLabel ? ('dashboard-module.custom_label' | translate) : 'active-patients-module.form_label.all' |translate))))}}</span>\n  </div>\n  <mat-icon matSuffix>expand_more</mat-icon>\n  <mat-menu #children=\"matMenu\" class=\"nested-menu\">\n    <button  mat-menu-item *ngIf=\"showSelect\"\n      class=\"nested-menu-item\" (click)=\"onClickedOption({})\"\n      (mouseenter)=\"onSequence({option: {}, trigger: undefined, direction: 'ENTER', hasChildren: false})\"\n      (mouseleave)=\"onSequence({option: {}, trigger: undefined, direction: 'LEAVE', hasChildren: false})\">\n      {{ assignGroup ? ('active-patients-module.form_label.none' | translate) : ('active-patients-module.form_label.all' |translate)}}\n    </button>\n<!--    Unassigned Group Filter - Commenting it for now For functionality flow change-->\n\n    <button  mat-menu-item *ngIf=\"!assignGroup && !noSelection\"\n             class=\"nested-menu-item\" (click)=\"onClickedOption({groupId: 'ROOT', name: 'Unassigned'})\"\n             (mouseenter)=\"onSequence({option: {groupId: 'ROOT', name: 'Unassigned'}, trigger: undefined, direction: 'ENTER', hasChildren: false})\"\n             (mouseleave)=\"onSequence({option: {groupId: 'ROOT', name: 'Unassigned'}, trigger: undefined, direction: 'LEAVE', hasChildren: false})\">\n      {{\"parameter-alerts-module.unassigned\" |translate}}\n    </button>\n    <span *ngIf=\"options?.length\">\n    <ng-container *ngFor=\"let option of service?.getChildren('ROOT', options)\">\n      <app-menu [disabled]=\"disabled\" (sequence)=\"onSequence($event)\" [options]=\"options\" [key]=\"key\" [option]=\"option\"\n        [displayKey]=\"displayKey\" (clickChild)=\"onClickedOption($event)\"></app-menu>\n    </ng-container>\n    </span>\n  </mat-menu>\n</div>\n\n<div [class.disabled]=\"disabled\" *ngIf=\"disabled\"\n  class=\"nested-select d-flex flex-row align-items-center justify-content-between\">\n  <div class=\"d-flex menu-column flex-column align-items-start\">\n    <mat-label [class.normal-label]=\"!selectedItem?.[displayKey]\">{{label | titlecase}}</mat-label>\n    <span class=\"select-value\">{{selectedItem?.[displayKey] || (assignGroup ? null : ( noSelection ? ('active-patients-module.form_label.none' | translate) :'active-patients-module.form_label.all' |translate))}}</span>\n  </div>\n  <mat-icon matSuffix>expand_more</mat-icon>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\nimport { merge, Subject } from 'rxjs';\nimport { Group } from 'src/app/manage-group/models/manage-groups.model';\nimport { MenuMove } from './menu/menu.component';\nimport { NestedDropdownService } from './nested-dropdown.service';\n\n@Component({\n  selector: 'app-nested-dropdown',\n  templateUrl: './nested-dropdown.component.html',\n  styleUrls: ['./nested-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NestedDropdownComponent implements OnInit, OnChanges {\n  @Input() label: string;\n  @Input() customLabel: boolean;\n  @Input() selectedValue: string = null;\n  selectedItem: any = {};\n  @Input() displayKey: string = \"name\";\n  @Input() disabled: boolean = false;\n  @Input() key: string = \"groupId\";\n  @Input() showSelect: boolean = false;\n  @Output() selected: EventEmitter<string> = new EventEmitter<string>();\n  @Input() options: Group[] = [];\n  @Input() assignGroup: Boolean = false;\n  @Input() noSelection: Boolean = false;\n  @ViewChild(\"children\", { static: false }) children: MatMenu;\n  @ViewChild(\"subchildren\", { static: false }) subchildren: MatMenu;\n  @ViewChild(\"childrentrigger\", { static: false }) childrentrigger: MatMenuTrigger;\n  sequence: Subject<MenuMove> = new Subject<MenuMove>();\n  selectedValueSubject = new Subject<string>();\n  optionsSubject = new Subject<Group[]>();\n  parentGroup;\n  rootGroupBuffer = [];\n  constructor(public readonly service: NestedDropdownService) {\n    merge(\n      this.selectedValueSubject.asObservable(),\n      this.optionsSubject.asObservable()\n    )\n      .subscribe(() => {\n        const value = this.selectedValue;\n        const options = this.options;\n          this.options?.forEach(group => {\n              if (group.parent !== 'ROOT' && !(this.options.find(grp => grp.groupId === group.parent))) {\n                  group.parent = 'ROOT';\n              }\n          });\n        if (value && options?.length) {\n          this.assignSelection(value);\n        }\n        if (!value) {\n          this.selectedItem = {};\n        }\n      });\n  }\n\n  buffer: any;\n  ngOnInit(): void {\n    this.sequence\n      .pipe()\n      .subscribe((res: MenuMove) => {\n        let groups = this.rootGroupBuffer.filter(item => item?.option?.parent === res.option?.parent);\n        groups.forEach(group => {\n            if(group?.trigger) group?.trigger.closeMenu();\n        });\n        if (res?.option?.parent === this.parentGroup?.option?.parent) {\n          if (this.parentGroup?.trigger) this.parentGroup?.trigger?.closeMenu();\n        }\n        if (res?.hasChildren) {\n          if (res?.trigger) res.trigger.openMenu();\n        } else if (res?.option?.parent === this.buffer?.option?.parent) {\n          if (this.buffer?.hasChildren) this.buffer?.trigger.closeMenu();\n        } else if (res?.hasChildren) {\n          if (res?.trigger) res?.trigger?.openMenu();\n        }\n        else if (!res.option?.Children?.includes(this.buffer?.option[this.key]) && !this.buffer?.option.parent === res.option[this.key]) {\n          if (this.buffer?.trigger)\n            this.buffer.trigger.closeMenu();\n        }\n        if (res?.option?.parent === this.buffer?.option?.parent) {\n          if (this.buffer?.hasChildren) this.buffer?.trigger.closeMenu();\n        }\n        this.buffer = res;\n        if (res?.hasChildren) {\n          this.parentGroup = res;\n          this.rootGroupBuffer.push(res);\n        }\n      });\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    // if (change && (change?.options || change?.selectedValue)) {\n    //   this.selectedValueSubject.next(change?.selectedValue?.currentValue);\n    // }\n    if (change) {\n      if (change.options) {\n        this.optionsSubject.next(change.options.currentValue);\n      }\n      if (change.selectedValue) {\n        this.selectedValueSubject.next(change.selectedValue.currentValue);\n      }\n    }\n  }\n\n  assignSelection(value) {\n    this.selectedItem = this.options.find(o => o[this.key] === value);\n  }\n\n  onMenuOpened(){\n    this.buffer = undefined;\n  }\n\n  onClickedOption(option) {\n    this.selectedValue = option[this.key];\n    this.onSelectItem();\n    this.childrentrigger.closeMenu();\n    this.selected.emit(this.selectedValue);\n  }\n\n  onSelectItem() {\n    this.selectedItem = this.options.find(o => o[this.key] === this.selectedValue);\n  }\n\n  onSequence(event: MenuMove) {\n    if (event?.option[this.key] !== this.buffer?.option[this.key])\n      this.sequence.next(event);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NestedDropdownService {\n  trigger: MatMenuTrigger;\n  constructor() { }\n\n  getChildren(parentId, options) {\n    let groups = options?.filter(o => o.parent === parentId);\n    if(parentId === 'ROOT') {\n      options.forEach(group => {\n        if (group.parent !== 'ROOT' && !(options.find(grp => grp.groupId === group.parent))) {\n          groups.push(group);\n        }\n      });\n    }\n    return groups;\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-page-nav-bar\",\n  templateUrl: \"./page-nav-bar.component.html\",\n  styleUrls: [\"./page-nav-bar.component.scss\"],\n})\nexport class PageNavBarComponent {\n  @Input() title: any;\n  @Input() image: any;\n  @Input() url: any;\n\n  constructor(private router: Router) {}\n\n  navigateUrl(url: string) {\n    this.router.navigate([url]).then();\n  }\n}\n","<mat-toolbar class=\"navbar\">\n  <div style=\"margin-left: 10px; cursor: pointer\" (click)=\"navigateUrl(url)\">\n    <mat-icon>arrow_back_ios</mat-icon>\n    <span class=\"title\">{{ title | translate }}</span>\n  </div>\n  <!--    <div>-->\n  <!--        <img alt=\"\" class=\"page-icon\" src='../../../assets/icons/{{image}}'>-->\n  <!--    </div>-->\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss']\n})\nexport class RootComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","<div class=\"grid-bg text-center\" [ngClass]=\"disabled ? 'card-disabled' : ''\">\r\n  <div *ngIf=\"timerIcon\" class=\"timer-icon\">\r\n    <div>\r\n      <mat-icon class=\"cursor-pointer\" color=\"warn\" [matMenuTriggerFor]=\"paramMenu\">update</mat-icon>\r\n      <mat-menu #paramMenu=\"matMenu\" xPosition=\"before\" id=\"parameter_alert\" class=\"setting-card-menu summary-timer-menu\">\r\n        <button mat-menu-item *ngFor=\"let time of timerList\" (click)=\"changeDuration({value: time.value}, type)\"\r\n          [value]=\"time.value\">\r\n          {{ time.time }}\r\n        </button>\r\n      </mat-menu>\r\n      <div class=\"selected-timer\">{{ getTimeName(selectedTimeParam) }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"app-card \" (click)=\"checkUrl(routerUrl)\" [class.cursor-pointer]=\"title && routerUrl && view\">\r\n    <div class=\"text-right sixh mb-5 pb-1\"></div>\r\n\r\n    <img alt=\"image\" *ngIf=\"title\" src=\"assets/icons/{{ image }}\" class=\"img-circle\" />\r\n    <div class=\"d-flex flex-column justify-content-center text-center\" *ngIf=\"title\">\r\n      <label class=\"captioning mt-3\" [class.cursor-pointer]=\"title && routerUrl && view\">{{ title | translate }}</label>\r\n      <mat-progress-spinner class=\"mt-3 d-flex align-self-center justify-self-center small-spinner\" color=\"accent\"\r\n        mode=\"indeterminate\" strokeWidth=\"2\" diameter=\"20\" *ngIf=\"loading\">\r\n      </mat-progress-spinner>\r\n      <label  [class.cursor-pointer]=\"title && routerUrl && view\" class=\"caption-two mt-2\" *ngIf=\"showCount && !loading\">{{ count }} {{ subTitle | translate }}</label>\r\n    </div>\r\n\r\n    <!-- Register button in card -->\r\n    <div *ngIf=\"register\">\r\n      <button class=\" remove-default-behaviour registerBtn-in-card d-flex flex-column\" (click)=\"openRegistrationModal()\">\r\n        <span>Register</span>\r\n        <span>new procedure</span>\r\n      </button>\r\n      <img alt=\"image\" src=\"assets/icons/vector-divider-line.png\" class=\"position-absolute start-50 translate-middle-x bottom-0 mb-2\"/>\r\n    </div>\r\n\r\n    <div *ngIf=\"title && routerUrl && view\" class=\"text-right view-insight view-btn\">\r\n      <a class=\"cursor-pointer\">{{ \"home_alerts.label_view\" | translate }}</a>\r\n    </div>\r\n  \r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CFSummary } from \"../../interfaces/query-params.interface\";\r\nimport { PatientAdmittedModalComponent } from \"src/app/active-patients/patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { AdmitPatientModalComponent } from \"src/app/active-patients/admit-patient-modal/admit-patient-modal.component\";\r\nimport { LSTableConfig, TableState } from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { ActivePatientManagerService } from \"src/app/active-patients/manager/active-patient-manager.service\";\r\nimport { ActivePatientsService } from \"src/app/active-patients/services/active-patients.service\";\r\n\r\n@Component({\r\n  selector: \"app-setting-card\",\r\n  templateUrl: \"./setting-card.component.html\",\r\n  styleUrls: [\"./setting-card.component.scss\"],\r\n})\r\nexport class SettingCardComponent implements OnInit {\r\n  constructor(private router: Router,\r\n    private dialog: MatDialog, \r\n    private manager: ActivePatientManagerService,\r\n    private service: ActivePatientsService,\r\n    ) {\r\n      // console.log(service);\r\n    }\r\n  @Output() fetchSummary: EventEmitter<any> = new EventEmitter();\r\n  @Input() title: any;\r\n  @Input() image: any;\r\n  @Input() count: any;\r\n  @Input() user: any;\r\n  @Input() timerIcon: any;\r\n  @Input() routerUrl: any;\r\n  @Input() disabled: any;\r\n  @Input() subTitle: any;\r\n  @Input() view: boolean = true;\r\n  @Input() showCount: boolean = true;\r\n  @Input() loading: boolean = false;\r\n  @Input() type: any;\r\n  @Input() register?: boolean;\r\n  selectedTimeParam = null;\r\n  timerList = [\r\n    {\r\n      time: \"Current\",\r\n      value: 0,\r\n    },\r\n    {\r\n      time: \"30 mins\",\r\n      value: 30,\r\n    },\r\n    {\r\n      time: \"1 hour\",\r\n      value: 60,\r\n    },\r\n    {\r\n      time: \"3 hours\",\r\n      value: 3*60,\r\n    },\r\n    {\r\n      time: \"6 hours\",\r\n      value: 6*60,\r\n    },\r\n        // {\r\n    //   time: \"1 Day\",\r\n    //value: 24*60,\r\n    // },\r\n    //    //   time: \"10 Days\",\r\n    //   value: 1000*24*60,\r\n    // }\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    if(this.type === 'parameter')\r\n    this.selectedTimeParam = +window.sessionStorage.getItem(\"parameter-duration\");\r\n    else if (this.type === 'arrhythmia')\r\n      this.selectedTimeParam = +window.sessionStorage.getItem(\"arrhythmia-duration\");\r\n    if (this.selectedTimeParam === undefined) {\r\n      this.selectedTimeParam = 360;\r\n    }\r\n  }\r\n\r\n  navigateUrl(url: string) {\r\n    this.router.navigate([url]).then();\r\n  }\r\n\r\n  // Alert fetch\r\n  changeDuration(event: any, type: string) {\r\n    const param: CFSummary = {};\r\n    switch (type) {\r\n      case \"parameter\":\r\n        param.parameterAlertsFrom = event.value;\r\n        param.arrhythmiaAlertsFrom = window.sessionStorage.getItem(\"arrhythmia-duration\");\r\n        if(param.arrhythmiaAlertsFrom === undefined)\r\n          param.arrhythmiaAlertsFrom = '360';\r\n        this.selectedTimeParam = event.value;\r\n        window.sessionStorage.setItem(\"parameter-duration\", this.selectedTimeParam);\r\n        break;\r\n      case \"arrhythmia\":\r\n        param.arrhythmiaAlertsFrom = event.value;\r\n        param.parameterAlertsFrom = window.sessionStorage.getItem(\"parameter-duration\");\r\n        if(param.parameterAlertsFrom === undefined)\r\n          param.parameterAlertsFrom = '360';\r\n        this.selectedTimeParam = event.value;\r\n        window.sessionStorage.setItem(\"arrhythmia-duration\", this.selectedTimeParam);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.fetchSummary.emit(param);\r\n  }\r\n\r\n  getTimeName(value){\r\n    return this.timerList.find(t => t.value === value)?.time || \"6h\";\r\n  }\r\n\r\n  checkUrl(url : string){\r\n    if(this.title && url && this.view){\r\n      this.router.navigate([url]).then();\r\n    }\r\n  }\r\n\r\n  // For Opening Registration Modal ////////////\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 2,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"first_name\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string ;doctor:string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n    doctor: null\r\n  };\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"first_name\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  admitPatientModal(data?: any) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"1200px\",\r\n      height:\"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  openRegistrationModal(){\r\n    this.admitPatientModal().subscribe(resp => {\r\n      if (resp) {\r\n        this.getActivePatientData();\r\n        this.dialog.open(PatientAdmittedModalComponent, {\r\n          maxWidth: \"96vw\",\r\n          width: \"520px\",\r\n          backdropClass: \"backdropBackground\",\r\n          disableClose: true,\r\n          autoFocus: false,\r\n          data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /////////////////\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { FilterPipe } from \"../pipe/filter.pipe\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { DataTableManageAdminComponent } from \"./data-table-manage-admin/data-table-manage-admin.component\";\nimport { DataTableClonedViewComponent } from \"./data-table-cloned-view/data-table-cloned-view.component\";\nimport { SortModule } from \"../core/directives/sort.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { PageNavBarComponent } from \"./page-nav-bar/page-nav-bar.component\";\nimport { SettingCardComponent } from \"./setting-card/setting-card.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { ManageAdminEffects } from \"./store/manage-admin/manage-admin.effects\";\nimport * as fromManageAdminReducer from \"./store/manage-admin/manage-admin.reducer\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { ConfirmDialogComponent } from \"./confirm-dialog/confirm-dialog.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { InactiveActiveComponent } from \"./dialogs/inactive-active/inactive-active.component\";\nimport { HospitalComponent } from \"./dialogs/hospital/hospital.component\";\nimport { AboutComponent } from \"./dialogs/about/about.component\";\nimport { TelInputComponent } from \"./tel-input/tel-input.component\";\nimport { LacMatTelInputModule } from \"lac-mat-tel-input\";\nimport { TranslateModule, TranslatePipe } from \"@ngx-translate/core\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { RootComponent } from './root/root.component';\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { NestedDropdownComponent } from './nested-dropdown/nested-dropdown.component'\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MenuComponent } from './nested-dropdown/menu/menu.component';\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatselectWithsearchComponent } from './matselect-withsearch/matselect-withsearch.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FilterPipe,\n    DataTableManageAdminComponent,\n    DataTableClonedViewComponent,\n    PageNavBarComponent,\n    SettingCardComponent,\n    TelInputComponent,\n    ConfirmDialogComponent,\n    InactiveActiveComponent,\n    HospitalComponent,\n    AboutComponent,\n    NavigationComponent,\n    RootComponent,\n    NestedDropdownComponent,\n    MenuComponent,\n    MatselectWithsearchComponent\n  ],\n    exports: [\n        HeaderComponent,\n        FilterPipe,\n        DataTableManageAdminComponent,\n        DataTableClonedViewComponent,\n        SettingCardComponent,\n        PageNavBarComponent,\n        TelInputComponent,\n        I18nModule,\n        MatSlideToggleModule,\n        NestedDropdownComponent,\n        MenuComponent,\n        MatMenuModule,\n        MatselectWithsearchComponent\n    ],\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    MatDialogModule,\n    SortModule,\n    MatToolbarModule,\n    RouterModule,\n    MatSelectModule,\n    FormsModule,\n    MatIconModule,\n    I18nModule,\n    StoreModule.forFeature(\n      fromManageAdminReducer.manageAdminFeatureKey,\n      fromManageAdminReducer.manageAdminReducer\n    ),\n    EffectsModule.forFeature([ManageAdminEffects]),\n    MatTableModule,\n    MatSortModule,\n    LacMatTelInputModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    LifeSignalsModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatTooltipModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: KeycloakBearerInterceptor,\n      multi: true,\n    },\n    TranslatePipe,\n  ],\n})\nexport class SharedModule { }\n","import { Action } from \"@ngrx/store\";\nimport { User } from \"../../../interfaces/user.interface\";\n\nexport enum ManageAdminActionTypes {\n  LOAD_MANAGE_ADMIN_ACTION = \"[MANAGEADMIN] Load Manage Admin Request\",\n  LOAD_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Load Manage Admin Success\",\n  LOAD_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Load Manage Admin Failure\",\n  SAVE_MANAGE_ADMIN_ACTION = \"[MANAGEADMIN] Save Manage Admin\",\n  SAVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Save Manage Admin Success\",\n  AFTER_SAVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] After Save Manage Admin Success\",\n  SAVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Save Manage Admin Failure\",\n  AFTER_SAVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] After Save Manage Admin Failure\",\n  UPDATE_MANAGE_ADMIN_ACTION = \"[MANAGEADMIN] Update Manage Admin\",\n  UPDATE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Update Manage Admin Success\",\n  AFTER_UPDATE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] After Update Manage Admin Success\",\n  UPDATE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Update Manage Admin Failure\",\n  AFTER_UPDATE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] After Update Manage Admin Failure\",\n  INACTIVE_MANAGE_ADMIN = \"[MANAGEADMIN] Inactive Manage Admin\",\n  INACTIVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Inactive Manage Admin Success\",\n  INACTIVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Inactive Manage Admin Failure\",\n  ACTIVE_MANAGE_ADMIN = \"[MANAGEADMIN] Active Manage Admin\",\n  ACTIVE_MANAGE_ADMIN_SUCCESS = \"[MANAGEADMIN] Active Manage Admin Success\",\n  ACTIVE_MANAGE_ADMIN_FAILURE = \"[MANAGEADMIN] Active Manage Admin Failure\",\n}\n\nexport class LoadManageAdminRequestAction implements Action {\n  readonly type = ManageAdminActionTypes.LOAD_MANAGE_ADMIN_ACTION;\n  constructor(public payload: string) {}\n}\n\nexport class LoadManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.LOAD_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: User[]) {}\n}\n\nexport class LoadManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.LOAD_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class SaveManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.SAVE_MANAGE_ADMIN_ACTION;\n  constructor(public payload: User, public endUrl: string) {}\n}\n\nexport class SaveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.SAVE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class SaveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.SAVE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class UpdateManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_ACTION;\n  constructor(public payload: User, public endUrl: string) {}\n}\n\nexport class UpdateManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UpdateManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class InactiveManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class InactiveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class InactiveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class ActiveManageAdminAction implements Action {\n  readonly type = ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class ActiveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class ActiveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class AfterSaveManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterSaveManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_FAILURE;\n  constructor() {}\n}\n\nexport class AfterUpdateManageAdminSuccessAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterUpdateManageAdminFailureAction implements Action {\n  readonly type = ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_FAILURE;\n  constructor() {}\n}\n\nexport type ManageAdminActions =\n  | LoadManageAdminRequestAction\n  | LoadManageAdminSuccessAction\n  | LoadManageAdminFailureAction\n  | SaveManageAdminAction\n  | SaveManageAdminSuccessAction\n  | SaveManageAdminFailureAction\n  | UpdateManageAdminAction\n  | UpdateManageAdminSuccessAction\n  | UpdateManageAdminFailureAction\n  | InactiveManageAdminAction\n  | InactiveManageAdminSuccessAction\n  | InactiveManageAdminFailureAction\n  | ActiveManageAdminAction\n  | ActiveManageAdminSuccessAction\n  | ActiveManageAdminFailureAction\n  | AfterSaveManageAdminSuccessAction\n  | AfterSaveManageAdminFailureAction\n  | AfterUpdateManageAdminSuccessAction\n  | AfterUpdateManageAdminFailureAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ManageAdminService } from \"../../_services/manage-admin.service\";\nimport * as ManageAdminActions from \"./manage-admin.actions\";\nimport { catchError, map, switchMap } from \"rxjs/operators\";\nimport {\n  ActiveManageAdminFailureAction,\n  ActiveManageAdminSuccessAction,\n  InactiveManageAdminFailureAction,\n  InactiveManageAdminSuccessAction,\n  LoadManageAdminFailureAction,\n  LoadManageAdminSuccessAction,\n  SaveManageAdminFailureAction,\n  SaveManageAdminSuccessAction,\n  UpdateManageAdminFailureAction,\n  UpdateManageAdminSuccessAction,\n} from \"./manage-admin.actions\";\nimport { of as observableOf } from \"rxjs\";\n\n@Injectable()\nexport class ManageAdminEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private manageAdminService: ManageAdminService\n  ) {}\n\n  loadAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.LoadManageAdminRequestAction>(\n        ManageAdminActions.ManageAdminActionTypes.LOAD_MANAGE_ADMIN_ACTION\n      ),\n      switchMap((action: ManageAdminActions.LoadManageAdminRequestAction) => {\n        return this.manageAdminService.getAllAdminList(action.payload).pipe(\n          map(\n            (loadAdminRes) =>\n              new LoadManageAdminSuccessAction(loadAdminRes.data)\n          ),\n          catchError((error) =>\n            observableOf(new LoadManageAdminFailureAction(error))\n          )\n        );\n      })\n    );\n  });\n\n  saveAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.SaveManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.SAVE_MANAGE_ADMIN_ACTION\n      ),\n      switchMap((addAdmin: ManageAdminActions.SaveManageAdminAction) => {\n        return this.manageAdminService\n          .addAdmin(addAdmin.endUrl, addAdmin.payload)\n          .pipe(\n            map(\n              (addAdminRes) =>\n                new SaveManageAdminSuccessAction(addAdminRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new SaveManageAdminFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n\n  updateAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.UpdateManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_ACTION\n      ),\n      switchMap((updateAdmin: ManageAdminActions.UpdateManageAdminAction) => {\n        return this.manageAdminService\n          .updateAdmin(updateAdmin.endUrl, updateAdmin.payload)\n          .pipe(\n            map(\n              (updateAdminRes) =>\n                new UpdateManageAdminSuccessAction(updateAdminRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new UpdateManageAdminFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n\n  inActiveAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.InactiveManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN\n      ),\n      switchMap(\n        (inActiveAdmin: ManageAdminActions.InactiveManageAdminAction) => {\n          return this.manageAdminService\n            .activeInactive(inActiveAdmin.endUrl, {})\n            .pipe(\n              map(\n                (inActiveAdminRes) =>\n                  new InactiveManageAdminSuccessAction(inActiveAdmin.id)\n              ),\n              catchError((error) =>\n                observableOf(new InactiveManageAdminFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n\n  activeAdmin = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageAdminActions.ActiveManageAdminAction>(\n        ManageAdminActions.ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN\n      ),\n      switchMap((activeAdmin: ManageAdminActions.ActiveManageAdminAction) => {\n        return this.manageAdminService\n          .activeInactive(activeAdmin.endUrl, {})\n          .pipe(\n            map(\n              (activeAdminRes) =>\n                new ActiveManageAdminSuccessAction(activeAdmin.id)\n            ),\n            catchError((error) =>\n              observableOf(new ActiveManageAdminFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n}\n","import { User } from \"../../../interfaces/user.interface\";\nimport {\n  ManageAdminActions,\n  ManageAdminActionTypes,\n} from \"./manage-admin.actions\";\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\nexport interface ManageAdminState {\n  ADMIN_DATA: User[];\n  error: string;\n  save_admin_success: User;\n  save_admin_error: any;\n  userId: string;\n  tableState: string;\n}\n\nconst initialState: ManageAdminState = {\n  ADMIN_DATA: [],\n  error: \"\",\n  save_admin_success: null,\n  save_admin_error: \"\",\n  userId: \"\",\n  tableState: TableState?.DEFAULT\n};\n\nexport const manageAdminFeatureKey = \"manageadmin\";\n\nexport function manageAdminReducer(\n  state: ManageAdminState = initialState,\n  action: ManageAdminActions\n) {\n  switch (action.type) {\n    case ManageAdminActionTypes.LOAD_MANAGE_ADMIN_ACTION:\n      return {\n        ...state,\n        ADMIN_DATA: [],\n        tableState: TableState.LOADING\n      };\n\n    case ManageAdminActionTypes.LOAD_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        ADMIN_DATA: action.payload,\n        tableState: TableState.SUCCESS\n      };\n\n    case ManageAdminActionTypes.LOAD_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        tableState: TableState.FAILURE\n      };\n\n    case ManageAdminActionTypes.SAVE_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        save_admin_success: action.payload,\n        save_admin_error: \"\",\n        ADMIN_DATA: [...state.ADMIN_DATA, action.payload],\n      };\n\n    case ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        save_admin_success: null,\n        save_admin_error: \"\",\n      };\n\n    case ManageAdminActionTypes.SAVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: action.payload,\n      };\n\n    case ManageAdminActionTypes.AFTER_SAVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: \"\",\n        save_admin_success: null,\n      };\n\n    case ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_SUCCESS:\n      const updatedAdminData = state.ADMIN_DATA.map((adminData) => {\n        return adminData.id === action.payload.id ? action.payload : adminData;\n      });\n\n      return {\n        ...state,\n        save_admin_error: \"\",\n        error: \"\",\n        save_admin_success: action.payload,\n        ADMIN_DATA: updatedAdminData,\n      };\n\n    case ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_SUCCESS:\n      return {\n        ...state,\n        save_admin_success: null,\n        save_admin_error: \"\",\n      };\n\n    case ManageAdminActionTypes.UPDATE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: action.payload,\n      };\n    case ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_SUCCESS:\n      const updatedDataForInactive = state.ADMIN_DATA.map((adminData) => {\n        if (adminData.id === action.payload) {\n          adminData.isActive = false;\n        }\n        return adminData;\n      });\n\n      return {\n        ...state,\n        ADMIN_DATA: updatedDataForInactive,\n      };\n\n    case ManageAdminActionTypes.AFTER_UPDATE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        save_admin_error: \"\",\n        save_admin_success: null,\n      };\n    case ManageAdminActionTypes.INACTIVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_SUCCESS:\n      const updatedDataForActive = state.ADMIN_DATA.map((adminData) => {\n        if (adminData.id === action.payload) {\n          adminData.isActive = true;\n        }\n        return adminData;\n      });\n\n      return {\n        ...state,\n        ADMIN_DATA: updatedDataForActive,\n      };\n    case ManageAdminActionTypes.ACTIVE_MANAGE_ADMIN_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  manageAdminFeatureKey,\n  ManageAdminState,\n} from \"./manage-admin.reducer\";\nimport { User } from \"../../../interfaces/user.interface\";\n\nconst getManageAdminState = createFeatureSelector<ManageAdminState>(\n  manageAdminFeatureKey\n);\nexport const selectAdminList = (state: ManageAdminState) => state.ADMIN_DATA;\n\nexport const selectManageAdminList = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state\n);\n\nexport const selectManageAdminListError = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.error\n);\n\nexport const addManageAdminSuccess = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.save_admin_success\n);\n\nexport const addManageAdminFailure = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.save_admin_error\n);\n\nexport const updateManageAdminSuccess = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state?.save_admin_success\n);\n\nexport const updateManageAdminFailure = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) => state.save_admin_error\n);\n\nexport const selectActiveAdmins = createSelector(\n  getManageAdminState,\n  (state: ManageAdminState) =>\n    state?.ADMIN_DATA.filter((c) => c.isActive === true).length\n);\n","import { Component, forwardRef, HostListener, Input, OnInit } from \"@angular/core\";\nimport {\n  ControlValueAccessor,\n  FormBuilder,\n  NG_VALUE_ACCESSOR,\n} from \"@angular/forms\";\nimport { noop } from \"lodash\";\n\n@Component({\n  selector: \"app-tel-input\",\n  templateUrl: \"./tel-input.component.html\",\n  styleUrls: [\"./tel-input.component.scss\"],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TelInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TelInputComponent implements OnInit, ControlValueAccessor {\n  /** Value we will call whenever our form is touched */\n  private onTouchedCallback: () => noop;\n\n  /** Function we will call whenever the value changes */\n  private onChangeCallback: (val: any) => void = noop;\n  isDisabled: boolean;\n  preferredCountries = [\"in\", \"us\", \"za\"];\n\n  public form = this.formBuilder.group({\n    value: [],\n  });\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  @HostListener(\"blur\") onBlur() {\n    this.onTouchedCallback();\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges.subscribe((formValue) => {\n      this.onChangeCallback(formValue.value);\n    });\n  }\n\n  writeValue(value: any): void {\n    this.form.get(\"value\").setValue(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    isDisabled ? this.form.disable() : this.form.enable();\n  }\n\n  change() {\n    const value = this.form.get(\"value\").value;\n    this.form.get(\"value\").setValue(value);\n  }\n}\n","<div [formGroup]=\"form\">\n  <mat-form-field class=\"tel-input\" appearance=\"none\">\n    <lac-mat-country-selector\n      matPrefix\n      [selectorFor]=\"input\"\n      [showDialCode]=\"true\"\n      [disableSearch]=\"true\"\n      [preferredCountries]=\"preferredCountries\"\n      searchPlaceholder=\"Search...\"\n    >\n    </lac-mat-country-selector>\n    <lac-mat-tel-input #input formControlName=\"value\" autocomplete=\"off\"> </lac-mat-tel-input>\n  </mat-form-field>\n</div>\n","let preferenceUnit = JSON.parse(sessionStorage.getItem('userPreference'))?.units;\nexport const priorityColorCode: any = {\n  HIGH: \"#FF4C4C\",\n  LOW: \"#FAFF00\",\n  MEDIUM: \"#FAFF00\",\n};\n\n// Alert Settings Priority Dropdwon Options\nexport const alertPriorityOptions: any = [\n  {\n    value: \"HIGH\",\n    label: \"HIGH\",\n  },\n  {\n    value: \"MEDIUM\",\n    label: \"MEDIUM\",\n  },\n  {\n    value: \"LOW\",\n    label: \"LOW\",\n  },\n];\n// Arrhythmia Alert Settings Priority Dropdwon Options\nexport const arrhythmiaAlertPriorityOptions: any = [\n  {\n    value: \"HIGH\",\n    label: \"HIGH\",\n  },\n  {\n    value: \"MEDIUM\",\n    label: \"MEDIUM\",\n  },\n  {\n    value: \"LOW\",\n    label: \"LOW\",\n  },\n  {\n    value: \"INFORMATIONAL\",\n    label: \"INFORMATIONAL\",\n  },\n];\n// Parameter Alert Settings - Row Items\nexport const ArrhythmiaParameterAlertItems: any = [\n  {\n    alerts: \"SINUS BRADYCARDIA\",\n    key: \"SINUS_BRADYCARDIA\",\n    unit: \"bpm\", \n  },\n  {\n    alerts: \"SINUS TACHYCARDIA\",\n    key: \"SINUS_TACHYCARDIA\",\n    unit: \"bpm\",\n  },\n  {\n    alerts: \"VENTRICULAR FLUTTER\",\n    key: \"VENTRICULAR_FLUTTER\",\n  },\n  {\n    alerts: \"VENTRICULAR TACHYCARDIA\",\n    key: \"VENTRICULAR_TACHYCARDIA\",\n  },\n  {\n    alerts: \"VENT RHYTHM\",\n    key: \"IDIOVENTRICULAR_RYTHM\",\n  },\n  {\n    alerts: \"SUPRAVENTRICULAR TACHYCARDIA\",\n    key: \"SUPRAVENTRICULAR_TACHYCARDIA\",\n  },\n  {\n    alerts: \"AFIB FLUTTER\",\n    key: \"AFIB_FLUTTER\",\n  },\n  {\n    alerts: \"JUNCTIONAL TACHYCARDIA\",\n    key: \"JUNCTIONAL_TACHYCARDIA\",\n  },\n  {\n    alerts: \"FIRST DEGREE AV BLOCK\",\n    key: \"FIRST_DEGREE_AV_BLOCK\",\n  },\n  {\n    alerts: \"SECOND DEGREE AV BLOCK TYPE I\",\n    key: \"SECOND_DEGREE_AV_BLOCK_TYPE_I\",\n  },\n  {\n    alerts: \"SECOND DEGREE AV BLOCK TYPE II\",\n    key: \"SECOND_DEGREE_AV_BLOCK_TYPE_II\",\n  },\n  {\n    alerts: \"PAUSE\",\n    key: \"PAUSE\",\n  },\n  {\n    alerts: \"V COUPLET\",\n    key: \"V_COUPLET\",\n  },\n  {\n    alerts: \"V BIGEMINY\",\n    key: \"V_BIGEMINY\",\n  },\n  {\n    alerts: \"V TRIGEMINY\",\n    key: \"V_TRIGEMINY\",\n  },\n  {\n    alerts: \"PVC RATE\",\n    key: \"PVC_RATE\",\n    unit: \"rate/min\",\n  },\n  {\n    alerts: \"PAC RATE\",\n    key: \"PAC_RATE\",\n    unit: \"rate/min\",\n  },\n  {\n    alerts: \"PVC\",\n    key: \"PVC\",\n  },\n  {\n    alerts: \"PAC\",\n    key: \"PAC\",\n  }\n];\n// Parameter Alert Settings - Row Items\nexport const parameterAlertItems: any = [\n  {\n    alerts: \"Heart Rate\",\n    key: \"HR\",\n    unit: \"bpm\",\n  },\n  {\n    alerts: \"Respiration Rate\",\n    key: \"RR\",\n    unit: \"brpm\",\n  },\n  {\n    alerts: \"SpO2\",\n    key: \"SPO2\",\n    unit: \"%\",\n  },\n  {\n    alerts: \"Body Temperature\",\n    key: \"BODYTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"Systolic\",\n    key: \"BPSYS\",\n    unit: \"mmHg\",\n  },\n  {\n    alerts: \"Diastolic\",\n    key: \"BPDIA\",\n    unit: \"mmHg\",\n  },\n  // {\n  //   alerts: \"Mean\",\n  //   key: \"BP\",\n  //   unit: \"mmHg\",\n  // },\n  {\n    alerts: \"Pulse Rate\",\n    key: \"PR\",\n    unit: \"/Min\",\n  },\n  {\n    alerts: \"Skin Temperature\",\n    key: \"SKINTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"Posture\",\n    key: \"POSTURE_ALERT\",\n    unit: '',\n  },\n];\nexport const AlertHistoryItems: any = [\n  {\n    alerts: \"Heart Rate\",\n    key: \"HR\",\n    unit: \"bpm\",\n  },\n  {\n    alerts: \"Respiration Rate\",\n    key: \"RR\",\n    unit: \"brpm\",\n  },\n  {\n    alerts: \"SpO2\",\n    key: \"SPO2\",\n    unit: \"%\",\n  },\n  {\n    alerts: \"Body Temperature\",\n    key: \"BODYTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"Systolic\",\n    key: \"BPSYS\",\n    unit: \"mmHg\",\n  },\n  {\n    alerts: \"Diastolic\",\n    key: \"BPDIA\",\n    unit: \"mmHg\",\n  },\n  {\n    alerts: \"Pulse Rate\",\n    key: \"PR\",\n    unit: \"/Min\",\n  },\n  {\n    alerts: \"Skin Temperature\",\n    key: \"SKINTEMP\",\n    unit: preferenceUnit === 'SI'? \"°C\": \"°F\",\n  },\n  {\n    alerts: \"BP\",\n    key: \"BP\",\n    unit: \"%\",\n  },\n  {\n    alerts: \"Posture\",\n    key: \"POSTURE_ALERT\",\n    unit: 'hrs',\n  },\n];\n\nexport const technicalAlertItems: any = [\n\n  {\n    alerts: \"Biosensor Disconnected\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"BIOSENSOR_DISCONNECTED\",\n  },\n\n  {\n    alerts: \"Relay Disconnected\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"RELAY_DISCONNECTED\",\n  },\n\n  {\n    alerts: \"Battery Low\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"LOW_BATTERY\",\n  },\n\n  {\n    alerts: \"Invalid HR\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_HR_ERROR\",\n  },\n  /* {\n    alerts: \"Temperature Calibration Invalid\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"TEMPERATURE_CALIBRATION\",\n  }, */\n\n  {\n    alerts: \"Invalid RR \",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_RR_ERROR\",\n  },\n\n  {\n    alerts: \"Invalid SpO2\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_SPO2_ERROR\",\n  },\n  {\n    alerts: \"Lead Off\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"LEAD_OFF\",\n  },\n  {\n    alerts: \"Body Temp Unavailable\",\n    unit: \"Sec\",\n    units: \"Min\",\n    key: \"COMPUTE_BODY_TEMP_ERROR\",\n  },\n  {\n    alerts: \"Replace Biosensor\",\n    unit: \"\",\n    units: \"\",\n    key: \"REPLACE_BIOSENSOR\",\n  },\n  {\n    alerts: \"Onboard Failed\",\n    unit: \"\",\n    units: \"\",\n    key: \"ONBOARD_FAIL_TECH_ALERT_PATIENT_IN_DISCHARGED_STATE\",\n  },\n  {\n    alerts: \"Invalid SPO2/PR\",\n    unit: \"\",\n    units: \"\",\n    key: \"COMPUTE_SPO2_PR_ERROR\",\n  },\n];\n\nexport const priorityAlertItems: any = [\n  {\n    alerts: \"High\",\n    unit: \"Min\",\n    key: \"HIGH\",\n    percentage: \"%\",\n  },\n\n  {\n    alerts: \"Medium\",\n    unit: \"Min\",\n    key: \"MEDIUM\",\n    percentage: \"%\",\n  },\n\n  {\n    alerts: \"Low\",\n    unit: \"Min\",\n    key: \"LOW\",\n    percentage: \"%\",\n  },\n];\n\n\n// UI access and permissions\n// CLINICAL_FACILITY_ADMIN       = \"CFA\"\n// CLINICAL_FACILITY_ADMIN_CLONE = \"CFAC\"\n// GENERAL_CLINICIAN             = \"GC\"\n// SUPERVISORY_CLINICIAN         = \"SC\"\n// PHYSICIAN                     = \"PHY\"\nexport const uiAccessRoles = {\n  ALERT_CONFIGURATIONS: {\n    ALERT_DESTINATIONS: {\n      PAGE_VIEW: [\"SC\", \"PHY\", \"GC\", \"CFA\", \"CFAC\"],\n      EDIT: [\"SC\", \"CFA\", \"CFAC\"],\n      PATIENT: {\n        PAGE_VIEW: [\"SC\", \"PHY\", \"GC\"],\n        EDIT: [\"GC\", \"PHY\"],\n      },\n    },\n    ALERT_NOTIFICATIONS: {\n      PAGE_VIEW: [\"CFA\", \"CFAC\"],\n    },\n    ALERT_PARAMETER: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    ARRHYTHMIA_PARAMETER: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    ALERT_TECHNICAL: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    ALERT_PRIORITY: {\n      PAGE_VEW: [\"CFA\", \"CFAC\", \"SC\", \"PHY\", \"GC\"],\n      EDIT: [\"CFA\", \"CFAC\", \"SC\"],\n    },\n    PARAMETER_ALERT: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n    },\n    ARRHYTHMIA_ALERT: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n    },\n    TECHNICAL_ALERT: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n    },\n    OTHER_SETTINGS: {\n      PAGE_VEW: [\"GC\", \"PHY\"],\n      EDIT: [\"GC\", \"PHY\"],\n  },\n  },\n};\n\nexport const alertConfigMinMaxValues = {\n  parameterAlerts: {\n    HR: {\n      MIN: {\n        HighThr: 60,\n        CondDelay: 20,\n        LowThr: 30,\n      },\n      MAX: {\n        HighThr: 250,\n        CondDelay: 300,\n        LowThr: 160,\n      },\n    },\n    RR: {\n      MIN: {\n        HighThr: 10,\n        CondDelay: 50,\n        LowThr: 6,\n      },\n      MAX: {\n        HighThr: 60,\n        CondDelay: 300,\n        LowThr: 55,\n      },\n    },\n    SPO2: {\n      MIN: {\n        HighThr: 95,\n        CondDelay: 20,\n        LowThr: 70,\n      },\n      MAX: {\n        HighThr: 100,\n        CondDelay: 300,\n        LowThr: 95,\n      },\n    },\n    BODYTEMP: {\n      MIN: {\n        HighThr: preferenceUnit === 'SI'? 37 : 98.6,\n        CondDelay: 60,\n        LowThr: preferenceUnit === 'SI'? 32: 89.6,\n      },\n      MAX: {\n        HighThr: preferenceUnit === 'SI'? 43 : 109.4,\n        CondDelay: 300,\n        LowThr: preferenceUnit === 'SI'? 36 : 96.8,\n      },\n    },\n    BPSYS: {\n      MIN: {\n        HighThr: 75,\n        LowThr: 35,\n      },\n      MAX: {\n        HighThr: 240,\n        LowThr: 150,\n      },\n    },\n    BPDIA: {\n      MIN: {\n        HighThr: 50,\n        LowThr: 15,\n      },\n      MAX: {\n        HighThr: 180,\n        LowThr: 50,\n      },\n    },\n    PR: {\n      MIN: {\n        HighThr: 60,\n        CondDelay: 20,\n        LowThr: 30,\n      },\n      MAX: {\n        HighThr: 250,\n        CondDelay: 300,\n        LowThr: 120,\n      },\n    },\n    SKINTEMP: {\n      MIN: {\n        HighThr: preferenceUnit === 'SI'? 20: 68,\n        CondDelay: 60,\n        LowThr: preferenceUnit === 'SI'? 15: 59,\n      },\n      MAX: {\n        HighThr: preferenceUnit === 'SI'? 45: 113,\n        CondDelay: 300,\n        LowThr: preferenceUnit === 'SI'? 33: 91.4,\n      },\n    },\n    POSTURE_ALERT: {\n      MIN: {\n        HighThr: '',\n        CondDelay: 1,\n        LowThr: '',\n      },\n      MAX: {\n        HighThr: '',\n        CondDelay: 168,\n        LowThr: '',\n      },\n    },\n  },\n  technicalAlert: {\n    LEAD_OFF: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 5,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    BIOSENSOR_DISCONNECTED: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    RELAY_DISCONNECTED: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    LOW_BATTERY: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    /* TEMPERATURE_CALIBRATION: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    }, */\n    COMPUTE_HR_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 5,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    COMPUTE_RR_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    COMPUTE_SPO2_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n    COMPUTE_BODY_TEMP_ERROR: {\n      MIN: {\n        Frequency_UnAck: 5,\n        CondDelay: 15,\n        Frequency_Ack: 5,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        CondDelay: 300,\n        Frequency_Ack: 720,\n      },\n    },\n  },\n  priorityAlert: {\n    HIGH: {\n      MIN: {\n        Frequency_UnAck: 5,\n        Frequency_Ack: 5,\n        Percentage_Ack: 3,\n        Percentage_UnAck: 3,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        Frequency_Ack: 720,\n        Percentage_Ack: 100,\n        Percentage_UnAck: 100,\n      },\n    },\n    MEDIUM: {\n      MIN: {\n        Frequency_UnAck: 5,\n        Frequency_Ack: 5,\n        Percentage_Ack: 3,\n        Percentage_UnAck: 3,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        Frequency_Ack: 720,\n        Percentage_Ack: 100,\n        Percentage_UnAck: 100,\n      },\n    },\n    LOW: {\n      MIN: {\n        Frequency_UnAck: 5,\n        Frequency_Ack: 5,\n        Percentage_Ack: 3,\n        Percentage_UnAck: 3,\n      },\n      MAX: {\n        Frequency_UnAck: 720,\n        Frequency_Ack: 720,\n        Percentage_Ack: 100,\n        Percentage_UnAck: 100,\n      },\n    },\n  },\n};\n\nexport const isAllowedRole = (allowedRoles: any, userRoles: any) => {\n  let isAllowed = false;\n  if (allowedRoles.some((ai: any) => userRoles.includes(ai))) {\n    isAllowed = true;\n  }\n  return isAllowed;\n};\nexport const MY_MOMENT_FORMATS = {\n  fullPickerInput: { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric',\n    minute: 'numeric', hourCycle: 'h23' },\n  datePickerInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n  timePickerInput: { hour: 'numeric', minute: 'numeric', hourCycle: 'h23' },\n  monthYearLabel: {year: 'numeric', month: 'short'},\n  dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n  monthYearA11yLabel: {year: 'numeric', month: 'long'},\n}\nexport const postures = [\n  \"Supine\",\n  \"Prone\",\n  \"Lying on Left\",\n  \"Lying on Right\",\n];\n","import {AbstractControl} from \"@angular/forms\";\nimport {parsePhoneNumberFromString,  findPhoneNumbersInText } from \"libphonenumber-js\";\n\nexport function _validatePhoneNumberInput(c: AbstractControl): object {\n    let value = c?.value || \"\";\n    let inputValue: string = value.toString();\n    if (inputValue !== \"\") {\n        let c_number = findPhoneNumbersInText(inputValue);\n        let c_code = c_number[0]?.number?.country;\n        let c_num = c_number[0]?.number?.nationalNumber;\n        let phoneNumber: any;\n       \n        if(c_code && c_num) {\n            \n            phoneNumber = parsePhoneNumberFromString(c_num.toString(), c_code);\n        }\n        if(c_code === 'IN' && c_num[0] === '1'){\n            if(c_num.length !== 10){\n                return {\n                    phoneNumberInvalid: true\n                }\n            }\n        }else{\n            if(phoneNumber){\n                if(phoneNumber.isValid()){\n                    return null;\n                } else {\n                    return {\n                        phoneNumberInvalid: true\n                    }\n                }\n            } \n            else {\n                return {\n                    phoneNumberInvalid: true\n                }\n            }\n        }\n        \n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n\r\n//Running probeplus keycloak \r\n// redirect : http://keycloak.probeplus.site/* -> http://localhost:4200/#\r\n// web origin : http://keycloak.probeplus.site -> http://localhost:4200\r\nexport const environment= {\r\n  integ: true,\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  //dataApiUrl2: \"http://localhost:8000/\",\r\n  dataApiUrl2: \"http://backend.probeplus.site/\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://www.probeplus.site\",\r\n  keyClockRealm: \"ecgvue\",\r\n  keyClockClientId: \"frontend\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\nexport const environmentLPP = {\r\n  integ: true,\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  //dataApiUrl2: \"http://localhost:8000/\",\r\n  dataApiUrl2: \"http://backend.probeplus.site/\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://www.probeplus.site\",\r\n  keyClockRealm: \"ecgvue\",\r\n  keyClockClientId: \"frontend\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\n//LS Keycloak\r\nexport const environmentLS = {\r\n  integ: true,\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  //dataApiUrl: \"http://localhost:8000/\",\r\n  // dataApiUrl2: \"http://10.10.3.63:8000/\",\r\n  dataApiUrl2: \"http://backend.probeplus.site/\",\r\n  // dataApiUrl2: \"http://keycloak.probeplus.site/\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://alpha.auth.lifesignals.com/auth\",\r\n  // keyClockUrl: \"https://uat2a.auth.lifesignals.com\",\r\n  keyClockRealm: \"lsdev\",\r\n  keyClockClientId: \"InfinityEP4WebUI\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\n//TEST Midhun - ecgvue@ecgvue.com | Life@2023\r\nexport const environmentA = {\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  dataApiUrl: \"https://alpha.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://alpha.auth.lifesignals.com\",\r\n  // keyClockUrl: \"https://uat2a.auth.lifesignals.com\",\r\n\r\n  keyClockRealm: \"lsdev\",\r\n  keyClockClientId: \"InfinityEP4WebUI\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\n\r\n\r\n//UAT2\r\nexport const environment2 = {\r\n  production: true,\r\n  environmentName: \"alpha\",\r\n  dataApiUrl: \"https://uat2a.api.lifesignals.com/api/v1/resources/\",\r\n  keyClockUrl: \"https://uat2a.auth.lifesignals.com\",\r\n  keyClockRealm: \"lsdev\",\r\n  keyClockClientId: \"InfinityEP4WebUI\",\r\n  version: \"1.2.1\",\r\n  customization: {\r\n    logo: \"logo.svg\",\r\n    snackBarDuration: 3000,\r\n    enableTrends: false,\r\n    enablePlethRR: true,\r\n    timeFormat: 'H:mm'\r\n  }\r\n};\r\n\r\nexport const isLocal = () => environment.dataApiUrl.includes(\"localhost\")\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","var map = {\n\t\"./af\": 62275,\n\t\"./af.js\": 62275,\n\t\"./ar\": 90857,\n\t\"./ar-dz\": 11218,\n\t\"./ar-dz.js\": 11218,\n\t\"./ar-kw\": 14754,\n\t\"./ar-kw.js\": 14754,\n\t\"./ar-ly\": 66680,\n\t\"./ar-ly.js\": 66680,\n\t\"./ar-ma\": 92178,\n\t\"./ar-ma.js\": 92178,\n\t\"./ar-sa\": 56522,\n\t\"./ar-sa.js\": 56522,\n\t\"./ar-tn\": 95682,\n\t\"./ar-tn.js\": 95682,\n\t\"./ar.js\": 90857,\n\t\"./az\": 70164,\n\t\"./az.js\": 70164,\n\t\"./be\": 79774,\n\t\"./be.js\": 79774,\n\t\"./bg\": 60947,\n\t\"./bg.js\": 60947,\n\t\"./bm\": 21832,\n\t\"./bm.js\": 21832,\n\t\"./bn\": 89650,\n\t\"./bn-bd\": 74477,\n\t\"./bn-bd.js\": 74477,\n\t\"./bn.js\": 89650,\n\t\"./bo\": 66005,\n\t\"./bo.js\": 66005,\n\t\"./br\": 98492,\n\t\"./br.js\": 98492,\n\t\"./bs\": 70534,\n\t\"./bs.js\": 70534,\n\t\"./ca\": 52061,\n\t\"./ca.js\": 52061,\n\t\"./cs\": 84737,\n\t\"./cs.js\": 84737,\n\t\"./cv\": 61167,\n\t\"./cv.js\": 61167,\n\t\"./cy\": 77996,\n\t\"./cy.js\": 77996,\n\t\"./da\": 9528,\n\t\"./da.js\": 9528,\n\t\"./de\": 14540,\n\t\"./de-at\": 49430,\n\t\"./de-at.js\": 49430,\n\t\"./de-ch\": 67978,\n\t\"./de-ch.js\": 67978,\n\t\"./de.js\": 14540,\n\t\"./dv\": 83426,\n\t\"./dv.js\": 83426,\n\t\"./el\": 6616,\n\t\"./el.js\": 6616,\n\t\"./en-au\": 63816,\n\t\"./en-au.js\": 63816,\n\t\"./en-ca\": 32162,\n\t\"./en-ca.js\": 32162,\n\t\"./en-gb\": 83305,\n\t\"./en-gb.js\": 83305,\n\t\"./en-ie\": 61954,\n\t\"./en-ie.js\": 61954,\n\t\"./en-il\": 43060,\n\t\"./en-il.js\": 43060,\n\t\"./en-in\": 59923,\n\t\"./en-in.js\": 59923,\n\t\"./en-nz\": 13540,\n\t\"./en-nz.js\": 13540,\n\t\"./en-sg\": 16505,\n\t\"./en-sg.js\": 16505,\n\t\"./eo\": 41907,\n\t\"./eo.js\": 41907,\n\t\"./es\": 86640,\n\t\"./es-do\": 41246,\n\t\"./es-do.js\": 41246,\n\t\"./es-mx\": 56131,\n\t\"./es-mx.js\": 56131,\n\t\"./es-us\": 36430,\n\t\"./es-us.js\": 36430,\n\t\"./es.js\": 86640,\n\t\"./et\": 62551,\n\t\"./et.js\": 62551,\n\t\"./eu\": 32711,\n\t\"./eu.js\": 32711,\n\t\"./fa\": 54572,\n\t\"./fa.js\": 54572,\n\t\"./fi\": 33390,\n\t\"./fi.js\": 33390,\n\t\"./fil\": 87860,\n\t\"./fil.js\": 87860,\n\t\"./fo\": 48216,\n\t\"./fo.js\": 48216,\n\t\"./fr\": 99291,\n\t\"./fr-ca\": 98527,\n\t\"./fr-ca.js\": 98527,\n\t\"./fr-ch\": 58407,\n\t\"./fr-ch.js\": 58407,\n\t\"./fr.js\": 99291,\n\t\"./fy\": 47054,\n\t\"./fy.js\": 47054,\n\t\"./ga\": 49540,\n\t\"./ga.js\": 49540,\n\t\"./gd\": 73917,\n\t\"./gd.js\": 73917,\n\t\"./gl\": 51486,\n\t\"./gl.js\": 51486,\n\t\"./gom-deva\": 56245,\n\t\"./gom-deva.js\": 56245,\n\t\"./gom-latn\": 48868,\n\t\"./gom-latn.js\": 48868,\n\t\"./gu\": 59652,\n\t\"./gu.js\": 59652,\n\t\"./he\": 89019,\n\t\"./he.js\": 89019,\n\t\"./hi\": 42040,\n\t\"./hi.js\": 42040,\n\t\"./hr\": 63402,\n\t\"./hr.js\": 63402,\n\t\"./hu\": 79322,\n\t\"./hu.js\": 79322,\n\t\"./hy-am\": 27609,\n\t\"./hy-am.js\": 27609,\n\t\"./id\": 57942,\n\t\"./id.js\": 57942,\n\t\"./is\": 98275,\n\t\"./is.js\": 98275,\n\t\"./it\": 73053,\n\t\"./it-ch\": 4378,\n\t\"./it-ch.js\": 4378,\n\t\"./it.js\": 73053,\n\t\"./ja\": 46176,\n\t\"./ja.js\": 46176,\n\t\"./jv\": 679,\n\t\"./jv.js\": 679,\n\t\"./ka\": 92726,\n\t\"./ka.js\": 92726,\n\t\"./kk\": 72953,\n\t\"./kk.js\": 72953,\n\t\"./km\": 86957,\n\t\"./km.js\": 86957,\n\t\"./kn\": 59181,\n\t\"./kn.js\": 59181,\n\t\"./ko\": 47148,\n\t\"./ko.js\": 47148,\n\t\"./ku\": 27752,\n\t\"./ku.js\": 27752,\n\t\"./ky\": 65675,\n\t\"./ky.js\": 65675,\n\t\"./lb\": 41263,\n\t\"./lb.js\": 41263,\n\t\"./lo\": 65746,\n\t\"./lo.js\": 65746,\n\t\"./lt\": 11143,\n\t\"./lt.js\": 11143,\n\t\"./lv\": 38753,\n\t\"./lv.js\": 38753,\n\t\"./me\": 44054,\n\t\"./me.js\": 44054,\n\t\"./mi\": 31573,\n\t\"./mi.js\": 31573,\n\t\"./mk\": 30202,\n\t\"./mk.js\": 30202,\n\t\"./ml\": 68523,\n\t\"./ml.js\": 68523,\n\t\"./mn\": 79794,\n\t\"./mn.js\": 79794,\n\t\"./mr\": 56681,\n\t\"./mr.js\": 56681,\n\t\"./ms\": 56975,\n\t\"./ms-my\": 39859,\n\t\"./ms-my.js\": 39859,\n\t\"./ms.js\": 56975,\n\t\"./mt\": 3691,\n\t\"./mt.js\": 3691,\n\t\"./my\": 5152,\n\t\"./my.js\": 5152,\n\t\"./nb\": 7607,\n\t\"./nb.js\": 7607,\n\t\"./ne\": 21526,\n\t\"./ne.js\": 21526,\n\t\"./nl\": 86368,\n\t\"./nl-be\": 40076,\n\t\"./nl-be.js\": 40076,\n\t\"./nl.js\": 86368,\n\t\"./nn\": 68420,\n\t\"./nn.js\": 68420,\n\t\"./oc-lnc\": 51906,\n\t\"./oc-lnc.js\": 51906,\n\t\"./pa-in\": 94504,\n\t\"./pa-in.js\": 94504,\n\t\"./pl\": 54721,\n\t\"./pl.js\": 54721,\n\t\"./pt\": 74645,\n\t\"./pt-br\": 54548,\n\t\"./pt-br.js\": 54548,\n\t\"./pt.js\": 74645,\n\t\"./ro\": 71977,\n\t\"./ro.js\": 71977,\n\t\"./ru\": 26042,\n\t\"./ru.js\": 26042,\n\t\"./sd\": 78849,\n\t\"./sd.js\": 78849,\n\t\"./se\": 27739,\n\t\"./se.js\": 27739,\n\t\"./si\": 50084,\n\t\"./si.js\": 50084,\n\t\"./sk\": 92449,\n\t\"./sk.js\": 92449,\n\t\"./sl\": 23086,\n\t\"./sl.js\": 23086,\n\t\"./sq\": 33139,\n\t\"./sq.js\": 33139,\n\t\"./sr\": 30607,\n\t\"./sr-cyrl\": 30063,\n\t\"./sr-cyrl.js\": 30063,\n\t\"./sr.js\": 30607,\n\t\"./ss\": 40131,\n\t\"./ss.js\": 40131,\n\t\"./sv\": 21665,\n\t\"./sv.js\": 21665,\n\t\"./sw\": 5642,\n\t\"./sw.js\": 5642,\n\t\"./ta\": 33622,\n\t\"./ta.js\": 33622,\n\t\"./te\": 74825,\n\t\"./te.js\": 74825,\n\t\"./tet\": 48336,\n\t\"./tet.js\": 48336,\n\t\"./tg\": 39238,\n\t\"./tg.js\": 39238,\n\t\"./th\": 99463,\n\t\"./th.js\": 99463,\n\t\"./tk\": 39986,\n\t\"./tk.js\": 39986,\n\t\"./tl-ph\": 29672,\n\t\"./tl-ph.js\": 29672,\n\t\"./tlh\": 40043,\n\t\"./tlh.js\": 40043,\n\t\"./tr\": 51212,\n\t\"./tr.js\": 51212,\n\t\"./tzl\": 50110,\n\t\"./tzl.js\": 50110,\n\t\"./tzm\": 80482,\n\t\"./tzm-latn\": 38309,\n\t\"./tzm-latn.js\": 38309,\n\t\"./tzm.js\": 80482,\n\t\"./ug-cn\": 42495,\n\t\"./ug-cn.js\": 42495,\n\t\"./uk\": 54157,\n\t\"./uk.js\": 54157,\n\t\"./ur\": 80984,\n\t\"./ur.js\": 80984,\n\t\"./uz\": 64141,\n\t\"./uz-latn\": 43662,\n\t\"./uz-latn.js\": 43662,\n\t\"./uz.js\": 64141,\n\t\"./vi\": 12607,\n\t\"./vi.js\": 12607,\n\t\"./x-pseudo\": 66460,\n\t\"./x-pseudo.js\": 66460,\n\t\"./yo\": 92948,\n\t\"./yo.js\": 92948,\n\t\"./zh-cn\": 62658,\n\t\"./zh-cn.js\": 62658,\n\t\"./zh-hk\": 39352,\n\t\"./zh-hk.js\": 39352,\n\t\"./zh-mo\": 38274,\n\t\"./zh-mo.js\": 38274,\n\t\"./zh-tw\": 98451,\n\t\"./zh-tw.js\": 98451\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"]}