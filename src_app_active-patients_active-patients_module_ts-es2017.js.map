{"version":3,"file":"src_app_active-patients_active-patients_module_ts-es2017.js","mappings":"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","sources":["./src/app/active-patients/active-patients-routing.module.ts","./src/app/active-patients/active-patients.module.ts","./src/app/active-patients/active-patients/active-patients.component.ts","./src/app/active-patients/active-patients/active-patients.component.html","./src/app/active-patients/admit-patients/admit-patients.component.ts","./src/app/active-patients/admit-patients/admit-patients.component.html","./src/app/active-patients/archived/archived.component.ts","./src/app/active-patients/archived/archived.component.html","./src/app/active-patients/assign-group-modal/assign-group-modal.component.ts","./src/app/active-patients/assign-group-modal/assign-group-modal.component.html","./src/app/active-patients/interpretation-history/interpretation-history.component.ts","./src/app/active-patients/interpretation-history/interpretation-history.component.html","./src/app/active-patients/posted_final/posted-final.component.ts","./src/app/active-patients/posted_final/posted-final.component.html","./src/app/active-patients/store/active-patients.effects.ts","./src/app/pipe/epochToHumanDate/epoch-to-human-date.pipe.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AuthGuard } from \"../guards/auth.guard\";\r\nimport { ActivePatientsComponent } from \"./active-patients/active-patients.component\";\r\nimport { UserRoles } from \"../enum/roles.enum\";\r\nimport { RootComponent } from \"../shared/root/root.component\";\r\nimport { AdmitPatientsComponent } from \"./admit-patients/admit-patients.component\";\r\nimport { PostedFinalComponent } from \"./posted_final/posted-final.component\";\r\nimport { InterpretationHistoryComponent } from \"./interpretation-history/interpretation-history.component\";\r\nimport { ArchivedComponent } from \"./archived/archived.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    canActivate: [AuthGuard],\r\n    component: RootComponent,\r\n    children: [\r\n      {\r\n        path: \"active-patients\",\r\n        component: ActivePatientsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"admit-patients\",\r\n        component: AdmitPatientsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"posted-final\",\r\n        component: PostedFinalComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"interpretation-history\",\r\n        component: InterpretationHistoryComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"archived\",\r\n        component: ArchivedComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ActivePatientsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ActivePatientsComponent } from \"./active-patients/active-patients.component\";\r\nimport { ActivePatientsRoutingModule } from \"./active-patients-routing.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { ActivePatientsService } from \"./services/active-patients.service\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport * as fromActivePatients from \"./store/active-patients.reducer\";\r\nimport { ActivePatientsEffects } from \"./store/active-patients.effects\";\r\nimport { AdmitPatientModalComponent } from \"./admit-patient-modal/admit-patient-modal.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AssignGroupModalComponent } from \"./assign-group-modal/assign-group-modal.component\";\r\nimport { ConfirmationDialogComponent } from \"./confirmation-dialog/confirmation-dialog.component\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatNativeDateModule } from \"@angular/material/core\";\r\nimport { PatientMoreInfoDialogComponent } from \"./patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ManageGroupModule } from \"../manage-group/manage-group.module\";\r\nimport { I18nModule } from \"../i18n/i18n.module\";\r\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\r\nimport { EpochToHumanDatePipe } from \"../pipe/epochToHumanDate/epoch-to-human-date.pipe\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { AdmitPatientsComponent } from \"./admit-patients/admit-patients.component\";\r\nimport { PatientAdmittedModalComponent } from './patient-admitted-modal/patient-admitted-modal.component';\r\nimport { RemoveBiosensorComponent } from './remove-biosensor/remove-biosensor.component';\r\nimport {OwlDateTimeModule} from \"ng-pick-datetime\";\r\nimport { PostedFinalComponent } from \"./posted_final/posted-final.component\";\r\nimport { InterpretationHistoryComponent } from \"./interpretation-history/interpretation-history.component\";\r\nimport { ArchivedComponent } from \"./archived/archived.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ActivePatientsComponent,\r\n    AdmitPatientsComponent,\r\n    AdmitPatientModalComponent,\r\n    AssignGroupModalComponent,\r\n    ConfirmationDialogComponent,\r\n    PatientMoreInfoDialogComponent, \r\n    EpochToHumanDatePipe, PatientAdmittedModalComponent, RemoveBiosensorComponent,\r\n    PostedFinalComponent,\r\n    InterpretationHistoryComponent,\r\n    ArchivedComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        ActivePatientsRoutingModule,\r\n        I18nModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatInputModule,\r\n        MatNativeDateModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatSortModule,\r\n        MatCheckboxModule,\r\n        MatCardModule,\r\n        MatListModule,\r\n        MatDialogModule,\r\n        MatTooltipModule,\r\n        MatTabsModule,\r\n        MatPaginatorModule,\r\n        ManageGroupModule,\r\n        ReactiveFormsModule,\r\n        MatAutocompleteModule,\r\n        StoreModule.forFeature(\r\n            fromActivePatients.patientsFeatureKey,\r\n            fromActivePatients.ActivePatientsReducer\r\n        ),\r\n        EffectsModule.forFeature([ActivePatientsEffects]),\r\n        LifeSignalsModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatTooltipModule,\r\n        OwlDateTimeModule\r\n    ],\r\n  providers: [\r\n    {\r\n      provide: ActivePatientsService,\r\n      useClass: ActivePatientsService,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: KeycloakBearerInterceptor,\r\n      multi: true,\r\n    },\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill', floatLabel: 'never' } },\r\n  ],\r\n})\r\nexport class ActivePatientsModule {}\r\n","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, first, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-active-patients\",\r\n  templateUrl: \"./active-patients.component.html\",\r\n  styleUrls: [\"./active-patients.component.scss\"],\r\n})\r\nexport class ActivePatientsComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  doctor!:string;\r\n  get(){\r\n   \r\n      console.log(this.doctorsList);\r\n    \r\n  }\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  activePatient_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientId\",\r\n      label: \"Patient Details\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"prescription_id\",\r\n      label: \"Prescription id\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"prescribing_physician\",\r\n      label: \"prescribing physician\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"referal_physician\",\r\n      label: \"referal physician\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"activePatch\",\r\n      label: \"biosensor ID\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"monitoring\",\r\n      label: \"procedure Start time\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Status\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    \r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 10,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"first_name\",\r\n      direction: \"asc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string ;doctor:string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n    doctor: null\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n  public doctors$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"physical\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n    this.doctors$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    //TODO:\r\n    this.getDoctors();\r\n    //New API: Get required staff members.\r\n    this.service.getFacilityUsers();\r\n\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      console.log(\"Fetching patients..\")\r\n      //this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.first_name} ${x.last_name}`,\r\n              //weightUnit: x.weightUnit.toUpperCase(),\r\n              //heightUnit: x.heightUnit.toUpperCase()\r\n              patientId: x.patient_id_mrn\r\n            };\r\n            return patient;\r\n          });\r\n          console.log(this.activePatients);\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  doctorsList = [];\r\n  doctorsListSub: Subscription;\r\n\r\n  getDoctors() {\r\n    this.doctorsListSub = this.manager.getDoctorsList().subscribe((list) => {\r\n      let persons = (list as any).items;\r\n      this.doctorsList = persons?.map(doctor => {\r\n        return {\r\n          ...doctor,\r\n          displayName: `${doctor?.first_name} ${doctor?.last_name}`\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'search_query';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'DOCTOR') {\r\n      this.filterObject.doctor = groupId.target.value;\r\n    } else if(key === 'physical') {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"first_name\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n \r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = (event.active === 'patientId')  ? 'first_name' : \r\n                    (event.active === 'prescription_id') ? 'prescription_id' : \r\n                    (event.active === 'referal_physician') ? 'doctor_user_name' :\r\n                    (event.active === 'prescribing_physician') ? 'prescriber_user_name' : \"\";\r\n    \r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n    console.log(activeKey)\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"1200px\",\r\n      height:\"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","<ls-page-header type=\"active_patients\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"get()\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"active-patients-module.button.assign\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"active-patients-module.button.register_patient\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"active-patients-module.button.admit_patient\" | translate }}\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"activePatient_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"active-patients-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"active-patients-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-9 col-xl-9 col-xxl-8 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <!-- <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.doctor\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"doctorsList\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown> -->\r\n                                <!-- <app-matselect-withsearch class=\"matselect-search\" [items]=\"doctorsList\" [key]=\"'displayName'\" [value]=\"'id'\"></app-matselect-withsearch> -->\r\n                                <!-- <mat-select class=\"w100 nested-select d-flex flex-row align-items-center justify-content-between\">\r\n                                        <mat-option *ngFor=\"let doc of doctorsList\" class=\"select-value\" [value]=\"filterObject.doctor\" (onSelectionChange)=\"searchByGroup('CLINICAL',$event)\">\r\n                                            {{doc['displayName']}}\r\n                                        </mat-option>                                        \r\n                                    </mat-select> -->\r\n                                <mat-label class=\"toplabel d-block pb-0 pb-md-1 ps-0 ps-lg-2 pt-2 pt-sm-0\">{{'active-patients-module.prescriber' | translate}}</mat-label>\r\n                                    <select class=\"w100 nested-select d-flex flex-row align-items-center justify-content-between\" (change)=\"searchByGroup('DOCTOR',$event)\">\r\n                                        <option value=\"\" class=\"select-value\">All</option>\r\n                                        <option *ngFor=\"let doc of doctorsList\" [value]=\"doc['_id']\" class=\"select-value\" >{{doc['displayName']}}</option>\r\n                                    </select>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <!-- <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\" \r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.monitoring_duration' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"doctors$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown> -->\r\n                                <mat-label class=\"toplabel d-block pb-0 pb-md-1 ps-0 ps-lg-2 pt-2 pt-sm-0\">{{'active-patients-module.monitoring_duration' | translate}}</mat-label>\r\n                                <div class=\"nested-select\" (click)=\"picker.open()\">                                \r\n                                    <mat-date-range-input [rangePicker]=\"picker\">\r\n                                      <input matStartDate placeholder=\"All\">\r\n                                      <input matEndDate  class=\"move\" disabled>\r\n                                    </mat-date-range-input>\r\n                                    <!-- <mat-datepicker-toggle matIconSuffix [for]=\"picker\" class=\"matdate-picker\"></mat-datepicker-toggle> -->\r\n                                    <mat-date-range-picker #picker class=\"date\"></mat-date-range-picker>\r\n                                </div>\r\n                            </div>\r\n                         \r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-4 mt-2 mt-lg-0\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\r\n                            <mat-label>{{ \"active-patients-module.search\" | translate }}\r\n                            </mat-label>\r\n                            <input [(ngModel)]=\"searchObject.string\" matInput type=\"search\" (keyup)=\"search()\"\r\n                                id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template lsWidgetName=\"patientId\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">                    \r\n                        <div class=\"me-2\">{{ row?.patient_id_mrn }}</div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <strong><div class=\"me-2\">{{ row?.name }}</div></strong>\r\n                    <mat-icon fontSet=\"material-icons-outlined\" style=\"cursor: pointer;\" (click)=\"patientViewMore(row)\">info</mat-icon>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"prescription_id\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.prescription_id }}</div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"prescribing_physician\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div *ngFor=\"let doc of doctorsList\" class=\"me-2\">\r\n                        <div *ngIf=\"doc['_id']===row?.fk_prescriber\">\r\n                            {{ doc['displayName'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"referal_physician\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.fk_r_doctor }}</div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.location }}</div>\r\n                </div>\r\n            </ng-template>\r\n            <!-- <ng-template lsWidgetName=\"location\" let-row>\r\n                <mat-list type=\"button\" class=\"taglist pt-0 small-tags\" *ngIf=\"row?.cGroup || row?.pGroup\"\r\n                    (click)=\"openAssignGroupModal(row)\">\r\n                    <mat-list-item type=\"button\" *ngIf=\"row?.pGroup\" class=\"mx-1 small-tag remote-tag\"\r\n                        [class.default-cursor]=\"!isGcorScCheck()\">\r\n                        {{ row?.location}}\r\n                    </mat-list-item> -->\r\n                    <!-- <mat-list-item type=\"button\" *ngIf=\"row?.cGroup\" class=\"mx-1 small-tag sepsis-tag\"\r\n                        [class.default-cursor]=\"!isGcorScCheck()\">\r\n                        {{ row?.cGroup?.name }}\r\n                    </mat-list-item> -->\r\n                <!-- </mat-list> -->\r\n                <!-- <button mat-flat-button type=\"button\" color=\"primary\" class=\"assign-btn\"\r\n                    *ngIf=\"!row?.cGroup && !row?.pGroup && isGcorScCheck()\" (click)=\"openAssignGroupModal(row)\">\r\n                    {{ \"active-patients-module.button.assign_group\" | translate }}\r\n                </button> -->\r\n                <!-- <span *ngIf=\"!row?.cGroup && !row?.pGroup && !isGcorScCheck()\">\r\n                    {{\"parameter-alerts-module.unassigned\" |translate}}\r\n                </span>\r\n            </ng-template> -->\r\n            <!-- <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>\r\n                </div>\r\n            </ng-template> -->\r\n            <!-- <ng-template lsWidgetName=\"biosensorStatus\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"!row.activePatch\">\r\n                    <mat-icon class=\"stop-monitoring mx-1 btn-boxed btn-no-shadow\">\r\n                        clear\r\n                    </mat-icon>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"row.activePatch\">\r\n                    <mat-icon color=\"warn\" class=\"mx-1 btn-boxed btn-no-shadow\" *ngIf=\"!row.biosensorStatus\">\r\n                        close</mat-icon>\r\n                    <mat-icon class=\"tick-icon mx-1 btn-boxed btn-no-shadow\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.STREAMING\">\r\n                        check</mat-icon>\r\n                    <button mat-mini-fab class=\"monitoring-icon mx-1 btn-boxed btn-no-shadow\" [disabled]=\"!isScOrGc()\"\r\n                        (click)=\"openStopMonitoringDialog(row.patientId)\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.STREAMING\">\r\n                        <mat-icon>stop</mat-icon>\r\n                    </button>\r\n                    <mat-icon class=\"stop-monitoring mx-1 btn-boxed btn-no-shadow\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.FINALIZE_IN_PROGRESS\">\r\n                        clear\r\n                    </mat-icon>\r\n                    <button mat-mini-fab class=\"start-monitoring mx-1 btn-boxed btn-no-shadow\" color=\"primary\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.FINALIZE_IN_PROGRESS\">\r\n                        <mat-icon>play_arrow</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"activePatchHeading\">\r\n                <img class=\"me-1\" alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\r\n                {{'active-patients-module.table.id' | translate}}\r\n            </ng-template> -->\r\n            <ng-template lsWidgetName=\"activePatch\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\r\n                    <div class=\"me-3 biosensor-id\" *ngFor=\"let bio of row.biosensor\">\r\n                       - {{ bio['biosensor_id']}}\r\n                    </div>\r\n                    <!-- <mat-icon fontSet=\"material-icons-outlined\" class=\"cursor-pointer\" (click)=\"openBiosensorModal(row?.patientId, row)\">add_circle_outline</mat-icon> -->\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"monitoring\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\" >\r\n                    <div class=\"me-2\" *ngFor=\"let bio of row.biosensor\">\r\n                        {{ bio['monitoring_started_on'] }}\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                <!-- Pause Notification -->\r\n                <!-- <button mat-mini-fab color=\"primary\" class=\"btn-boxed boxed-height btn-no-shadow  me-2\">  <img alt=\"Push Notification\" src=\"assets/icons/pause-notification.svg\"  /></button> -->\r\n                <!-- <button mat-mini-fab color=\"primary\" class=\"btn-boxed boxed-height btn-no-shadow  me-2\">  <img alt=\"Push Notification\" src=\"assets/icons/pause-notification-disable.svg\"  /></button> -->\r\n                <!-- <button mat-flat-button color=\"primary\" class=\"btn-no-shadow mx-auto me-2\" *ngIf=\"isClinicianCheck() || isPhy\" [disabled]=\"!row.activePatch\" (click)=\"addNewEvent(row)\">\r\n                    {{ \"active-patients-module.button.add_event_note\" | translate }}\r\n                </button>-->\r\n                <button mat-icon-button [matMenuTriggerFor]=\"patientMenu\" class=\"shadow-none\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button> \r\n                <mat-menu #patientMenu=\"matMenu\" class=\"setting-card-menu profile-card-menu\" xPosition=\"before\">\r\n                    <button mat-menu-item *ngIf=\"isClinicianCheck()\"\r\n                        (click)=\"openAdmitPatientModalWith({key:'edit-active-patient', value:row?.patient_id_mrn})\">{{\r\n                        \"active-patients-module.button.edit\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\">{{\r\n                        \"active-patients-module.button.abort\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\">{{\r\n                        \"active-patients-module.button.assign\" | translate}}</button>\r\n                </mat-menu>\r\n            </ng-template>\r\n        </ls-table>\r\n    </div>\r\n</div>","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  FilterKeysForAssignPatient,\r\n  NewPatient,\r\n  ActivePatientsTabs,\r\n  UnassignedPatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { convertToMinutes, epoch } from \"../forms/active-patients.form\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport {PatientAdmittedModalComponent} from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport {SnackbarService} from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-admit-patients\",\r\n  templateUrl: \"./admit-patients.component.html\",\r\n  styleUrls: [\"./admit-patients.component.scss\"],\r\n})\r\nexport class AdmitPatientsComponent implements OnInit, OnDestroy {\r\n  selectedPatients: SelectionModel<UnassignedPatient> = new SelectionModel<UnassignedPatient>(true);\r\n  allPatients: ActivePatient[] = new Array();\r\n  unassignedPatients: UnassignedPatient[] = new Array();\r\n  patientsData: Array<any> = new Array();\r\n  sortedData: ActivePatient[];\r\n  is_selected: boolean[] = [false];\r\n  filteredString: string;\r\n  patientIdsToPass: string[] = new Array();\r\n  error: any;\r\n  reloadInterval;\r\n\r\n  assignPatient_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patchId\",\r\n      label: \"Biosensor ID\",\r\n      headerClass: [\"text-start\"],\r\n      style: \"max-width: 240px; width: 240px;\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\",\"bold-text\"],\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Monitoring\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n  ];\r\n  config: LSTableConfig = {\r\n    id: \"admit-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\", \"me-3\"],\r\n      header: {\r\n        style: \"max-width: 50%; width: 50%;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"\",\r\n      direction: \"\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  tabletabs: Array<string> = new Array();\r\n  selectedTab: ActivePatientsTabs;\r\n  selectedIds: string[] = [];\r\n  monitoringStatus = MonitoringStatus;\r\n  isSCorGC = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n  ) { }\r\n\r\n  model: string;\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  unassignedPatientsSub: Subscription;\r\n  panelId;\r\n  ngOnInit() {\r\n    // this.route.queryParamMap.subscribe((params: ParamMap) => {\r\n    //   this.selectedIds = (params.get(\"ids\") || \"\").split(\",\");\r\n    //   this.patientIdsToPass = this.selectedIds;\r\n    // });\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.unassignedPatientsSub = this.manager.selectUnassignedPatients()\r\n      .pipe(map(response => {\r\n        this.error = response?.error;\r\n        this.config = {\r\n          ...this.config,\r\n          page: {\r\n            ...this.config.page,\r\n            length: response?.unassignedPatients_total || 0\r\n          },\r\n          rowSelectEnabled:false,\r\n          tableState: <TableState>response?.tableState\r\n        }\r\n        this.unassignedPatients = response?.UNASSIGNED_PATIENTS_DATA || [];\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.fetchUnAssignedPatientsData(this.service.unassignedPatientsUrl(this.config, this.searchObject));\r\n    ref = this.manager.selectUnassignedPatients();\r\n    return ref;\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'patchId';\r\n    if(this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n    this.selectedPatients.clear();\r\n  }\r\n\r\n  labelPatches(row: ActivePatient) {\r\n    if (row.patchIds?.length) {\r\n      return row.patchIds.map(p => p.deviceId.toUpperCase()).join(\", \");\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n  initVariables() {\r\n    for (let i in FilterKeysForAssignPatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n    this.tabletabs.push(ActivePatientsTabs.ASSIGN_PATIENT);\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getUnassignedPatientData();\r\n  }\r\n  isSelected(row: UnassignedPatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patchId).includes(row.patchId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    if(role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1) {\r\n      this.isSCorGC = true;\r\n    }\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  resetTable() {\r\n    this.searchObject = {\r\n      keyword: null,\r\n      string: null\r\n    };\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page || {},\r\n        pageIndex: 0,\r\n        length: undefined\r\n      }\r\n    };\r\n  }\r\n\r\n  getUnassignedPatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"\";\r\n      this.config.sort.direction = \"\";\r\n    }\r\n    let url = `patches/unassigned?page=${this.config.page.pageIndex + 1}&size=${this.config.page.pageSize}`;\r\n    if (this.config.sort.active && this.config.sort.direction) {\r\n      url = `${url}&sortBy=${this.config.sort?.active}:${this.config.sort?.direction}`;\r\n    }\r\n    if (this.searchObject && this.searchObject?.keyword && this.searchObject?.string) {\r\n      url = `${url}&${this.searchObject?.keyword?.toLowerCase()}=${this.searchObject?.string}`;\r\n    }\r\n    this.manager.fetchUnAssignedPatientsData(url);\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<UnassignedPatient>) {\r\n    this.selectedPatients = e;\r\n   /* this.patientIdsToPass = new Array();\r\n    let biosensorPatientData = (e.selected || []).filter(s => s?.activePatch !== undefined && s?.activePatch !== \"\" && s?.activePatch !== null);\r\n    biosensorPatientData.forEach(e => {\r\n      if (!this.patientIdsToPass.includes(e?.patientId))\r\n        this.patientIdsToPass.push(e?.patientId);\r\n    });*/\r\n  }\r\n\r\n  getActivePatches(selected: ActivePatient[]) {\r\n    return (selected || []).filter(s => s?.activePatch !== undefined && s?.activePatch !== \"\" && s?.activePatch !== null);\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'deviceIds' ? 'thirdPartyDevices' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    //this.config.sort.active = event.active;\r\n    //this.config.sort.direction = event.direction;\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  goBackToSummary() {\r\n    this.router.navigate([\"summary\"]);\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case ActivePatientsTabs.ACTIVE_PATIENT:\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getUnassignedPatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent,{\r\n              maxWidth: \"90vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus : false,\r\n              data: {title: 'active-patients-module.dialog.patient_admitted'}\r\n            });\r\n          }\r\n        });\r\n        break;\r\n      case ActivePatientsTabs.ASSIGN_PATIENT:\r\n        this.admitPatientModal({ patchId: this.selectedPatients.selected[0] })\r\n          .subscribe(resp => {\r\n            if (resp) {\r\n              this.getUnassignedPatientData();\r\n              this.dialog.open(PatientAdmittedModalComponent,{\r\n                maxWidth: \"90vw\",\r\n                //minWidth: \"320px\",\r\n                width: \"520px\",\r\n                backdropClass: \"backdropBackground\",\r\n                disableClose: true,\r\n                autoFocus : false,\r\n                data: {title: 'active-patients-module.dialog.patient_assigned'}\r\n              });\r\n            }\r\n          });\r\n        break;\r\n\r\n      case 'edit-assign-patient':\r\n        if (this.validateBiosensor(data?.value?.patchId)) {\r\n          this.admitPatientModal({patchId: data.value})\r\n              .subscribe(resp => {\r\n                if (resp) {\r\n                  this.getUnassignedPatientData();\r\n                  this.dialog.open(PatientAdmittedModalComponent, {\r\n                    maxWidth: \"90vw\",\r\n                    //minWidth: \"320px\",\r\n                    width: \"520px\",\r\n                    backdropClass: \"backdropBackground\",\r\n                    disableClose: true,\r\n                    autoFocus: false,\r\n                    data: {title: 'active-patients-module.dialog.patient_assigned'}\r\n                  });\r\n                }\r\n              });\r\n        } else {\r\n          this.snackbar.openSnackBar('errors.invalid_patchId', 'bottom', 'center', true);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"90vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  //  /**This function is used to open Discahrge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"admit-patients-module.dialog.discharge_patient\",\r\n          message: \"admit-patients-module.dialog.discharge_and_stop_monitoring\"\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"admit-patients-module.dialog.discharge_patient\",\r\n          message: \"admit-patients-module.dialog.discharge_patient_message\"\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patchId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"90vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"admit-patients-module.dialog.stop_monitoring\",\r\n        message: \"admit-patients-module.dialog.stop_monitoring_message\"\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.stopMonitoringUnassigned(patchId);\r\n      }\r\n    });\r\n  }\r\n\r\n  userRole() {\r\n    if (this.authService.getRoles()[0] === 'GC') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  openBiosensorInfoModal(row) {\r\n    this.dialog.open(PatientMoreInfoDialogComponent, {\r\n      width: \"700px\",\r\n      //minWidth: \"700px\",\r\n      maxWidth: \"95vw\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: [...row.patchIds || []]\r\n    }).afterClosed()\r\n      .subscribe(response => {\r\n        if (response) {\r\n          let patient: NewPatient = {\r\n            patient_id_mrn: row.patient_id_mrn,\r\n            first_name: row.first_name,            \r\n            last_name: row.last_name,\r\n            email: row.email,\r\n            country_code:row.country_code,\r\n            mobile: row.mobile,\r\n            dob: row.dob ? row.dob : \"\",\r\n            age: parseInt(row.age),\r\n            sex: row.sex,\r\n            weight: parseInt(row.weight),\r\n            height: parseInt(row.height),\r\n            country:row.country,\r\n            zip_code:row.zip_code,\r\n            street_address_1:row.street_address_1,\r\n            street_address_2:row.street_address_2,\r\n            city:row.city,\r\n            state:row.state,\r\n            em_contact_name:row.em_contact_name,\r\n            em_contact_country_code:row.em_contact_country_code,\r\n            em_contact_number:row.em_contact_number,\r\n            fk_prescriber:row.fk_prescriber,\r\n            fk_technician:row.fk_technician,\r\n            fk_r_doctor:row.fk_r_doctor,\r\n            pri_approver_id:row.pri_approver_id,\r\n            final_approver_id:row.final_approver_id,\r\n            primary_indication:row.primary_indication,\r\n            monitoring_duration:row.monitoring_duration,\r\n            order_id:row.order_id,\r\n            pacemaker:row.pacemaker,\r\n            icd:row.icd,\r\n            additional_info:row.additional_info,\r\n            prescription_id:row.prescription_id,\r\n            billing_indication:row.billing_indication,\r\n            billing_method:row.billing_method,\r\n            location:row.location,\r\n            biosensor:row.biosensor,\r\n            status:row.status,\r\n            facility_id:row.facility_id,\r\n            created_by:row.created_by,\r\n\r\n            admissionId: row.admissionId,\r\n            primaryContact:row.primaryContact,\r\n            weightUnit: row.weightUnit,\r\n            heightUnit: row.heightUnit,\r\n            prescribingPhysician:row.prescribingPhysician,\r\n            technicianName:row.technicianName,\r\n            referalPhysician:row.referalPhysician,\r\n            interpPhysician:row.interpPhysician,\r\n            prelimInterpPhysician:row.prelimInterpPhysician,\r\n            locationGroup:row.locationGroup,\r\n            doctorId: row.doctorId,\r\n            cGroup: row.cGroup,\r\n            pGroup: row.pGroup,\r\n            patchIds: response,\r\n            deviceIds: row.deviceIds,\r\n            createdDateTime: row.createdDateTime,\r\n            startedOn: epoch(row.createdDateTime),\r\n            procedureDuration: convertToMinutes(row.procedureDuration),\r\n            estimatedDischarge: epoch(row.estimatedDischarge)\r\n\r\n\r\n            // let patient: NewPatient = {\r\n            //   patientId: row.patientId,\r\n            //   admissionId: row.admissionId,\r\n            //   dob: row.dob ? row.dob : \"\",\r\n            //   age: parseInt(row.age),\r\n            //   phoneNo: row.phoneNo,\r\n            //   primaryContact:row.primaryContact,\r\n            //   email: row.email,\r\n            //   gender: row.gender,\r\n            //   weight: parseInt(row.weight),\r\n            //   height: parseInt(row.height),\r\n            //   weightUnit: row.weightUnit,\r\n            //   heightUnit: row.heightUnit,\r\n            //   firstName: row.firstName,            \r\n            //   lastName: row.lastName,\r\n            //   country:row.country,\r\n            //   zipCode:row.zipCode,\r\n            //   street1:row.street1,\r\n            //   street2:row.street2,\r\n            //   city:row.city,\r\n            //   state:row.state,\r\n            //   emergencyContactName:row.emergencyContactName,\r\n            //   emergencyContactNumber:row.emergencyContactNumber,\r\n            //   prescribingPhysician:row.prescribingPhysician,\r\n            //   technicianName:row.technicianName,\r\n            //   referalPhysician:row.referalPhysician,\r\n            //   interpPhysician:row.interpPhysician,\r\n            //   prelimInterpPhysician:row.prelimInterpPhysician,\r\n            //   locationGroup:row.locationGroup,\r\n            //   primaryIndication:row.primaryIndication,\r\n            //   monitoringDuration:row.monitoringDuration,\r\n            //   orderId:row.orderId,\r\n            //   prescriptionId:row.prescriptionId,\r\n            //   additionalInfo:row.additionalInfo,\r\n            //   billingIndication:row.billingIndication,\r\n            //   billingMethod:row.billingMethod,\r\n            //   doctorId: row.doctorId,\r\n            //   cGroup: row.cGroup,\r\n            //   pGroup: row.pGroup,\r\n            //   patchIds: response,\r\n            //   deviceIds: row.deviceIds,\r\n            //   createdDateTime: row.createdDateTime,\r\n            //   startedOn: epoch(row.createdDateTime),\r\n            //   procedureDuration: convertToMinutes(row.procedureDuration),\r\n            //   estimatedDischarge: epoch(row.estimatedDischarge)\r\n          };\r\n          this.manager.updatePatient(patient);\r\n        }\r\n      });\r\n  }\r\n  validateBiosensor(biosensorId) {\r\n    let patternToMatch = /^[a-zA-Z]{1}[a-zA-Z0-9]*$/;\r\n    return patternToMatch.test(biosensorId);\r\n\r\n  }\r\n  deletePatch(patchId) {\r\n    this.service.deletePatch(patchId)\r\n        .subscribe(res => {\r\n          this.fetchTableData();\r\n        }, (error) => {\r\n          if(error) {\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        });\r\n  }\r\n  deleteBiosensor(biosensor) {\r\n    console.log(biosensor);\r\n      const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        // minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"admit-patients-module.dialog.delete_biosensor\",\r\n          message: biosensor.status === this.monitoringStatus.STREAMING ? \"admit-patients-module.dialog.stop_monitoring_and_delete\": \"admit-patients-module.dialog.delete_biosensor_message\"\r\n        },\r\n      });\r\n\r\n      stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if(biosensor.status === this.monitoringStatus.STREAMING) {\r\n            this.service.stopMonitoringUnassigned([biosensor.patchId])\r\n                .subscribe((res: any) => {\r\n                  if(res.status === 'OK') {\r\n                    this.deletePatch(biosensor.patchId);\r\n                  } else {\r\n                    this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                  }\r\n                }, (error) => {\r\n                  if(error) {\r\n                    this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                  }\r\n                });\r\n          } else {\r\n            this.deletePatch(biosensor.patchId);\r\n          }\r\n        }\r\n      });\r\n  }\r\n  stopMonitoringUnassigned(patchId) {\r\n    this.service.stopMonitoringUnassigned([patchId])\r\n        .subscribe((res: any) => {\r\n          if(res.status === 'OK') {\r\n            this.fetchTableData();\r\n          }\r\n          else {\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        }, (error) => {\r\n          if(error) {\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        });\r\n  }\r\n  alphaNumericsOnly(event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z0-9]+$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    if (this.unassignedPatientsSub) {\r\n      this.unassignedPatientsSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n}\r\n","<ls-page-header type=\"admit_patients\">\n    <ng-container page-actions>\n        <div class=\"d-flex justify-content-end me-4\">\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group my-2\">\n              <button mat-flat-button color=\"accent\" class=\"mx-1\" (click)=\"openAdmitPatientModalWith({key: 'Active Patient', value: ''})\" *ngIf=\"isClinicianCheck()\"\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\">\n                    {{ \"admit-patients-module.button.admit_patient\" | translate }}\n                </button>\n<!--                <button mat-flat-button color=\"primary\" class=\"mx-1\" disabled>-->\n<!--                    {{ \"admit-patients-module.button.add_to_dashboard\" | translate }}-->\n<!--                </button>-->\n            </div>\n              <div class=\"d-block d-lg-none my-2 \">\n                 <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\n                    <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'Active Patient', value: ''})\" *ngIf=\"isClinicianCheck()\"\n                            [disabled]=\"selectedPatients?.selected?.length !== 0\">\n                        {{ \"admit-patients-module.button.admit_patient\" | translate }}\n                    </button>\n<!--                    <button mat-menu-item disabled>-->\n<!--                        {{ \"admit-patients-module.button.add_to_dashboard\" | translate }}-->\n<!--                    </button>-->\n                </mat-menu>\n            </div>\n        </div>\n    </ng-container>\n</ls-page-header>\n<!-- active patient topheader after-->\n\n<!-- <div class=\"row align-items-center justify-content-between\">\n        <div class=\"col-10 col-sm-10 col-md-10 col-lg-5\">\n\n        </div>\n        <div class=\"col-2 col-sm-2 col-md-2 col-lg-7\">\n            <div class=\"d-flex justify-content-end\">\n                <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\n\n                </div>\n                <div class=\"d-block d-lg-none my-2 \">\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\n                        <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\n\n                    </mat-menu>\n                </div>\n            </div>\n        </div>\n    </div>-->\n<div class=\"px-3\">\n\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\" [data]=\"unassignedPatients\" [columns]=\"assignPatient_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\" [isSelected]=\"isSelected\" [Id]=\"'patchId'\" (selected)=\"onPatientsSelected($event)\"\n            [selectOnlyActive]=\"false\">\n            <ng-container table-header>\n                <div class=\"my-3 row\">\n                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">\n                            <mat-label>{{ \"admit-patients-module.search\" | translate }}\n                            </mat-label>\n                            <input autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"alphaNumericsOnly($event)\"/>\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\n                            </mat-icon>\n                            <mat-icon matSuffix (click)=\"search()\">search</mat-icon>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template lsWidgetName=\"status\" let-row>\n               <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"!row.patchId\">-</div> \n                <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"row.patchId && row?.patchDetails?.length\">\n                    <mat-icon color=\"warn\" class=\"mx-1 btn-boxed btn-no-shadow\" *ngIf=\"row?.patchDetails[0]?.status !== monitoringStatus.STREAMING\">\n                        close</mat-icon>\n                    <mat-icon class=\"tick-icon mx-1 btn-boxed btn-no-shadow\" *ngIf=\"row?.patchDetails[0]?.status === monitoringStatus.STREAMING\">\n                        check</mat-icon>\n                    <button mat-mini-fab color=\"primary\" class=\"monitoring-icon mx-1 btn-boxed btn-no-shadow\" [disabled]=\"!isSCorGC\" (click)=\"openStopMonitoringDialog(row.patchId)\" *ngIf=\"row?.patchDetails[0]?.status === monitoringStatus.STREAMING\">\n                        <mat-icon>stop</mat-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template lsWidgetName=\"patchIdHeading\">\n                <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" class=\"me-2\" /> {{'active-patients-module.table.activePatch' | translate}}\n            </ng-template>\n            <ng-template lsWidgetName=\"patchId\" let-row>\n                <div class=\"d-flex justify-content-center align-items-center ps-3\">\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\"  class=\"me-2\" />\n                    <div class=\"me-2 biosensor-id\">\n                        {{ row.patchId || \"-\" }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template lsWidgetName=\"actions\" let-row>\n                <button *ngIf=\"row.patchDetails?.length && row?.patchDetails[0]?.status !== monitoringStatus.STREAMING && isSCorGC\" mat-flat-button color=\"primary\" class=\"btn-boxed px-2 btn-no-shadow me-2\" (click)=\"deleteBiosensor(row.patchDetails[0])\">\n                    <mat-icon class=\"justify-content-center\">delete_outline</mat-icon>\n                </button>\n                <button mat-flat-button color=\"accent\" class=\"btn-no-shadow me-2\" *ngIf=\"isClinicianCheck()\" (click)=\"openAdmitPatientModalWith({key:'edit-assign-patient', value:row})\">\n                    {{ \"admit-patients-module.button.assign_patient\" | translate }}\n                </button>\n            </ng-template>\n        </ls-table>\n    </div>\n</div>\n","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-archived\",\r\n  templateUrl: \"./archived.component.html\",\r\n  styleUrls: [\"./archived.component.scss\"],\r\n})\r\nexport class ArchivedComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  archived_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientDetails\",\r\n      label: \"PATIENT DETAILS\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"reportTime\",\r\n      label: \"report time\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"prescriber\",\r\n      label: \"prescriber\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    \r\n    {\r\n      id: \"interpreter\",\r\n      label: \"interpreter\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"reportType\",\r\n      label: \"report type\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"view\",\r\n      label: \"view\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"print\",\r\n      label: \"print\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"download\",\r\n      label: \"download\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    \r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"patientid\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"PHYSICAL\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.firstName} ${x.lastName}`,\r\n              weightUnit: x.weightUnit.toUpperCase(),\r\n              heightUnit: x.heightUnit.toUpperCase()\r\n            };\r\n            return patient;\r\n          });\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'searchText';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'CLINICAL') {\r\n      this.filterObject.cGroupId = groupId;\r\n    } else {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"patientid\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'deviceIds' ? 'thirdPartyDevices' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    console.log(patient?.patientId)\r\n    console.log(patient?.patchIds[0]?.startTime)\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","<ls-page-header type=\"archived\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/download-icon.svg\">\r\n                    <div class=\"move\">{{ \"archived-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/print_icon.png\">\r\n                    <div class=\"move\">{{ \"archived-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <!-- <a type=\"button\">\r\n                    <img src=\"assets/icons/download_all.png\">\r\n                </a>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print_all.png\">\r\n                </a> -->\r\n                <!-- <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"-module.button.register_patient\" | translate }}\r\n                </button> -->\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <!-- <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"-module.button.admit_patient\" | translate }}\r\n                    </button> -->\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"archived_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"archived-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-9 col-xl-9 col-xxl-8 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.interpreter' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-4 mt-2 mt-lg-0\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\r\n                            <mat-label>{{ \"archived-module.search\" | translate }}\r\n                            </mat-label>\r\n                            <input [(ngModel)]=\"searchObject.string\" matInput type=\"search\" (keyup)=\"search()\"\r\n                                id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-template lsWidgetName=\"patientDetails\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{row?.patientId}}</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center bold-text\">\r\n                  <strong>  <div class=\"me-2\">{{ row?.name }}</div>   </strong>                 \r\n                </div>\r\n            </ng-template>  \r\n\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                   \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportTime\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">date</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">time</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"interpreter\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportType\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template>     \r\n\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"patientMenu\" class=\"shadow-none\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #patientMenu=\"matMenu\" class=\"setting-card-menu profile-card-menu\" xPosition=\"before\">\r\n                    <button mat-menu-item *ngIf=\"isClinicianCheck()\" >{{ \"archived-module.button.edit\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\" >{{ \"archived-module.button.add_notes\" | translate}}</button>\r\n                </mat-menu>\r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"view\" let-row>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/pdf.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n            <ng-template lsWidgetName=\"print\" let-row>               \r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print.png\">\r\n                </a>\r\n           \r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"download\" let-row>\r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/download.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n        </ls-table>\r\n    </div>\r\n</div>","import {\n  Component,\n  Inject,\n  OnInit,\n} from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { BehaviorSubject, Observable, Subscription } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { ManageGroupState } from \"src/app/manage-group/store/manage-groups.reducer\";\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\nimport { ActivePatient } from \"../models/active-patients.model\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\n\n@Component({\n  selector: \"app-assign-group-modal\",\n  templateUrl: \"./assign-group-modal.component.html\",\n  styleUrls: [\"./assign-group-modal.component.scss\"],\n})\nexport class AssignGroupModalComponent implements OnInit {\n  assignGroupForm: FormGroup;\n  groups$: Observable<ManageGroupState>;\n  private cGroup$: BehaviorSubject<Group[]> = new BehaviorSubject<Group[]>([]);\n  public a_groups$: Observable<Group[]>;\n  public locationGroups$: Observable<Group[]>;\n  public clinicalGroups$: Observable<Group[]>;\n  selectedLocationGroup: Group;\n  selectedClinicalGroup: Group;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ActivePatient,\n    private dialogRef: MatDialogRef<AssignGroupModalComponent>,\n    private manager: ActivePatientManagerService,\n    private formBuilder: FormBuilder,\n    private manageGroupService: ManageGroupsService\n  ) {\n    this.selectedLocationGroup = data?.pGroup;\n    this.selectedClinicalGroup = data?.cGroup;\n    this.a_groups$ = this.cGroup$.asObservable();\n    this.locationGroups$ = this.a_groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"PHYSICAL\")\n    }));\n    this.clinicalGroups$ = this.a_groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"CLINICAL\")\n    }));\n  }\n\n  ngOnInit(): void {\n    this.loadGroups();\n    this.assignGroupForm = this.formBuilder.group({\n      pGroup: '',\n      clinicalGroup: ''\n    })\n    if (this.data) {\n      this.setSelectedValue();\n      console.log(this.data?.pGroup, this.data?.cGroup);\n    }\n  }\n\n  setSelectedValue() {\n    const pGroupId = this.data?.pGroup?.groupId ? this.data?.pGroup?.groupId : this.data?.pGroup?.id ;\n    const cGroupId = this.data?.cGroup?.groupId ? this.data?.cGroup?.groupId : this.data?.cGroup?.id;\n    this.assignGroupForm.patchValue({ pGroup: pGroupId });\n    this.assignGroupForm.patchValue({ clinicalGroup: cGroupId });\n  }\n\n  groupsSubscription: Subscription;\n  loadGroups() {\n    //this.groups$ = this.manager.fetchGroups();\n    this.groupsSubscription = this.manageGroupService.fetch().subscribe(groups => {\n      if (groups['data'].length > 0) {\n        console.log(groups['data']);\n        let grps = groups['data'];\n        if(!grps.find(group => group.groupId === this.data?.cGroup?.id) && this.data?.cGroup?.id) {\n          let patientGroup = {groupId: this.data?.cGroup.id, name: this.data?.cGroup.name, type: 'CLINICAL'};\n          grps = [patientGroup, ...grps];\n        }\n        if(!grps.find(group => group.groupId === this.data?.pGroup?.id) && this.data?.pGroup?.id) {\n          let patientGroup = {groupId: this.data?.pGroup?.id, name: this.data?.pGroup?.name, type: 'PHYSICAL'};\n          grps = [patientGroup, ...grps];\n        }\n        this.cGroup$.next(grps);\n      }\n    })\n  }\n\n  getClinicalGroups() {\n    return this.groups$.pipe(map(groups => { return groups?.CLINICAL_GROUPS || []; }));\n  }\n\n  getLocationGroups() {\n    return this.groups$.pipe(map(groups => { return groups?.PHYSICAL_GROUPS || []; }));\n  }\n  onLocationSelected(event: string) {\n    this.assignGroupForm.controls.pGroup.patchValue(event);\n  }\n  save(formData) {\n    const groupData = this.cGroup$.getValue();\n    let pGroupObj = null;\n    let cGroupObj = null;\n\n    if (formData.value.pGroup === '') {\n      pGroupObj = null;\n    } else {\n      if (groupData?.length > 0) {\n        let filteredObj = groupData.filter(x => {\n          if (formData.value.pGroup === x.groupId) {\n            return x;\n          }\n        });\n        if (filteredObj[0]) {\n          let obj = {\n            id: filteredObj[0].groupId,\n            name: filteredObj[0].name\n          }\n          pGroupObj = obj;\n        } else {\n          pGroupObj = null;\n        }\n      }\n    }\n\n    if (formData.value.clinicalGroup === '') {\n      cGroupObj = null;\n    } else {\n      if (groupData?.length > 0) {\n        let filteredObj = groupData.filter(x => {\n          if (formData.value.clinicalGroup === x.groupId) {\n            return x;\n          }\n        });\n        if (filteredObj[0]) {\n          let obj = {\n            id: filteredObj[0].groupId,\n            name: filteredObj[0].name\n          }\n          cGroupObj = obj;\n        } else {\n          cGroupObj = null;\n        }\n      }\n    }\n\n\n    let group = {\n      pGroup: pGroupObj,\n      cGroup: cGroupObj,\n    };\n\n    this.dialogRef.close(group);\n  }\n}\n","<mat-card class=\"dialog-header\">\r\n    <div class=\"assign-header\">\r\n        <div class=\"list-item ms-0\">\r\n            <h1 mat-dialog-title>\r\n                {{ \"active-patients-module.table.assign_group_title\" | translate }}\r\n            </h1>\r\n            <span class=\"pid d-block\">{{'dashboard-module.pid'|translate}}. {{ data.patientId }}</span>\r\n        </div>\r\n        <!--<div class=\"list-item\">\r\n      <span>{{data?.activePatch || '-'}}</span>\r\n    </div>-->\r\n        <div class=\"list-item patient-group\">\r\n            <strong>{{ data.firstName }} {{ data.lastName }}</strong>\r\n            <span class=\"time-group\">{{data?.pGroup?.name}}{{(data?.pGroup && data?.cGroup ) ? \",\" :\"\"}}\r\n        {{data?.cGroup?.name}}</span>\r\n            <!--<span class=\"time-group\">{{ data.createdDateTime }}</span>-->\r\n        </div>\r\n    </div>\r\n    <!--<button mat-button mat-dialog-close>\r\n    <mat-icon>close</mat-icon>\r\n  </button>-->\r\n</mat-card>\r\n\r\n<mat-dialog-content class=\"mat-dialog-popup assign-group-dialog\">\r\n  <div class=\"assign-group-content\">\r\n    <form [formGroup]=\"assignGroupForm\">\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col-sm-6\">\r\n          <h2>\r\n            {{ \"active-patients-module.form_label.location_group\" | translate }}\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n          <app-nested-dropdown class=\"nested-selectfilter selectnested toplabel-no\" [label]=\"'active-patients-module.form_label.location' | translate\"\r\n            [options]=\"locationGroups$ | async\" key=\"groupId\" displayKey=\"name\" [showSelect]=\"true\"\r\n            [selectedValue]=\"assignGroupForm?.controls?.pGroup?.value\" (selected)=\"onLocationSelected($event)\"\r\n            [assignGroup]=\"true\">\r\n          </app-nested-dropdown>\r\n          <!-- <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter\">\r\n              <mat-label>{{ \"active-patients-module.form_label.location\" | translate }}\r\n              </mat-label>\r\n              <mat-select formControlName=\"pGroup\" appearance=\"fill\" class=\"search-filter-select\">\r\n                <mat-option [value]=\"''\">{{'active-patients-module.form_label.select'|translate}}</mat-option>\r\n                <mat-option [value]=\"lgroup.id\" *ngFor=\"let lgroup of locationGroups$ | async\">{{ lgroup?.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field> -->\r\n        </div>\r\n      </div>\r\n  \r\n      <!--<div class=\"row align-items-center\">\r\n          <div class=\"col-sm-6\">\r\n            <h2>{{ \"active-patients-module.form_label.subgroup\" | translate }}</h2>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <mat-form-field appearance=\"fill\" class=\"disabled-field whiteselect selectfilter\">\r\n              <mat-label>{{ \"active-patients-module.form_label.subgroup\" | translate }}\r\n              </mat-label>\r\n              <mat-select appearance=\"fill\" class=\"search-filter-select\">\r\n                <mat-optgroup *ngFor=\"let group of subgroup\">\r\n                  <button mat-button (click)=\"select.open()\">\r\n                    {{ group.groupName }}\r\n                  </button>\r\n                  <mat-select #select appearance=\"fill\">\r\n                    <mat-optgroup *ngFor=\"let ward of group.wards\">\r\n                      <button mat-button (click)=\"p_select.open()\" class=\"s_btn\">\r\n                        {{ ward.wardName }}\r\n                      </button>\r\n                      <mat-select #p_select appearance=\"fill\">\r\n                        <mat-option *ngFor=\"let room of ward.rooms\" [value]=\"room.roomName\">\r\n                          {{ room.roomName }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-optgroup>\r\n                  </mat-select>\r\n                </mat-optgroup>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>-->\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col-sm-6\">\r\n          <h2>\r\n            {{ \"active-patients-module.form_label.clinical_group\" | translate }}\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n          <mat-form-field appearance=\"fill\" class=\"selectfilter whiteselect\">\r\n            <mat-label>{{ \"active-patients-module.form_label.clinical_condition\" | translate }}\r\n            </mat-label>\r\n            <mat-select formControlName=\"clinicalGroup\" appearance=\"fill\" class=\"search-filter-select\">\r\n              <mat-option [value]=\"null\">{{'active-patients-module.form_label.none'|translate}}</mat-option>\r\n              <mat-option [value]=\"cgroup.groupId\" *ngFor=\"let cgroup of clinicalGroups$  | async\">{{ cgroup?.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\"me-4\">\r\n  <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n    {{ \"active-patients-module.button.cancel\" | translate }}\r\n  </button>\r\n  <button mat-flat-button color=\"primary\" [disabled]=\"!assignGroupForm.valid\" (click)=\"save(assignGroupForm)\" class=\"fill-btn\">\r\n    {{ \"active-patients-module.button.Assign_button\" | translate }}\r\n  </button>\r\n</mat-dialog-actions>\r\n","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-interpretation-history\",\r\n  templateUrl: \"./interpretation-history.component.html\",\r\n  styleUrls: [\"./interpretation-history.component.scss\"],\r\n})\r\nexport class InterpretationHistoryComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  interpHistory_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientDetails\",\r\n      label: \"PATIENT DETAILS\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"reportTime\",\r\n      label: \"report time\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"prescriber\",\r\n      label: \"prescriber\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    \r\n    {\r\n      id: \"initialInterp\",\r\n      label: \"initial interpreter\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"interpDate\",\r\n      label: \"interpretation date\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"printStatus\",\r\n      label: \"print status\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\",\"align-items-center\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"patientid\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"PHYSICAL\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.firstName} ${x.lastName}`,\r\n              weightUnit: x.weightUnit.toUpperCase(),\r\n              heightUnit: x.heightUnit.toUpperCase()\r\n            };\r\n            return patient;\r\n          });\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'searchText';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'CLINICAL') {\r\n      this.filterObject.cGroupId = groupId;\r\n    } else {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"patientid\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'deviceIds' ? 'thirdPartyDevices' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    console.log(patient?.patientId)\r\n    console.log(patient?.patchIds[0]?.startTime)\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","<ls-page-header type=\"interp-history\">\r\n    <!-- <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"active-patients-module.button.register_patient\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"active-patients-module.button.admit_patient\" | translate }}\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container> -->\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"interpHistory_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"active-patients-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"interp-history-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-9 col-xxl-8 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.initial_interp' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template lsWidgetName=\"patientDetails\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{row?.patientId}}</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center bold-text\">\r\n                  <strong>  <div class=\"me-2\">{{ row?.name }}</div>   </strong>                 \r\n                </div>\r\n            </ng-template>  \r\n\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                   \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportTime\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">date</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">time</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"initialInterp\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"interpDate\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template>     \r\n\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                <div>\r\n                    <button mat-flat-button color=\"primary\" class=\"btn-no-shadow mx-auto me-2\" *ngIf=\"isClinicianCheck() || isPhy\"   (click)=\"addNewEvent(row)\">\r\n                        {{ \"interp-history-module.button.amend\" | translate }}\r\n                    </button>\r\n                </div>                \r\n            </ng-template>\r\n\r\n            <ng-template lsWidgetName=\"printStatus\" let-row>               \r\n                <mat-icon class=\"move\">check</mat-icon>          \r\n            </ng-template>\r\n            \r\n        </ls-table>\r\n    </div>\r\n</div>","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-posted-final\",\r\n  templateUrl: \"./posted-final.component.html\",\r\n  styleUrls: [\"./posted-final.component.scss\"],\r\n})\r\nexport class PostedFinalComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  activePatient_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientId\",\r\n      label: \"PATIENT DETAILS\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"reportTime\",\r\n      label: \"report time\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"prescriber\",\r\n      label: \"prescriber\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    \r\n    {\r\n      id: \"interpreter\",\r\n      label: \"interpreter\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"reportType\",\r\n      label: \"report type\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"view\",\r\n      label: \"view\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"print\",\r\n      label: \"print\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"download\",\r\n      label: \"download\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    \r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"patientid\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"PHYSICAL\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.firstName} ${x.lastName}`,\r\n              weightUnit: x.weightUnit.toUpperCase(),\r\n              heightUnit: x.heightUnit.toUpperCase()\r\n            };\r\n            return patient;\r\n          });\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'searchText';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'CLINICAL') {\r\n      this.filterObject.cGroupId = groupId;\r\n    } else {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"patientid\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'location' ? 'phoneNo' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n    console.log(activeKey)\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    console.log(patient?.patientId)\r\n    console.log(patient?.patchIds[0]?.startTime)\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","<ls-page-header type=\"posted_final\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/download-icon.svg\">\r\n                    <div class=\"move\">{{ \"posted-final-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/print_icon.png\">\r\n                    <div class=\"move\">{{ \"posted-final-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <!-- <a type=\"button\">\r\n                    <img src=\"assets/icons/download_all.png\">\r\n                </a>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print_all.png\">\r\n                </a> -->\r\n                <!-- <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"-module.button.register_patient\" | translate }}\r\n                </button> -->\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <!-- <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"-module.button.admit_patient\" | translate }}\r\n                    </button> -->\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"activePatient_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"posted-final-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-9 col-xl-9 col-xxl-10 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.interpreter' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-3 col-xl-3 col-xxl-2 mt-2 mt-lg-0\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\r\n                            <mat-label>{{ \"posted-final-module.search\" | translate }}\r\n                            </mat-label>\r\n                            <input [(ngModel)]=\"searchObject.string\" matInput type=\"search\" (keyup)=\"search()\"\r\n                                id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-template lsWidgetName=\"patient\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{row?.patientId}}</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center bold-text\">\r\n                  <strong>  <div class=\"me-2\">{{ row?.name }}</div>   </strong>                 \r\n                </div>\r\n            </ng-template>  \r\n\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.phoneNo }}</div>                   \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportTime\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">date</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">time</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"interpreter\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportType\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template>     \r\n\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"patientMenu\" class=\"shadow-none\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #patientMenu=\"matMenu\" class=\"setting-card-menu profile-card-menu\" xPosition=\"before\">\r\n                    <button mat-menu-item *ngIf=\"isClinicianCheck()\" >{{ \"posted-final-module.button.edit\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\" >{{ \"posted-final-module.button.add_notes\" | translate}}</button>\r\n                </mat-menu>\r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"view\" let-row>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/pdf.png\">\r\n                </a>\r\n                <a type=\"button\"> \r\n                    <img src=\"assets/icons/ecg.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n            <ng-template lsWidgetName=\"print\" let-row>               \r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print.png\">\r\n                </a>\r\n           \r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"download\" let-row>\r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/download.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n        </ls-table>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { Observable, of as observableOf, of } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap, switchMap } from \"rxjs/operators\";\nimport { ActivePatientsService } from \"../services/active-patients.service\";\nimport * as featureActions from \"./active-patients.actions\";\n\n@Injectable()\nexport class ActivePatientsEffects {\n  constructor(\n    private activePatientsService: ActivePatientsService,\n    private actions$: Actions\n  ) { }\n\n  loadActivePatientsRequestEffect$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadActivePatientsRequestAction>(\n        featureActions.ActionTypes.LOAD_ACTIVE_PATIENTS_REQUEST\n      ),\n      mergeMap((action) =>\n        this.activePatientsService.getAll(action.payload.url).pipe(\n          map(\n            (response: any) =>\n              new featureActions.LoadActivePatientsSuccessAction({\n                data: {\n                  patients: response?.data?.items,\n                  total: response?.data?.total,\n                },\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.LoadActivePatientsFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  loadUnAssignedPatientsRequestEffect$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadUnassignedPatientsRequestAction>(\n        featureActions.ActionTypes.LOAD_UNASSIGNED_PATIENTS_REQUEST\n      ),\n      mergeMap((action) =>\n        this.activePatientsService.getUnassignedPatients(action.payload.url).pipe(\n          map(\n            (response: any) => new featureActions.LoadUnassignedPatientsSuccessAction({\n              data: {\n                items: response?.data?.items,\n                total: response?.data?.total,\n              },\n            })),\n          catchError((error) =>\n            observableOf(\n              new featureActions.LoadUnassignedPatientsFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  loadDoctorsRequestEffect$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadDoctorsListRequestAction>(\n        featureActions.ActionTypes.LOAD_DOCTORS_LIST_REQUEST\n      ),\n      startWith(new featureActions.LoadDoctorsListRequestAction()),\n      mergeMap((action) =>\n        this.activePatientsService.getDoctorsList().pipe(\n          map(\n            (doctors) =>\n              new featureActions.LoadDoctorsListSuccessAction({ doctors })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.LoadDoctorsListFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  createNewPatientEffects$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.CreateNewPatientRequestAction>(\n        featureActions.ActionTypes.CREATE_NEW_PATIENT_REQUEST\n      ),\n      // startWith(new featureActions.createNewPatientRequestAction()),\n      mergeMap((data) =>\n        this.activePatientsService.savePatient(data)\n          .pipe(\n            map(\n              (newPatient) =>\n                new featureActions.CreateNewPatientSuccessAction({ newPatient })\n            ),\n            catchError((error) =>\n              observableOf(\n                new featureActions.CreateNewPatientFailureAction({ error })\n              )\n            )\n          )\n      )\n    )\n  );\n\n  updatePatientEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.UpdatePatientRequestAction>(\n        featureActions.ActionTypes.UPDATE_PATIENT_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.updatePatient(data).pipe(\n          map(\n            (response) =>\n              new featureActions.UpdatePatientSuccessAction({ updatedData: response.data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.UpdatePatientFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  updatePatientGroupEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.AssignGroupRequestAction>(\n        featureActions.ActionTypes.ASSIGN_GROUP_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.assignGroup(data).pipe(\n          map(\n            (response) =>\n              new featureActions.AssignGroupSuccessAction({ updatedData: response })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.AssignGroupFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  stopMonitoringEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.StopMonitoringRequestAction>(\n        featureActions.ActionTypes.STOP_MONITORING_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.stopProcedure(data.payload).pipe(\n          map(\n            (patient) =>\n              new featureActions.StopMonitoringSuccessAction({ patient })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.StopMonitoringFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  dischargePatientEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.DischargePatientRequestAction>(\n        featureActions.ActionTypes.DISCHARGE_PATIENT_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.dischargePatient(data.payload).pipe(\n          map(\n            (dischargedPatient) =>\n              new featureActions.DischargePatientSuccessAction({\n                dischargedPatient,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.DischargePatientFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  setSelectedPatientIdsEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.SetSelectedPatientIdsRequestAction>(\n        featureActions.ActionTypes.SET_SELECTED_PATIENTS_IDs_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.setSelectedPatientIds(data.payload).pipe(\n          map(\n            (patientIds) =>\n              new featureActions.SetSelectedPatientIdsSuccessAction({\n                patientIds,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.SetSelectedPatientIdsFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  setSelectedtabEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.SetSelectedTabRequestAction>(\n        featureActions.ActionTypes.SET_SELECTED_TAB_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.setSelectedTab(data.payload).pipe(\n          map(\n            (selectedTab) =>\n              new featureActions.SetSelectedTabSuccessAction({\n                selectedTab,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.SetSelectedTabFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'epochToHumanDate'\n})\nexport class EpochToHumanDatePipe implements PipeTransform {\n\n  transform(value: number): string {\n    if(value) {\n      let humanReadableDate = new Date(value*1000);\n      let formattedDate = `${this.getMonthName(humanReadableDate.getMonth())} ${humanReadableDate.getDate()} , ${humanReadableDate.getFullYear()} /\n                          ${humanReadableDate.getHours()}:${humanReadableDate.getMinutes()}`;\n      return formattedDate;\n    } else {\n      return '-';\n    }\n  }\n\n  getMonthName(idx) {\n    switch(idx) {\n      case 0:\n        return 'Jan';\n        \n      case 1:\n        return 'Feb';\n        \n      case 2:\n        return 'Mar';\n        \n      case 3:\n        return 'Apr'; \n        \n      case 4:\n        return 'May';\n        \n      case 5:\n        return 'Jun';\n        \n      case 6:\n        return 'Jul';\n        \n      case 7:\n        return 'Aug'; \n\n      case 8:\n        return 'Sep';\n        \n      case 9:\n        return 'Oct';\n        \n      case 10:\n        return 'Nov';\n        \n      case 11:\n        return 'Dec'; \n    }\n  }\n\n}\n"],"names":["FilterKeysForActivePatient","MonitoringStatus","AdmitPatientModalComponent","ConfirmationDialogComponent","AssignGroupModalComponent","TableState","SelectionModel","Subject","debounceTime","distinctUntilChanged","map","switchMap","PatientMoreInfoDialogComponent","PatientDetailsViewMoreComponent","PatientAdmittedModalComponent","BehaviorSubject","NotificationsComponent","AddEventComponent","i0","key","value","ActivePatientsComponent","constructor","manager","dialog","service","authService","snackbar","route","manageGroupService","Array","Set","id","label","headerClass","sortable","labelClass","cellClass","rowSelectEnabled","actions","show","headerLabel","class","header","style","page","pageSize","pageIndex","length","paginator","offline","hide","sort","active","direction","tableState","DEFAULT","keyword","string","cGroupId","pGroupId","doctor","groups$","groupsData$","asObservable","locationGroups$","pipe","groups","filter","g","type","clinicalGroups$","doctors$","get","console","log","doctorsList","ngOnInit","getDoctors","getFacilityUsers","roles","getRoles","indexOf","isPhy","getGroupDetails","modelChanged","serviceToCallWith","subscribe","initVariables","fetchTableData","panelId","sessionStorage","getItem","getPanelDetails","then","patients","patient","patchId","selectedIds","add","patientId","activePatients","size","selectedPatients","select","pat","has","reloadInterval","setInterval","activePatientsSub","selectActivePatient","response","config","Object","total","error","ACTIVE_PATIENTS_DATA","x","name","first_name","last_name","patient_id_mrn","doctorsListSub","getDoctorsList","list","persons","items","displayName","ref","getActivePatient","actvePatientsUrl","searchObject","filterObject","resetAndSearch","search","_a","next","JSON","stringify","searchByGroup","groupId","target","undefined","clear","checkCharacters","event","pattern","test","preventDefault","i","filterStrings","push","text","getActivePatientData","isSelected","row","selection","selected","s","includes","isClinicianCheck","role","isGcorScCheck","onPageChange","onPatientsSelected","e","delete","onSortChange","activeKey","openBiosensorModal","data","getPatientBy","patches","activePatch","patchIds","heading","readOnly","open","width","maxWidth","backdropClass","disableClose","afterClosed","updatePatient","res","openSnackBar","openAdmitPatientModalWith","admitPatientModal","resp","autoFocus","title","activePatient","mode","addNewEvent","addEvent","height","maxHeight","panelClass","patchStarted","startTime","dailogRef","minWidth","alertSettings","selectedPatient","patientData","selectedTab","openDischargeGroupDialog","patientIds","dischargeDialog","message","stop_biosensor","confirm","dischargePatient","forEach","getThirdPartyDevices","deviceIds","element","deviceId","openStopMonitoringDialog","stopMonitoringDialog","stopMonitoring","openAssignGroupModal","group","assignGroupObj","cGroup","pGroup","admissionId","assignGroup","setTimeout","patientViewMore","fetch","transferRelay","confirmDialog","isScOrGc","ngOnDestroy","clearInterval","unsubscribe","selectors","decls","vars","consts","template","ctx","$event","_r5","ArchivedComponent","firstName","lastName","weightUnit","toUpperCase","heightUnit","_b","MAT_DIALOG_DATA","dialogRef","formBuilder","selectedLocationGroup","selectedClinicalGroup","a_groups$","cGroup$","loadGroups","assignGroupForm","clinicalGroup","setSelectedValue","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","patchValue","groupsSubscription","grps","find","patientGroup","getClinicalGroups","CLINICAL_GROUPS","getLocationGroups","PHYSICAL_GROUPS","onLocationSelected","controls","save","formData","groupData","getValue","pGroupObj","cGroupObj","filteredObj","obj","close","InterpretationHistoryComponent","PostedFinalComponent"],"sourceRoot":"webpack:///"}