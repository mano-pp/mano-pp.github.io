{"version":3,"mappings":"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","names":["routes","path","canActivate","_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__","component","_shared_root_root_component__WEBPACK_IMPORTED_MODULE_3__","children","_active_patients_active_patients_component__WEBPACK_IMPORTED_MODULE_1__","data","roles","_enum_roles_enum__WEBPACK_IMPORTED_MODULE_2__","_admit_patients_admit_patients_component__WEBPACK_IMPORTED_MODULE_4__","_posted_final_posted_final_component__WEBPACK_IMPORTED_MODULE_5__","_interpretation_history_interpretation_history_component__WEBPACK_IMPORTED_MODULE_6__","_archived_archived_component__WEBPACK_IMPORTED_MODULE_7__","ActivePatientsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_9__","imports","exports","ActivePatientsModule","provide","_services_active_patients_service__WEBPACK_IMPORTED_MODULE_3__","useClass","_angular_common_http__WEBPACK_IMPORTED_MODULE_22__","keycloak_angular__WEBPACK_IMPORTED_MODULE_23__","multi","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__","useValue","appearance","floatLabel","_angular_common__WEBPACK_IMPORTED_MODULE_25__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_2__","_active_patients_routing_module__WEBPACK_IMPORTED_MODULE_1__","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_11__","_angular_material_select__WEBPACK_IMPORTED_MODULE_26__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_27__","_angular_material_input__WEBPACK_IMPORTED_MODULE_28__","_angular_material_core__WEBPACK_IMPORTED_MODULE_29__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_30__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_31__","_angular_material_button__WEBPACK_IMPORTED_MODULE_32__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_33__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_34__","_angular_material_card__WEBPACK_IMPORTED_MODULE_35__","_angular_material_list__WEBPACK_IMPORTED_MODULE_36__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_37__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_38__","_angular_material_tabs__WEBPACK_IMPORTED_MODULE_39__","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_40__","_manage_group_manage_group_module__WEBPACK_IMPORTED_MODULE_10__","_angular_forms__WEBPACK_IMPORTED_MODULE_41__","_angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_42__","_ngrx_store__WEBPACK_IMPORTED_MODULE_43__","_store_active_patients_reducer__WEBPACK_IMPORTED_MODULE_4__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_44__","_store_active_patients_effects__WEBPACK_IMPORTED_MODULE_5__","_life_signals_life_signals_module__WEBPACK_IMPORTED_MODULE_12__","_angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_45__","_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_46__","ng_pick_datetime__WEBPACK_IMPORTED_MODULE_17__","declarations","_active_patients_active_patients_component__WEBPACK_IMPORTED_MODULE_0__","_admit_patients_admit_patients_component__WEBPACK_IMPORTED_MODULE_14__","_admit_patient_modal_admit_patient_modal_component__WEBPACK_IMPORTED_MODULE_6__","_assign_group_modal_assign_group_modal_component__WEBPACK_IMPORTED_MODULE_7__","_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__","_patient_more_info_dialog_patient_more_info_dialog_component__WEBPACK_IMPORTED_MODULE_9__","_pipe_epochToHumanDate_epoch_to_human_date_pipe__WEBPACK_IMPORTED_MODULE_13__","_patient_admitted_modal_patient_admitted_modal_component__WEBPACK_IMPORTED_MODULE_15__","_remove_biosensor_remove_biosensor_component__WEBPACK_IMPORTED_MODULE_16__","_posted_final_posted_final_component__WEBPACK_IMPORTED_MODULE_18__","_interpretation_history_interpretation_history_component__WEBPACK_IMPORTED_MODULE_19__","_archived_archived_component__WEBPACK_IMPORTED_MODULE_20__","i0","key","value","ActivePatientsComponent","constructor","manager","dialog","service","authService","snackbar","route","manageGroupService","Array","SelectionModel","Set","id","label","headerClass","sortable","labelClass","cellClass","rowSelectEnabled","actions","show","headerLabel","class","header","style","page","pageSize","pageIndex","length","paginator","offline","hide","sort","active","direction","tableState","TableState","keyword","string","cGroupId","pGroupId","doctor","MonitoringStatus","BehaviorSubject","Subject","groups$","groupsData$","asObservable","locationGroups$","pipe","map","groups","filter","g","type","clinicalGroups$","doctors$","get","console","log","doctorsList","ngOnInit","getDoctors","getFacilityUsers","getRoles","indexOf","isPhy","getGroupDetails","modelChanged","debounceTime","distinctUntilChanged","switchMap","serviceToCallWith","subscribe","initVariables","fetchTableData","panelId","sessionStorage","getItem","getPanelDetails","then","patients","patient","patchId","selectedIds","add","patientId","activePatients","size","selectedPatients","select","pat","has","reloadInterval","setInterval","activePatientsSub","selectActivePatient","response","config","Object","total","error","ACTIVE_PATIENTS_DATA","x","name","first_name","last_name","patient_id_mrn","doctorsListSub","getDoctorsList","list","persons","items","displayName","ref","getActivePatient","actvePatientsUrl","searchObject","filterObject","resetAndSearch","search","_a","next","JSON","stringify","searchByGroup","groupId","target","undefined","clear","checkCharacters","event","pattern","test","preventDefault","i","FilterKeysForActivePatient","filterStrings","push","text","getActivePatientData","isSelected","row","selection","selected","s","includes","isClinicianCheck","role","isGcorScCheck","onPageChange","onPatientsSelected","e","onSortChange","activeKey","openBiosensorModal","getPatientBy","patches","activePatch","patchIds","heading","readOnly","open","PatientMoreInfoDialogComponent","width","maxWidth","backdropClass","disableClose","afterClosed","updatePatient","res","openSnackBar","openAdmitPatientModalWith","admitPatientModal","resp","PatientAdmittedModalComponent","autoFocus","title","activePatient","mode","addNewEvent","addEvent","AddEventComponent","height","maxHeight","panelClass","patchStarted","startTime","dailogRef","AdmitPatientModalComponent","minWidth","alertSettings","selectedPatient","NotificationsComponent","patientData","selectedTab","openDischargeGroupDialog","patientIds","dischargeDialog","ConfirmationDialogComponent","message","stop_biosensor","confirm","dischargePatient","forEach","getThirdPartyDevices","deviceIds","element","deviceId","openStopMonitoringDialog","stopMonitoringDialog","stopMonitoring","openAssignGroupModal","AssignGroupModalComponent","group","assignGroupObj","cGroup","pGroup","admissionId","assignGroup","setTimeout","patientViewMore","PatientDetailsViewMoreComponent","fetch","transferRelay","confirmDialog","isScOrGc","ngOnDestroy","clearInterval","unsubscribe","selectors","decls","vars","consts","template","ctx","$event","_r5","_angular_core__WEBPACK_IMPORTED_MODULE_14__","AdmitPatientsComponent","router","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__","src_app_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_3__","_models_active_patients_model__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_16__","unassignedPatientsSub","selectUnassignedPatients","unassignedPatients_total","unassignedPatients","UNASSIGNED_PATIENTS_DATA","fetchUnAssignedPatientsData","unassignedPatientsUrl","p","toUpperCase","join","tabletabs","getUnassignedPatientData","isSCorGC","url","_b","_c","_d","_e","_f","toLowerCase","_g","navigate","_patient_admitted_modal_patient_admitted_modal_component__WEBPACK_IMPORTED_MODULE_6__","validateBiosensor","_admit_patient_modal_admit_patient_modal_component__WEBPACK_IMPORTED_MODULE_1__","_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_2__","stopMonitoringUnassigned","_patient_more_info_dialog_patient_more_info_dialog_component__WEBPACK_IMPORTED_MODULE_4__","email","country_code","mobile","dob","age","parseInt","sex","weight","country","zip_code","street_address_1","street_address_2","city","state","em_contact_name","em_contact_country_code","em_contact_number","fk_prescriber","fk_technician","fk_r_doctor","pri_approver_id","final_approver_id","primary_indication","monitoring_duration","order_id","pacemaker","icd","additional_info","prescription_id","billing_indication","billing_method","location","biosensor","status","facility_id","created_by","primaryContact","weightUnit","heightUnit","prescribingPhysician","technicianName","referalPhysician","interpPhysician","prelimInterpPhysician","locationGroup","doctorId","createdDateTime","startedOn","procedureDuration","estimatedDischarge","biosensorId","patternToMatch","deletePatch","monitoringStatus","STREAMING","charsOnlyPattern","ArchivedComponent","firstName","lastName","dialogRef","formBuilder","selectedLocationGroup","selectedClinicalGroup","a_groups$","cGroup$","loadGroups","assignGroupForm","clinicalGroup","setSelectedValue","_h","_j","_k","_l","_m","patchValue","groupsSubscription","grps","find","patientGroup","getClinicalGroups","CLINICAL_GROUPS","getLocationGroups","PHYSICAL_GROUPS","onLocationSelected","controls","save","formData","groupData","getValue","pGroupObj","cGroupObj","filteredObj","obj","close","MAT_DIALOG_DATA","InterpretationHistoryComponent","PostedFinalComponent","ActivePatientsEffects","activePatientsService","actions$","_active_patients_actions__WEBPACK_IMPORTED_MODULE_0__","action","getAll","payload","getUnassignedPatients","doctors","savePatient","newPatient","updatedData","stopProcedure","dischargedPatient","setSelectedPatientIds","setSelectedTab","_angular_core__WEBPACK_IMPORTED_MODULE_8__","factory","EpochToHumanDatePipe","humanReadableDate","Date","formattedDate","getMonthName","getMonth","getDate","getFullYear","getHours","getMinutes","idx","pure"],"sources":["webpack:///src/app/active-patients/active-patients-routing.module.ts","webpack:///src/app/active-patients/active-patients.module.ts","webpack:///src/app/active-patients/active-patients/active-patients.component.html","webpack:///src/app/active-patients/active-patients/active-patients.component.ts","webpack:///src/app/active-patients/admit-patients/admit-patients.component.html","webpack:///src/app/active-patients/admit-patients/admit-patients.component.ts","webpack:///src/app/active-patients/archived/archived.component.html","webpack:///src/app/active-patients/archived/archived.component.ts","webpack:///src/app/active-patients/assign-group-modal/assign-group-modal.component.html","webpack:///src/app/active-patients/assign-group-modal/assign-group-modal.component.ts","webpack:///src/app/active-patients/interpretation-history/interpretation-history.component.html","webpack:///src/app/active-patients/interpretation-history/interpretation-history.component.ts","webpack:///src/app/active-patients/posted_final/posted-final.component.html","webpack:///src/app/active-patients/posted_final/posted-final.component.ts","webpack:///src/app/active-patients/store/active-patients.effects.ts","webpack:///src/app/pipe/epochToHumanDate/epoch-to-human-date.pipe.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AuthGuard } from \"../guards/auth.guard\";\r\nimport { ActivePatientsComponent } from \"./active-patients/active-patients.component\";\r\nimport { UserRoles } from \"../enum/roles.enum\";\r\nimport { RootComponent } from \"../shared/root/root.component\";\r\nimport { AdmitPatientsComponent } from \"./admit-patients/admit-patients.component\";\r\nimport { PostedFinalComponent } from \"./posted_final/posted-final.component\";\r\nimport { InterpretationHistoryComponent } from \"./interpretation-history/interpretation-history.component\";\r\nimport { ArchivedComponent } from \"./archived/archived.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    canActivate: [AuthGuard],\r\n    component: RootComponent,\r\n    children: [\r\n      {\r\n        path: \"active-patients\",\r\n        component: ActivePatientsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"admit-patients\",\r\n        component: AdmitPatientsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"posted-final\",\r\n        component: PostedFinalComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"interpretation-history\",\r\n        component: InterpretationHistoryComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        path: \"archived\",\r\n        component: ArchivedComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          roles: [\r\n            UserRoles.GENERAL_CLINICIAN,\r\n            UserRoles.SUPERVISORY_CLINICIAN,\r\n            UserRoles.PHYSICIAN,\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ActivePatientsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ActivePatientsComponent } from \"./active-patients/active-patients.component\";\r\nimport { ActivePatientsRoutingModule } from \"./active-patients-routing.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { ActivePatientsService } from \"./services/active-patients.service\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport * as fromActivePatients from \"./store/active-patients.reducer\";\r\nimport { ActivePatientsEffects } from \"./store/active-patients.effects\";\r\nimport { AdmitPatientModalComponent } from \"./admit-patient-modal/admit-patient-modal.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AssignGroupModalComponent } from \"./assign-group-modal/assign-group-modal.component\";\r\nimport { ConfirmationDialogComponent } from \"./confirmation-dialog/confirmation-dialog.component\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatNativeDateModule } from \"@angular/material/core\";\r\nimport { PatientMoreInfoDialogComponent } from \"./patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ManageGroupModule } from \"../manage-group/manage-group.module\";\r\nimport { I18nModule } from \"../i18n/i18n.module\";\r\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\r\nimport { EpochToHumanDatePipe } from \"../pipe/epochToHumanDate/epoch-to-human-date.pipe\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { AdmitPatientsComponent } from \"./admit-patients/admit-patients.component\";\r\nimport { PatientAdmittedModalComponent } from './patient-admitted-modal/patient-admitted-modal.component';\r\nimport { RemoveBiosensorComponent } from './remove-biosensor/remove-biosensor.component';\r\nimport {OwlDateTimeModule} from \"ng-pick-datetime\";\r\nimport { PostedFinalComponent } from \"./posted_final/posted-final.component\";\r\nimport { InterpretationHistoryComponent } from \"./interpretation-history/interpretation-history.component\";\r\nimport { ArchivedComponent } from \"./archived/archived.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ActivePatientsComponent,\r\n    AdmitPatientsComponent,\r\n    AdmitPatientModalComponent,\r\n    AssignGroupModalComponent,\r\n    ConfirmationDialogComponent,\r\n    PatientMoreInfoDialogComponent, \r\n    EpochToHumanDatePipe, PatientAdmittedModalComponent, RemoveBiosensorComponent,\r\n    PostedFinalComponent,\r\n    InterpretationHistoryComponent,\r\n    ArchivedComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        ActivePatientsRoutingModule,\r\n        I18nModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatInputModule,\r\n        MatNativeDateModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatSortModule,\r\n        MatCheckboxModule,\r\n        MatCardModule,\r\n        MatListModule,\r\n        MatDialogModule,\r\n        MatTooltipModule,\r\n        MatTabsModule,\r\n        MatPaginatorModule,\r\n        ManageGroupModule,\r\n        ReactiveFormsModule,\r\n        MatAutocompleteModule,\r\n        StoreModule.forFeature(\r\n            fromActivePatients.patientsFeatureKey,\r\n            fromActivePatients.ActivePatientsReducer\r\n        ),\r\n        EffectsModule.forFeature([ActivePatientsEffects]),\r\n        LifeSignalsModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatTooltipModule,\r\n        OwlDateTimeModule\r\n    ],\r\n  providers: [\r\n    {\r\n      provide: ActivePatientsService,\r\n      useClass: ActivePatientsService,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: KeycloakBearerInterceptor,\r\n      multi: true,\r\n    },\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill', floatLabel: 'never' } },\r\n  ],\r\n})\r\nexport class ActivePatientsModule {}\r\n","<ls-page-header type=\"active_patients\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"get()\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"active-patients-module.button.assign\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"active-patients-module.button.register_patient\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"active-patients-module.button.admit_patient\" | translate }}\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"activePatient_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"active-patients-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"active-patients-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-9 col-xl-9 col-xxl-8 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <!-- <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.doctor\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"doctorsList\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown> -->\r\n                                <!-- <app-matselect-withsearch class=\"matselect-search\" [items]=\"doctorsList\" [key]=\"'displayName'\" [value]=\"'id'\"></app-matselect-withsearch> -->\r\n                                <!-- <mat-select class=\"w100 nested-select d-flex flex-row align-items-center justify-content-between\">\r\n                                        <mat-option *ngFor=\"let doc of doctorsList\" class=\"select-value\" [value]=\"filterObject.doctor\" (onSelectionChange)=\"searchByGroup('CLINICAL',$event)\">\r\n                                            {{doc['displayName']}}\r\n                                        </mat-option>                                        \r\n                                    </mat-select> -->\r\n                                <mat-label class=\"toplabel d-block pb-0 pb-md-1 ps-0 ps-lg-2 pt-2 pt-sm-0\">{{'active-patients-module.prescriber' | translate}}</mat-label>\r\n                                    <select class=\"w100 nested-select d-flex flex-row align-items-center justify-content-between\" (change)=\"searchByGroup('DOCTOR',$event)\">\r\n                                        <option value=\"\" class=\"select-value\">All</option>\r\n                                        <option *ngFor=\"let doc of doctorsList\" [value]=\"doc['_id']\" class=\"select-value\" >{{doc['displayName']}}</option>\r\n                                    </select>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <!-- <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\" \r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.monitoring_duration' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"doctors$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown> -->\r\n                                <mat-label class=\"toplabel d-block pb-0 pb-md-1 ps-0 ps-lg-2 pt-2 pt-sm-0\">{{'active-patients-module.monitoring_duration' | translate}}</mat-label>\r\n                                <div class=\"nested-select\" (click)=\"picker.open()\">                                \r\n                                    <mat-date-range-input [rangePicker]=\"picker\">\r\n                                      <input matStartDate placeholder=\"All\">\r\n                                      <input matEndDate  class=\"move\" disabled>\r\n                                    </mat-date-range-input>\r\n                                    <!-- <mat-datepicker-toggle matIconSuffix [for]=\"picker\" class=\"matdate-picker\"></mat-datepicker-toggle> -->\r\n                                    <mat-date-range-picker #picker class=\"date\"></mat-date-range-picker>\r\n                                </div>\r\n                            </div>\r\n                         \r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'active-patients-module.status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-4 mt-2 mt-lg-0\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\r\n                            <mat-label>{{ \"active-patients-module.search\" | translate }}\r\n                            </mat-label>\r\n                            <input [(ngModel)]=\"searchObject.string\" matInput type=\"search\" (keyup)=\"search()\"\r\n                                id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template lsWidgetName=\"patientId\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">                    \r\n                        <div class=\"me-2\">{{ row?.patient_id_mrn }}</div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <strong><div class=\"me-2\">{{ row?.name }}</div></strong>\r\n                    <mat-icon fontSet=\"material-icons-outlined\" style=\"cursor: pointer;\" (click)=\"patientViewMore(row)\">info</mat-icon>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"prescription_id\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.prescription_id }}</div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"prescribing_physician\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div *ngFor=\"let doc of doctorsList\" class=\"me-2\">\r\n                        <div *ngIf=\"doc['_id']===row?.fk_prescriber\">\r\n                            {{ doc['displayName'] }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"referal_physician\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.fk_r_doctor }}</div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.location }}</div>\r\n                </div>\r\n            </ng-template>\r\n            <!-- <ng-template lsWidgetName=\"location\" let-row>\r\n                <mat-list type=\"button\" class=\"taglist pt-0 small-tags\" *ngIf=\"row?.cGroup || row?.pGroup\"\r\n                    (click)=\"openAssignGroupModal(row)\">\r\n                    <mat-list-item type=\"button\" *ngIf=\"row?.pGroup\" class=\"mx-1 small-tag remote-tag\"\r\n                        [class.default-cursor]=\"!isGcorScCheck()\">\r\n                        {{ row?.location}}\r\n                    </mat-list-item> -->\r\n                    <!-- <mat-list-item type=\"button\" *ngIf=\"row?.cGroup\" class=\"mx-1 small-tag sepsis-tag\"\r\n                        [class.default-cursor]=\"!isGcorScCheck()\">\r\n                        {{ row?.cGroup?.name }}\r\n                    </mat-list-item> -->\r\n                <!-- </mat-list> -->\r\n                <!-- <button mat-flat-button type=\"button\" color=\"primary\" class=\"assign-btn\"\r\n                    *ngIf=\"!row?.cGroup && !row?.pGroup && isGcorScCheck()\" (click)=\"openAssignGroupModal(row)\">\r\n                    {{ \"active-patients-module.button.assign_group\" | translate }}\r\n                </button> -->\r\n                <!-- <span *ngIf=\"!row?.cGroup && !row?.pGroup && !isGcorScCheck()\">\r\n                    {{\"parameter-alerts-module.unassigned\" |translate}}\r\n                </span>\r\n            </ng-template> -->\r\n            <!-- <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>\r\n                </div>\r\n            </ng-template> -->\r\n            <!-- <ng-template lsWidgetName=\"biosensorStatus\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"!row.activePatch\">\r\n                    <mat-icon class=\"stop-monitoring mx-1 btn-boxed btn-no-shadow\">\r\n                        clear\r\n                    </mat-icon>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"row.activePatch\">\r\n                    <mat-icon color=\"warn\" class=\"mx-1 btn-boxed btn-no-shadow\" *ngIf=\"!row.biosensorStatus\">\r\n                        close</mat-icon>\r\n                    <mat-icon class=\"tick-icon mx-1 btn-boxed btn-no-shadow\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.STREAMING\">\r\n                        check</mat-icon>\r\n                    <button mat-mini-fab class=\"monitoring-icon mx-1 btn-boxed btn-no-shadow\" [disabled]=\"!isScOrGc()\"\r\n                        (click)=\"openStopMonitoringDialog(row.patientId)\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.STREAMING\">\r\n                        <mat-icon>stop</mat-icon>\r\n                    </button>\r\n                    <mat-icon class=\"stop-monitoring mx-1 btn-boxed btn-no-shadow\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.FINALIZE_IN_PROGRESS\">\r\n                        clear\r\n                    </mat-icon>\r\n                    <button mat-mini-fab class=\"start-monitoring mx-1 btn-boxed btn-no-shadow\" color=\"primary\"\r\n                        *ngIf=\"row.biosensorStatus === monitoringStatus.FINALIZE_IN_PROGRESS\">\r\n                        <mat-icon>play_arrow</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"activePatchHeading\">\r\n                <img class=\"me-1\" alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\r\n                {{'active-patients-module.table.id' | translate}}\r\n            </ng-template> -->\r\n            <ng-template lsWidgetName=\"activePatch\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" />\r\n                    <div class=\"me-3 biosensor-id\" *ngFor=\"let bio of row.biosensor\">\r\n                       - {{ bio['biosensor_id']}}\r\n                    </div>\r\n                    <!-- <mat-icon fontSet=\"material-icons-outlined\" class=\"cursor-pointer\" (click)=\"openBiosensorModal(row?.patientId, row)\">add_circle_outline</mat-icon> -->\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"monitoring\" let-row>\r\n                <div class=\"d-flex justify-content-center align-items-center\" >\r\n                    <div class=\"me-2\" *ngFor=\"let bio of row.biosensor\">\r\n                        {{ bio['monitoring_started_on'] }}\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                <!-- Pause Notification -->\r\n                <!-- <button mat-mini-fab color=\"primary\" class=\"btn-boxed boxed-height btn-no-shadow  me-2\">  <img alt=\"Push Notification\" src=\"assets/icons/pause-notification.svg\"  /></button> -->\r\n                <!-- <button mat-mini-fab color=\"primary\" class=\"btn-boxed boxed-height btn-no-shadow  me-2\">  <img alt=\"Push Notification\" src=\"assets/icons/pause-notification-disable.svg\"  /></button> -->\r\n                <!-- <button mat-flat-button color=\"primary\" class=\"btn-no-shadow mx-auto me-2\" *ngIf=\"isClinicianCheck() || isPhy\" [disabled]=\"!row.activePatch\" (click)=\"addNewEvent(row)\">\r\n                    {{ \"active-patients-module.button.add_event_note\" | translate }}\r\n                </button>-->\r\n                <button mat-icon-button [matMenuTriggerFor]=\"patientMenu\" class=\"shadow-none\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button> \r\n                <mat-menu #patientMenu=\"matMenu\" class=\"setting-card-menu profile-card-menu\" xPosition=\"before\">\r\n                    <button mat-menu-item *ngIf=\"isClinicianCheck()\"\r\n                        (click)=\"openAdmitPatientModalWith({key:'edit-active-patient', value:row?.patient_id_mrn})\">{{\r\n                        \"active-patients-module.button.edit\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\">{{\r\n                        \"active-patients-module.button.abort\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\">{{\r\n                        \"active-patients-module.button.assign\" | translate}}</button>\r\n                </mat-menu>\r\n            </ng-template>\r\n        </ls-table>\r\n    </div>\r\n</div>","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, first, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-active-patients\",\r\n  templateUrl: \"./active-patients.component.html\",\r\n  styleUrls: [\"./active-patients.component.scss\"],\r\n})\r\nexport class ActivePatientsComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  doctor!:string;\r\n  get(){\r\n   \r\n      console.log(this.doctorsList);\r\n    \r\n  }\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  activePatient_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientId\",\r\n      label: \"Patient Details\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"prescription_id\",\r\n      label: \"Prescription id\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"prescribing_physician\",\r\n      label: \"prescribing physician\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"referal_physician\",\r\n      label: \"referal physician\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\", \"align-items-center\"],\r\n    },\r\n    {\r\n      id: \"activePatch\",\r\n      label: \"biosensor ID\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"monitoring\",\r\n      label: \"procedure Start time\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Status\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    \r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 10,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"first_name\",\r\n      direction: \"asc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string ;doctor:string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n    doctor: null\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n  public doctors$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"physical\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n    this.doctors$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    //TODO:\r\n    this.getDoctors();\r\n    //New API: Get required staff members.\r\n    this.service.getFacilityUsers();\r\n\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      console.log(\"Fetching patients..\")\r\n      //this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.first_name} ${x.last_name}`,\r\n              //weightUnit: x.weightUnit.toUpperCase(),\r\n              //heightUnit: x.heightUnit.toUpperCase()\r\n              patientId: x.patient_id_mrn\r\n            };\r\n            return patient;\r\n          });\r\n          console.log(this.activePatients);\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  doctorsList = [];\r\n  doctorsListSub: Subscription;\r\n\r\n  getDoctors() {\r\n    this.doctorsListSub = this.manager.getDoctorsList().subscribe((list) => {\r\n      let persons = (list as any).items;\r\n      this.doctorsList = persons?.map(doctor => {\r\n        return {\r\n          ...doctor,\r\n          displayName: `${doctor?.first_name} ${doctor?.last_name}`\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'search_query';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'DOCTOR') {\r\n      this.filterObject.doctor = groupId.target.value;\r\n    } else if(key === 'physical') {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"first_name\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n \r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = (event.active === 'patientId')  ? 'first_name' : \r\n                    (event.active === 'prescription_id') ? 'prescription_id' : \r\n                    (event.active === 'referal_physician') ? 'doctor_user_name' :\r\n                    (event.active === 'prescribing_physician') ? 'prescriber_user_name' : \"\";\r\n    \r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n    console.log(activeKey)\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"1200px\",\r\n      height:\"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","<ls-page-header type=\"admit_patients\">\n    <ng-container page-actions>\n        <div class=\"d-flex justify-content-end me-4\">\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none button-group my-2\">\n              <button mat-flat-button color=\"accent\" class=\"mx-1\" (click)=\"openAdmitPatientModalWith({key: 'Active Patient', value: ''})\" *ngIf=\"isClinicianCheck()\"\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\">\n                    {{ \"admit-patients-module.button.admit_patient\" | translate }}\n                </button>\n<!--                <button mat-flat-button color=\"primary\" class=\"mx-1\" disabled>-->\n<!--                    {{ \"admit-patients-module.button.add_to_dashboard\" | translate }}-->\n<!--                </button>-->\n            </div>\n              <div class=\"d-block d-lg-none my-2 \">\n                 <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\n                    <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'Active Patient', value: ''})\" *ngIf=\"isClinicianCheck()\"\n                            [disabled]=\"selectedPatients?.selected?.length !== 0\">\n                        {{ \"admit-patients-module.button.admit_patient\" | translate }}\n                    </button>\n<!--                    <button mat-menu-item disabled>-->\n<!--                        {{ \"admit-patients-module.button.add_to_dashboard\" | translate }}-->\n<!--                    </button>-->\n                </mat-menu>\n            </div>\n        </div>\n    </ng-container>\n</ls-page-header>\n<!-- active patient topheader after-->\n\n<!-- <div class=\"row align-items-center justify-content-between\">\n        <div class=\"col-10 col-sm-10 col-md-10 col-lg-5\">\n\n        </div>\n        <div class=\"col-2 col-sm-2 col-md-2 col-lg-7\">\n            <div class=\"d-flex justify-content-end\">\n                <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\n\n                </div>\n                <div class=\"d-block d-lg-none my-2 \">\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\n                        <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\n\n                    </mat-menu>\n                </div>\n            </div>\n        </div>\n    </div>-->\n<div class=\"px-3\">\n\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\" [data]=\"unassignedPatients\" [columns]=\"assignPatient_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\" [isSelected]=\"isSelected\" [Id]=\"'patchId'\" (selected)=\"onPatientsSelected($event)\"\n            [selectOnlyActive]=\"false\">\n            <ng-container table-header>\n                <div class=\"my-3 row\">\n                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">\n                            <mat-label>{{ \"admit-patients-module.search\" | translate }}\n                            </mat-label>\n                            <input autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"alphaNumericsOnly($event)\"/>\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\n                            </mat-icon>\n                            <mat-icon matSuffix (click)=\"search()\">search</mat-icon>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template lsWidgetName=\"status\" let-row>\n               <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"!row.patchId\">-</div> \n                <div class=\"d-flex justify-content-center align-items-center\" *ngIf=\"row.patchId && row?.patchDetails?.length\">\n                    <mat-icon color=\"warn\" class=\"mx-1 btn-boxed btn-no-shadow\" *ngIf=\"row?.patchDetails[0]?.status !== monitoringStatus.STREAMING\">\n                        close</mat-icon>\n                    <mat-icon class=\"tick-icon mx-1 btn-boxed btn-no-shadow\" *ngIf=\"row?.patchDetails[0]?.status === monitoringStatus.STREAMING\">\n                        check</mat-icon>\n                    <button mat-mini-fab color=\"primary\" class=\"monitoring-icon mx-1 btn-boxed btn-no-shadow\" [disabled]=\"!isSCorGC\" (click)=\"openStopMonitoringDialog(row.patchId)\" *ngIf=\"row?.patchDetails[0]?.status === monitoringStatus.STREAMING\">\n                        <mat-icon>stop</mat-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template lsWidgetName=\"patchIdHeading\">\n                <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\" class=\"me-2\" /> {{'active-patients-module.table.activePatch' | translate}}\n            </ng-template>\n            <ng-template lsWidgetName=\"patchId\" let-row>\n                <div class=\"d-flex justify-content-center align-items-center ps-3\">\n                    <img alt=\"bio sensor icon\" src=\"assets/icons/biosensor.svg\"  class=\"me-2\" />\n                    <div class=\"me-2 biosensor-id\">\n                        {{ row.patchId || \"-\" }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template lsWidgetName=\"actions\" let-row>\n                <button *ngIf=\"row.patchDetails?.length && row?.patchDetails[0]?.status !== monitoringStatus.STREAMING && isSCorGC\" mat-flat-button color=\"primary\" class=\"btn-boxed px-2 btn-no-shadow me-2\" (click)=\"deleteBiosensor(row.patchDetails[0])\">\n                    <mat-icon class=\"justify-content-center\">delete_outline</mat-icon>\n                </button>\n                <button mat-flat-button color=\"accent\" class=\"btn-no-shadow me-2\" *ngIf=\"isClinicianCheck()\" (click)=\"openAdmitPatientModalWith({key:'edit-assign-patient', value:row})\">\n                    {{ \"admit-patients-module.button.assign_patient\" | translate }}\n                </button>\n            </ng-template>\n        </ls-table>\n    </div>\n</div>\n","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  FilterKeysForAssignPatient,\r\n  NewPatient,\r\n  ActivePatientsTabs,\r\n  UnassignedPatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { convertToMinutes, epoch } from \"../forms/active-patients.form\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport {PatientAdmittedModalComponent} from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport {SnackbarService} from \"@services/snackbar.service\";\r\n\r\n@Component({\r\n  selector: \"app-admit-patients\",\r\n  templateUrl: \"./admit-patients.component.html\",\r\n  styleUrls: [\"./admit-patients.component.scss\"],\r\n})\r\nexport class AdmitPatientsComponent implements OnInit, OnDestroy {\r\n  selectedPatients: SelectionModel<UnassignedPatient> = new SelectionModel<UnassignedPatient>(true);\r\n  allPatients: ActivePatient[] = new Array();\r\n  unassignedPatients: UnassignedPatient[] = new Array();\r\n  patientsData: Array<any> = new Array();\r\n  sortedData: ActivePatient[];\r\n  is_selected: boolean[] = [false];\r\n  filteredString: string;\r\n  patientIdsToPass: string[] = new Array();\r\n  error: any;\r\n  reloadInterval;\r\n\r\n  assignPatient_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patchId\",\r\n      label: \"Biosensor ID\",\r\n      headerClass: [\"text-start\"],\r\n      style: \"max-width: 240px; width: 240px;\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\",\"bold-text\"],\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Monitoring\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n  ];\r\n  config: LSTableConfig = {\r\n    id: \"admit-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\", \"me-3\"],\r\n      header: {\r\n        style: \"max-width: 50%; width: 50%;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"\",\r\n      direction: \"\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  tabletabs: Array<string> = new Array();\r\n  selectedTab: ActivePatientsTabs;\r\n  selectedIds: string[] = [];\r\n  monitoringStatus = MonitoringStatus;\r\n  isSCorGC = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n  ) { }\r\n\r\n  model: string;\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  unassignedPatientsSub: Subscription;\r\n  panelId;\r\n  ngOnInit() {\r\n    // this.route.queryParamMap.subscribe((params: ParamMap) => {\r\n    //   this.selectedIds = (params.get(\"ids\") || \"\").split(\",\");\r\n    //   this.patientIdsToPass = this.selectedIds;\r\n    // });\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.unassignedPatientsSub = this.manager.selectUnassignedPatients()\r\n      .pipe(map(response => {\r\n        this.error = response?.error;\r\n        this.config = {\r\n          ...this.config,\r\n          page: {\r\n            ...this.config.page,\r\n            length: response?.unassignedPatients_total || 0\r\n          },\r\n          rowSelectEnabled:false,\r\n          tableState: <TableState>response?.tableState\r\n        }\r\n        this.unassignedPatients = response?.UNASSIGNED_PATIENTS_DATA || [];\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.fetchUnAssignedPatientsData(this.service.unassignedPatientsUrl(this.config, this.searchObject));\r\n    ref = this.manager.selectUnassignedPatients();\r\n    return ref;\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'patchId';\r\n    if(this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n    this.selectedPatients.clear();\r\n  }\r\n\r\n  labelPatches(row: ActivePatient) {\r\n    if (row.patchIds?.length) {\r\n      return row.patchIds.map(p => p.deviceId.toUpperCase()).join(\", \");\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n  initVariables() {\r\n    for (let i in FilterKeysForAssignPatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n    this.tabletabs.push(ActivePatientsTabs.ASSIGN_PATIENT);\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getUnassignedPatientData();\r\n  }\r\n  isSelected(row: UnassignedPatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patchId).includes(row.patchId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    if(role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1) {\r\n      this.isSCorGC = true;\r\n    }\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  resetTable() {\r\n    this.searchObject = {\r\n      keyword: null,\r\n      string: null\r\n    };\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page || {},\r\n        pageIndex: 0,\r\n        length: undefined\r\n      }\r\n    };\r\n  }\r\n\r\n  getUnassignedPatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"\";\r\n      this.config.sort.direction = \"\";\r\n    }\r\n    let url = `patches/unassigned?page=${this.config.page.pageIndex + 1}&size=${this.config.page.pageSize}`;\r\n    if (this.config.sort.active && this.config.sort.direction) {\r\n      url = `${url}&sortBy=${this.config.sort?.active}:${this.config.sort?.direction}`;\r\n    }\r\n    if (this.searchObject && this.searchObject?.keyword && this.searchObject?.string) {\r\n      url = `${url}&${this.searchObject?.keyword?.toLowerCase()}=${this.searchObject?.string}`;\r\n    }\r\n    this.manager.fetchUnAssignedPatientsData(url);\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<UnassignedPatient>) {\r\n    this.selectedPatients = e;\r\n   /* this.patientIdsToPass = new Array();\r\n    let biosensorPatientData = (e.selected || []).filter(s => s?.activePatch !== undefined && s?.activePatch !== \"\" && s?.activePatch !== null);\r\n    biosensorPatientData.forEach(e => {\r\n      if (!this.patientIdsToPass.includes(e?.patientId))\r\n        this.patientIdsToPass.push(e?.patientId);\r\n    });*/\r\n  }\r\n\r\n  getActivePatches(selected: ActivePatient[]) {\r\n    return (selected || []).filter(s => s?.activePatch !== undefined && s?.activePatch !== \"\" && s?.activePatch !== null);\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'deviceIds' ? 'thirdPartyDevices' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    //this.config.sort.active = event.active;\r\n    //this.config.sort.direction = event.direction;\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  goBackToSummary() {\r\n    this.router.navigate([\"summary\"]);\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case ActivePatientsTabs.ACTIVE_PATIENT:\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getUnassignedPatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent,{\r\n              maxWidth: \"90vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus : false,\r\n              data: {title: 'active-patients-module.dialog.patient_admitted'}\r\n            });\r\n          }\r\n        });\r\n        break;\r\n      case ActivePatientsTabs.ASSIGN_PATIENT:\r\n        this.admitPatientModal({ patchId: this.selectedPatients.selected[0] })\r\n          .subscribe(resp => {\r\n            if (resp) {\r\n              this.getUnassignedPatientData();\r\n              this.dialog.open(PatientAdmittedModalComponent,{\r\n                maxWidth: \"90vw\",\r\n                //minWidth: \"320px\",\r\n                width: \"520px\",\r\n                backdropClass: \"backdropBackground\",\r\n                disableClose: true,\r\n                autoFocus : false,\r\n                data: {title: 'active-patients-module.dialog.patient_assigned'}\r\n              });\r\n            }\r\n          });\r\n        break;\r\n\r\n      case 'edit-assign-patient':\r\n        if (this.validateBiosensor(data?.value?.patchId)) {\r\n          this.admitPatientModal({patchId: data.value})\r\n              .subscribe(resp => {\r\n                if (resp) {\r\n                  this.getUnassignedPatientData();\r\n                  this.dialog.open(PatientAdmittedModalComponent, {\r\n                    maxWidth: \"90vw\",\r\n                    //minWidth: \"320px\",\r\n                    width: \"520px\",\r\n                    backdropClass: \"backdropBackground\",\r\n                    disableClose: true,\r\n                    autoFocus: false,\r\n                    data: {title: 'active-patients-module.dialog.patient_assigned'}\r\n                  });\r\n                }\r\n              });\r\n        } else {\r\n          this.snackbar.openSnackBar('errors.invalid_patchId', 'bottom', 'center', true);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"90vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  //  /**This function is used to open Discahrge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"admit-patients-module.dialog.discharge_patient\",\r\n          message: \"admit-patients-module.dialog.discharge_and_stop_monitoring\"\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"admit-patients-module.dialog.discharge_patient\",\r\n          message: \"admit-patients-module.dialog.discharge_patient_message\"\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patchId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"90vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"admit-patients-module.dialog.stop_monitoring\",\r\n        message: \"admit-patients-module.dialog.stop_monitoring_message\"\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.stopMonitoringUnassigned(patchId);\r\n      }\r\n    });\r\n  }\r\n\r\n  userRole() {\r\n    if (this.authService.getRoles()[0] === 'GC') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  openBiosensorInfoModal(row) {\r\n    this.dialog.open(PatientMoreInfoDialogComponent, {\r\n      width: \"700px\",\r\n      //minWidth: \"700px\",\r\n      maxWidth: \"95vw\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: [...row.patchIds || []]\r\n    }).afterClosed()\r\n      .subscribe(response => {\r\n        if (response) {\r\n          let patient: NewPatient = {\r\n            patient_id_mrn: row.patient_id_mrn,\r\n            first_name: row.first_name,            \r\n            last_name: row.last_name,\r\n            email: row.email,\r\n            country_code:row.country_code,\r\n            mobile: row.mobile,\r\n            dob: row.dob ? row.dob : \"\",\r\n            age: parseInt(row.age),\r\n            sex: row.sex,\r\n            weight: parseInt(row.weight),\r\n            height: parseInt(row.height),\r\n            country:row.country,\r\n            zip_code:row.zip_code,\r\n            street_address_1:row.street_address_1,\r\n            street_address_2:row.street_address_2,\r\n            city:row.city,\r\n            state:row.state,\r\n            em_contact_name:row.em_contact_name,\r\n            em_contact_country_code:row.em_contact_country_code,\r\n            em_contact_number:row.em_contact_number,\r\n            fk_prescriber:row.fk_prescriber,\r\n            fk_technician:row.fk_technician,\r\n            fk_r_doctor:row.fk_r_doctor,\r\n            pri_approver_id:row.pri_approver_id,\r\n            final_approver_id:row.final_approver_id,\r\n            primary_indication:row.primary_indication,\r\n            monitoring_duration:row.monitoring_duration,\r\n            order_id:row.order_id,\r\n            pacemaker:row.pacemaker,\r\n            icd:row.icd,\r\n            additional_info:row.additional_info,\r\n            prescription_id:row.prescription_id,\r\n            billing_indication:row.billing_indication,\r\n            billing_method:row.billing_method,\r\n            location:row.location,\r\n            biosensor:row.biosensor,\r\n            status:row.status,\r\n            facility_id:row.facility_id,\r\n            created_by:row.created_by,\r\n\r\n            admissionId: row.admissionId,\r\n            primaryContact:row.primaryContact,\r\n            weightUnit: row.weightUnit,\r\n            heightUnit: row.heightUnit,\r\n            prescribingPhysician:row.prescribingPhysician,\r\n            technicianName:row.technicianName,\r\n            referalPhysician:row.referalPhysician,\r\n            interpPhysician:row.interpPhysician,\r\n            prelimInterpPhysician:row.prelimInterpPhysician,\r\n            locationGroup:row.locationGroup,\r\n            doctorId: row.doctorId,\r\n            cGroup: row.cGroup,\r\n            pGroup: row.pGroup,\r\n            patchIds: response,\r\n            deviceIds: row.deviceIds,\r\n            createdDateTime: row.createdDateTime,\r\n            startedOn: epoch(row.createdDateTime),\r\n            procedureDuration: convertToMinutes(row.procedureDuration),\r\n            estimatedDischarge: epoch(row.estimatedDischarge)\r\n\r\n\r\n            // let patient: NewPatient = {\r\n            //   patientId: row.patientId,\r\n            //   admissionId: row.admissionId,\r\n            //   dob: row.dob ? row.dob : \"\",\r\n            //   age: parseInt(row.age),\r\n            //   phoneNo: row.phoneNo,\r\n            //   primaryContact:row.primaryContact,\r\n            //   email: row.email,\r\n            //   gender: row.gender,\r\n            //   weight: parseInt(row.weight),\r\n            //   height: parseInt(row.height),\r\n            //   weightUnit: row.weightUnit,\r\n            //   heightUnit: row.heightUnit,\r\n            //   firstName: row.firstName,            \r\n            //   lastName: row.lastName,\r\n            //   country:row.country,\r\n            //   zipCode:row.zipCode,\r\n            //   street1:row.street1,\r\n            //   street2:row.street2,\r\n            //   city:row.city,\r\n            //   state:row.state,\r\n            //   emergencyContactName:row.emergencyContactName,\r\n            //   emergencyContactNumber:row.emergencyContactNumber,\r\n            //   prescribingPhysician:row.prescribingPhysician,\r\n            //   technicianName:row.technicianName,\r\n            //   referalPhysician:row.referalPhysician,\r\n            //   interpPhysician:row.interpPhysician,\r\n            //   prelimInterpPhysician:row.prelimInterpPhysician,\r\n            //   locationGroup:row.locationGroup,\r\n            //   primaryIndication:row.primaryIndication,\r\n            //   monitoringDuration:row.monitoringDuration,\r\n            //   orderId:row.orderId,\r\n            //   prescriptionId:row.prescriptionId,\r\n            //   additionalInfo:row.additionalInfo,\r\n            //   billingIndication:row.billingIndication,\r\n            //   billingMethod:row.billingMethod,\r\n            //   doctorId: row.doctorId,\r\n            //   cGroup: row.cGroup,\r\n            //   pGroup: row.pGroup,\r\n            //   patchIds: response,\r\n            //   deviceIds: row.deviceIds,\r\n            //   createdDateTime: row.createdDateTime,\r\n            //   startedOn: epoch(row.createdDateTime),\r\n            //   procedureDuration: convertToMinutes(row.procedureDuration),\r\n            //   estimatedDischarge: epoch(row.estimatedDischarge)\r\n          };\r\n          this.manager.updatePatient(patient);\r\n        }\r\n      });\r\n  }\r\n  validateBiosensor(biosensorId) {\r\n    let patternToMatch = /^[a-zA-Z]{1}[a-zA-Z0-9]*$/;\r\n    return patternToMatch.test(biosensorId);\r\n\r\n  }\r\n  deletePatch(patchId) {\r\n    this.service.deletePatch(patchId)\r\n        .subscribe(res => {\r\n          this.fetchTableData();\r\n        }, (error) => {\r\n          if(error) {\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        });\r\n  }\r\n  deleteBiosensor(biosensor) {\r\n    console.log(biosensor);\r\n      const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"90vw\",\r\n        // minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"admit-patients-module.dialog.delete_biosensor\",\r\n          message: biosensor.status === this.monitoringStatus.STREAMING ? \"admit-patients-module.dialog.stop_monitoring_and_delete\": \"admit-patients-module.dialog.delete_biosensor_message\"\r\n        },\r\n      });\r\n\r\n      stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if(biosensor.status === this.monitoringStatus.STREAMING) {\r\n            this.service.stopMonitoringUnassigned([biosensor.patchId])\r\n                .subscribe((res: any) => {\r\n                  if(res.status === 'OK') {\r\n                    this.deletePatch(biosensor.patchId);\r\n                  } else {\r\n                    this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                  }\r\n                }, (error) => {\r\n                  if(error) {\r\n                    this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                  }\r\n                });\r\n          } else {\r\n            this.deletePatch(biosensor.patchId);\r\n          }\r\n        }\r\n      });\r\n  }\r\n  stopMonitoringUnassigned(patchId) {\r\n    this.service.stopMonitoringUnassigned([patchId])\r\n        .subscribe((res: any) => {\r\n          if(res.status === 'OK') {\r\n            this.fetchTableData();\r\n          }\r\n          else {\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        }, (error) => {\r\n          if(error) {\r\n            this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n          }\r\n        });\r\n  }\r\n  alphaNumericsOnly(event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z0-9]+$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    if (this.unassignedPatientsSub) {\r\n      this.unassignedPatientsSub.unsubscribe();\r\n    }\r\n\r\n  }\r\n}\r\n","<ls-page-header type=\"archived\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/download-icon.svg\">\r\n                    <div class=\"move\">{{ \"archived-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/print_icon.png\">\r\n                    <div class=\"move\">{{ \"archived-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <!-- <a type=\"button\">\r\n                    <img src=\"assets/icons/download_all.png\">\r\n                </a>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print_all.png\">\r\n                </a> -->\r\n                <!-- <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"-module.button.register_patient\" | translate }}\r\n                </button> -->\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <!-- <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"-module.button.admit_patient\" | translate }}\r\n                    </button> -->\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"archived_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"archived-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-9 col-xl-9 col-xxl-8 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.interpreter' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-xl-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'archived-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-3 col-xxl-4 mt-2 mt-lg-0\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\r\n                            <mat-label>{{ \"archived-module.search\" | translate }}\r\n                            </mat-label>\r\n                            <input [(ngModel)]=\"searchObject.string\" matInput type=\"search\" (keyup)=\"search()\"\r\n                                id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-template lsWidgetName=\"patientDetails\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{row?.patientId}}</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center bold-text\">\r\n                  <strong>  <div class=\"me-2\">{{ row?.name }}</div>   </strong>                 \r\n                </div>\r\n            </ng-template>  \r\n\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                   \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportTime\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">date</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">time</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"interpreter\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportType\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template>     \r\n\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"patientMenu\" class=\"shadow-none\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #patientMenu=\"matMenu\" class=\"setting-card-menu profile-card-menu\" xPosition=\"before\">\r\n                    <button mat-menu-item *ngIf=\"isClinicianCheck()\" >{{ \"archived-module.button.edit\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\" >{{ \"archived-module.button.add_notes\" | translate}}</button>\r\n                </mat-menu>\r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"view\" let-row>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/pdf.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n            <ng-template lsWidgetName=\"print\" let-row>               \r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print.png\">\r\n                </a>\r\n           \r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"download\" let-row>\r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/download.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n        </ls-table>\r\n    </div>\r\n</div>","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-archived\",\r\n  templateUrl: \"./archived.component.html\",\r\n  styleUrls: [\"./archived.component.scss\"],\r\n})\r\nexport class ArchivedComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  archived_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientDetails\",\r\n      label: \"PATIENT DETAILS\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"reportTime\",\r\n      label: \"report time\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"prescriber\",\r\n      label: \"prescriber\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    \r\n    {\r\n      id: \"interpreter\",\r\n      label: \"interpreter\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"reportType\",\r\n      label: \"report type\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"view\",\r\n      label: \"view\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"print\",\r\n      label: \"print\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"download\",\r\n      label: \"download\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    \r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"patientid\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"PHYSICAL\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.firstName} ${x.lastName}`,\r\n              weightUnit: x.weightUnit.toUpperCase(),\r\n              heightUnit: x.heightUnit.toUpperCase()\r\n            };\r\n            return patient;\r\n          });\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'searchText';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'CLINICAL') {\r\n      this.filterObject.cGroupId = groupId;\r\n    } else {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"patientid\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'deviceIds' ? 'thirdPartyDevices' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    console.log(patient?.patientId)\r\n    console.log(patient?.patchIds[0]?.startTime)\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","<mat-card class=\"dialog-header\">\r\n    <div class=\"assign-header\">\r\n        <div class=\"list-item ms-0\">\r\n            <h1 mat-dialog-title>\r\n                {{ \"active-patients-module.table.assign_group_title\" | translate }}\r\n            </h1>\r\n            <span class=\"pid d-block\">{{'dashboard-module.pid'|translate}}. {{ data.patientId }}</span>\r\n        </div>\r\n        <!--<div class=\"list-item\">\r\n      <span>{{data?.activePatch || '-'}}</span>\r\n    </div>-->\r\n        <div class=\"list-item patient-group\">\r\n            <strong>{{ data.firstName }} {{ data.lastName }}</strong>\r\n            <span class=\"time-group\">{{data?.pGroup?.name}}{{(data?.pGroup && data?.cGroup ) ? \",\" :\"\"}}\r\n        {{data?.cGroup?.name}}</span>\r\n            <!--<span class=\"time-group\">{{ data.createdDateTime }}</span>-->\r\n        </div>\r\n    </div>\r\n    <!--<button mat-button mat-dialog-close>\r\n    <mat-icon>close</mat-icon>\r\n  </button>-->\r\n</mat-card>\r\n\r\n<mat-dialog-content class=\"mat-dialog-popup assign-group-dialog\">\r\n  <div class=\"assign-group-content\">\r\n    <form [formGroup]=\"assignGroupForm\">\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col-sm-6\">\r\n          <h2>\r\n            {{ \"active-patients-module.form_label.location_group\" | translate }}\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n          <app-nested-dropdown class=\"nested-selectfilter selectnested toplabel-no\" [label]=\"'active-patients-module.form_label.location' | translate\"\r\n            [options]=\"locationGroups$ | async\" key=\"groupId\" displayKey=\"name\" [showSelect]=\"true\"\r\n            [selectedValue]=\"assignGroupForm?.controls?.pGroup?.value\" (selected)=\"onLocationSelected($event)\"\r\n            [assignGroup]=\"true\">\r\n          </app-nested-dropdown>\r\n          <!-- <mat-form-field appearance=\"fill\" class=\"whiteselect selectfilter\">\r\n              <mat-label>{{ \"active-patients-module.form_label.location\" | translate }}\r\n              </mat-label>\r\n              <mat-select formControlName=\"pGroup\" appearance=\"fill\" class=\"search-filter-select\">\r\n                <mat-option [value]=\"''\">{{'active-patients-module.form_label.select'|translate}}</mat-option>\r\n                <mat-option [value]=\"lgroup.id\" *ngFor=\"let lgroup of locationGroups$ | async\">{{ lgroup?.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field> -->\r\n        </div>\r\n      </div>\r\n  \r\n      <!--<div class=\"row align-items-center\">\r\n          <div class=\"col-sm-6\">\r\n            <h2>{{ \"active-patients-module.form_label.subgroup\" | translate }}</h2>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <mat-form-field appearance=\"fill\" class=\"disabled-field whiteselect selectfilter\">\r\n              <mat-label>{{ \"active-patients-module.form_label.subgroup\" | translate }}\r\n              </mat-label>\r\n              <mat-select appearance=\"fill\" class=\"search-filter-select\">\r\n                <mat-optgroup *ngFor=\"let group of subgroup\">\r\n                  <button mat-button (click)=\"select.open()\">\r\n                    {{ group.groupName }}\r\n                  </button>\r\n                  <mat-select #select appearance=\"fill\">\r\n                    <mat-optgroup *ngFor=\"let ward of group.wards\">\r\n                      <button mat-button (click)=\"p_select.open()\" class=\"s_btn\">\r\n                        {{ ward.wardName }}\r\n                      </button>\r\n                      <mat-select #p_select appearance=\"fill\">\r\n                        <mat-option *ngFor=\"let room of ward.rooms\" [value]=\"room.roomName\">\r\n                          {{ room.roomName }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-optgroup>\r\n                  </mat-select>\r\n                </mat-optgroup>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>-->\r\n      <div class=\"row align-items-center\">\r\n        <div class=\"col-sm-6\">\r\n          <h2>\r\n            {{ \"active-patients-module.form_label.clinical_group\" | translate }}\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n          <mat-form-field appearance=\"fill\" class=\"selectfilter whiteselect\">\r\n            <mat-label>{{ \"active-patients-module.form_label.clinical_condition\" | translate }}\r\n            </mat-label>\r\n            <mat-select formControlName=\"clinicalGroup\" appearance=\"fill\" class=\"search-filter-select\">\r\n              <mat-option [value]=\"null\">{{'active-patients-module.form_label.none'|translate}}</mat-option>\r\n              <mat-option [value]=\"cgroup.groupId\" *ngFor=\"let cgroup of clinicalGroups$  | async\">{{ cgroup?.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\"me-4\">\r\n  <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\">\r\n    {{ \"active-patients-module.button.cancel\" | translate }}\r\n  </button>\r\n  <button mat-flat-button color=\"primary\" [disabled]=\"!assignGroupForm.valid\" (click)=\"save(assignGroupForm)\" class=\"fill-btn\">\r\n    {{ \"active-patients-module.button.Assign_button\" | translate }}\r\n  </button>\r\n</mat-dialog-actions>\r\n","import {\n  Component,\n  Inject,\n  OnInit,\n} from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { BehaviorSubject, Observable, Subscription } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { ManageGroupState } from \"src/app/manage-group/store/manage-groups.reducer\";\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\nimport { ActivePatient } from \"../models/active-patients.model\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ManageGroupsService } from \"src/app/manage-group/services/manage-groups.service\";\nimport { Group } from \"src/app/manage-group/models/manage-groups.model\";\n\n@Component({\n  selector: \"app-assign-group-modal\",\n  templateUrl: \"./assign-group-modal.component.html\",\n  styleUrls: [\"./assign-group-modal.component.scss\"],\n})\nexport class AssignGroupModalComponent implements OnInit {\n  assignGroupForm: FormGroup;\n  groups$: Observable<ManageGroupState>;\n  private cGroup$: BehaviorSubject<Group[]> = new BehaviorSubject<Group[]>([]);\n  public a_groups$: Observable<Group[]>;\n  public locationGroups$: Observable<Group[]>;\n  public clinicalGroups$: Observable<Group[]>;\n  selectedLocationGroup: Group;\n  selectedClinicalGroup: Group;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ActivePatient,\n    private dialogRef: MatDialogRef<AssignGroupModalComponent>,\n    private manager: ActivePatientManagerService,\n    private formBuilder: FormBuilder,\n    private manageGroupService: ManageGroupsService\n  ) {\n    this.selectedLocationGroup = data?.pGroup;\n    this.selectedClinicalGroup = data?.cGroup;\n    this.a_groups$ = this.cGroup$.asObservable();\n    this.locationGroups$ = this.a_groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"PHYSICAL\")\n    }));\n    this.clinicalGroups$ = this.a_groups$.pipe(map((groups: Group[]) => {\n      return groups.filter(g => g.type === \"CLINICAL\")\n    }));\n  }\n\n  ngOnInit(): void {\n    this.loadGroups();\n    this.assignGroupForm = this.formBuilder.group({\n      pGroup: '',\n      clinicalGroup: ''\n    })\n    if (this.data) {\n      this.setSelectedValue();\n      console.log(this.data?.pGroup, this.data?.cGroup);\n    }\n  }\n\n  setSelectedValue() {\n    const pGroupId = this.data?.pGroup?.groupId ? this.data?.pGroup?.groupId : this.data?.pGroup?.id ;\n    const cGroupId = this.data?.cGroup?.groupId ? this.data?.cGroup?.groupId : this.data?.cGroup?.id;\n    this.assignGroupForm.patchValue({ pGroup: pGroupId });\n    this.assignGroupForm.patchValue({ clinicalGroup: cGroupId });\n  }\n\n  groupsSubscription: Subscription;\n  loadGroups() {\n    //this.groups$ = this.manager.fetchGroups();\n    this.groupsSubscription = this.manageGroupService.fetch().subscribe(groups => {\n      if (groups['data'].length > 0) {\n        console.log(groups['data']);\n        let grps = groups['data'];\n        if(!grps.find(group => group.groupId === this.data?.cGroup?.id) && this.data?.cGroup?.id) {\n          let patientGroup = {groupId: this.data?.cGroup.id, name: this.data?.cGroup.name, type: 'CLINICAL'};\n          grps = [patientGroup, ...grps];\n        }\n        if(!grps.find(group => group.groupId === this.data?.pGroup?.id) && this.data?.pGroup?.id) {\n          let patientGroup = {groupId: this.data?.pGroup?.id, name: this.data?.pGroup?.name, type: 'PHYSICAL'};\n          grps = [patientGroup, ...grps];\n        }\n        this.cGroup$.next(grps);\n      }\n    })\n  }\n\n  getClinicalGroups() {\n    return this.groups$.pipe(map(groups => { return groups?.CLINICAL_GROUPS || []; }));\n  }\n\n  getLocationGroups() {\n    return this.groups$.pipe(map(groups => { return groups?.PHYSICAL_GROUPS || []; }));\n  }\n  onLocationSelected(event: string) {\n    this.assignGroupForm.controls.pGroup.patchValue(event);\n  }\n  save(formData) {\n    const groupData = this.cGroup$.getValue();\n    let pGroupObj = null;\n    let cGroupObj = null;\n\n    if (formData.value.pGroup === '') {\n      pGroupObj = null;\n    } else {\n      if (groupData?.length > 0) {\n        let filteredObj = groupData.filter(x => {\n          if (formData.value.pGroup === x.groupId) {\n            return x;\n          }\n        });\n        if (filteredObj[0]) {\n          let obj = {\n            id: filteredObj[0].groupId,\n            name: filteredObj[0].name\n          }\n          pGroupObj = obj;\n        } else {\n          pGroupObj = null;\n        }\n      }\n    }\n\n    if (formData.value.clinicalGroup === '') {\n      cGroupObj = null;\n    } else {\n      if (groupData?.length > 0) {\n        let filteredObj = groupData.filter(x => {\n          if (formData.value.clinicalGroup === x.groupId) {\n            return x;\n          }\n        });\n        if (filteredObj[0]) {\n          let obj = {\n            id: filteredObj[0].groupId,\n            name: filteredObj[0].name\n          }\n          cGroupObj = obj;\n        } else {\n          cGroupObj = null;\n        }\n      }\n    }\n\n\n    let group = {\n      pGroup: pGroupObj,\n      cGroup: cGroupObj,\n    };\n\n    this.dialogRef.close(group);\n  }\n}\n","<ls-page-header type=\"interp-history\">\r\n    <!-- <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"active-patients-module.button.register_patient\" | translate }}\r\n                </button>\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"active-patients-module.button.admit_patient\" | translate }}\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container> -->\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"interpHistory_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"active-patients-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-16 col-md-16 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"active-patients-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"interp-history-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-9 col-xxl-8 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.initial_interp' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3 col-md-5 col-lg-3 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'interp-history-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template lsWidgetName=\"patientDetails\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{row?.patientId}}</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center bold-text\">\r\n                  <strong>  <div class=\"me-2\">{{ row?.name }}</div>   </strong>                 \r\n                </div>\r\n            </ng-template>  \r\n\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                   \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportTime\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">date</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">time</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"initialInterp\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"interpDate\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template>     \r\n\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                <div>\r\n                    <button mat-flat-button color=\"primary\" class=\"btn-no-shadow mx-auto me-2\" *ngIf=\"isClinicianCheck() || isPhy\"   (click)=\"addNewEvent(row)\">\r\n                        {{ \"interp-history-module.button.amend\" | translate }}\r\n                    </button>\r\n                </div>                \r\n            </ng-template>\r\n\r\n            <ng-template lsWidgetName=\"printStatus\" let-row>               \r\n                <mat-icon class=\"move\">check</mat-icon>          \r\n            </ng-template>\r\n            \r\n        </ls-table>\r\n    </div>\r\n</div>","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-interpretation-history\",\r\n  templateUrl: \"./interpretation-history.component.html\",\r\n  styleUrls: [\"./interpretation-history.component.scss\"],\r\n})\r\nexport class InterpretationHistoryComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  interpHistory_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientDetails\",\r\n      label: \"PATIENT DETAILS\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"reportTime\",\r\n      label: \"report time\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"prescriber\",\r\n      label: \"prescriber\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    \r\n    {\r\n      id: \"initialInterp\",\r\n      label: \"initial interpreter\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"interpDate\",\r\n      label: \"interpretation date\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"printStatus\",\r\n      label: \"print status\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\",\"align-items-center\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"patientid\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"PHYSICAL\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.firstName} ${x.lastName}`,\r\n              weightUnit: x.weightUnit.toUpperCase(),\r\n              heightUnit: x.heightUnit.toUpperCase()\r\n            };\r\n            return patient;\r\n          });\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'searchText';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'CLINICAL') {\r\n      this.filterObject.cGroupId = groupId;\r\n    } else {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"patientid\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'deviceIds' ? 'thirdPartyDevices' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    console.log(patient?.patientId)\r\n    console.log(patient?.patchIds[0]?.startTime)\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","<ls-page-header type=\"posted_final\">\r\n    <ng-container page-actions>\r\n        <div class=\"d-flex justify-content-end me-4\">\r\n            <div class=\"d-lg-flex d-md-none d-sm-none d-none my-2\">\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/download-icon.svg\">\r\n                    <div class=\"move\">{{ \"posted-final-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <button mat-flat-button color=\"blue\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    <img src=\"assets/icons/print_icon.png\">\r\n                    <div class=\"move\">{{ \"posted-final-module.button.all\" | translate}}</div>\r\n                </button>\r\n                <!-- <a type=\"button\">\r\n                    <img src=\"assets/icons/download_all.png\">\r\n                </a>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print_all.png\">\r\n                </a> -->\r\n                <!-- <button mat-flat-button color=\"accent\" class=\"mx-1\"\r\n                    [disabled]=\"selectedPatients?.selected?.length !== 0\"\r\n                    (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\" *ngIf=\"isClinicianCheck()\">\r\n                    {{ \"-module.button.register_patient\" | translate }}\r\n                </button> -->\r\n            </div>\r\n            <div class=\"d-block d-lg-none my-2 \">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"border\">\r\n                    <mat-icon class=\"justify-content-enter\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" class=\"mobile-menu overflow-hidden d-block d-lg-none\">\r\n                    <!-- <button mat-menu-item (click)=\"openAdmitPatientModalWith({key: 'add-new-patient', value: ''})\"\r\n                        [disabled]=\"selectedPatients?.selected?.length !== 0\" *ngIf=\"isGcorScCheck()\">\r\n                        {{ \"-module.button.admit_patient\" | translate }}\r\n                    </button> -->\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ls-page-header>\r\n<div class=\"px-3\">\r\n    <div class=\"table-scroll without-tab-table comman-table-users head-border\">\r\n        <ls-table (sortChange)=\"onSortChange($event)\" [config]=\"config\" [selection]=\"selectedPatients\"\r\n            [data]=\"activePatients\" [columns]=\"activePatient_Columns\" (page)=\"onPageChange($event)\" [error]=\"error\"\r\n            [isSelected]=\"isSelected\" [Id]=\"'patientId'\" (selected)=\"onPatientsSelected($event)\"\r\n            [selectOnlyActive]=\"true\">\r\n            <!--            <ng-container table-header>-->\r\n            <!--                <div class=\"my-3 row\">-->\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"selectfilter no-label me-4\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.select_filter\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <mat-select [(ngModel)]=\"searchObject.keyword\" class=\"search-filter-select\" (selectionChange)=\"resetAndSearch()\">-->\r\n            <!--                                <mat-option [value]=\"null\">{{\"-module.select_filter\"|translate}}</mat-option>-->\r\n            <!--                                <mat-option [value]=\"filter?.value\" *ngFor=\"let filter of filterStrings\">{{ filter?.text }}-->\r\n            <!--                                </mat-option>-->\r\n            <!--                            </mat-select>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n\r\n            <!--                    <div class=\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-5 col-xxl-4\">-->\r\n            <!--                        <mat-form-field class=\"search-form-field\" appearance=\"fill\">-->\r\n            <!--                            <mat-label>{{ \"-module.search\" | translate }}-->\r\n            <!--                            </mat-label>-->\r\n            <!--                            <input [class.disabled]=\"!searchObject.keyword\" [disabled]=\"!searchObject.keyword\" autocomplete=\"off\" [(ngModel)]=\"searchObject.string\" matInput type=\"text\" (ngModelChange)=\"search()\" id=\"searchString\" (keypress)=\"checkCharacters($event)\" />-->\r\n            <!--                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close-->\r\n            <!--                            </mat-icon>-->\r\n            <!--                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>-->\r\n            <!--                        </mat-form-field>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </ng-container>-->\r\n            <ng-container table-header>\r\n                <div class=\"my-3 row align-items-end position-relative ps-0 ps-lg-5\">\r\n                    <label class=\"mat-label filter-label d-lg-flex d-none  align-items-center\">{{\r\n                        \"posted-final-module.filter\" | translate }}</label>\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-9 col-xl-9 col-xxl-10 select-col discharge-select-dropdown\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0 \">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.pGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.location' | translate\"\r\n                                    (selected)=\"searchByGroup('LOCATION', $event)\" [options]=\"locationGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.prescriber' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.interpreter' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 col-sm-2 mt-0 mt-md-2 mt-lg-0\">\r\n                                <app-nested-dropdown class=\"nested-selectfilter bg-selectfilter\"\r\n                                    [selectedValue]=\"filterObject.cGroupId\" key=\"groupId\" displayKey=\"name\"\r\n                                    [label]=\"'posted-final-module.print_status' | translate\"\r\n                                    (selected)=\"searchByGroup('CLINICAL', $event)\" [options]=\"clinicalGroups$ | async\"\r\n                                    [showSelect]=\"true\">\r\n                                </app-nested-dropdown>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-3 col-xl-3 col-xxl-2 mt-2 mt-lg-0\">\r\n                        <mat-form-field class=\"search-form-field\" appearance=\"fill\" floatLabel=\"never\">\r\n                            <mat-label>{{ \"posted-final-module.search\" | translate }}\r\n                            </mat-label>\r\n                            <input [(ngModel)]=\"searchObject.string\" matInput type=\"search\" (keyup)=\"search()\"\r\n                                id=\"searchString\" autocomplete=\"off\" />\r\n                            <mat-icon class=\"clear-icon\" *ngIf=\"searchObject.string\" (click)=\"clear()\">close\r\n                            </mat-icon>\r\n                            <mat-icon matSuffix class=\"default-cursor\">search</mat-icon>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-template lsWidgetName=\"patient\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{row?.patientId}}</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center bold-text\">\r\n                  <strong>  <div class=\"me-2\">{{ row?.name }}</div>   </strong>                 \r\n                </div>\r\n            </ng-template>  \r\n\r\n            <ng-template lsWidgetName=\"location\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.phoneNo }}</div>                   \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportTime\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">date</div>                    \r\n                </div>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">time</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"prescriber\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"interpreter\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template> \r\n\r\n            <ng-template lsWidgetName=\"reportType\" let-row>\r\n                <div class=\"d-flex justify-content-start align-items-center\">\r\n                    <div class=\"me-2\">{{ row?.name }}</div>                    \r\n                </div>\r\n            </ng-template>     \r\n\r\n            <ng-template lsWidgetName=\"actions\" let-row>\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"patientMenu\" class=\"shadow-none\">\r\n                    <mat-icon class=\"justify-content-center\">more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #patientMenu=\"matMenu\" class=\"setting-card-menu profile-card-menu\" xPosition=\"before\">\r\n                    <button mat-menu-item *ngIf=\"isClinicianCheck()\" >{{ \"posted-final-module.button.edit\" | translate}}</button>\r\n                    <button mat-menu-item *ngIf=\"isScOrGc()\" >{{ \"posted-final-module.button.add_notes\" | translate}}</button>\r\n                </mat-menu>\r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"view\" let-row>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/pdf.png\">\r\n                </a>\r\n                <a type=\"button\"> \r\n                    <img src=\"assets/icons/ecg.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n            <ng-template lsWidgetName=\"print\" let-row>               \r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/print.png\">\r\n                </a>\r\n           \r\n            </ng-template>\r\n            \r\n            <ng-template lsWidgetName=\"download\" let-row>\r\n                <mat-icon>check</mat-icon>\r\n                <a type=\"button\">\r\n                    <img src=\"assets/icons/download.png\">\r\n                </a>\r\n            </ng-template>\r\n\r\n        </ls-table>\r\n    </div>\r\n</div>","import {\r\n  Component, OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  ActivePatient,\r\n  FilterKeysForActivePatient,\r\n  MonitoringStatus,\r\n} from \"../models/active-patients.model\";\r\nimport { AdmitPatientModalComponent } from \"../admit-patient-modal/admit-patient-modal.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivePatientManagerService } from \"../manager/active-patient-manager.service\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\nimport { AssignGroupModalComponent } from \"../assign-group-modal/assign-group-modal.component\";\r\nimport {\r\n  LSColumn,\r\n  LSTableConfig,\r\n  TableState,\r\n} from \"src/app/life-signals/_models/ls-column.model\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { ActivePatientsService } from \"../services/active-patients.service\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { PatientMoreInfoDialogComponent } from \"../patient-more-info-dialog/patient-more-info-dialog.component\";\r\nimport { ActivePatientsStoreState } from \"../store\";\r\nimport { Sort } from \"@angular/material/sort\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { PatientDetailsViewMoreComponent } from \"../patient-details-view-more/patient-details-view-more.component\";\r\nimport { PatientAdmittedModalComponent } from \"../patient-admitted-modal/patient-admitted-modal.component\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport {Group} from \"../../manage-group/models/manage-groups.model\";\r\nimport {ManageGroupsService} from \"../../manage-group/services/manage-groups.service\";\r\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport { NotificationsComponent } from \"src/app/dialogs/notifications-component/notifications/notifications.component\";\r\nimport { AddEventComponent } from \"src/app/dialogs/notifications-component/add-event/add-event.component\";\r\n\r\n@Component({\r\n  selector: \"app-posted-final\",\r\n  templateUrl: \"./posted-final.component.html\",\r\n  styleUrls: [\"./posted-final.component.scss\"],\r\n})\r\nexport class PostedFinalComponent implements OnInit, OnDestroy {\r\n  activePatients: ActivePatient[] = new Array();\r\n  error: any;\r\n  reloadInterval: NodeJS.Timeout;\r\n\r\n  // Selection Variables\r\n  selectedPatients: SelectionModel<ActivePatient> = new SelectionModel<ActivePatient>(true);\r\n  selectedIds: Set<string> = new Set();\r\n  isPhy = false;\r\n\r\n  activePatient_Columns: LSColumn[] = [\r\n    {\r\n      id: \"patientId\",\r\n      label: \"PATIENT DETAILS\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      labelClass: \"fw-bold\",\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"location\",\r\n      label: \"Location\",\r\n      headerClass: [\"text-start\"],\r\n      sortable: true,\r\n      cellClass: [],\r\n    },\r\n    {\r\n      id: \"reportTime\",\r\n      label: \"report time\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    {\r\n      id: \"prescriber\",\r\n      label: \"prescriber\",\r\n      sortable: true,\r\n      headerClass: [\"text-start\"],\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n    },\r\n    \r\n    {\r\n      id: \"interpreter\",\r\n      label: \"interpreter\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"reportType\",\r\n      label: \"report type\",\r\n      sortable: true,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"view\",\r\n      label: \"view\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"print\",\r\n      label: \"print\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    {\r\n      id: \"download\",\r\n      label: \"download\",\r\n      sortable: false,\r\n      cellClass: [\"d-flex\", \"justify-content-start\"],\r\n      headerClass: [\"text-start\"],\r\n    },\r\n    \r\n  ];\r\n\r\n  config: LSTableConfig = {\r\n    id: \"active-patients-table\",\r\n    rowSelectEnabled: true,\r\n    actions: {\r\n      show: true,\r\n      headerLabel: \"\",\r\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\r\n      header: {\r\n        style: \"max-width: 180px; width: 180px;\",\r\n      },\r\n    },\r\n    page: {\r\n      pageSize: 20,\r\n      pageIndex: 0,\r\n      length: null\r\n    },\r\n    paginator: {\r\n      offline: false,\r\n      hide: false\r\n    },\r\n    sort: {\r\n      active: \"patientid\",\r\n      direction: \"desc\"\r\n    },\r\n    tableState: TableState.DEFAULT\r\n  };\r\n  searchObject: { keyword: string; string: string } = {\r\n    keyword: \"\",\r\n    string: \"\",\r\n  };\r\n  filterObject: { cGroupId: string; pGroupId: string } = {\r\n    cGroupId: null,\r\n    pGroupId: null,\r\n  };\r\n  filterStrings: Array<any> = new Array();\r\n  monitoringStatus = MonitoringStatus;\r\n  private groupsData$: BehaviorSubject<Group[]> = new BehaviorSubject<any[]>([]);\r\n  public groups$: Observable<Group[]>;\r\n  public locationGroups$: Observable<Group[]>;\r\n  public clinicalGroups$: Observable<Group[]>;\r\n \r\n  constructor(\r\n    private manager: ActivePatientManagerService,\r\n    private dialog: MatDialog,\r\n    private service: ActivePatientsService,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private route: ActivatedRoute,\r\n    private manageGroupService: ManageGroupsService\r\n  ) {\r\n    this.groups$ = this.groupsData$.asObservable();\r\n    this.locationGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"PHYSICAL\")\r\n    }));\r\n    this.clinicalGroups$ = this.groups$.pipe(map((groups: Group[]) => {\r\n      return groups.filter(g => g.type === \"CLINICAL\")\r\n    }));\r\n  }\r\n\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n  activePatientsSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    let roles = this.authService.getRoles() || [];;\r\n    if(roles?.indexOf(\"PHY\") > -1) this.isPhy =true;\r\n    this.getGroupDetails();\r\n    this.modelChanged.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(() =>\r\n        this.serviceToCallWith()))\r\n      .subscribe();\r\n    this.initVariables();\r\n    this.fetchTableData();\r\n    const panelId = sessionStorage.getItem(\"panelId\");\r\n    if (panelId?.length) {\r\n      this.service.getPanelDetails(panelId)\r\n        .then((patients) => {\r\n          for (const patient of patients) {\r\n            if (patient.patchId) {\r\n              this.selectedIds.add(patient.patientId);\r\n            }\r\n          }\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        });\r\n    }\r\n\r\n    this.reloadInterval = setInterval(() => {\r\n      this.fetchTableData();\r\n    }, 30000);\r\n\r\n    this.activePatientsSub = this.manager.selectActivePatient()\r\n      .pipe(map((response: ActivePatientsStoreState.State) => {\r\n        if(response?.tableState) {\r\n          this.config = {\r\n            ...this.config,\r\n            tableState: <TableState>response?.tableState,\r\n            rowSelectEnabled: true,\r\n            page: {\r\n              ...this.config.page,\r\n              length: response?.total\r\n            }\r\n          };\r\n        }\r\n        this.error = response?.error;\r\n        if (response?.ACTIVE_PATIENTS_DATA) {\r\n          this.activePatients = response?.ACTIVE_PATIENTS_DATA.map((x) => {\r\n            const patient: ActivePatient = {\r\n              ...x,\r\n              name: `${x.firstName} ${x.lastName}`,\r\n              weightUnit: x.weightUnit.toUpperCase(),\r\n              heightUnit: x.heightUnit.toUpperCase()\r\n            };\r\n            return patient;\r\n          });\r\n          if (this.activePatients.length && this.selectedIds.size) {\r\n            this.selectedPatients.select(...this.activePatients.filter(pat => {\r\n              return this.selectedIds.has(pat.patientId);\r\n            }));\r\n          }\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  serviceToCallWith() {\r\n    let ref;\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n    ref = this.manager.selectActivePatient();\r\n    return ref;\r\n  }\r\n  resetAndSearch() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  search() {\r\n    this.searchObject.keyword = 'searchText';\r\n    if (this.searchObject?.string) {\r\n      this.config.page.pageIndex = 0;\r\n    }\r\n    //this.selectedPatients.clear();\r\n    this.modelChanged.next(JSON.stringify(this.searchObject));\r\n  }\r\n  searchByGroup(key, groupId) {\r\n    if(key === 'CLINICAL') {\r\n      this.filterObject.cGroupId = groupId;\r\n    } else {\r\n      this.filterObject.pGroupId = groupId\r\n    }\r\n      this.config.page.pageIndex = 0;\r\n      this.activePatients = undefined;\r\n      this.modelChanged.next(JSON.stringify(this.filterObject));\r\n  }\r\n\r\n  clear() {\r\n    this.searchObject.string = '';\r\n    this.search();\r\n  }\r\n\r\n  checkCharacters(event : KeyboardEvent){\r\n    if(this.searchObject.keyword === \"PATCHID\" || this.searchObject.keyword === \"PATIENTID\"){\r\n      let pattern = /^[a-zA-z0-9]$/;\r\n      let key = event.key;\r\n      if (pattern.test(key)) {\r\n        return true;\r\n      } else {\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initVariables() {\r\n    for (let i in FilterKeysForActivePatient) {\r\n      this.filterStrings.push({ text: FilterKeysForActivePatient[i], value: i });\r\n    }\r\n  }\r\n\r\n  fetchTableData() {\r\n    this.getActivePatientData();\r\n  }\r\n  isSelected(row: ActivePatient, selection: SelectionModel<any>) {\r\n    return selection.selected.map(s => s.patientId).includes(row.patientId);\r\n  }\r\n\r\n  isClinicianCheck() {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1;\r\n  }\r\n\r\n  isGcorScCheck () {\r\n    let role = this.authService.getRoles();\r\n    return role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1;\r\n  }\r\n\r\n  getActivePatientData() {\r\n    if (!this.config.sort.active || !this.config.sort.direction) {\r\n      this.config.sort.active = \"patientid\";\r\n      this.config.sort.direction = \"desc\";\r\n    }\r\n    this.manager.getActivePatient(this.service.actvePatientsUrl(this.config, this.searchObject, this.filterObject));\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.config = {\r\n      ...this.config,\r\n      page: {\r\n        ...this.config.page,\r\n        pageIndex: event.pageIndex,\r\n        pageSize: event.pageSize\r\n      }\r\n    }\r\n    this.fetchTableData();\r\n  }\r\n\r\n  onPatientsSelected(e: SelectionModel<ActivePatient>) {\r\n    this.selectedPatients = e;\r\n    const selected = new Set(e.selected.map((pat) => pat.patientId));\r\n    for (const { patientId } of this.activePatients) {\r\n      if (selected.has(patientId)) {\r\n        this.selectedIds.add(patientId);\r\n      } else if (this.selectedIds.has(patientId)) {\r\n        this.selectedIds.delete(patientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSortChange(event: Sort) {\r\n    let activeKey = event.active === 'location' ? 'phoneNo' : event.active;\r\n    this.config = {\r\n      ...this.config,\r\n      sort: {\r\n        active: activeKey,\r\n        direction: event.direction\r\n      }\r\n    }\r\n    this.selectedPatients.clear();\r\n    this.fetchTableData();\r\n    console.log(activeKey)\r\n  }\r\n\r\n  openBiosensorModal(patientId: string, data) {\r\n    this.service.getPatientBy(patientId).subscribe(patient => {\r\n      let patches = {\r\n        activePatch: patient.data.activePatch,\r\n        patchIds: patient.data.patchIds,\r\n        heading: \"active-patients-module.dialog.more_info\",\r\n        readOnly: !this.isClinicianCheck(),  \r\n      }\r\n      this.dialog.open(PatientMoreInfoDialogComponent, {\r\n        width: \"700px\",\r\n        //minWidth: \"700px\",\r\n        maxWidth: \"95vw\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: patches\r\n      }).afterClosed()\r\n        .subscribe(response => {\r\n          if (response) {\r\n            data['patchIds'] = response;\r\n            this.manager.updatePatient(data).subscribe((res:any) => {\r\n              if(res?.error) {\r\n                if (res.error === \"PATCHES_ALREADY_IN_USE\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patchInUse\", 'bottom', 'center', true);\r\n                } else if (res.error === \"MORE_THAN_ONE_PATCH_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.more_than_one_patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATCH_STATE_STREAMING\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.patch_streaming\", 'bottom', 'center', true);\r\n                } else if (res.error === \"PATIENT_ALREADY_DISCHARGED\") {\r\n                  this.snackbar.openSnackBar(\"errors.patient_discharged\", 'bottom', 'center', true);\r\n                } else if (res.error === \"ADMITTED_ON_TIME_IS_INVALID\") {\r\n                  this.snackbar.openSnackBar(\"active-patients-module.errors.admittedOn_invalid\", 'bottom', 'center', true);\r\n                } else {\r\n                  this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  openAdmitPatientModalWith(data?) {\r\n    switch (data.key) {\r\n      case 'add-new-patient':\r\n        this.admitPatientModal().subscribe(resp => {\r\n          if (resp) {\r\n            this.getActivePatientData();\r\n            this.dialog.open(PatientAdmittedModalComponent, {\r\n              maxWidth: \"96vw\",\r\n              //minWidth: \"320px\",\r\n              width: \"520px\",\r\n              backdropClass: \"backdropBackground\",\r\n              disableClose: true,\r\n              autoFocus: false,\r\n              data: { title: 'active-patients-module.dialog.patient_admitted' }\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case 'edit-active-patient':\r\n        this.service.getPatientBy(data?.value).subscribe(patient => {\r\n          this.admitPatientModal({ activePatient: patient?.data, mode: 'EDIT' })\r\n            .subscribe(resp => {\r\n              if (resp) {\r\n                this.getActivePatientData();\r\n                this.dialog.open(PatientAdmittedModalComponent, {\r\n                  maxWidth: \"96vw\",\r\n                  //minWidth: \"320px\",\r\n                  width: \"520px\",\r\n                  backdropClass: \"backdropBackground\",\r\n                  disableClose: true,\r\n                  autoFocus: false,\r\n                  data: { title: 'active-patients-module.dialog.patient_edited' }\r\n                });\r\n              }\r\n            });\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  //This function is used to open add event dialog \r\n  addNewEvent(patient:any) {\r\n    console.log(patient?.patientId)\r\n    console.log(patient?.patchIds[0]?.startTime)\r\n    const addEvent = this.dialog.open(AddEventComponent, {\r\n      width: \"600px\",\r\n      maxWidth: \"96vw\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass: \"add-event-container\",\r\n      //maxHeight: \"95vh\",\r\n      //height: \"530px\",\r\n       data: {patientId: patient?.patientId, patchStarted:patient?.patchIds[0]?.startTime },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  admitPatientModal(data?) {\r\n    const dailogRef = this.dialog.open(AdmitPatientModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      minWidth: \"320px\",\r\n      width: \"900px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: { ...data },\r\n    });\r\n    return dailogRef.afterClosed();\r\n  }\r\n\r\n  alertSettings(selectedPatient:ActivePatient) {\r\n    const dailogRef = this.dialog.open(NotificationsComponent, {\r\n      //adding same width as history popup\r\n      width: \"1300px\",\r\n      maxWidth: \"98%\",\r\n      height: \"100%\",\r\n      maxHeight:\"100vh\",\r\n      panelClass:[\"alertcontainer-modal\", \"alertcontainer\" ],\r\n      //height: \"530px\",\r\n      //panelClass: \"alertcontainer\",\r\n      data: { patientData: { ...selectedPatient, addEvent: false }, selectedTab: 'parameterAlerts' },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  //  /**This function is used to open Discharge Patient dialog */\r\n  public openDischargeGroupDialog(patientId, patientIds = [], patient): void {\r\n    if (patient?.activePatch) {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_and_stop_monitoring\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          this.manager.dischargePatient(patient.patientId);\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n          this.fetchTableData();\r\n        }\r\n      });\r\n    } else {\r\n      const dischargeDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n        maxWidth: \"96vw\",\r\n        //minWidth: \"500px\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data: {\r\n          heading: \"active-patients-module.dialog.discharge_patient\",\r\n          message: \"active-patients-module.dialog.discharge_patient_message\",\r\n          stop_biosensor: false\r\n        },\r\n      });\r\n      dischargeDialog.afterClosed().subscribe((confirm: boolean) => {\r\n        if (confirm) {\r\n          if (patientIds.length > 0) {\r\n            patientIds.forEach(patient => {\r\n              this.manager.dischargePatient(patient.patientId);\r\n              this.selectedPatients.clear();\r\n            })\r\n          } else if (patientId) {\r\n            this.manager.dischargePatient(patientId);\r\n          }\r\n          this.dialog.open(PatientAdmittedModalComponent, {\r\n            maxWidth: \"96vw\",\r\n            //minWidth: \"320px\",\r\n            width: \"520px\",\r\n            backdropClass: \"backdropBackground\",\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: { title: 'active-patients-module.dialog.patient_discharged' }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getThirdPartyDevices(list) {\r\n    if (list?.length > 0) {\r\n      let deviceIds = \"\";\r\n      list.forEach((element) => {\r\n        if (element?.deviceId) {\r\n          deviceIds = deviceIds\r\n            ? deviceIds + \", \" + element.deviceId\r\n            : element.deviceId;\r\n        }\r\n      });\r\n      if (deviceIds !== \"\") {\r\n        return deviceIds;\r\n      } else {\r\n        return \"-\";\r\n      }\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n\r\n  openStopMonitoringDialog(patientId) {\r\n    const stopMonitoringDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      // minWidth: \"500px\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: \"active-patients-module.dialog.stop_monitoring\",\r\n        message: \"active-patients-module.dialog.stop_monitoring_message\",\r\n        stop_biosensor: true\r\n      },\r\n    });\r\n\r\n    stopMonitoringDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.manager.stopMonitoring(patientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  // /**This function is used to open dialog */\r\n  openAssignGroupModal(patient): void {\r\n    if (!this.isGcorScCheck()) {\r\n      return;\r\n    }\r\n    this.dialog.open(AssignGroupModalComponent, {\r\n      maxWidth: \"96vw\",\r\n      //minWidth: \"500px\",\r\n      width: \"700px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      panelClass: \"assign-group-modal\",\r\n      data: { ...patient },\r\n    }).afterClosed()\r\n      .subscribe((group) => {\r\n        if (group) {\r\n          let assignGroupObj = {\r\n            patientId: patient.patientId,\r\n            cGroup: group.cGroup,\r\n            pGroup: group.pGroup,\r\n            admissionId: patient.admissionId\r\n          };\r\n          this.manager.assignGroup(assignGroupObj);\r\n          setTimeout(() => {\r\n            this.getActivePatientData();\r\n          }, 500);\r\n        }\r\n      });\r\n    //this.getActivePatientData();\r\n  }\r\n\r\n  patientViewMore(row) {\r\n    this.dialog.open(PatientDetailsViewMoreComponent, {\r\n      width: \"900px\",\r\n      maxWidth: \"96vw\",\r\n      //height:\"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: row,\r\n    })\r\n  }\r\n  getGroupDetails() {\r\n    this.manageGroupService.fetch().subscribe(groups => {\r\n      if (groups['data'].length > 0) {\r\n        this.groupsData$.next(groups['data']);\r\n\r\n      }\r\n    })\r\n  }\r\n  transferRelay(activePatch, type) {\r\n    const confirmDialog = this.dialog.open(ConfirmationDialogComponent, {\r\n      maxWidth: \"96vw\",\r\n      width: \"500px\",\r\n      backdropClass: \"backdropBackground\",\r\n      disableClose: true,\r\n      data: {\r\n        heading: type === 'MPR' ? \"active-patients-module.button.transfer_mpr\": \"active-patients-module.button.transfer_spr\",\r\n        message: type === 'MPR' ? \"active-patients-module.dialog.transfer_mpr_confirm\": \"active-patients-module.dialog.transfer_spr_confirm\",\r\n      },\r\n    });\r\n    confirmDialog.afterClosed().subscribe((confirm: boolean) => {\r\n      if (confirm) {\r\n        this.service.transferRelay(activePatch)\r\n            .subscribe((res:any) => {\r\n              if(res.message === 'TRANSFER_REQUEST_INITIATED') {\r\n                this.snackbar.openSnackBar(\"active-patients-module.errors.transfer_initiated\", 'bottom', 'center', true);\r\n              } else {\r\n                this.snackbar.openSnackBar(\"errors.err_generic_message\", 'bottom', 'center', true);\r\n              }\r\n            });\r\n      }\r\n    });\r\n  }\r\n  isScOrGc() {\r\n    let role = this.authService.getRoles();\r\n    return (role.indexOf(\"GC\") > -1 || role.indexOf(\"SC\") > -1)\r\n  }\r\n  ngOnDestroy() {\r\n    clearInterval(this.reloadInterval);\r\n    this.activePatientsSub?.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\nimport { Observable, of as observableOf, of } from \"rxjs\";\nimport { catchError, map, startWith, mergeMap, switchMap } from \"rxjs/operators\";\nimport { ActivePatientsService } from \"../services/active-patients.service\";\nimport * as featureActions from \"./active-patients.actions\";\n\n@Injectable()\nexport class ActivePatientsEffects {\n  constructor(\n    private activePatientsService: ActivePatientsService,\n    private actions$: Actions\n  ) { }\n\n  loadActivePatientsRequestEffect$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadActivePatientsRequestAction>(\n        featureActions.ActionTypes.LOAD_ACTIVE_PATIENTS_REQUEST\n      ),\n      mergeMap((action) =>\n        this.activePatientsService.getAll(action.payload.url).pipe(\n          map(\n            (response: any) =>\n              new featureActions.LoadActivePatientsSuccessAction({\n                data: {\n                  patients: response?.data?.items,\n                  total: response?.data?.total,\n                },\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.LoadActivePatientsFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  loadUnAssignedPatientsRequestEffect$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadUnassignedPatientsRequestAction>(\n        featureActions.ActionTypes.LOAD_UNASSIGNED_PATIENTS_REQUEST\n      ),\n      mergeMap((action) =>\n        this.activePatientsService.getUnassignedPatients(action.payload.url).pipe(\n          map(\n            (response: any) => new featureActions.LoadUnassignedPatientsSuccessAction({\n              data: {\n                items: response?.data?.items,\n                total: response?.data?.total,\n              },\n            })),\n          catchError((error) =>\n            observableOf(\n              new featureActions.LoadUnassignedPatientsFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  loadDoctorsRequestEffect$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.LoadDoctorsListRequestAction>(\n        featureActions.ActionTypes.LOAD_DOCTORS_LIST_REQUEST\n      ),\n      startWith(new featureActions.LoadDoctorsListRequestAction()),\n      mergeMap((action) =>\n        this.activePatientsService.getDoctorsList().pipe(\n          map(\n            (doctors) =>\n              new featureActions.LoadDoctorsListSuccessAction({ doctors })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.LoadDoctorsListFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  createNewPatientEffects$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.CreateNewPatientRequestAction>(\n        featureActions.ActionTypes.CREATE_NEW_PATIENT_REQUEST\n      ),\n      // startWith(new featureActions.createNewPatientRequestAction()),\n      mergeMap((data) =>\n        this.activePatientsService.savePatient(data)\n          .pipe(\n            map(\n              (newPatient) =>\n                new featureActions.CreateNewPatientSuccessAction({ newPatient })\n            ),\n            catchError((error) =>\n              observableOf(\n                new featureActions.CreateNewPatientFailureAction({ error })\n              )\n            )\n          )\n      )\n    )\n  );\n\n  updatePatientEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.UpdatePatientRequestAction>(\n        featureActions.ActionTypes.UPDATE_PATIENT_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.updatePatient(data).pipe(\n          map(\n            (response) =>\n              new featureActions.UpdatePatientSuccessAction({ updatedData: response.data })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.UpdatePatientFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  updatePatientGroupEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.AssignGroupRequestAction>(\n        featureActions.ActionTypes.ASSIGN_GROUP_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.assignGroup(data).pipe(\n          map(\n            (response) =>\n              new featureActions.AssignGroupSuccessAction({ updatedData: response })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.AssignGroupFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  stopMonitoringEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.StopMonitoringRequestAction>(\n        featureActions.ActionTypes.STOP_MONITORING_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.stopProcedure(data.payload).pipe(\n          map(\n            (patient) =>\n              new featureActions.StopMonitoringSuccessAction({ patient })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.StopMonitoringFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  dischargePatientEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.DischargePatientRequestAction>(\n        featureActions.ActionTypes.DISCHARGE_PATIENT_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.dischargePatient(data.payload).pipe(\n          map(\n            (dischargedPatient) =>\n              new featureActions.DischargePatientSuccessAction({\n                dischargedPatient,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.DischargePatientFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  setSelectedPatientIdsEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.SetSelectedPatientIdsRequestAction>(\n        featureActions.ActionTypes.SET_SELECTED_PATIENTS_IDs_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.setSelectedPatientIds(data.payload).pipe(\n          map(\n            (patientIds) =>\n              new featureActions.SetSelectedPatientIdsSuccessAction({\n                patientIds,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.SetSelectedPatientIdsFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  setSelectedtabEffects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType<featureActions.SetSelectedTabRequestAction>(\n        featureActions.ActionTypes.SET_SELECTED_TAB_REQUEST\n      ),\n      mergeMap((data) =>\n        this.activePatientsService.setSelectedTab(data.payload).pipe(\n          map(\n            (selectedTab) =>\n              new featureActions.SetSelectedTabSuccessAction({\n                selectedTab,\n              })\n          ),\n          catchError((error) =>\n            observableOf(\n              new featureActions.SetSelectedTabFailureAction({ error })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'epochToHumanDate'\n})\nexport class EpochToHumanDatePipe implements PipeTransform {\n\n  transform(value: number): string {\n    if(value) {\n      let humanReadableDate = new Date(value*1000);\n      let formattedDate = `${this.getMonthName(humanReadableDate.getMonth())} ${humanReadableDate.getDate()} , ${humanReadableDate.getFullYear()} /\n                          ${humanReadableDate.getHours()}:${humanReadableDate.getMinutes()}`;\n      return formattedDate;\n    } else {\n      return '-';\n    }\n  }\n\n  getMonthName(idx) {\n    switch(idx) {\n      case 0:\n        return 'Jan';\n        \n      case 1:\n        return 'Feb';\n        \n      case 2:\n        return 'Mar';\n        \n      case 3:\n        return 'Apr'; \n        \n      case 4:\n        return 'May';\n        \n      case 5:\n        return 'Jun';\n        \n      case 6:\n        return 'Jul';\n        \n      case 7:\n        return 'Aug'; \n\n      case 8:\n        return 'Sep';\n        \n      case 9:\n        return 'Oct';\n        \n      case 10:\n        return 'Nov';\n        \n      case 11:\n        return 'Dec'; \n    }\n  }\n\n}\n"]}