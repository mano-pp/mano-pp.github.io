{"version":3,"file":"src_app_service-provider-admin_service-provider-admin_module_ts-es2017.js","mappings":"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","sources":["./src/app/service-provider-admin/clinical-facility-management/clinical-facility-management.component.ts","./src/app/service-provider-admin/clinical-facility-management/clinical-facility-management.component.html","./src/app/service-provider-admin/dialog/add-edit-cfa/add-edit-cfa.component.ts","./src/app/service-provider-admin/dialog/add-edit-cfa/add-edit-cfa.component.html","./src/app/service-provider-admin/dialog/add-edit-facility/add-edit-facility.component.ts","./src/app/service-provider-admin/dialog/add-edit-facility/add-edit-facility.component.html","./src/app/service-provider-admin/dialog/add-edit-user-management/add-edit-user-management.component.ts","./src/app/service-provider-admin/dialog/add-edit-user-management/add-edit-user-management.component.html","./src/app/service-provider-admin/dialog/caution-box/caution-box.component.ts","./src/app/service-provider-admin/dialog/caution-box/caution-box.component.html","./src/app/service-provider-admin/dialog/enable-disable/enable-disable.component.ts","./src/app/service-provider-admin/dialog/enable-disable/enable-disable.component.html","./src/app/service-provider-admin/dialog/manage-cf-admin/manage-cf-admin.component.ts","./src/app/service-provider-admin/dialog/manage-cf-admin/manage-cf-admin.component.html","./src/app/service-provider-admin/service-provider-admin-routing.module.ts","./src/app/service-provider-admin/service-provider-admin.module.ts","./src/app/service-provider-admin/service/clinical-facility.service.ts","./src/app/service-provider-admin/service/user-management.service.ts","./src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.actions.ts","./src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.effects.ts","./src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.reducer.ts","./src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.selector.ts","./src/app/service-provider-admin/store/clinical-facility-management/index.ts","./src/app/service-provider-admin/store/user-management/index.ts","./src/app/service-provider-admin/store/user-management/user-management.actions.ts","./src/app/service-provider-admin/store/user-management/user-management.effects.ts","./src/app/service-provider-admin/store/user-management/user-management.reducer.ts","./src/app/service-provider-admin/store/user-management/user-management.selector.ts","./src/app/service-provider-admin/user-management/user-management.component.ts","./src/app/service-provider-admin/user-management/user-management.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { AddEditFacilityComponent } from \"../dialog/add-edit-facility/add-edit-facility.component\";\nimport { ManageCfAdminComponent } from \"src/app/service-provider-admin/dialog/manage-cf-admin/manage-cf-admin.component\";\nimport {\n  ClinicalFacility,\n} from \"src/app/service-provider-admin/clinical-facility-management/clinical-facility.interface\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  ClinicalFacilityStoreActions,\n  ClinicalFacilityStoreSelectors,\n  ClinicalFacilityStoreState,\n} from \"../store/clinical-facility-management\";\nimport {\n  LSColumn,\n  LSColumnType,\n  LSTableConfig,\n  TableState,\n} from \"../../life-signals/_models/ls-column.model\";\nimport {ClinicalFacilityState} from \"../store/clinical-facility-management/clinical-facility-management.reducer\";\n\n@Component({\n  selector: \"app-clinical-facility-management\",\n  templateUrl: \"./clinical-facility-management.component.html\",\n  styleUrls: [\"./clinical-facility-management.component.scss\"],\n})\nexport class ClinicalFacilityManagementComponent implements OnInit, OnDestroy {\n  clinicalFacility$: Observable<ClinicalFacilityState>;\n  clinicalFacilityData: ClinicalFacility[];\n  columns: LSColumn[] = [\n    {\n      id: \"id\",\n      label: \"id\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      //labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"facilityName\",\n      label: \"facilityName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"font-size-16\"],\n      style: \"max-width: 250px; width: 250px;\",\n    },\n    {\n      id: \"location\",\n      label: \"location\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\"],\n    },\n    {\n      id: \"contactName\",\n      label: \"contactName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"bold-name\"],\n      style: \"max-width: 220px; width: 220px;\",\n    },\n    {\n      id: \"contactDetails\",\n      label: \"contactDetails\",\n      headerClass: [\"text-start\"],\n      sortable: false,\n      type: LSColumnType.TEXT,\n      //cellClass: [\"fw-bold\"],\n    },\n    {\n      id: \"dataStorageMode\",\n      label: \"dataStorage\",\n     headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [\"d-flex\", \"align-items-center\", \"justify-content-start\"],\n    },\n  ];\n  config: LSTableConfig = {\n    id: \"cf-table\",\n    rowSelectEnabled: false,\n    actions: {\n      header: {\n        class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n      },\n      show: true,\n      headerLabel: \"\",\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n    },\n    translateKey: \"cf-table\",\n    translate: true,\n    tableState: TableState.DEFAULT\n  };\n  clinicalFacilitySub: Subscription;\n\n  constructor(\n    private dialog: MatDialog,\n    private store$: Store<ClinicalFacilityStoreState.ClinicalFacilityState>\n  ) { }\n\n  ngOnInit() {\n    this.store$.dispatch(\n      new ClinicalFacilityStoreActions.LoadClinicalFacilityRequestAction()\n    );\n    this.listFacility();\n  }\n\n  listFacility() {\n    this.clinicalFacility$ = this.store$.select(\n      ClinicalFacilityStoreSelectors.selectClinicalFacilityList\n    );\n\n    this.clinicalFacilitySub = this.clinicalFacility$.subscribe((response) => {\n      this.config.tableState = <TableState>response?.tableState;\n        this.clinicalFacilityData = response.CLINICAL_FACILITY_DATA.map((x) => {\n          return {\n            ...x,\n            facilityName: `${x.name}`,\n            location: `${x.city}`,\n            contactName: `${x?.firstName || ''} ${x?.lastName || ''}`,\n          };\n        });\n    });\n  }\n\n  openAddFacilityDialog() {\n    this.dialog.open(AddEditFacilityComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      // height: '900px',\n      data: { clinicalFacilityData: undefined },\n\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  openEditFacility(data) {\n    this.dialog.open(AddEditFacilityComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      // height: '550px',\n      data: { clinicalFacilityData: data },\n\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  openManageAdmin(data) {\n    this.dialog.open(ManageCfAdminComponent, {\n      maxWidth: \"100vw\",\n      //  maxHeight: '100vh',\n      // height: '100%',\n      width: \"95vw\",\n      //  height: '50vw',\n      data: { clinicalFacilityData: data },\n\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.clinicalFacilitySub) this.clinicalFacilitySub.unsubscribe();\n  }\n}\n","<div class=\"table-responsive text-nowrap container-fluid admin-table-layout clinical-table custom-table head-border\">\n    <ls-table [config]=\"config\" [data]=\"clinicalFacilityData\" [columns]=\"columns\" [tableSort]=\"true\">\n        <ng-template lsWidgetName=\"actionsHeading\" let-row>\n            <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"openAddFacilityDialog()\">\n        <mat-icon>add</mat-icon> {{ \"buttons.btn_add_facility\" | translate }}\n      </button>\n        </ng-template>\n        <ng-template lsWidgetName=\"dataStorageMode\" let-row>\n            <span class=\"storage-type\" *ngIf=\"row.dataStorageMode !== '';else hyphen\">{{ row[\"dataStorageMode\"] }}</span>\n            <ng-template #hyphen>-</ng-template>\n        </ng-template>\n        <ng-template lsWidgetName=\"facilityName\" let-row>\n            <span [matTooltip]=\"row.facilityName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.facilityName.length < 40\">\n              {{row.facilityName}}\n            </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"contactName\" let-row>\n            <span [matTooltip]=\"row.contactName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.contactName.length < 40\">\n              {{row.contactName}}\n            </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"location\" let-row>\n            <strong>{{row?.location }}</strong><span class=\"d-block\">{{ row?.state || \"-\" }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"contactDetails\" let-row>\n            <div class=\"pt-1\">{{ row[\"email\"] }}</div>\n            <div class=\"pt-1\">{{ row[\"phoneNo\"] }}</div>\n            <span *ngIf=\"!row.email && !row.phoneNo\">{{(row.email || row.phoneNo)?\"\":\"-\"}}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"actions\" let-row>\n            <button mat-mini-fab color=\"primary\" (click)=\"openEditFacility(row)\" class=\"btn-boxed btn-no-shadow me-4\">\n        <mat-icon class=\"justify-content-center\">edit</mat-icon>\n      </button>\n            <button mat-flat-button type=\"button\" class=\"me-3\" color=\"primary\" (click)=\"openManageAdmin(row)\">\n        {{ \"buttons.btn_manage_admin\" | translate }}\n      </button>\n        </ng-template>\n    </ls-table>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { User, UserErrors } from \"../../../interfaces/user.interface\";\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\nimport { SpinnerService } from \"src/app/shared/_services/spinner.service\";\nimport {\n  ManageAdminStoreActions,\n  ManageAdminStoreSelectors,\n  ManageAdminStoreState,\n} from \"../../../shared/store/manage-admin\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Subscription } from \"rxjs\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\nimport { CautionBoxComponent } from \"../caution-box/caution-box.component\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-add-edit-cfa\",\n  templateUrl: \"./add-edit-cfa.component.html\",\n  styleUrls: [\"./add-edit-cfa.component.scss\"],\n})\nexport class AddEditCfaComponent implements OnInit, OnDestroy {\n  addAddEditForm: FormGroup;\n  submitted: boolean;\n  cfAdminData: User;\n  separateDialCode = false;\n  SearchCountryField = SearchCountryField;\n  TooltipLabel;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [\n    CountryISO.India,\n    CountryISO.UnitedStates,\n    CountryISO.SouthAfrica,\n  ];\n  validCountry = true;\n  cfAdmin: User;\n  cfId: string;\n  spId: string;\n  addManageAdminSuccessSubs: Subscription;\n  addManageAdminFailureSubs: Subscription;\n  updateManageAdminSuccessSubs: Subscription;\n  updateManageAdminFailureSubs: Subscription;\n\n  constructor(\n    private dialogRef: MatDialogRef<AddEditCfaComponent>,\n    private formBuilder: FormBuilder,\n    private spinnerService: SpinnerService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    private authService: AuthenticationService,\n    private snackbar: SnackbarService,\n    private dialog : MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.spId = this.authService.getLoggedUser()?.spId;\n    this.cfAdminData = this.data.cfAdmin;\n    console.log(this.cfAdminData);\n    this.cfId = this.data.cfId;\n    this.createAddEditForm();\n    this.doSubscriptionAddEditCFA();\n  }\n\n  doSubscriptionAddEditCFA() {\n    if (this.cfAdminData === undefined) {\n      this.addManageAdminSuccessSubs = this.store$\n        .select(ManageAdminStoreSelectors.addManageAdminSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.addManageAdminFailureSubs = this.store$\n        .select(ManageAdminStoreSelectors.addManageAdminFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else if (data.errorMessage === 'CFA_ALREADY_EXIST') {\n              this.snackbar.openSnackBar(\"error_message.cfa_already_exists\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    } else {\n      this.updateManageAdminSuccessSubs = this.store$\n        .select(ManageAdminStoreSelectors.updateManageAdminSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.updateManageAdminFailureSubs = this.store$\n        .select(ManageAdminStoreSelectors.updateManageAdminFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    }\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  resetNumber() {\n    this.addAddEditForm.patchValue({\n      phoneNo: {\n        number: undefined,\n        countryCode: CountryISO.India,\n      },\n    });\n  }\n\n  createAddEditForm() {\n    this.addAddEditForm = this.formBuilder.group(\n      {\n        firstName: [\n          this.cfAdminData !== undefined ? this.cfAdminData.firstName : \"\",\n          [\n            Validators.required,\n            Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n            Validators.maxLength(25)\n          ],\n        ],\n        lastName: [\n          this.cfAdminData !== undefined ? this.cfAdminData.lastName : \"\",\n          [\n            Validators.required,\n            Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n            Validators.maxLength(25)\n          ],\n        ],\n        phoneNo: [\n          this.cfAdminData !== undefined ? this.cfAdminData.phoneNo : \"\",\n          [_validatePhoneNumberInput.bind(this)]\n        ],\n        email: [\n          this.cfAdminData !== undefined ? this.cfAdminData.email : \"\",\n        [Validators.email]\n        ],\n      },\n      { validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\n    );\n  }\n\n  charsOnly(control: string, event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  get f() {\n    return this.addAddEditForm.controls;\n  }\n\n  saveServiceProviderAdmin() {\n    this.submitted = true;\n    if (this.addAddEditForm.invalid) {\n      this.addAddEditForm.markAllAsTouched();\n      return;\n    }\n\n    this.spinnerService.show();\n    this.cfAdmin = this.addAddEditForm.value;\n    this.cfAdmin.serviceProviderId = this.spId;\n    this.cfAdmin.facilityId = this.cfId;\n\n    if (\n      this.addAddEditForm.get(\"phoneNo\").value !== null &&\n      this.addAddEditForm.get(\"phoneNo\").value !== \"\"\n    ) {\n      const parsedValue = parsePhoneNumberFromString(this.addAddEditForm\n          .get(\"phoneNo\")\n          .value);\n      this.cfAdmin.phoneNo = parsedValue.number.toString();\n    }\n\n    if (this.cfAdminData === undefined) {\n      this.cfAdmin.isActive = true;\n      this.cfAdmin.createdBy = sessionStorage.getItem(\"user\");\n      this.cfAdmin.createdById = sessionStorage.getItem(\"user_id\");\n      this.cfAdmin.roles = [\"CFA\"];\n      const cDialog = this.dialog.open(CautionBoxComponent,{\n        maxWidth: \"90vw\",\n        width: \"500px\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data: {\n          message_1 : \"clinical_facility.caution.add_user_caution\",\n          message_2 : \"clinical_facility.caution.add_user_caution_1\"\n        }\n      });\n      cDialog.afterClosed().subscribe((boolean)=>{\n        let confirmValue =  boolean;\n        if(confirmValue){\n          this.store$.dispatch(\n            new ManageAdminStoreActions.SaveManageAdminAction(\n              this.cfAdmin,\n              environment.dataApiUrl+'clinical-facilities/users/cfa'\n            )\n          );\n        }\n      });\n     \n    } else {\n      this.cfAdmin.modifiedBy = sessionStorage.getItem(\"user\");\n      this.cfAdmin.modifiedById = sessionStorage.getItem(\"user_id\");\n      this.cfAdmin.id = this.cfAdminData.id;\n      this.cfAdmin.isActive = this.cfAdminData.isActive;\n      this.store$.dispatch(\n        new ManageAdminStoreActions.UpdateManageAdminAction(\n          this.cfAdmin,\n          environment.dataApiUrl+'clinical-facilities/users/cfa'\n        )\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.doUnsubscribeAddEditCFA();\n  }\n\n  doUnsubscribeAddEditCFA() {\n    if (this.cfAdminData === undefined) {\n      if (this.addManageAdminSuccessSubs)\n        this.addManageAdminSuccessSubs.unsubscribe();\n      if (this.addManageAdminFailureSubs)\n        this.addManageAdminFailureSubs.unsubscribe();\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterSaveManageAdminSuccessAction()\n      );\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterSaveManageAdminFailureAction()\n      );\n    } else {\n      if (this.updateManageAdminSuccessSubs)\n        this.updateManageAdminSuccessSubs.unsubscribe();\n      if (this.updateManageAdminFailureSubs)\n        this.updateManageAdminFailureSubs.unsubscribe();\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterUpdateManageAdminSuccessAction()\n      );\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterUpdateManageAdminFailureAction()\n      );\n    }\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.addAddEditForm.controls[controlName].hasError(errorName);\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title *ngIf=\"cfAdminData === undefined; else edit\">\n    {{ 'clinical_facility.add_cfa.label_add_admin_cfa' | translate }}\n  </h1>\n  <ng-template #edit>\n    <h1 mat-dialog-title>\n      {{ 'clinical_facility.add_cfa.label_edit_admin_cfa' | translate }}\n    </h1>\n  </ng-template>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup px-3\">\n  <form [formGroup]=\"addAddEditForm\" class=\"dialog-form\" autocomplete=\"off\">\n    <div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-label\n                  for=\"first-name\"\n                  class=\"matlabel\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            {{ 'shared_label.label_first_name' | translate }}\n            <span class=\"required-star\" *ngIf=\"cfAdminData === undefined\">* </span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData === undefined\">{{ 'shared_label.label_name_cannot_change' | translate }}</span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n          </mat-label>\n          <mat-form-field\n                  appearance=\"fill\"\n                  class=\"formfield-control\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            <input\n                    matInput\n                    formControlName=\"firstName\"\n                    [readonly]=\"cfAdminData\"\n                    (keypress)=\"charsOnly('firstName', $event)\"\n                    autocomplete=\"off\"\n            />\n            <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\" >\n              {{\n              'error_message.err_first_name_required'\n                      | translate\n              }}\n            </mat-error>\n            <mat-error *ngIf=\"hasError('firstName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_first_name_char_only' |translate}}\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t\t<mat-error *ngIf=\"hasError('firstName','maxlength') && !hasError('firstName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_first_name_range' | translate}}\n\t\t\t\t\t\t</mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n          <mat-label\n                  for=\"last-name\"\n                  class=\"matlabel\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            {{ 'shared_label.label_last_name' | translate }}\n            <span class=\"required-star\" *ngIf=\"cfAdminData === undefined\">* </span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData === undefined\">{{ 'shared_label.label_name_cannot_change' | translate }}</span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n          </mat-label>\n          <mat-form-field\n                  appearance=\"fill\"\n                  class=\"formfield-control\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            <input\n                    matInput\n                    formControlName=\"lastName\"\n                    [readonly]=\"cfAdminData\"\n                    (keypress)=\"charsOnly('lastName', $event)\"\n                    autocomplete=\"off\"\n            />\n            <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\" >\n              {{\n              'error_message.err_last_name_required'\n                      | translate\n              }}\n            </mat-error>\n            <mat-error *ngIf=\"hasError('lastName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_last_name_char_only' |translate}}\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t\t<mat-error *ngIf=\"hasError('lastName','maxlength') && !hasError('lastName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_last_name_range' | translate}}\n\t\t\t\t\t\t</mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-label for=\"spa-email\" class=\"matlabel\">\n            {{ 'shared_label.label_email_id' | translate }}\n            <span class=\"required-star\">**</span>\n          </mat-label>\n          <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n            <input matInput formControlName=\"email\" autocomplete=\"off\" [maxlength]=\"320\"/>\n            <mat-error *ngIf=\"hasError('email','email')\" >\n              {{'error_message.err_invalid_email'|translate}}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n          <mat-label for=\"sp-contact-person-phone\" class=\"matlabel\">\n            {{ 'shared_label.label_phone_no' | translate }}\n            <span class=\"required-star\">**</span>\n          </mat-label>\n          <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n          <mat-error class = \"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\" >\n            {{\"errors.err_invalid_phone_no\" | translate}}\n          </mat-error>\n        </div>\n      </div>\n      <mat-error class=\"email-error\" *ngIf=\"submitted && !addAddEditForm.getRawValue()?.email && !addAddEditForm.getRawValue()?.phoneNo\">\n        {{ \"manage_users_module.edituser.message1\" | translate }}\n      </mat-error>\n    </div>\n    <div class=\"my-2\">\n      <div class=\"required-text mt-3\">\n        <span>* {{ 'error_message.err_mandatory' | translate }}</span>\n      </div>\n      <div\n              style=\"margin-top: 10px !important\"\n              class=\"email-phone-info-text\"\n      >\n        **{{ 'error_message.err_email_phone_mandatory' | translate }}\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<div mat-dialog-actions align=\"end\">\n  <button\n          type=\"button\"\n          mat-flat-button color=\"warn\"\n          class=\"fill-btn\"\n          (click)=\"onClose()\"\n  >\n    {{ 'buttons.btn_cancel' | translate }}\n  </button>\n  <button\n  type=\"button\"\n  mat-flat-button color=\"primary\"\n  class=\"fill-btn\"\n  (click)=\"saveServiceProviderAdmin()\"\n>\n{{ 'buttons.btn_save' | translate }}\n</button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\r\nimport csc from \"country-state-city\";\r\nimport { ClinicalFacility } from \"../../clinical-facility-management/clinical-facility.interface\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  ClinicalFacilityStoreActions,\r\n  ClinicalFacilityStoreSelectors,\r\n  ClinicalFacilityStoreState,\r\n} from \"../../store/clinical-facility-management\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { CautionBoxComponent } from \"../caution-box/caution-box.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-edit-facility\",\r\n  templateUrl: \"./add-edit-facility.component.html\",\r\n  styleUrls: [\"./add-edit-facility.component.scss\"],\r\n})\r\nexport class AddEditFacilityComponent implements OnInit, OnDestroy {\r\n  facilityForm: FormGroup;\r\n  submitted: boolean;\r\n  // for country code\r\n  separateDialCode = false;\r\n  SearchCountryField = SearchCountryField;\r\n  TooltipLabel;\r\n  CountryISO = CountryISO;\r\n  preferredCountries: CountryISO[] = [\r\n    CountryISO.India,\r\n    CountryISO.UnitedStates,\r\n    CountryISO.SouthAfrica,\r\n  ];\r\n  countryArray = [];\r\n  statesOfCountry = [];\r\n  selectedCountry: string;\r\n  countryCode: string;\r\n  selectedState: string;\r\n  stateCode: string;\r\n  citiesOfStateAndCountry = [];\r\n  clinicalFacility: ClinicalFacility;\r\n  clinicalFacilityData: ClinicalFacility;\r\n  selectedCountryData = [];\r\n  selectedStateData = [];\r\n  selectedCityData = [];\r\n  spId: string;\r\n  noStatesFound: boolean;\r\n  addCfSuccessSubs: Subscription;\r\n  addCfFailureSubs: Subscription;\r\n  updateCfSuccessSubs: Subscription;\r\n  updateCfFailureSubs: Subscription;\r\n  bedsMin = 1;\r\n  bedsMax = 50000;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddEditFacilityComponent>,\r\n    private formBuilder: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private store$: Store<ClinicalFacilityStoreState.ClinicalFacilityState>,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private dialog : MatDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.spId = this.authService.getLoggedUser()?.spId;\r\n    this.clinicalFacilityData = this.data.clinicalFacilityData;\r\n    console.log(this.clinicalFacilityData)\r\n    this.setupCountryStateCity();\r\n    this.createFacilityForm();\r\n    this.doSubscriptionAddEditCF();\r\n  }\r\n\r\n  doSubscriptionAddEditCF() {\r\n    if (this.clinicalFacilityData === undefined) {\r\n      this.addCfSuccessSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.saveClinicalFacilitySuccess)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.dialogRef.close();\r\n          }\r\n        });\r\n      this.addCfFailureSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.saveClinicalFacilityFailure)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.snackbar.openSnackBar(data, \"top\", \"center\");\r\n          }\r\n        });\r\n    } else {\r\n      this.updateCfSuccessSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.updateClinicalFacilitySuccess)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.dialogRef.close();\r\n          }\r\n        });\r\n\r\n      this.updateCfFailureSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.updateClinicalFacilityFailure)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.snackbar.openSnackBar(data, \"top\", \"center\");\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  setupCountryStateCity() {\r\n    this.countryArray = csc.getAllCountries() || [];\r\n    if (this.clinicalFacilityData !== undefined) {\r\n      try {\r\n        this.selectedCountryData = this.countryArray.filter((data) => {\r\n          return data.name === this.clinicalFacilityData.country;\r\n        });\r\n        this.countryCode = this.selectedCountryData[0]?.isoCode;\r\n        this.statesOfCountry =\r\n          csc.getStatesOfCountry(this.selectedCountryData[0]?.isoCode) || [];\r\n        this.selectedStateData = this.statesOfCountry.filter((data) => {\r\n          return data.name === this.clinicalFacilityData.state;\r\n        });\r\n        this.stateCode = this.selectedStateData[0]?.isoCode;\r\n        this.citiesOfStateAndCountry =\r\n          csc.getCitiesOfState(this.countryCode, this.stateCode) || [];\r\n        this.selectedCityData = this.citiesOfStateAndCountry.filter((data) => {\r\n          return data.name === this.clinicalFacilityData.city;\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      // this.countryCode = this.countryArray[0]?.isoCode;\r\n      // this.statesOfCountry = csc.getStatesOfCountry(\r\n      //   this.countryArray[0]?.isoCode\r\n      // );\r\n      // this.stateCode = this.statesOfCountry[0]?.isoCode;\r\n      // this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n      //   this.countryArray[0]?.isoCode,\r\n      //   this.statesOfCountry[0]?.isoCode\r\n      // );\r\n    }\r\n  }\r\n\r\n  createFacilityForm() {\r\n    this.facilityForm = this.formBuilder.group({\r\n      user_id:[this.clinicalFacilityData !== undefined ? this.clinicalFacilityData.id :\"\"],\r\n      name: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.name\r\n          : \"\",\r\n        [Validators.required, Validators.pattern(\"^[a-zA-Z0-9]{1}[a-zA-Z0-9-_ ]*$\"),Validators.maxLength(64)],\r\n      ],\r\n      address: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.address\r\n          : \"\",\r\n        [Validators.required,Validators.pattern(\"^(?!\\\\s+$)[#&()./0-9a-zA-Z\\s ,-]+$\"),Validators.maxLength(128),Validators.minLength(2)],\r\n      ],\r\n      area: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.area\r\n          : \"\",\r\n        Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9_ ]*$\"),\r\n      ],\r\n      country: [\r\n        this.clinicalFacilityData === undefined\r\n          ? \"\"\r\n          : this.selectedCountryData[0]?.isoCode +\r\n            \"|\" +\r\n            this.selectedCountryData[0]?.name,\r\n            Validators.required\r\n      ],\r\n      state: [\r\n        this.clinicalFacilityData === undefined\r\n          ? \"\"\r\n          : this.selectedStateData[0]?.name || this.clinicalFacilityData?.state,\r\n        [Validators.pattern(\"^(?!\\\\s+$)[a-zA-ZÀ-ȕÀ-ÖØ-öø-ÿ-&' ]*$\")]\r\n      ],\r\n      city: [\r\n        this.clinicalFacilityData === undefined\r\n          ? \"\"\r\n          : this.selectedCityData[0]?.name || this.clinicalFacilityData.city,\r\n        [Validators.pattern(\"^(?!\\\\s+$)[a-zA-ZÀ-ȕÀ-ÖØ-öø-ÿ-&' ]*$\")],\r\n      ],\r\n      groupHospital: [this.clinicalFacilityData === undefined\r\n        ? false : this.clinicalFacilityData.groupHospital || false],\r\n      numberOfBeds: [this.clinicalFacilityData === undefined\r\n        ? null : this.clinicalFacilityData?.numberOfBeds, [Validators.required]],\r\n      firstName: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.firstName\r\n          : \"\",\r\n        [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n      ],\r\n      lastName: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.lastName\r\n          : \"\",\r\n        [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n      ],\r\n      email: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.email\r\n          : \"\",\r\n          [ Validators.email]\r\n      ],\r\n      phoneNo: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.phoneNo\r\n          : // ? this.clinicalFacilityData.phoneNo.substring(3)\r\n            // : \"\"\r\n            \"\", [_validatePhoneNumberInput.bind(this)],\r\n      ],\r\n      dataStorageMode: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.dataStorageMode\r\n          : \"archived\",\r\n      ],\r\n      multiFactorAuthEn: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.multiFactorAuthEn\r\n          : false,\r\n      ],\r\n      zipCode: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.zipCode\r\n          : \"\",\r\n        [Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9]*$\"), Validators.minLength(3), Validators.maxLength(12)],\r\n      ],\r\n    },\r\n    //{ validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\r\n    );\r\n  }\r\n\r\n  charsOnly(control: string, event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.facilityForm.controls;\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  resetNumber() {\r\n    this.facilityForm.patchValue({\r\n      contact: {\r\n        number: undefined,\r\n        countryCode: CountryISO.India,\r\n      },\r\n    });\r\n  }\r\n\r\n  saveFacility() {\r\n    this.submitted = true;\r\n    console.log(this.facilityForm);\r\n    if (this.facilityForm.invalid) {\r\n      this.facilityForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.clinicalFacility = this.facilityForm.value;\r\n    console.log(this.clinicalFacility)\r\n    if(this.clinicalFacility.country.includes('|')){\r\n      this.clinicalFacility.country = this.clinicalFacility.country.split(\"|\")[1];\r\n    }\r\n    if(this.clinicalFacility.state.includes('|')){\r\n      this.clinicalFacility.state = this.clinicalFacility.state.split(\"|\")[1];\r\n    }\r\n    this.clinicalFacility.serviceproviderId = this.spId;\r\n    if(this.selectedCountryData[0]?.timezones?.length) {\r\n      this.clinicalFacility.timezone = this.selectedCountryData[0]?.timezones[0]?.zoneName;\r\n    }\r\n    if (\r\n      this.facilityForm.get(\"phoneNo\").value !== null &&\r\n      this.facilityForm.get(\"phoneNo\").value !== \"\"\r\n    ) {\r\n      const parsedValue = parsePhoneNumberFromString(this.facilityForm\r\n          .get(\"phoneNo\")\r\n          .value);\r\n      this.clinicalFacility.phoneNo = parsedValue.number.toString();\r\n    }\r\n\r\n    if (this.clinicalFacilityData === undefined) {\r\n      this.clinicalFacility.isActive = true;\r\n      this.clinicalFacility.createdBy = sessionStorage.getItem(\"user\");\r\n      this.clinicalFacility.createdById = sessionStorage.getItem(\"user_id\");\r\n      const cDialog = this.dialog.open(CautionBoxComponent,{\r\n        maxWidth: \"90vw\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data :{\r\n          message_1 : \"clinical_facility.caution.add_facility_caution_1\",\r\n          message_2 : \"clinical_facility.caution.add_facility_caution_2\"\r\n        } \r\n      });\r\n      cDialog.afterClosed().subscribe((boolean)=>{\r\n        let confirmValue =  boolean;\r\n        if(confirmValue){\r\n          this.store$.dispatch(\r\n            new ClinicalFacilityStoreActions.SaveClinicalFacilityAction(\r\n              this.clinicalFacility\r\n            )\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"editing\");\r\n      this.clinicalFacility.isActive = this.clinicalFacilityData.isActive;\r\n      this.clinicalFacility.modifiedBy = sessionStorage.getItem(\"user\");\r\n      this.clinicalFacility.modifiedById = sessionStorage.getItem(\"user_id\");\r\n      this.clinicalFacility.id = this.clinicalFacilityData.id;\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.UpdateClinicalFacilityAction(\r\n          this.clinicalFacility\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  getStatesByCountry(event) {\r\n    try {\r\n      const domValue = event.value;\r\n      this.countryCode = domValue.split(\"|\")[0];\r\n      this.selectedCountry = domValue.split(\"|\")[1];\r\n      this.selectedCountryData = this.countryArray.filter((data) => {\r\n        return data.name === this.selectedCountry;\r\n      });\r\n      this.statesOfCountry = csc.getStatesOfCountry(this.countryCode);\r\n      if (this.statesOfCountry.length > 0) {\r\n        // this.facilityForm\r\n        //   .get(\"state\")\r\n        //   .patchValue(\r\n        //     this.statesOfCountry[0].isoCode + \"|\" + this.statesOfCountry[0].name\r\n        //   );\r\n        // this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n        //   this.countryCode.trim(),\r\n        //   this.statesOfCountry[0].isoCode\r\n        // );\r\n        // this.facilityForm\r\n        //   .get(\"city\")\r\n        //   .patchValue(this.citiesOfStateAndCountry[0].name);\r\n      } else {\r\n        this.noStatesFound = true;\r\n        this.citiesOfStateAndCountry = [];\r\n        this.facilityForm.get(\"state\").patchValue(\"\");\r\n        this.facilityForm.get(\"city\").patchValue(\"\");\r\n      }\r\n      console.log(this.facilityForm)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getCityByStateAndCountry(event) {\r\n    this.selectedState = event.option.value;\r\n    this.stateCode = this.statesOfCountry.find(state => state.name === this.selectedState)?.isoCode || '';\r\n    this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n      this.countryCode,\r\n      this.stateCode\r\n    );\r\n    \r\n    if(this.citiesOfStateAndCountry.length > 0 ){\r\n      // this.facilityForm\r\n      // .get(\"city\")\r\n      // .patchValue(this.citiesOfStateAndCountry[0].name);\r\n       \r\n    }else{\r\n      this.facilityForm\r\n      .get(\"city\")\r\n      .patchValue(\"\");\r\n       \r\n    }\r\n    console.log(this.facilityForm)\r\n  }\r\n\r\n  getCountryValues(country) {\r\n    console.log(this.countryArray);\r\n    return country.isoCode + \"|\" + country.name;\r\n  }\r\n\r\n  getStateValues(state) {\r\n    return state.isoCode + \"|\" + state.name;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.doUnsubscribeAddEditCF();\r\n  }\r\n\r\n  doUnsubscribeAddEditCF() {\r\n    if (this.clinicalFacilityData === undefined) {\r\n      if (this.addCfSuccessSubs) this.addCfSuccessSubs.unsubscribe();\r\n      if (this.addCfFailureSubs) this.addCfFailureSubs.unsubscribe();\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterSaveClinicalFacilitySuccess()\r\n      );\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterSaveClinicalFacilityFailure()\r\n      );\r\n    } else {\r\n      if (this.updateCfSuccessSubs) this.updateCfSuccessSubs.unsubscribe();\r\n      if (this.updateCfFailureSubs) this.updateCfFailureSubs.unsubscribe();\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterUpdateClinicalFacilitySuccess()\r\n      );\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterUpdateClinicalFacilityFailure()\r\n      );\r\n    }\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) =>{\r\n    return this.facilityForm.controls[controlName].hasError(errorName);\r\n  }\r\n  filteredResults(items, key, searchTxt) {\r\n    if(!items || !items.length) return items;\r\n    if(!searchTxt || !searchTxt.length) return items;\r\n    return items.filter(item => {\r\n      return item[key].toString().toLowerCase().indexOf(searchTxt.toLowerCase()) > -1\r\n    });\r\n  }\r\n  stateChange(value) {\r\n    let selectedState = this.statesOfCountry.find(state => state.name.toUpperCase() == value.toUpperCase());\r\n    if(selectedState) {\r\n      this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n          this.countryCode,\r\n          selectedState?.isoCode\r\n      );\r\n    } else {\r\n      this.citiesOfStateAndCountry = [];\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title *ngIf=\"clinicalFacilityData === undefined; else edit\">\n    {{\n    'clinical_facility.add_clinical_facility.label_add_facility'\n    | translate\n    }}\n  </h1>\n  <ng-template #edit>\n    <h1 mat-dialog-title>\n      {{\n      'clinical_facility.add_clinical_facility.label_edit_facility'\n      | translate\n      }}\n    </h1>\n  </ng-template>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <form [formGroup]=\"facilityForm\" class=\"dialog-form ServiceProviderForm \" id=\"addServiceProviderForm\" autocomplete=\"off\">\n    <fieldset class=\"scheduler-border\">\n      <legend class=\"scheduler-border\">\n        <div>\n          <img src=\"assets/icons/facility-icon.svg\" alt=\"facility\" />\n          <label class=\"facility-details-label\">\n            {{\n            'clinical_facility.add_clinical_facility.label_clicnical_facility'\n            | translate\n            }}\n          </label>\n        </div>\n      </legend>\n      <div *ngIf=\"clinicalFacilityData !== undefined\">\n        <mat-label for=\"facility-name\" [class.disabled]=\"clinicalFacilityData\" class=\"matlabel\">\n          {{ 'shared_label.label_id' | translate }}\n        </mat-label>\n        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"clinicalFacilityData\">\n          <input matInput formControlName=\"user_id\" [readonly]=\"clinicalFacilityData\"/>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-label for=\"facility-name\" [class.disabled]=\"clinicalFacilityData\" class=\"matlabel\">\n          {{ 'shared_label.label_name' | translate }}\n          <span class=\"required-star\">*</span>\n        </mat-label>\n        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"clinicalFacilityData\" [ngClass]=\"facilityForm.get('name').hasError('pattern') && facilityForm.get('name').touched ? 'error-msg': ''\">\n          <input matInput formControlName=\"name\" autocomplete=\"off\" [readonly]=\"clinicalFacilityData\" maxlength=\"64\"/>\n          <mat-error *ngIf=\"hasError('name', 'required') && submitted\"  >\n            {{ 'error_message.err_name_required' | translate }}\n          </mat-error>\n          <mat-error *ngIf=\"hasError('name','pattern')\">\n            {{ 'error_message.err_name_pattern' | translate }}\n          </mat-error>\n          <mat-error *ngIf=\"hasError('name','maxlength') && !hasError('name','pattern')\"  >\n            {{ 'error_message.err_name_range' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-country\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_country'\n              | translate\n              }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <mat-select formControlName=\"country\" (selectionChange)=\"getStatesByCountry($event)\" [placeholder]=\"'placeholders.plc_select' | translate\">\n                <mat-option *ngFor=\"let country of countryArray\" value=\"{{ getCountryValues(country) }}\">\n                  {{ country['name'] }} \n                  ({{ country['flag'] }})</mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"hasError('country', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-state\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_state'\n              | translate\n              }}\n              <span class=\"required-star\" *ngIf=\"statesOfCountry.length > 0\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [hideRequiredMarker]=\"true\">\n              <input matInput formControlName=\"state\" minlength=\"2\" maxlength=\"64\" [matAutocomplete]=\"state\"\n                     [required]=\"statesOfCountry.length > 0\" (ngModelChange)=\"stateChange(facilityForm.value.state)\"/>\n              <mat-autocomplete #state=\"matAutocomplete\" (optionSelected)=\"getCityByStateAndCountry($event)\">\n                <mat-option *ngFor=\"let state of filteredResults(statesOfCountry, 'name', facilityForm.value.state)\" value=\"{{ state['name'] }}\">{{ state['name'] }}\n                </mat-option>\n              </mat-autocomplete>\n<!--              <mat-select formControlName=\"state\" [required]=\"statesOfCountry.length > 0\" (selectionChange)=\"-->\n<!--\t\t\t\t\t\t\t\t\tgetCityByStateAndCountry($event)-->\n<!--\t\t\t\t\t\t\t\t\">-->\n<!--                <mat-option *ngFor=\"let state of statesOfCountry\" value=\"{{ getStateValues(state) }}\">{{ state['name']-->\n<!--                  }}</mat-option>-->\n<!--              </mat-select>-->\n              <mat-error *ngIf=\"hasError('state', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"!hasError('state', 'minlength') && hasError('state', 'pattern')\"  >\n                {{'error_message.invalid_state'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('state', 'minlength')\"  >\n                {{'error_message.city_len_err'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"city-line-1\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_city'\n              | translate\n              }}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [hideRequiredMarker]=\"true\">\n              <input matInput id=\"city-line-1\" formControlName=\"city\" minlength=\"2\" maxlength=\"64\" [matAutocomplete]=\"city\"/>\n              <mat-autocomplete #city=\"matAutocomplete\">\n                <mat-option *ngFor=\"let city of filteredResults(citiesOfStateAndCountry, 'name', facilityForm.value.city)\" value=\"{{ city['name'] }}\">{{ city['name'] }}\n                </mat-option>\n              </mat-autocomplete>\n              <mat-error *ngIf=\"hasError('city', 'required') && submitted\"  >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"!hasError('city', 'minlength') && hasError('city', 'pattern')\"  >\n                {{'error_message.invalid_city'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('city', 'minlength')\"  >\n                {{'error_message.city_len_err'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"zip-code\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_zip_code'\n              | translate\n              }}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <input matInput formControlName=\"zipCode\" autocomplete=\"off\" maxlength=\"12\"/>\n              <mat-error *ngIf=\"(hasError('zipCode', 'maxlength') || hasError('zipCode', 'minlength')) && !hasError('zipCode','pattern') \" >\n                {{'error_message.err_zipcode_range' | translate}}\n              </mat-error>\n              <mat-error\n                *ngIf=\"hasError('zipCode','pattern') \" >\n                {{'error_message.err_zipcode_alphanumeric_only'| translate}}\n              </mat-error>\n            </mat-form-field>\n\n          </div>\n        </div>\n      </div>\n      <div>\n        <mat-label for=\"facility-address-line-1\" class=\"matlabel\">\n          {{ 'shared_label.label_address' | translate }}\n          <span class=\"required-star\">*</span>\n        </mat-label>\n        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [ngClass]=\"facilityForm.get('address').hasError('pattern') && facilityForm.get('address').touched ? 'error-msg': ''\">\n          <mat-label *ngIf=\"!facilityForm.get('address')?.value\">{{\n            'placeholders.plc_enter_here' | translate\n            }}</mat-label>\n          <input matInput formControlName=\"address\" autocomplete=\"off\" maxlength=\"128\"/>\n          <mat-error *ngIf=\"hasError('address','required') && submitted\">\n            {{'error_message.err_field_required'|translate}}\n          </mat-error>\n          <mat-error *ngIf=\"hasError('address','pattern')\">\n            {{'error_message.err_valid_address'|translate}}\n          </mat-error>\n          <mat-error *ngIf=\"(hasError('address','minlength') || hasError('address','maxlength')) && !hasError('address','pattern')\">\n            {{'error_message.err_address_range' | translate}}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-country\" class=\"matlabel\">\n              {{'clinical_facility.add_clinical_facility.label_group_hospital'| translate}}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <mat-select formControlName=\"groupHospital\" [placeholder]=\"'placeholders.plc_select' | translate\">\n                <mat-option [value]=\"true\">\n                  {{ 'clinical_facility.add_clinical_facility.yes'| translate }}\n                </mat-option>\n                <mat-option [value]=\"false\">\n                  {{ 'clinical_facility.add_clinical_facility.no'| translate }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"hasError('groupHospital', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-state\" class=\"matlabel\">\n              {{'clinical_facility.add_clinical_facility.label_no_beds' | translate}}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <input matInput type=\"number\" formControlName=\"numberOfBeds\" [min]=\"bedsMin\" [max]=\"bedsMax\"/>\n              <mat-error *ngIf=\"hasError('numberOfBeds', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('numberOfBeds', 'min') || hasError('numberOfBeds', 'max')\"  >\n                {{'error_message.invalid_beds_num'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-state\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_select_storage_type'\n              | translate\n              }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <mat-select formControlName=\"dataStorageMode\" id=\"select-storage\"\n                          [placeholder]=\"'placeholders.plc_select' | translate\">\n                <mat-option value=\"archived\">Archived</mat-option>\n                <mat-option value=\"standard\">Standard</mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"hasError('dataStorageMode', 'required') && submitted\" >\n                {{ 'error_message.err_name_required' | translate }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6 d-flex align-items-end\">\n            <section class=\"example-section check-authentication align-bottom\">\n              <mat-checkbox class=\"example-margin\" formControlName=\"multiFactorAuthEn\">\n                {{'clinical_facility.add_clinical_facility.label_mfa'| translate}}\n              </mat-checkbox>\n            </section>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class=\"scheduler-border\">\n      <legend class=\"scheduler-border\">\n        <div>\n          <mat-icon class=\"material-icons-outlined\">account_circle</mat-icon>\n          <label class=\"facility-details-label\">{{\n            'clinical_facility.add_clinical_facility.label_primary_contact' | translate\n            }}</label>\n        </div>\n      </legend>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-person-fname\" class=\"matlabel\">{{ 'shared_label.label_first_name' | translate }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [ngClass]=\"facilityForm.get('firstName').hasError('pattern') && facilityForm.get('firstName').touched ? 'error-msg': ''\" >\n              <input matInput formControlName=\"firstName\" autocomplete=\"off\" (keypress)=\"charsOnly('firstName', $event)\" />\n              <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\" >\n                {{\n                'error_message.err_first_name_required'\n                | translate\n                }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('firstName','pattern')\">\n                {{ 'error_message.err_first_name_char_only' | translate }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('firstName','maxlength') && !hasError('firstName','pattern')\">\n                {{ 'error_message.err_first_name_range' | translate }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-person-lname\" class=\"matlabel\">{{ 'shared_label.label_last_name' | translate }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [ngClass]=\"facilityForm.get('lastName').hasError('pattern') && facilityForm.get('lastName').touched ? 'error-msg': ''\" >\n              <input matInput formControlName=\"lastName\" autocomplete=\"off\" (keypress)=\"charsOnly('lastName', $event)\" />\n              <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\" >\n                {{\n                'error_message.err_last_name_required'\n                | translate\n                }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('lastName','pattern')\">\n                {{ 'error_message.err_last_name_char_only' | translate }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('lastName','maxlength') && !hasError('lastName','pattern')\" >\n                {{ 'error_message.err_last_name_range' | translate }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-email\" class=\"matlabel pt-email\">{{ 'shared_label.label_email_id' | translate }}\n              <!--<span class=\"required-star\">**</span>-->\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <input matInput formControlName=\"email\" autocomplete=\"off\" [maxlength]=\"320\"/>\n              <mat-error *ngIf=\"hasError('email', 'email')\">\n                {{\n                'error_message.err_invalid_email' | translate\n                }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-person-phone\" class=\"matlabel\">{{ 'shared_label.label_phone_no' | translate }}\n              <!--<span class=\"required-star\">**</span>-->\n            </mat-label>\n            <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n            <mat-error class=\"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\" >\n              {{\"errors.err_invalid_phone_no\" | translate}}\n            </mat-error>\n          </div>\n        </div>\n        <!--<mat-error *ngIf=\"submitted && !facilityForm.getRawValue()?.email && !facilityForm.getRawValue()?.phoneNo\">\n          {{ \"manage_users_module.edituser.message1\" | translate }}\n        </mat-error>-->\n      </div>\n    </fieldset>\n    <div class=\"required-text\">\n      <span>* {{ 'error_message.err_mandatory' | translate }}</span>\n    </div>\n\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button type=\"button\" mat-flat-button class=\"fill-btn\" (click)=\"onClose()\" color=\"warn\">\n    {{ 'buttons.btn_cancel' | translate }}\n  </button>\n  <button type=\"button\" color=\"primary\" mat-flat-button class=\"fill-btn\" (click)=\"saveFacility()\" >\n    {{ 'buttons.btn_save' | translate }}\n  </button>\n</mat-dialog-actions>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA, MatDialogRef , MatDialog} from \"@angular/material/dialog\";\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\nimport { SpinnerService } from \"src/app/shared/_services/spinner.service\";\nimport {User, UserErrors} from \"../../../interfaces/user.interface\";\nimport {\n  UserManagementStoreActions,\n  UserManagementStoreSelectors,\n  UserManagementStoreState,\n} from \"../../store/user-management\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Subscription } from \"rxjs\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\nimport { LSvalidators } from \"src/app/shared/lsValidators/lsvalidators\";\nimport { CautionBoxComponent } from \"../caution-box/caution-box.component\";\n\n@Component({\n  selector: \"app-add-edit-user-management\",\n  templateUrl: \"./add-edit-user-management.component.html\",\n  styleUrls: [\"./add-edit-user-management.component.scss\"],\n})\nexport class AddEditUserManagementComponent implements OnInit, OnDestroy {\n  addUserForm: FormGroup;\n  submitted: boolean;\n  // for country code\n  separateDialCode = false;\n  SearchCountryField = SearchCountryField;\n  TooltipLabel;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [\n    CountryISO.India,\n    CountryISO.UnitedStates,\n    CountryISO.SouthAfrica,\n  ];\n  validCountry = true;\n  user: User;\n  userData: User;\n  isUpdate: any;\n  userRoles = [{name: \"PHYSICIAN\", value: \"SPP\"}];\n  spId: string;\n  saveUserSuccessSub: Subscription;\n  saveUserFailureSub: Subscription;\n  updateUserSuccessSub: Subscription;\n  updateUserFailureSub: Subscription;\n  roles = [];\n\n  constructor(\n    private dialogRef: MatDialogRef<AddEditUserManagementComponent>,\n    private formBuilder: FormBuilder,\n    private spinnerService: SpinnerService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<UserManagementStoreState.UserManagementState>,\n    private authService: AuthenticationService,\n    private snackbar: SnackbarService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.spId = this.authService.getLoggedUser()?.spId;\n    this.userData = this.data.userData;\n    this.createUserForm();\n    this.doSubscriptionAddEditUser();\n    this.roles = this.authService.getRoles();\n    if(this.roles.indexOf('SPA') > -1) {\n      this.userRoles = [{name: \"SPA\", value: \"SPAC\"}, {name: \"PHYSICIAN\", value: \"SPP\"}];\n    }\n  }\n\n  doSubscriptionAddEditUser() {\n    if (this.userData === undefined) {\n      this.saveUserSuccessSub = this.store$\n        .select(UserManagementStoreSelectors.saveUserManagementSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n      this.saveUserFailureSub = this.store$\n        .select(UserManagementStoreSelectors.saveUserManagementFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    } else {\n      this.updateUserSuccessSub = this.store$\n        .select(UserManagementStoreSelectors.updateUserManagementSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.updateUserFailureSub = this.store$\n        .select(UserManagementStoreSelectors.updateUserManagementFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    }\n  }\n\n  createUserForm() {\n    this.addUserForm = this.formBuilder.group(\n      {\n        user_id:[this.userData !== undefined ? this.userData.id : \"\"],\n        firstName: [\n          this.userData !== undefined ? this.userData.firstName : \"\",\n          [\n            Validators.required,\n            LSvalidators.validatePatientName,\n            Validators.maxLength(25)\n            //Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9_ ]*$\"),\n          ],\n        ],\n        lastName: [\n          this.userData !== undefined ? this.userData.lastName : \"\",\n          [\n            Validators.required,\n            LSvalidators.validatePatientName,\n            Validators.maxLength(25)\n            //Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9_ ]*$\"),\n          ],\n        ],\n        phoneNo: [\n          this.userData !== undefined\n            ? this.userData?.phoneNo : \"\",\n          [_validatePhoneNumberInput.bind(this)]\n        ],\n        email: [\n          this.userData !== undefined ? this.userData.email : \"\",\n          [Validators.email]\n        ],\n        roles: [\n          this.userData !== undefined\n            ? this.userData.roles[0] : \"\",\n          Validators.required,\n        ],\n      },\n      { validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\n    );\n  }\n\n  charsOnly(control: string, event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n \n\n  get f() {\n    return this.addUserForm.controls;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  resetNumber() {\n    this.addUserForm.patchValue({\n      phoneNo: {\n        number: undefined,\n        countryCode: CountryISO.India,\n      },\n    });\n  }\n\n  saveUser() {\n    this.submitted = true;\n    if (this.addUserForm.invalid) {\n      this.addUserForm.markAllAsTouched();\n      return;\n    }\n\n    this.spinnerService.show();\n    this.user = this.addUserForm.value;\n    if(!Array.isArray(this.addUserForm.value.roles)) {\n      this.user.roles = [this.addUserForm.value.roles];\n    }\n    this.user.serviceProviderId = this.spId;\n\n    if (\n      this.addUserForm.get(\"phoneNo\").value !== null &&\n      this.addUserForm.get(\"phoneNo\").value !== \"\"\n    ) {\n      const parsedValue = parsePhoneNumberFromString(this.addUserForm\n          .get(\"phoneNo\")\n          .value);\n      this.user.phoneNo = parsedValue.number.toString();\n    }\n    let url = '';\n    if(this.user.roles[0] === 'SPP')\n      url = 'service-providers/users/physician';\n    else\n      url = 'service-providers/users/spac';\n\n    if (this.userData === undefined) {\n      this.user.isActive = true;\n      this.user.createdBy = sessionStorage.getItem(\"user\");\n      this.user.createdById = sessionStorage.getItem(\"user_id\");\n      console.log(this.user);\n      const cDialog = this.dialog.open(CautionBoxComponent,{\n        maxWidth: \"90vw\",\n        width: \"500px\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data:{\n          message_1 :\"clinical_facility.caution.add_user_caution\",\n          message_2 :\"clinical_facility.caution.add_user_caution_1\"\n        } \n      });\n      cDialog.afterClosed().subscribe((boolean)=>{\n        let confirmValue =  boolean;\n        if(confirmValue){\n          this.store$.dispatch(\n            new UserManagementStoreActions.SaveUserManagementAction(this.user, url)\n          );\n        }\n      });\n    } else {\n      this.user.modifiedBy = sessionStorage.getItem(\"user\");\n      this.user.modifiedById = sessionStorage.getItem(\"user_id\");\n      this.user.id = this.userData.id;\n      this.user.isActive = this.userData.isActive;\n      console.log(this.user);\n      this.store$.dispatch(\n        new UserManagementStoreActions.UpdateUserManagementAction(this.user, url)\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.doUnsubscriptionAddEditUser();\n  }\n\n  doUnsubscriptionAddEditUser() {\n    if (this.userData === undefined) {\n      if (this.saveUserSuccessSub) this.saveUserSuccessSub.unsubscribe();\n      if (this.saveUserFailureSub) this.saveUserFailureSub.unsubscribe();\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterSaveUserManagementSuccessAction()\n      );\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterSaveUserManagementFailureAction()\n      );\n    } else {\n      if (this.updateUserSuccessSub) this.updateUserSuccessSub.unsubscribe();\n      if (this.updateUserFailureSub) this.updateUserFailureSub.unsubscribe();\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterUpdateUserManagementSuccessAction()\n      );\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterUpdateUserManagementFailureAction()\n      );\n    }\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.addUserForm.controls[controlName].hasError(errorName);\n  }\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title *ngIf=\"userData === undefined; else edit\">\n        {{ 'user-management.add_user.label_add_user' | translate }}\n    </h1>\n    <ng-template #edit>\n        <h1 mat-dialog-title>\n            {{ 'user-management.add_user.label_edit_user' | translate }}\n        </h1>\n    </ng-template>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n    <form [formGroup]=\"addUserForm\" class=\"dialog-form\" autocomplete=\"off\">\n        <div>\n            <div *ngIf=\"userData !== undefined\">\n                <mat-label for=\"facility-name\" [class.disabled]=\"userData\" class=\"matlabel\">\n                  {{ 'shared_label.label_id' | translate }}\n                </mat-label>\n                <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"userData\">\n                  <input matInput formControlName=\"user_id\" [readonly]=\"userData\"/>\n                </mat-form-field>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <mat-label for=\"sp-contact-person-fname\" [class.disabled]=\"userData\" class=\"matlabel\">{{ 'shared_label.label_first_name' | translate }}\n                        <span class=\"required-star\" *ngIf=\"userData === undefined\">*</span>\n                        <span class=\"required-star cannotEdit\" *ngIf=\"userData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n                    </mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"userData\" [ngClass]=\"addUserForm.get('firstName').hasError('pattern') && addUserForm.get('firstName').touched ? 'error-msg': ''\">\n                        <input matInput formControlName=\"firstName\" autocomplete=\"off\" [readonly]=\"userData\" (keypress)=\"charsOnly('firstName', $event)\" />\n                        <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\" >\n                            {{ 'error_message.err_first_name_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('firstName', 'mustCharsOnly') \">\n                            {{'error_message.err_first_name_char_only' |translate}}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('firstName','maxlength') && !hasError('firstName', 'mustCharsOnly') \" >\n                            {{'error_message.err_first_name_range' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                    <mat-label for=\"sp-contact-person-lname\" [class.disabled]=\"userData\" class=\"matlabel\">{{ 'shared_label.label_last_name' | translate }}\n                        <span class=\"required-star\" *ngIf=\"userData === undefined\">*</span>\n                        <span class=\"required-star cannotEdit\" *ngIf=\"userData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n                    </mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"userData\" [ngClass]=\"addUserForm.get('lastName').hasError('pattern') && addUserForm.get('lastName').touched ? 'error-msg': ''\" >\n                        <input matInput formControlName=\"lastName\" autocomplete=\"off\" [readonly]=\"userData\" (keypress)=\"charsOnly('lastName', $event)\" />\n                        <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\" >\n                            {{ 'error_message.err_last_name_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('lastName', 'mustCharsOnly') \">\n                            {{'error_message.err_last_name_char_only' |translate}}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('lastName','maxlength') && !hasError('lastName', 'mustCharsOnly')\" >\n                            {{'error_message.err_last_name_range' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n        <div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <mat-label for=\"sp-contact-email\" class=\"matlabel email-label\">{{ 'shared_label.label_email_id' | translate }}\n                        <span class=\"required-star\">**</span></mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n                        <input matInput formControlName=\"email\" autocomplete=\"off\" [maxlength]=\"320\" />\n                        <mat-error *ngIf=\"hasError('email','email')\">\n                            {{'error_message.err_invalid_email' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                    \n                    <mat-label class=\"matlabel\">{{ 'shared_label.label_phone_no' | translate }}\n                        <span class=\"required-star\">**</span>\n                    </mat-label>\n                    <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n                    <mat-error class=\"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\" >\n                        {{\"errors.err_invalid_phone_no\" | translate}}\n                    </mat-error>\n                </div>\n              \n            </div>\n            <mat-error class=\"email-error\" *ngIf=\"submitted && !addUserForm.getRawValue()?.email && !addUserForm.getRawValue()?.phoneNo\">\n                {{ \"manage_users_module.edituser.message1\" | translate }}\n            </mat-error>\n        </div>\n\n\n        <div>\n            <mat-label for=\"sp-contact-person-fname\" class=\"matlabel mt-3\">{{ 'user-management.add_user.label_select_role' | translate }}\n                <span class=\"required-star\">*</span>\n            </mat-label>\n        </div>\n\n\n\n        <div>\n            <div class=\"mt-2\">\n                <mat-radio-group formControlName=\"roles\" [ngClass]=\"{ 'is-invalid': submitted && f.roles.errors }\" aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\">\n                    <mat-radio-button class=\"d-flex flex-column mt-2\" *ngFor=\"let role of userRoles\" [value]=\"role.value\"\n                                      [disabled]=\"role.value === 'SPP'\">\n                        {{role.name}}\n                    </mat-radio-button>\n                </mat-radio-group>\n                <div *ngIf=\"submitted && f.roles.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.roles.errors.pattern\">\n                        Please select valid role !\n                    </div>\n                </div>\n                <mat-error class=\"my-1\" *ngIf=\"!addUserForm.getRawValue()?.roles && submitted\" >\n                    {{ 'error_message.err_role_required' | translate }}\n                </mat-error>\n            </div>\n        </div>\n        <div>\n            <div class=\"required-text mt-4\">\n                <span>* Mandatory </span>\n            </div>\n            <div class=\"email-phone-info-text mt-2\">\n                **Either Email ID or Phone No. is mandatory\n            </div>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<div mat-dialog-actions align=\"end\">\n    <button type=\"button\" color=\"warn\" mat-flat-button class=\"fill-btn\" (click)=\"onClose()\">\n\t\t{{ 'manage_users_module.cancel' | translate }}\n\t</button>\n    <button type=\"button\" color=\"primary\" mat-flat-button class=\"fill-btn\" (click)=\"saveUser()\">\n\t\t{{ 'manage_users_module.save' | translate }}\n\t</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-caution-box',\n  templateUrl: './caution-box.component.html',\n  styleUrls: ['./caution-box.component.scss']\n})\nexport class CautionBoxComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<CautionBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { \n   \n  }\n\n  ngOnInit(): void {\n  }\n\n  submitYes(){\n    this.dialogRef.close(true);\n  }\n\n  submitNo(){\n    this.dialogRef.close(false);\n  }\n\n\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{'clinical_facility.caution.label_caution'|translate}}\n    </h1>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup discharge-dialog\">\n    <div class=\"dialog-form\">\n        <p>{{data.message_1 | translate}}</p>\n        <p>{{data.message_2 | translate}}</p>\n    </div>\n</mat-dialog-content>\n<div mat-dialog-actions>\n    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\" (click)=\"submitNo()\">\n      {{ \"buttons.btn_cancel\" | translate }}\n    </button>\n    <button mat-flat-button color=\"primary\" (click)=\"submitYes()\" class=\"fill-btn\">\n      {{ \"active-patients-module.button.confirm\" | translate }}\n    </button>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { User } from \"../../../interfaces/user.interface\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  UserManagementStoreActions,\n  UserManagementStoreState,\n} from \"../../store/user-management/index\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-enable-disable\",\n  templateUrl: \"./enable-disable.component.html\",\n  styleUrls: [\"./enable-disable.component.scss\"],\n})\nexport class EnableDisableComponent implements OnInit {\n  userData: User;\n  mode: string;\n  constructor(\n    private dialogRef: MatDialogRef<EnableDisableComponent>,\n    private store$: Store<UserManagementStoreState.UserManagementState>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    this.userData = this.data.userData;\n    this.mode = this.data.mode;\n    console.log(this.userData);\n  }\n\n  onCancel() {\n    if (this.mode === \"DISABLE\") {\n      this.dialogRef.close(true);\n    } else {\n      this.dialogRef.close(false);\n    }\n  }\n\n  onConfirm() {\n    if (this.mode === \"DISABLE\") {\n      const url = environment.dataApiUrl + 'users/' + this.userData.id + '/disable';\n      this.store$.dispatch(\n        new UserManagementStoreActions.DisableUserAction(url, this.userData.id)\n      );\n      this.dialogRef.close(true);\n    } else {\n      const url = environment.dataApiUrl + 'users/'+this.userData.id + '/enable';\n      this.store$.dispatch(\n        new UserManagementStoreActions.EnableUserAction(url, this.userData.id)\n      );\n      this.dialogRef.close(false);\n    }\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ \"shared_label.active_inactive.label_are_you_sure\" | translate }}\n  </h1>\n  <button mat-button mat-dialog-close (click)=\"onCancel()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <div class=\"my-4\">\n    <label class=\"info-text\">\n      Are you sure you want to make this User {{ mode }}?\n      <!--                All the Admins created by them will also become INACTIVE.-->\n    </label>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions align=\"end\">\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"warn\" (click)=\"onCancel()\">\n    Cancel\n  </button>\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"primary\" (click)=\"onConfirm()\">\n    Confirm\n  </button>\n</div>","import { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { DataTableManageAdminComponent } from \"../../../shared/data-table-manage-admin/data-table-manage-admin.component\";\nimport { ClinicalFacility } from \"../../clinical-facility-management/clinical-facility.interface\";\nimport { AddEditCfaComponent } from \"../add-edit-cfa/add-edit-cfa.component\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\nimport {ClinicalFacilityService} from \"../../service/clinical-facility.service\";\nimport {Store} from \"@ngrx/store\";\nimport {\n  ClinicalFacilityStoreActions,\n  ClinicalFacilityStoreSelectors,\n  ClinicalFacilityStoreState\n} from \"../../store/clinical-facility-management\";\n\n@Component({\n  selector: \"app-manage-cf-admin\",\n  templateUrl: \"./manage-cf-admin.component.html\",\n  styleUrls: [\"./manage-cf-admin.component.scss\"],\n})\nexport class ManageCfAdminComponent implements OnInit {\n  loadPage: boolean;\n  clinicalFacilityData: ClinicalFacility;\n  endUrl: string;\n  clinicalFacilityName;\n  adminClone = [];\n  adminCloneCopy = [];\n\n  @ViewChild(DataTableManageAdminComponent, { static: false })\n  dataTableManageAdminComponent: DataTableManageAdminComponent;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCfAdminComponent>,\n    private dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<ClinicalFacilityStoreState.ClinicalFacilityState>\n  ) {}\n\n  ngOnInit() {\n    this.clinicalFacilityData = this.data.clinicalFacilityData || {};\n    this.clinicalFacilityName = this.clinicalFacilityData?.name || \"\";\n    this.endUrl = environment.dataApiUrl + 'clinical-facilities/'+ \n      this.clinicalFacilityData?.id +'/users/cfa'\n    this.getAdminCloneUsers();\n    this.store$.select(\n        ClinicalFacilityStoreSelectors.getClinicalFacilityAdminClone\n    ).subscribe(users => {\n      this.adminClone = users.map(x => {\n        return {\n          ...x,\n          adminName: `${x.firstName} ${x.lastName}`,\n        };\n      });\n      this.adminCloneCopy = [...this.adminClone];\n\n    });\n  }\n\n  openAddAdminDialog() {\n    this.dialog.open(AddEditCfaComponent, {\n      width: \"802px\",\n      maxWidth: \"95vw\",\n      data: { cfAdmin: undefined, cfId: this.clinicalFacilityData?.id },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  openEditAdminDialog(data) {\n    this.dialog.open(AddEditCfaComponent, {\n      width: \"802px\",\n      maxWidth: \"95vw\",\n      data: { cfAdmin: data, cfId: this.clinicalFacilityData?.id },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  getAdminCloneUsers() {\n  this.store$.dispatch(\n      new ClinicalFacilityStoreActions.LoadFacilityAdminCloneRequestAction({cfId: this.clinicalFacilityData?.id})\n  );\n\n  }\n  onClose() {\n    this.dialogRef.close();\n  }\n  onSortChange(sortObject) {\n    let sort = JSON.parse(sortObject);\n    if (sort.direction === 'desc') {\n      this.adminClone = this.adminClone.sort((a, b) => {\n        if (a[sort.active] > b[sort.active]) return -1;\n        else if (a[sort.active] < b[sort.active]) return 1;\n        else return 0;\n      });\n    } else if (sort.direction === 'asc') {\n      this.adminClone = this.adminClone.sort((a, b) => {\n        if (a[sort.active] > b[sort.active]) return 1;\n        else if (a[sort.active] < b[sort.active]) return -1;\n        else return 0;\n      });\n    } else {\n      this.adminClone = [...this.adminCloneCopy];\n    }\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ clinicalFacilityData[\"id\"] }} &nbsp;|&nbsp;\n    {{ \"clinical_facility.manage_admin_cfa.label_cfa_admin\" | translate }}\n     {{ \"clinical_facility.manage_admin_cfa.for\" | translate }}\n     {{ clinicalFacilityName }}\n  </h1>\n  <button mat-button mat-dialog-close class=\"me-3\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup p-0\">\n  <div class=\"container-fluid\">\n    <app-data-table-manage-admin class=\"manage-admin-table custom-table\"\n      [endUrl]=\"endUrl\"\n      (addAdminCallBack)=\"openAddAdminDialog()\"\n      (editCallBack)=\"openEditAdminDialog($event)\"\n       (sortChange) = \"onSortChange($event)\"\n      source=\"CFA\"\n    ></app-data-table-manage-admin>\n    <app-data-table-cloned-view *ngIf=\"adminClone?.length\" class=\"manage-admin-table manage-cloneview-table custom-table\"\n                                [adminUsers]=\"adminClone\"></app-data-table-cloned-view>\n  </div>\n</mat-dialog-content>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { UserManagementComponent } from \"./user-management/user-management.component\";\nimport { ClinicalFacilityManagementComponent } from \"./clinical-facility-management/clinical-facility-management.component\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { RootComponent } from \"../shared/root/root.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: RootComponent,\n    children: [\n      {\n        path: \"user-management\",\n        component: UserManagementComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [\"SPA\", \"SPAC\"] },\n      },\n      {\n        path: \"clinical-facility-management\",\n        component: ClinicalFacilityManagementComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [\"SPA\", \"SPAC\"] },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), MatToolbarModule],\n  exports: [RouterModule],\n})\nexport class ServiceProviderAdminRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ServiceProviderAdminRoutingModule } from \"./service-provider-admin-routing.module\";\nimport { UserManagementComponent } from \"./user-management/user-management.component\";\nimport { SortModule } from \"../core/directives/sort.module\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgxIntlTelInputModule } from \"ngx-intl-tel-input\";\nimport { ClinicalFacilityManagementComponent } from \"./clinical-facility-management/clinical-facility-management.component\";\nimport { AddEditFacilityComponent } from \"./dialog/add-edit-facility/add-edit-facility.component\";\nimport { ManageCfAdminComponent } from \"./dialog/manage-cf-admin/manage-cf-admin.component\";\nimport { InactiveActiveComponent } from \"../shared/dialogs/inactive-active/inactive-active.component\";\nimport { DialogsModule } from \"../dialogs/dialogs.module\";\nimport { AddEditCfaComponent } from \"./dialog/add-edit-cfa/add-edit-cfa.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { AddEditUserManagementComponent } from \"./dialog/add-edit-user-management/add-edit-user-management.component\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromClinicalFacilityReducer from \"./store/clinical-facility-management/clinical-facility-management.reducer\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { ClinicalFacilityEffects } from \"./store/clinical-facility-management/clinical-facility-management.effects\";\nimport * as fromUserManagementReducer from \"./store/user-management/user-management.reducer\";\nimport { UserManagementEffects } from \"./store/user-management/user-management.effects\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\nimport { EnableDisableComponent } from \"./dialog/enable-disable/enable-disable.component\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { CautionBoxComponent } from './dialog/caution-box/caution-box.component';\n\n@NgModule({\n  declarations: [\n    UserManagementComponent,\n    ClinicalFacilityManagementComponent,\n    AddEditFacilityComponent,\n    ManageCfAdminComponent,\n    AddEditUserManagementComponent,\n    AddEditCfaComponent,\n    EnableDisableComponent,\n    CautionBoxComponent,\n  ],\n  imports: [\n    CommonModule,\n    ServiceProviderAdminRoutingModule,\n    SortModule,\n    MatIconModule,\n    MatDialogModule,\n    SharedModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    NgxIntlTelInputModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    DialogsModule,\n    MatRadioModule,\n    MatTableModule,\n    MatSortModule,\n    StoreModule.forFeature(\n      fromClinicalFacilityReducer.clinicalFacilityFeatureKey,\n      fromClinicalFacilityReducer.clinicalFacilityReducer\n    ),\n    StoreModule.forFeature(\n      fromUserManagementReducer.userManagementFeatureKey,\n      fromUserManagementReducer.userManagementReducer\n    ),\n    EffectsModule.forFeature([ClinicalFacilityEffects, UserManagementEffects]),\n    MatSelectModule,\n    I18nModule,\n    LifeSignalsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n  ],\n  entryComponents: [\n    AddEditUserManagementComponent,\n    AddEditFacilityComponent,\n    ManageCfAdminComponent,\n    InactiveActiveComponent,\n    AddEditCfaComponent,\n    EnableDisableComponent,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: KeycloakBearerInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class ServiceProviderAdminModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  AddEditClinicalFacilityResponse,\n  ClinicalFacilityResponse,\n} from \"../clinical-facility-management/clinical-facility.interface\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ClinicalFacilityService {\n  spId: string;\n\n  constructor(\n    private httpClient: HttpClient,\n    private authService: AuthenticationService\n  ) {\n    this.spId = this.authService.getLoggedUser().spId;\n  }\n\n  getClinicalFacilityList() {\n    return this.httpClient\n      .get<ClinicalFacilityResponse>(\n        environment.dataApiUrl + 'service-providers/' + this.spId + '/clinical-facilities'\n      );\n  }\n  getClinicalFacilityAdminCloneUsers(cfId) {\n    return this.httpClient\n        .get<ClinicalFacilityResponse>(\n            environment.dataApiUrl + 'clinical-facilities/'+ cfId+'/users/cfac'\n        );\n  }\n\n  addClinicalFacility(requestBody) {\n    return this.httpClient\n      .post<AddEditClinicalFacilityResponse>(\n        environment.dataApiUrl + 'clinical-facilities/',\n        requestBody\n      );\n  }\n\n  updateClinicalFacility(requestBody) {\n    return this.httpClient\n      .put<AddEditClinicalFacilityResponse>(\n        environment.dataApiUrl + 'clinical-facilities/',\n        requestBody\n      );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  AddEditUserResponse,\n  UserResponse,\n} from \"../../interfaces/user.interface\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserManagementService {\n  spId: string;\n\n  constructor(\n    private httpClient: HttpClient,\n    private authService: AuthenticationService\n  ) {\n    this.spId = this.authService.getLoggedUser().spId;\n  }\n\n  getUserList() {\n    return this.httpClient\n      .get<UserResponse>(\n        environment.dataApiUrl + 'service-providers/' + this.spId + '/users'\n      );\n  }\n\n  addUser(requestBody, url) {\n    return this.httpClient\n      .post<AddEditUserResponse>(\n        environment.dataApiUrl + url,\n        requestBody\n      );\n  }\n\n  updateUser(requestBody, url) {\n    return this.httpClient\n      .put<AddEditUserResponse>(\n        environment.dataApiUrl + url,\n        requestBody\n      );\n  }\n\n  enableDisable(endUrl, requestBody) {\n    return this.httpClient\n      .post<any>(endUrl, requestBody);\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport { TableAPIResponse } from \"src/app/models/api.model\";\nimport { ClinicalFacility, ClinicalFacilityResponse } from \"../../clinical-facility-management/clinical-facility.interface\";\n\nexport enum CfActionTypes {\n  LOAD_CLINICAL_FACILITY_ACTION = \"[CLINICALFACILITY] Load Clinical Facility Request\",\n  LOAD_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] Load Clinical Facility Success\",\n  LOAD_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] Load Clinical Facility Failure\",\n  SAVE_CLINICAL_FACILITY_ACTION = \"[CLINICALFACILITY] Save Clinical Facility\",\n  SAVE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] Save Clinical Facility Success\",\n  AFTER_SAVE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] After Save Clinical Facility Success\",\n  SAVE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] Save Clinical Facility Failure\",\n  AFTER_SAVE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] After Save Clinical Facility Failure\",\n  UPDATE_CLINICAL_FACILITY_ACTION = \"[CLINICALFACILITY] Update Clinical Facility\",\n  UPDATE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] Update Clinical Facility Success\",\n  AFTER_UPDATE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] After Update Clinical Facility Success\",\n  UPDATE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] Update Clinical Facility Failure\",\n  AFTER_UPDATE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] After Update Clinical Facility Failure\",\n  LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION = \"[CLINICALFACILITY] Load Clinical Facility Admin Clone Request\",\n  LOAD_CLINICAL_FACILITY_ADMIN_CLONE_SUCCESS = \"[CLINICALFACILITY] Load Clinical Facility Admin Clone Success\",\n  LOAD_CLINICAL_FACILITY_ADMIN_CLONE_FAILURE = \"[CLINICALFACILITY] Load Clinical Facility Admin Clone Failure\",\n}\n\nexport class LoadClinicalFacilityRequestAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ACTION;\n}\n\nexport class LoadClinicalFacilitySuccessAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_SUCCESS;\n  constructor(public payload: ClinicalFacilityResponse) {}\n}\n\nexport class LoadClinicalFacilityFailureAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class SaveClinicalFacilityAction implements Action {\n  readonly type = CfActionTypes.SAVE_CLINICAL_FACILITY_ACTION;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class SaveClinicalFacilitySuccessAction implements Action {\n  readonly type = CfActionTypes.SAVE_CLINICAL_FACILITY_SUCCESS;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class SaveClinicalFacilityFailureAction implements Action {\n  readonly type = CfActionTypes.SAVE_CLINICAL_FACILITY_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateClinicalFacilityAction implements Action {\n  readonly type = CfActionTypes.UPDATE_CLINICAL_FACILITY_ACTION;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class UpdateClinicalFacilitySuccessAction implements Action {\n  readonly type = CfActionTypes.UPDATE_CLINICAL_FACILITY_SUCCESS;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class UpdateClinicalFacilityFailureAction implements Action {\n  readonly type = CfActionTypes.UPDATE_CLINICAL_FACILITY_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class AfterSaveClinicalFacilitySuccess implements Action {\n  readonly type = CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterSaveClinicalFacilityFailure implements Action {\n  readonly type = CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_FAILURE;\n  constructor() {}\n}\n\nexport class AfterUpdateClinicalFacilitySuccess implements Action {\n  readonly type = CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterUpdateClinicalFacilityFailure implements Action {\n  readonly type = CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_FAILURE;\n  constructor() {}\n}\nexport class LoadFacilityAdminCloneRequestAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION;\n  constructor(public payload: {cfId: string}) {}\n}\n\nexport class LoadFacilityAdminCloneFailureAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadFacilityAdminCloneSuccessAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_SUCCESS;\n  constructor(public payload: { data:  any}) {}\n}\n\nexport type ClinicalFacilityActions =\n  | LoadClinicalFacilityRequestAction\n  | LoadClinicalFacilitySuccessAction\n  | LoadClinicalFacilityFailureAction\n  | SaveClinicalFacilityAction\n  | SaveClinicalFacilitySuccessAction\n  | SaveClinicalFacilityFailureAction\n  | UpdateClinicalFacilityAction\n  | UpdateClinicalFacilitySuccessAction\n  | UpdateClinicalFacilityFailureAction\n  | AfterSaveClinicalFacilitySuccess\n  | AfterSaveClinicalFacilityFailure\n  | AfterUpdateClinicalFacilitySuccess\n  | AfterUpdateClinicalFacilityFailure\n  | LoadFacilityAdminCloneRequestAction\n  | LoadFacilityAdminCloneFailureAction\n  | LoadFacilityAdminCloneSuccessAction ;\n","import { Injectable } from \"@angular/core\";\nimport {Actions, createEffect, Effect, ofType} from \"@ngrx/effects\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as ClinicalFacilityActions from \"./clinical-facility-management.actions\";\nimport {catchError, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport { of as observableOf } from \"rxjs\";\nimport { ClinicalFacilityService } from \"../../service/clinical-facility.service\";\nimport {\n  LoadClinicalFacilityFailureAction,\n  LoadClinicalFacilitySuccessAction,\n  SaveClinicalFacilityFailureAction,\n  SaveClinicalFacilitySuccessAction,\n  UpdateClinicalFacilityFailureAction,\n  UpdateClinicalFacilitySuccessAction,\n} from \"./clinical-facility-management.actions\";\n\n@Injectable()\nexport class ClinicalFacilityEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private clinicalFacilityService: ClinicalFacilityService\n  ) {}\n\n  loadClinicalFacility = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ClinicalFacilityActions.LoadClinicalFacilityRequestAction>(\n        ClinicalFacilityActions.CfActionTypes.LOAD_CLINICAL_FACILITY_ACTION\n      ),\n      switchMap(\n        (action: ClinicalFacilityActions.LoadClinicalFacilityRequestAction) => {\n          return this.clinicalFacilityService.getClinicalFacilityList().pipe(\n            map(\n              (loadCFRes) =>\n                new LoadClinicalFacilitySuccessAction(loadCFRes)\n            ),\n            catchError((error) =>\n              observableOf(new LoadClinicalFacilityFailureAction(error))\n            )\n          );\n        }\n      )\n    );\n  });\n\n  saveClinicalFacility = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ClinicalFacilityActions.SaveClinicalFacilityAction>(\n        ClinicalFacilityActions.CfActionTypes.SAVE_CLINICAL_FACILITY_ACTION\n      ),\n      switchMap(\n        (\n          addClinicalFacility: ClinicalFacilityActions.SaveClinicalFacilityAction\n        ) => {\n          return this.clinicalFacilityService\n            .addClinicalFacility(addClinicalFacility.payload)\n            .pipe(\n              map(\n                (addAdminRes) =>\n                  new SaveClinicalFacilitySuccessAction(addAdminRes.data)\n              ),\n              catchError((error) =>\n                observableOf(new SaveClinicalFacilityFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n\n  updateClinicalFacility = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ClinicalFacilityActions.UpdateClinicalFacilityAction>(\n        ClinicalFacilityActions.CfActionTypes.UPDATE_CLINICAL_FACILITY_ACTION\n      ),\n      switchMap(\n        (\n          updateClinicalFacility: ClinicalFacilityActions.UpdateClinicalFacilityAction\n        ) => {\n          return this.clinicalFacilityService\n            .updateClinicalFacility(updateClinicalFacility.payload)\n            .pipe(\n              map(\n                (updateClinicalFacilityRes) =>\n                  new UpdateClinicalFacilitySuccessAction(\n                    updateClinicalFacilityRes.data\n                  )\n              ),\n              catchError((error) =>\n                observableOf(new UpdateClinicalFacilityFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n  @Effect()\n  loadAdminCloneUsersRequestEffect$ = this.actions$.pipe(\n      ofType<ClinicalFacilityActions.LoadFacilityAdminCloneRequestAction>(\n          ClinicalFacilityActions.CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION\n      ),\n      mergeMap((action) =>\n          this.clinicalFacilityService.getClinicalFacilityAdminCloneUsers(action.payload.cfId).pipe(\n              map((data) => new ClinicalFacilityActions.LoadFacilityAdminCloneSuccessAction({ data })),\n              catchError((error) =>\n                  observableOf(\n                      new ClinicalFacilityActions.LoadFacilityAdminCloneFailureAction({ error })\n                  )\n              )\n          )\n      )\n  );\n}\n","import {\n  CfActionTypes,\n  ClinicalFacilityActions,\n} from \"./clinical-facility-management.actions\";\nimport { ClinicalFacility } from \"../../clinical-facility-management/clinical-facility.interface\";\nimport { TableState } from \"src/app/life-signals/_models/ls-column.model\";\n\nexport interface ClinicalFacilityState {\n  CLINICAL_FACILITY_DATA: ClinicalFacility[];\n  error: string;\n  save_cf_success: ClinicalFacility;\n  save_cf_error: string;\n  total: number;\n  tableState: string;\n  CLINICAL_FACILITY_ADMIN_CLONE: any[]\n}\n\nconst initialState: ClinicalFacilityState = {\n  CLINICAL_FACILITY_DATA: [],\n  error: \"\",\n  save_cf_success: null,\n  save_cf_error: \"\",\n  total: 0,\n  tableState: TableState.DEFAULT,\n  CLINICAL_FACILITY_ADMIN_CLONE: []\n};\n\nexport const clinicalFacilityFeatureKey = \"clinicalfacility\";\n\nexport function clinicalFacilityReducer(\n  state: ClinicalFacilityState = initialState,\n  action: ClinicalFacilityActions\n) {\n  switch (action.type) {\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ACTION:\n      return {\n        ...state,\n        CLINICAL_FACILITY_DATA: [],\n        tableState: TableState.LOADING\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        CLINICAL_FACILITY_DATA: action.payload.data,\n        total: action.payload.data.length,\n        tableState: TableState.SUCCESS\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        CLINICAL_FACILITY_DATA: [],\n        tableState: TableState.FAILURE,\n        total: 0\n      };\n\n    case CfActionTypes.SAVE_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        save_cf_success: action.payload,\n        save_cf_error: \"\",\n        CLINICAL_FACILITY_DATA: [\n          ...state?.CLINICAL_FACILITY_DATA,\n          action.payload,\n        ],\n      };\n\n    case CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        save_cf_success: null,\n        save_cf_error: \"\",\n      };\n\n    case CfActionTypes.SAVE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: action.payload,\n      };\n\n    case CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: \"\",\n        save_cf_success: null,\n      };\n\n    case CfActionTypes.UPDATE_CLINICAL_FACILITY_SUCCESS:\n      const updatedCfData = state?.CLINICAL_FACILITY_DATA.map((cfData) => {\n        return cfData.id === action.payload.id ? action.payload : cfData;\n      });\n\n      return {\n        ...state,\n        save_cf_error: \"\",\n        error: \"\",\n        save_cf_success: action.payload,\n        CLINICAL_FACILITY_DATA: updatedCfData,\n      };\n\n    case CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        save_cf_success: null,\n        save_cf_error: \"\",\n      };\n\n    case CfActionTypes.UPDATE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: action.payload,\n      };\n\n    case CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: \"\",\n        save_cf_success: null,\n      };\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION:\n      return {\n        ...state,\n        CLINICAL_FACILITY_ADMIN_CLONE: [],\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_SUCCESS:\n      return {\n        ...state,\n        CLINICAL_FACILITY_ADMIN_CLONE: action.payload.data.data,\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  clinicalFacilityFeatureKey,\n  ClinicalFacilityState,\n} from \"./clinical-facility-management.reducer\";\n\nconst getClinicalFacilityState = createFeatureSelector<ClinicalFacilityState>(\n  clinicalFacilityFeatureKey\n);\n\nexport const selectClinicalFacilityList = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state\n);\n\nexport const selectClinicalFacilityError = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.error\n);\n\nexport const saveClinicalFacilitySuccess = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_success\n);\n\nexport const saveClinicalFacilityFailure = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_error\n);\n\nexport const updateClinicalFacilitySuccess = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_success\n);\n\nexport const updateClinicalFacilityFailure = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_error\n);\nexport const getClinicalFacilityAdminClone = createSelector(\n    getClinicalFacilityState,\n    (state: ClinicalFacilityState) => state?.CLINICAL_FACILITY_ADMIN_CLONE\n);\n","import * as ClinicalFacilityStoreActions from \"./clinical-facility-management.actions\";\nimport * as ClinicalFacilityStoreSelectors from \"./clinical-facility-management.selector\";\nimport * as ClinicalFacilityStoreState from \"./clinical-facility-management.reducer\";\n\nexport {\n  ClinicalFacilityStoreActions,\n  ClinicalFacilityStoreSelectors,\n  ClinicalFacilityStoreState,\n};\n","import * as UserManagementStoreActions from \"./user-management.actions\";\nimport * as UserManagementStoreSelectors from \"./user-management.selector\";\nimport * as UserManagementStoreState from \"./user-management.reducer\";\n\nexport {\n  UserManagementStoreActions,\n  UserManagementStoreSelectors,\n  UserManagementStoreState,\n};\n","import { Action } from \"@ngrx/store\";\nimport { User } from \"../../../interfaces/user.interface\";\n\nexport enum UserManagementActionTypes {\n  LOAD_USER_MANAGEMENT_ACTION = \"[USERMANAGEMENT] Load User Management Request\",\n  LOAD_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] Load User Management Success\",\n  LOAD_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] Load User Management Failure\",\n  SAVE_USER_MANAGEMENT_ACTION = \"[USERMANAGEMENT] Save User Management\",\n  SAVE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] Save User Management Success\",\n  AFTER_SAVE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] After Save User Management Success\",\n  SAVE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] Save User Management Failure\",\n  AFTER_SAVE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] After Save User Management Failure\",\n  UPDATE_USER_MANAGEMENT_ACTION = \"[USERMANAGEMENT] Update User Management\",\n  UPDATE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] Update User Management Success\",\n  AFTER_UPDATE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] After Update User Management Success\",\n  UPDATE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] Update User Management Failure\",\n  AFTER_UPDATE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] After Update User Management Failure\",\n  DISABLE_USER = \"[USERMANAGEMENT] Disable User\",\n  DISABLE_USER_SUCCESS = \"[USERMANAGEMENT] Disable User Success\",\n  DISABLE_USER_FAILURE = \"[USERMANAGEMENT] Disable User Failure\",\n  ENABLE_USER = \"[USERMANAGEMENT] Enable User\",\n  ENABLE_USER_SUCCESS = \"[USERMANAGEMENT] Enable User Success\",\n  ENABLE_USER_FAILURE = \"[USERMANAGEMENT] Enable User Failure\",\n}\n\nexport class LoadUserManagementRequestAction implements Action {\n  readonly type = UserManagementActionTypes.LOAD_USER_MANAGEMENT_ACTION;\n}\n\nexport class LoadUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.LOAD_USER_MANAGEMENT_SUCCESS;\n  constructor(public payload: User[]) {}\n}\n\nexport class LoadUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.LOAD_USER_MANAGEMENT_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class SaveUserManagementAction implements Action {\n  readonly type = UserManagementActionTypes.SAVE_USER_MANAGEMENT_ACTION;\n  constructor(public payload: User, public Url: string) {}\n}\n\nexport class SaveUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.SAVE_USER_MANAGEMENT_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class SaveUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.SAVE_USER_MANAGEMENT_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class UpdateUserManagementAction implements Action {\n  readonly type = UserManagementActionTypes.UPDATE_USER_MANAGEMENT_ACTION;\n  constructor(public payload: User,  public Url: string) {}\n}\n\nexport class UpdateUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.UPDATE_USER_MANAGEMENT_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UpdateUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.UPDATE_USER_MANAGEMENT_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class DisableUserAction implements Action {\n  readonly type = UserManagementActionTypes.DISABLE_USER;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class DisableUserSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.DISABLE_USER_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class DisableUserFailureAction implements Action {\n  readonly type = UserManagementActionTypes.DISABLE_USER_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class EnableUserAction implements Action {\n  readonly type = UserManagementActionTypes.ENABLE_USER;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class EnableUserSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.ENABLE_USER_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class EnableUserFailureAction implements Action {\n  readonly type = UserManagementActionTypes.ENABLE_USER_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class AfterSaveUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterSaveUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_FAILURE;\n  constructor() {}\n}\n\nexport class AfterUpdateUserManagementSuccessAction implements Action {\n  readonly type =\n    UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterUpdateUserManagementFailureAction implements Action {\n  readonly type =\n    UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_FAILURE;\n  constructor() {}\n}\n\nexport type UserManagementActions =\n  | LoadUserManagementRequestAction\n  | LoadUserManagementSuccessAction\n  | LoadUserManagementFailureAction\n  | SaveUserManagementAction\n  | SaveUserManagementSuccessAction\n  | SaveUserManagementFailureAction\n  | UpdateUserManagementAction\n  | UpdateUserManagementSuccessAction\n  | UpdateUserManagementFailureAction\n  | DisableUserAction\n  | DisableUserSuccessAction\n  | DisableUserFailureAction\n  | EnableUserAction\n  | EnableUserSuccessAction\n  | EnableUserFailureAction\n  | AfterSaveUserManagementSuccessAction\n  | AfterSaveUserManagementFailureAction\n  | AfterUpdateUserManagementSuccessAction\n  | AfterUpdateUserManagementFailureAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as UserManagementActions from \"./user-management.actions\";\nimport { catchError, map, switchMap } from \"rxjs/operators\";\nimport { of as observableOf } from \"rxjs\";\nimport { UserManagementService } from \"../../service/user-management.service\";\nimport {\n  DisableUserFailureAction,\n  DisableUserSuccessAction,\n  EnableUserFailureAction,\n  EnableUserSuccessAction,\n  LoadUserManagementFailureAction,\n  LoadUserManagementSuccessAction,\n  SaveUserManagementFailureAction,\n  SaveUserManagementSuccessAction,\n  UpdateUserManagementFailureAction,\n  UpdateUserManagementSuccessAction,\n} from \"./user-management.actions\";\n\n@Injectable()\nexport class UserManagementEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private userManagementService: UserManagementService\n  ) {}\n\n  loadUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.LoadUserManagementRequestAction>(\n        UserManagementActions.UserManagementActionTypes\n          .LOAD_USER_MANAGEMENT_ACTION\n      ),\n      switchMap(\n        (action: UserManagementActions.LoadUserManagementRequestAction) => {\n          return this.userManagementService.getUserList().pipe(\n            map(\n              (loadUserRes) =>\n                new LoadUserManagementSuccessAction(loadUserRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new LoadUserManagementFailureAction(error))\n            )\n          );\n        }\n      )\n    );\n  });\n\n  saveUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.SaveUserManagementAction>(\n        UserManagementActions.UserManagementActionTypes\n          .SAVE_USER_MANAGEMENT_ACTION\n      ),\n      switchMap((addUser: UserManagementActions.SaveUserManagementAction) => {\n        return this.userManagementService.addUser(addUser.payload, addUser.Url).pipe(\n          map(\n            (addUserRes) => new SaveUserManagementSuccessAction(addUserRes.data)\n          ),\n          catchError((error) =>\n            observableOf(new SaveUserManagementFailureAction(error))\n          )\n        );\n      })\n    );\n  });\n\n  updateUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.UpdateUserManagementAction>(\n        UserManagementActions.UserManagementActionTypes\n          .UPDATE_USER_MANAGEMENT_ACTION\n      ),\n      switchMap(\n        (updateUser: UserManagementActions.UpdateUserManagementAction) => {\n          return this.userManagementService.updateUser(updateUser.payload, updateUser.Url).pipe(\n            map(\n              (updateUserRes) =>\n                new UpdateUserManagementSuccessAction(updateUserRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new UpdateUserManagementFailureAction(error))\n            )\n          );\n        }\n      )\n    );\n  });\n\n  disableUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.DisableUserAction>(\n        UserManagementActions.UserManagementActionTypes.DISABLE_USER\n      ),\n      switchMap((disableUser: UserManagementActions.DisableUserAction) => {\n        return this.userManagementService\n          .enableDisable(disableUser.endUrl, {})\n          .pipe(\n            map(\n              (disableUserRes) => new DisableUserSuccessAction(disableUser.id)\n            ),\n            catchError((error) =>\n              observableOf(new DisableUserFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n\n  enableUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.EnableUserAction>(\n        UserManagementActions.UserManagementActionTypes.ENABLE_USER\n      ),\n      switchMap((enableUser: UserManagementActions.EnableUserAction) => {\n        return this.userManagementService\n          .enableDisable(enableUser.endUrl, {})\n          .pipe(\n            map((enableUserRes) => new EnableUserSuccessAction(enableUser.id)),\n            catchError((error) =>\n              observableOf(new EnableUserFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n}\n","import {User} from \"../../../interfaces/user.interface\";\nimport {UserManagementActions, UserManagementActionTypes,} from \"./user-management.actions\";\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\nexport interface UserManagementState {\n  USER_MANAGEMENT_DATA: User[];\n  error: string;\n  save_user_success: User;\n  save_user_error: any;\n  tableState: string;\n}\n\nconst initialState: UserManagementState = {\n  USER_MANAGEMENT_DATA: [],\n  error: \"\",\n  save_user_success: null,\n  save_user_error: \"\",\n  tableState: TableState.DEFAULT\n};\n\nexport const userManagementFeatureKey = \"usermanagement\";\n\nexport function userManagementReducer(\n  state: UserManagementState = initialState,\n  action: UserManagementActions\n) {\n  switch (action.type) {\n    case UserManagementActionTypes.LOAD_USER_MANAGEMENT_ACTION:\n      return {\n        ...state,\n        tableState: TableState.LOADING\n      };\n    case UserManagementActionTypes.LOAD_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        USER_MANAGEMENT_DATA: action.payload,\n        tableState: TableState.SUCCESS\n      };\n\n    case UserManagementActionTypes.LOAD_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        tableState: TableState.FAILURE\n      };\n\n    case UserManagementActionTypes.SAVE_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        save_user_success: action.payload,\n        save_user_error: \"\",\n        USER_MANAGEMENT_DATA: [...state?.USER_MANAGEMENT_DATA, action.payload],\n      };\n\n    case UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.SAVE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_error: action.payload,\n      };\n\n    case UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.UPDATE_USER_MANAGEMENT_SUCCESS:\n      const updatedUserManagementData = state?.USER_MANAGEMENT_DATA.map(\n        (userManagementData) => {\n          return userManagementData.id === action.payload.id\n            ? action.payload\n            : userManagementData;\n        }\n      );\n\n      return {\n        ...state,\n        save_user_error: \"\",\n        error: \"\",\n        save_user_success: action.payload,\n        USER_MANAGEMENT_DATA: updatedUserManagementData,\n      };\n\n    case UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.UPDATE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_error: action.payload,\n      };\n\n    case UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.DISABLE_USER_SUCCESS:\n      const updatedDataForDisable = state.USER_MANAGEMENT_DATA.map(\n        (userData) => {\n          console.log(\"action: \" + action.payload);\n          console.log(\"userData: \" + userData.id);\n          if (userData.id === action.payload) {\n            console.log(\"in\");\n            userData.isActive = false;\n          }\n          return userData;\n        }\n      );\n\n      return {\n        ...state,\n        USER_MANAGEMENT_DATA: updatedDataForDisable,\n      };\n    case UserManagementActionTypes.DISABLE_USER_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case UserManagementActionTypes.ENABLE_USER_SUCCESS:\n      const updatedDataForEnable = state.USER_MANAGEMENT_DATA.map(\n        (userData) => {\n          if (userData.id === action.payload) {\n            userData.isActive = true;\n          }\n          return userData;\n        }\n      );\n\n      return {\n        ...state,\n        USER_MANAGEMENT_DATA: updatedDataForEnable,\n      };\n    case UserManagementActionTypes.ENABLE_USER_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  userManagementFeatureKey,\n  UserManagementState,\n} from \"./user-management.reducer\";\n\nconst getUserManagementState = createFeatureSelector<UserManagementState>(\n  userManagementFeatureKey\n);\n\nexport const selectUserManagementList = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state\n);\n\nexport const selectUserManagementError = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.error\n);\n\nexport const saveUserManagementSuccess = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_success\n);\n\nexport const saveUserManagementFailure = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_error\n);\n\nexport const updateUserManagementSuccess = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_success\n);\n\nexport const updateUserManagementFailure = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_error\n);\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { AddEditUserManagementComponent } from \"src/app/service-provider-admin/dialog/add-edit-user-management/add-edit-user-management.component\";\nimport {\n  UserManagementStoreActions,\n  UserManagementStoreSelectors,\n  UserManagementStoreState,\n} from \"../store/user-management\";\nimport { Store } from \"@ngrx/store\";\nimport { User } from \"../../interfaces/user.interface\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { EnableDisableComponent } from \"../dialog/enable-disable/enable-disable.component\";\nimport {\n  LSColumn,\n  LSColumnType,\n  LSTableConfig,\n  TableState,\n} from \"../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"../../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\nimport {UserManagementState} from \"../store/user-management/user-management.reducer\";\n\n@Component({\n  selector: \"app-user-management\",\n  templateUrl: \"./user-management.component.html\",\n  styleUrls: [\"./user-management.component.scss\"],\n})\nexport class UserManagementComponent implements OnInit, OnDestroy {\n  users$: Observable<UserManagementState>;\n  userData: User[];\n  columns: LSColumn[] = [\n    {\n      id: \"isActive\",\n      label: \"enable\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"id\",\n      label: \"id\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [],\n    },\n    {\n      id: \"userName\",\n      label: \"userName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"bold-name\"],\n      style: \"max-width: 300px; width: 300px;\",\n    },\n    {\n      id: \"email\",\n      label: \"email\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"phoneNo\",\n      label: \"phoneNo\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"roles\",\n      label: \"roles\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n  ];\n  config: LSTableConfig = {\n    id: \"user-management-table\",\n    rowSelectEnabled: false,\n    actions: {\n      header: {\n        class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n      },\n      show: true,\n      headerLabel: \"\",\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n    },\n    translateKey: \"user-management-table\",\n    translate: true,\n    isActive: (row) => {\n      return row.isActive;\n    },\n    tableState: TableState.DEFAULT\n  };\n  usersSub: Subscription;\n\n  constructor(\n    private dialog: MatDialog,\n    private store$: Store<UserManagementStoreState.UserManagementState>,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService\n  ) {}\n\n  ngOnInit() {\n    this.store$.dispatch(\n      new UserManagementStoreActions.LoadUserManagementRequestAction()\n    );\n    this.listUsers();\n  }\n\n  listUsers() {\n    this.users$ = this.store$.select(\n      UserManagementStoreSelectors.selectUserManagementList\n    );\n    this.usersSub = this.users$.subscribe((response) => {\n      this.config.tableState = <TableState>response?.tableState;\n        this.userData = response.USER_MANAGEMENT_DATA.map((x) => {\n          return {\n            ...x,\n            userName: `${x.firstName} ${x.lastName}`,\n          };\n        });\n    });\n  }\n\n  openAddUserManagementDialog() {\n    const dialogRef = this.dialog.open(AddEditUserManagementComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      data: { userData: undefined },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  openEditUserManagement(data) {\n    this.dialog.open(AddEditUserManagementComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      data: { userData: data },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  resetPassword(data) {\n    this.backendApiService\n      .postMapping(\n        environment.dataApiUrl + 'users/' + data.id + '/reset-password',\n        {}\n      )\n      .then((response) => {\n        if (response.status === \"OK\") {\n          this.snackbar.openCustomSnackBar(\"manage_admin.reset_success\", 'bottom', 'center', true);\n        }\n      });\n  }\n\n  toggleSwitch(data, event: MatSlideToggleChange) {\n    if (data.isActive) {\n      event.source.checked = true;\n      const dialogRef = this.dialog.open(EnableDisableComponent, {\n        width: \"auto\",\n        data: { userData: data, mode: \"DISABLE\" },\n\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(event.source.checked);\n        event.source.checked = result;\n      });\n    } else {\n      event.source.checked = false;\n      const dialogRef = this.dialog.open(EnableDisableComponent, {\n        width: \"auto\",\n        data: { userData: data, mode: \"ENABLE\" },\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n        event.source.checked = result;\n      });\n    }\n    // if (event.source.checked === false) {\n    //   event.source.checked = !event.source.checked;\n    //   const dialogRef = this.dialog.open(EnableDisableComponent, {\n    //     width: \"auto\",\n    //     data: { userData: data, mode: \"DISABLE\" },\n    //     backdropClass: \"backdropBackground\",\n    //     disableClose: true,\n    //   });\n    //\n    //   dialogRef.afterClosed().subscribe((result) => {\n    //     event.source.checked = result;\n    //   });\n    // } else {\n    //   event.source.checked = !event.source.checked;\n    //   const dialogRef = this.dialog.open(EnableDisableComponent, {\n    //     width: \"auto\",\n    //     data: { userData: data, mode: \"ENABLE\" },\n    //\n    //     backdropClass: \"backdropBackground\",\n    //     disableClose: true,\n    //   });\n    //\n    //   dialogRef.afterClosed().subscribe((result) => {\n    //     event.source.checked = result;\n    //   });\n    // }\n  }\n\n  confirmResetPassword(rowData) {\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"250px\",\n      maxWidth: \"95vw\",\n      data: {\n        body: {\n          title: \"manage_admin.reset_password\",\n          text: \"manage_admin.reset_password_confirm_message\",\n        },\n      },\n      \n      disableClose: true,\n    });\n    confirm.afterClosed().subscribe((data) => {\n      if (data) {\n        this.resetPassword(rowData);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.usersSub) this.usersSub.unsubscribe();\n  }\n}\n","<div class=\"table-responsive text-nowrap container-fluid admin-table-layout user-management-table custom-table head-border\">\n    <ls-table [config]=\"config\" [data]=\"userData\" [columns]=\"columns\" [tableSort]=\"true\">\n        <ng-template lsWidgetName=\"actionsHeading\" let-row>\n            <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"openAddUserManagementDialog()\">\n        <mat-icon>add</mat-icon>\n        {{ \"buttons.btn_add_user\" | translate }}\n      </button>\n        </ng-template>\n        <ng-template lsWidgetName=\"isActive\" let-row>\n            <mat-slide-toggle class=\"ms-2\" [checked]=\"row?.isActive\" (change)=\"toggleSwitch(row, $event)\"></mat-slide-toggle>\n        </ng-template>\n        <ng-template lsWidgetName=\"userName\" let-row>\n            <span [matTooltip]=\"row.userName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.userName.length < 40\">\n            {{row.userName}}\n          </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-row>\n            {{row?.email || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"phoneNo\" let-row>\n            {{row?.phoneNo || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"roles\" let-row>\n            <label class=\"spa-label\" *ngIf=\"row['roles'][0] === 'SPAC'\">SPA</label>\n            <label class=\"physician-label\" *ngIf=\"row['roles'][0] === 'SPP'\">PHYSICIAN</label\n      >\n    </ng-template>\n    <ng-template lsWidgetName=\"actions\" let-row>\n      <button\n        mat-mini-fab\n        color=\"primary\"\n        (click)=\"openEditUserManagement(row)\"\n        class=\"d-flex justify-content-center align-items-center btn-boxed btn-no-shadow me-4\"\n      >\n        <mat-icon class=\"justify-content-center\">edit</mat-icon>\n      </button>\n      <button\n        type=\"button\"\n        mat-flat-button\n        color=\"primary\" [disabled]=\"!row?.isActive\"\n        class=\"me-3\"\n        [ngClass]=\"(!row['isActive'])?'':'cursor-pointer'\"\n\n        (click)=\"confirmResetPassword(row)\"\n      >\n        <mat-icon class=\"justify-content-center\">refresh</mat-icon>\n        {{ \"buttons.btn_reset_password\" | translate }}\n      </button>\n    </ng-template>\n  </ls-table>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}