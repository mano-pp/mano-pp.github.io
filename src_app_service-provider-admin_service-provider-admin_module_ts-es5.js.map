{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_6__","_r12","row_r15","row_r16","ClinicalFacilityManagementComponent","dialog","store$","id","label","headerClass","sortable","type","_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_3__","cellClass","style","labelClass","rowSelectEnabled","actions","header","show","headerLabel","translateKey","translate","tableState","dispatch","_store_clinical_facility_management__WEBPACK_IMPORTED_MODULE_2__","listFacility","clinicalFacility$","select","clinicalFacilitySub","subscribe","response","config","clinicalFacilityData","CLINICAL_FACILITY_DATA","map","x","facilityName","name","location","city","contactName","firstName","lastName","open","_dialog_add_edit_facility_add_edit_facility_component__WEBPACK_IMPORTED_MODULE_0__","width","maxWidth","data","undefined","backdropClass","disableClose","src_app_service_provider_admin_dialog_manage_cf_admin_manage_cf_admin_component__WEBPACK_IMPORTED_MODULE_1__","unsubscribe","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_10__","AddEditCfaComponent","dialogRef","formBuilder","spinnerService","authService","snackbar","ngx_intl_tel_input__WEBPACK_IMPORTED_MODULE_11__","controlName","errorName","addAddEditForm","controls","hasError","spId","getLoggedUser","_a","cfAdminData","cfAdmin","console","log","cfId","createAddEditForm","doSubscriptionAddEditCFA","addManageAdminSuccessSubs","_shared_store_manage_admin__WEBPACK_IMPORTED_MODULE_2__","close","addManageAdminFailureSubs","errorMessage","_interfaces_user_interface__WEBPACK_IMPORTED_MODULE_0__","openSnackBar","updateManageAdminSuccessSubs","updateManageAdminFailureSubs","patchValue","phoneNo","number","countryCode","group","_angular_forms__WEBPACK_IMPORTED_MODULE_12__","_validators_phone_no_validator__WEBPACK_IMPORTED_MODULE_3__","email","validator","control","event","charsOnlyPattern","key","test","preventDefault","submitted","invalid","markAllAsTouched","value","serviceProviderId","facilityId","get","parsedValue","toString","isActive","createdBy","sessionStorage","getItem","createdById","roles","cDialog","_caution_box_caution_box_component__WEBPACK_IMPORTED_MODULE_4__","message_1","message_2","afterClosed","boolean","confirmValue","src_environments_environment__WEBPACK_IMPORTED_MODULE_5__","modifiedBy","modifiedById","doUnsubscribeAddEditCFA","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__","$event","_r1","_angular_core__WEBPACK_IMPORTED_MODULE_7__","AddEditFacilityComponent","ngx_intl_tel_input__WEBPACK_IMPORTED_MODULE_8__","facilityForm","setupCountryStateCity","createFacilityForm","doSubscriptionAddEditCF","addCfSuccessSubs","_store_clinical_facility_management__WEBPACK_IMPORTED_MODULE_1__","addCfFailureSubs","updateCfSuccessSubs","updateCfFailureSubs","countryArray","country_state_city__WEBPACK_IMPORTED_MODULE_0___default","selectedCountryData","filter","country","isoCode","statesOfCountry","_b","selectedStateData","state","stateCode","_c","citiesOfStateAndCountry","selectedCityData","error","user_id","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","address","area","_d","_e","groupHospital","numberOfBeds","_f","_validators_phone_no_validator__WEBPACK_IMPORTED_MODULE_2__","dataStorageMode","multiFactorAuthEn","zipCode","contact","clinicalFacility","includes","split","serviceproviderId","timezones","length","timezone","zoneName","_caution_box_caution_box_component__WEBPACK_IMPORTED_MODULE_3__","domValue","selectedCountry","noStatesFound","selectedState","option","find","doUnsubscribeAddEditCF","items","searchTxt","item","toLowerCase","indexOf","toUpperCase","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__","role_r20","AddEditUserManagementComponent","addUserForm","userData","createUserForm","doSubscriptionAddEditUser","getRoles","userRoles","saveUserSuccessSub","_store_user_management__WEBPACK_IMPORTED_MODULE_2__","saveUserFailureSub","_interfaces_user_interface__WEBPACK_IMPORTED_MODULE_1__","updateUserSuccessSub","updateUserFailureSub","src_app_shared_lsValidators_lsvalidators__WEBPACK_IMPORTED_MODULE_4__","user","Array","isArray","url","_caution_box_caution_box_component__WEBPACK_IMPORTED_MODULE_5__","doUnsubscriptionAddEditUser","CautionBoxComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__","EnableDisableComponent","mode","src_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_store_user_management_index__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","ManageCfAdminComponent","clinicalFacilityName","endUrl","src_environments_environment__WEBPACK_IMPORTED_MODULE_2__","getAdminCloneUsers","_store_clinical_facility_management__WEBPACK_IMPORTED_MODULE_3__","adminClone","users","adminName","adminCloneCopy","_add_edit_cfa_add_edit_cfa_component__WEBPACK_IMPORTED_MODULE_1__","sortObject","sort","JSON","parse","direction","a","b","active","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","viewQuery","_shared_data_table_manage_admin_data_table_manage_admin_component__WEBPACK_IMPORTED_MODULE_0__","routes","path","canActivate","_guards_auth_guard__WEBPACK_IMPORTED_MODULE_2__","component","_shared_root_root_component__WEBPACK_IMPORTED_MODULE_3__","children","_user_management_user_management_component__WEBPACK_IMPORTED_MODULE_0__","_clinical_facility_management_clinical_facility_management_component__WEBPACK_IMPORTED_MODULE_1__","ServiceProviderAdminRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_6__","imports","exports","ServiceProviderAdminModule","provide","_angular_common_http__WEBPACK_IMPORTED_MODULE_19__","useClass","keycloak_angular__WEBPACK_IMPORTED_MODULE_20__","multi","_angular_common__WEBPACK_IMPORTED_MODULE_21__","_service_provider_admin_routing_module__WEBPACK_IMPORTED_MODULE_0__","_core_directives_sort_module__WEBPACK_IMPORTED_MODULE_2__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_22__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_23__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_24__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_25__","_angular_material_datepicker__WEBPACK_IMPORTED_MODULE_26__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_27__","_angular_material_core__WEBPACK_IMPORTED_MODULE_28__","_angular_material_input__WEBPACK_IMPORTED_MODULE_29__","_angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_30__","ngx_intl_tel_input__WEBPACK_IMPORTED_MODULE_31__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_32__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_33__","_dialogs_dialogs_module__WEBPACK_IMPORTED_MODULE_7__","_angular_material_radio__WEBPACK_IMPORTED_MODULE_34__","_angular_material_table__WEBPACK_IMPORTED_MODULE_35__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_36__","_ngrx_store__WEBPACK_IMPORTED_MODULE_37__","_store_clinical_facility_management_clinical_facility_management_reducer__WEBPACK_IMPORTED_MODULE_10__","_store_user_management_user_management_reducer__WEBPACK_IMPORTED_MODULE_12__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_38__","_store_clinical_facility_management_clinical_facility_management_effects__WEBPACK_IMPORTED_MODULE_11__","_store_user_management_user_management_effects__WEBPACK_IMPORTED_MODULE_13__","_angular_material_select__WEBPACK_IMPORTED_MODULE_39__","_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_15__","_life_signals_life_signals_module__WEBPACK_IMPORTED_MODULE_16__","_angular_material_button__WEBPACK_IMPORTED_MODULE_40__","_angular_material_card__WEBPACK_IMPORTED_MODULE_41__","_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_42__","declarations","_user_management_user_management_component__WEBPACK_IMPORTED_MODULE_1__","_clinical_facility_management_clinical_facility_management_component__WEBPACK_IMPORTED_MODULE_4__","_dialog_add_edit_facility_add_edit_facility_component__WEBPACK_IMPORTED_MODULE_5__","_dialog_manage_cf_admin_manage_cf_admin_component__WEBPACK_IMPORTED_MODULE_6__","_dialog_add_edit_user_management_add_edit_user_management_component__WEBPACK_IMPORTED_MODULE_9__","_dialog_add_edit_cfa_add_edit_cfa_component__WEBPACK_IMPORTED_MODULE_8__","_dialog_enable_disable_enable_disable_component__WEBPACK_IMPORTED_MODULE_14__","_dialog_caution_box_caution_box_component__WEBPACK_IMPORTED_MODULE_17__","ClinicalFacilityService","httpClient","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","requestBody","post","put","factory","providedIn","UserManagementService","CfActionTypes","LoadClinicalFacilityRequestAction","LOAD_CLINICAL_FACILITY_ACTION","LoadClinicalFacilitySuccessAction","payload","LOAD_CLINICAL_FACILITY_SUCCESS","LoadClinicalFacilityFailureAction","LOAD_CLINICAL_FACILITY_FAILURE","SaveClinicalFacilityAction","SAVE_CLINICAL_FACILITY_ACTION","SaveClinicalFacilitySuccessAction","SAVE_CLINICAL_FACILITY_SUCCESS","SaveClinicalFacilityFailureAction","SAVE_CLINICAL_FACILITY_FAILURE","UpdateClinicalFacilityAction","UPDATE_CLINICAL_FACILITY_ACTION","UpdateClinicalFacilitySuccessAction","UPDATE_CLINICAL_FACILITY_SUCCESS","UpdateClinicalFacilityFailureAction","UPDATE_CLINICAL_FACILITY_FAILURE","AfterSaveClinicalFacilitySuccess","AFTER_SAVE_CLINICAL_FACILITY_SUCCESS","AfterSaveClinicalFacilityFailure","AFTER_SAVE_CLINICAL_FACILITY_FAILURE","AfterUpdateClinicalFacilitySuccess","AFTER_UPDATE_CLINICAL_FACILITY_SUCCESS","AfterUpdateClinicalFacilityFailure","AFTER_UPDATE_CLINICAL_FACILITY_FAILURE","LoadFacilityAdminCloneRequestAction","LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION","LoadFacilityAdminCloneFailureAction","LOAD_CLINICAL_FACILITY_ADMIN_CLONE_FAILURE","LoadFacilityAdminCloneSuccessAction","LOAD_CLINICAL_FACILITY_ADMIN_CLONE_SUCCESS","ClinicalFacilityEffects","actions$","http","clinicalFacilityService","pipe","_clinical_facility_management_actions__WEBPACK_IMPORTED_MODULE_0__","action","getClinicalFacilityList","loadCFRes","addClinicalFacility","addAdminRes","updateClinicalFacility","updateClinicalFacilityRes","getClinicalFacilityAdminCloneUsers","_angular_core__WEBPACK_IMPORTED_MODULE_8__","initialState","save_cf_success","save_cf_error","total","src_app_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_1__","CLINICAL_FACILITY_ADMIN_CLONE","clinicalFacilityFeatureKey","clinicalFacilityReducer","updatedCfData","cfData","getClinicalFacilityState","_clinical_facility_management_reducer__WEBPACK_IMPORTED_MODULE_0__","selectClinicalFacilityList","selectClinicalFacilityError","saveClinicalFacilitySuccess","saveClinicalFacilityFailure","updateClinicalFacilitySuccess","updateClinicalFacilityFailure","getClinicalFacilityAdminClone","UserManagementActionTypes","LoadUserManagementRequestAction","LOAD_USER_MANAGEMENT_ACTION","LoadUserManagementSuccessAction","LOAD_USER_MANAGEMENT_SUCCESS","LoadUserManagementFailureAction","LOAD_USER_MANAGEMENT_FAILURE","SaveUserManagementAction","Url","SAVE_USER_MANAGEMENT_ACTION","SaveUserManagementSuccessAction","SAVE_USER_MANAGEMENT_SUCCESS","SaveUserManagementFailureAction","SAVE_USER_MANAGEMENT_FAILURE","UpdateUserManagementAction","UPDATE_USER_MANAGEMENT_ACTION","UpdateUserManagementSuccessAction","UPDATE_USER_MANAGEMENT_SUCCESS","UpdateUserManagementFailureAction","UPDATE_USER_MANAGEMENT_FAILURE","DisableUserAction","DISABLE_USER","DisableUserSuccessAction","DISABLE_USER_SUCCESS","DisableUserFailureAction","DISABLE_USER_FAILURE","EnableUserAction","ENABLE_USER","EnableUserSuccessAction","ENABLE_USER_SUCCESS","EnableUserFailureAction","ENABLE_USER_FAILURE","AfterSaveUserManagementSuccessAction","AFTER_SAVE_USER_MANAGEMENT_SUCCESS","AfterSaveUserManagementFailureAction","AFTER_SAVE_USER_MANAGEMENT_FAILURE","AfterUpdateUserManagementSuccessAction","AFTER_UPDATE_USER_MANAGEMENT_SUCCESS","AfterUpdateUserManagementFailureAction","AFTER_UPDATE_USER_MANAGEMENT_FAILURE","UserManagementEffects","userManagementService","_user_management_actions__WEBPACK_IMPORTED_MODULE_0__","getUserList","loadUserRes","addUser","addUserRes","updateUser","updateUserRes","disableUser","enableDisable","disableUserRes","enableUser","enableUserRes","USER_MANAGEMENT_DATA","save_user_success","save_user_error","_life_signals_models_ls_column_model__WEBPACK_IMPORTED_MODULE_1__","userManagementFeatureKey","userManagementReducer","updatedUserManagementData","userManagementData","updatedDataForDisable","updatedDataForEnable","getUserManagementState","_user_management_reducer__WEBPACK_IMPORTED_MODULE_0__","selectUserManagementList","selectUserManagementError","saveUserManagementSuccess","saveUserManagementFailure","updateUserManagementSuccess","updateUserManagementFailure","row_r13","UserManagementComponent","backendApiService","row","_store_user_management__WEBPACK_IMPORTED_MODULE_1__","listUsers","users$","usersSub","userName","src_app_service_provider_admin_dialog_add_edit_user_management_add_edit_user_management_component__WEBPACK_IMPORTED_MODULE_0__","postMapping","then","status","openCustomSnackBar","source","checked","_dialog_enable_disable_enable_disable_component__WEBPACK_IMPORTED_MODULE_2__","result","rowData","confirm","_shared_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_4__","body","title","text","resetPassword"],"sources":["webpack:///src/app/service-provider-admin/clinical-facility-management/clinical-facility-management.component.html","webpack:///src/app/service-provider-admin/clinical-facility-management/clinical-facility-management.component.ts","webpack:///src/app/service-provider-admin/dialog/add-edit-cfa/add-edit-cfa.component.html","webpack:///src/app/service-provider-admin/dialog/add-edit-cfa/add-edit-cfa.component.ts","webpack:///src/app/service-provider-admin/dialog/add-edit-facility/add-edit-facility.component.html","webpack:///src/app/service-provider-admin/dialog/add-edit-facility/add-edit-facility.component.ts","webpack:///src/app/service-provider-admin/dialog/add-edit-user-management/add-edit-user-management.component.html","webpack:///src/app/service-provider-admin/dialog/add-edit-user-management/add-edit-user-management.component.ts","webpack:///src/app/service-provider-admin/dialog/caution-box/caution-box.component.ts","webpack:///src/app/service-provider-admin/dialog/caution-box/caution-box.component.html","webpack:///src/app/service-provider-admin/dialog/enable-disable/enable-disable.component.ts","webpack:///src/app/service-provider-admin/dialog/enable-disable/enable-disable.component.html","webpack:///src/app/service-provider-admin/dialog/manage-cf-admin/manage-cf-admin.component.html","webpack:///src/app/service-provider-admin/dialog/manage-cf-admin/manage-cf-admin.component.ts","webpack:///src/app/service-provider-admin/service-provider-admin-routing.module.ts","webpack:///src/app/service-provider-admin/service-provider-admin.module.ts","webpack:///src/app/service-provider-admin/service/clinical-facility.service.ts","webpack:///src/app/service-provider-admin/service/user-management.service.ts","webpack:///src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.actions.ts","webpack:///src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.effects.ts","webpack:///src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.reducer.ts","webpack:///src/app/service-provider-admin/store/clinical-facility-management/clinical-facility-management.selector.ts","webpack:///src/app/service-provider-admin/store/user-management/user-management.actions.ts","webpack:///src/app/service-provider-admin/store/user-management/user-management.effects.ts","webpack:///src/app/service-provider-admin/store/user-management/user-management.reducer.ts","webpack:///src/app/service-provider-admin/store/user-management/user-management.selector.ts","webpack:///src/app/service-provider-admin/user-management/user-management.component.html","webpack:///src/app/service-provider-admin/user-management/user-management.component.ts"],"sourcesContent":["<div class=\"table-responsive text-nowrap container-fluid admin-table-layout clinical-table custom-table head-border\">\n    <ls-table [config]=\"config\" [data]=\"clinicalFacilityData\" [columns]=\"columns\" [tableSort]=\"true\">\n        <ng-template lsWidgetName=\"actionsHeading\" let-row>\n            <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"openAddFacilityDialog()\">\n        <mat-icon>add</mat-icon> {{ \"buttons.btn_add_facility\" | translate }}\n      </button>\n        </ng-template>\n        <ng-template lsWidgetName=\"dataStorageMode\" let-row>\n            <span class=\"storage-type\" *ngIf=\"row.dataStorageMode !== '';else hyphen\">{{ row[\"dataStorageMode\"] }}</span>\n            <ng-template #hyphen>-</ng-template>\n        </ng-template>\n        <ng-template lsWidgetName=\"facilityName\" let-row>\n            <span [matTooltip]=\"row.facilityName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.facilityName.length < 40\">\n              {{row.facilityName}}\n            </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"contactName\" let-row>\n            <span [matTooltip]=\"row.contactName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.contactName.length < 40\">\n              {{row.contactName}}\n            </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"location\" let-row>\n            <strong>{{row?.location }}</strong><span class=\"d-block\">{{ row?.state || \"-\" }}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"contactDetails\" let-row>\n            <div class=\"pt-1\">{{ row[\"email\"] }}</div>\n            <div class=\"pt-1\">{{ row[\"phoneNo\"] }}</div>\n            <span *ngIf=\"!row.email && !row.phoneNo\">{{(row.email || row.phoneNo)?\"\":\"-\"}}</span>\n        </ng-template>\n        <ng-template lsWidgetName=\"actions\" let-row>\n            <button mat-mini-fab color=\"primary\" (click)=\"openEditFacility(row)\" class=\"btn-boxed btn-no-shadow me-4\">\n        <mat-icon class=\"justify-content-center\">edit</mat-icon>\n      </button>\n            <button mat-flat-button type=\"button\" class=\"me-3\" color=\"primary\" (click)=\"openManageAdmin(row)\">\n        {{ \"buttons.btn_manage_admin\" | translate }}\n      </button>\n        </ng-template>\n    </ls-table>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { AddEditFacilityComponent } from \"../dialog/add-edit-facility/add-edit-facility.component\";\nimport { ManageCfAdminComponent } from \"src/app/service-provider-admin/dialog/manage-cf-admin/manage-cf-admin.component\";\nimport {\n  ClinicalFacility,\n} from \"src/app/service-provider-admin/clinical-facility-management/clinical-facility.interface\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  ClinicalFacilityStoreActions,\n  ClinicalFacilityStoreSelectors,\n  ClinicalFacilityStoreState,\n} from \"../store/clinical-facility-management\";\nimport {\n  LSColumn,\n  LSColumnType,\n  LSTableConfig,\n  TableState,\n} from \"../../life-signals/_models/ls-column.model\";\nimport {ClinicalFacilityState} from \"../store/clinical-facility-management/clinical-facility-management.reducer\";\n\n@Component({\n  selector: \"app-clinical-facility-management\",\n  templateUrl: \"./clinical-facility-management.component.html\",\n  styleUrls: [\"./clinical-facility-management.component.scss\"],\n})\nexport class ClinicalFacilityManagementComponent implements OnInit, OnDestroy {\n  clinicalFacility$: Observable<ClinicalFacilityState>;\n  clinicalFacilityData: ClinicalFacility[];\n  columns: LSColumn[] = [\n    {\n      id: \"id\",\n      label: \"id\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      //labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"facilityName\",\n      label: \"facilityName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"font-size-16\"],\n      style: \"max-width: 250px; width: 250px;\",\n    },\n    {\n      id: \"location\",\n      label: \"location\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\"],\n    },\n    {\n      id: \"contactName\",\n      label: \"contactName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"bold-name\"],\n      style: \"max-width: 220px; width: 220px;\",\n    },\n    {\n      id: \"contactDetails\",\n      label: \"contactDetails\",\n      headerClass: [\"text-start\"],\n      sortable: false,\n      type: LSColumnType.TEXT,\n      //cellClass: [\"fw-bold\"],\n    },\n    {\n      id: \"dataStorageMode\",\n      label: \"dataStorage\",\n     headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [\"d-flex\", \"align-items-center\", \"justify-content-start\"],\n    },\n  ];\n  config: LSTableConfig = {\n    id: \"cf-table\",\n    rowSelectEnabled: false,\n    actions: {\n      header: {\n        class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n      },\n      show: true,\n      headerLabel: \"\",\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n    },\n    translateKey: \"cf-table\",\n    translate: true,\n    tableState: TableState.DEFAULT\n  };\n  clinicalFacilitySub: Subscription;\n\n  constructor(\n    private dialog: MatDialog,\n    private store$: Store<ClinicalFacilityStoreState.ClinicalFacilityState>\n  ) { }\n\n  ngOnInit() {\n    this.store$.dispatch(\n      new ClinicalFacilityStoreActions.LoadClinicalFacilityRequestAction()\n    );\n    this.listFacility();\n  }\n\n  listFacility() {\n    this.clinicalFacility$ = this.store$.select(\n      ClinicalFacilityStoreSelectors.selectClinicalFacilityList\n    );\n\n    this.clinicalFacilitySub = this.clinicalFacility$.subscribe((response) => {\n      this.config.tableState = <TableState>response?.tableState;\n        this.clinicalFacilityData = response.CLINICAL_FACILITY_DATA.map((x) => {\n          return {\n            ...x,\n            facilityName: `${x.name}`,\n            location: `${x.city}`,\n            contactName: `${x?.firstName || ''} ${x?.lastName || ''}`,\n          };\n        });\n    });\n  }\n\n  openAddFacilityDialog() {\n    this.dialog.open(AddEditFacilityComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      // height: '900px',\n      data: { clinicalFacilityData: undefined },\n\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  openEditFacility(data) {\n    this.dialog.open(AddEditFacilityComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      // height: '550px',\n      data: { clinicalFacilityData: data },\n\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  openManageAdmin(data) {\n    this.dialog.open(ManageCfAdminComponent, {\n      maxWidth: \"100vw\",\n      //  maxHeight: '100vh',\n      // height: '100%',\n      width: \"95vw\",\n      //  height: '50vw',\n      data: { clinicalFacilityData: data },\n\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.clinicalFacilitySub) this.clinicalFacilitySub.unsubscribe();\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title *ngIf=\"cfAdminData === undefined; else edit\">\n    {{ 'clinical_facility.add_cfa.label_add_admin_cfa' | translate }}\n  </h1>\n  <ng-template #edit>\n    <h1 mat-dialog-title>\n      {{ 'clinical_facility.add_cfa.label_edit_admin_cfa' | translate }}\n    </h1>\n  </ng-template>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup px-3\">\n  <form [formGroup]=\"addAddEditForm\" class=\"dialog-form\" autocomplete=\"off\">\n    <div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-label\n                  for=\"first-name\"\n                  class=\"matlabel\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            {{ 'shared_label.label_first_name' | translate }}\n            <span class=\"required-star\" *ngIf=\"cfAdminData === undefined\">* </span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData === undefined\">{{ 'shared_label.label_name_cannot_change' | translate }}</span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n          </mat-label>\n          <mat-form-field\n                  appearance=\"fill\"\n                  class=\"formfield-control\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            <input\n                    matInput\n                    formControlName=\"firstName\"\n                    [readonly]=\"cfAdminData\"\n                    (keypress)=\"charsOnly('firstName', $event)\"\n                    autocomplete=\"off\"\n            />\n            <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\" >\n              {{\n              'error_message.err_first_name_required'\n                      | translate\n              }}\n            </mat-error>\n            <mat-error *ngIf=\"hasError('firstName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_first_name_char_only' |translate}}\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t\t<mat-error *ngIf=\"hasError('firstName','maxlength') && !hasError('firstName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_first_name_range' | translate}}\n\t\t\t\t\t\t</mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n          <mat-label\n                  for=\"last-name\"\n                  class=\"matlabel\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            {{ 'shared_label.label_last_name' | translate }}\n            <span class=\"required-star\" *ngIf=\"cfAdminData === undefined\">* </span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData === undefined\">{{ 'shared_label.label_name_cannot_change' | translate }}</span>\n            <span class=\"required-star cannotEdit\" *ngIf=\"cfAdminData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n          </mat-label>\n          <mat-form-field\n                  appearance=\"fill\"\n                  class=\"formfield-control\"\n                  [class.disabled]=\"cfAdminData\"\n          >\n            <input\n                    matInput\n                    formControlName=\"lastName\"\n                    [readonly]=\"cfAdminData\"\n                    (keypress)=\"charsOnly('lastName', $event)\"\n                    autocomplete=\"off\"\n            />\n            <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\" >\n              {{\n              'error_message.err_last_name_required'\n                      | translate\n              }}\n            </mat-error>\n            <mat-error *ngIf=\"hasError('lastName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_last_name_char_only' |translate}}\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t\t<mat-error *ngIf=\"hasError('lastName','maxlength') && !hasError('lastName', 'pattern')\" >\n\t\t\t\t\t\t\t{{'error_message.err_last_name_range' | translate}}\n\t\t\t\t\t\t</mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-label for=\"spa-email\" class=\"matlabel\">\n            {{ 'shared_label.label_email_id' | translate }}\n            <span class=\"required-star\">**</span>\n          </mat-label>\n          <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n            <input matInput formControlName=\"email\" autocomplete=\"off\" [maxlength]=\"320\"/>\n            <mat-error *ngIf=\"hasError('email','email')\" >\n              {{'error_message.err_invalid_email'|translate}}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n          <mat-label for=\"sp-contact-person-phone\" class=\"matlabel\">\n            {{ 'shared_label.label_phone_no' | translate }}\n            <span class=\"required-star\">**</span>\n          </mat-label>\n          <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n          <mat-error class = \"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\" >\n            {{\"errors.err_invalid_phone_no\" | translate}}\n          </mat-error>\n        </div>\n      </div>\n      <mat-error class=\"email-error\" *ngIf=\"submitted && !addAddEditForm.getRawValue()?.email && !addAddEditForm.getRawValue()?.phoneNo\">\n        {{ \"manage_users_module.edituser.message1\" | translate }}\n      </mat-error>\n    </div>\n    <div class=\"my-2\">\n      <div class=\"required-text mt-3\">\n        <span>* {{ 'error_message.err_mandatory' | translate }}</span>\n      </div>\n      <div\n              style=\"margin-top: 10px !important\"\n              class=\"email-phone-info-text\"\n      >\n        **{{ 'error_message.err_email_phone_mandatory' | translate }}\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<div mat-dialog-actions align=\"end\">\n  <button\n          type=\"button\"\n          mat-flat-button color=\"warn\"\n          class=\"fill-btn\"\n          (click)=\"onClose()\"\n  >\n    {{ 'buttons.btn_cancel' | translate }}\n  </button>\n  <button\n  type=\"button\"\n  mat-flat-button color=\"primary\"\n  class=\"fill-btn\"\n  (click)=\"saveServiceProviderAdmin()\"\n>\n{{ 'buttons.btn_save' | translate }}\n</button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { User, UserErrors } from \"../../../interfaces/user.interface\";\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\nimport { SpinnerService } from \"src/app/shared/_services/spinner.service\";\nimport {\n  ManageAdminStoreActions,\n  ManageAdminStoreSelectors,\n  ManageAdminStoreState,\n} from \"../../../shared/store/manage-admin\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Subscription } from \"rxjs\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\nimport { CautionBoxComponent } from \"../caution-box/caution-box.component\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-add-edit-cfa\",\n  templateUrl: \"./add-edit-cfa.component.html\",\n  styleUrls: [\"./add-edit-cfa.component.scss\"],\n})\nexport class AddEditCfaComponent implements OnInit, OnDestroy {\n  addAddEditForm: FormGroup;\n  submitted: boolean;\n  cfAdminData: User;\n  separateDialCode = false;\n  SearchCountryField = SearchCountryField;\n  TooltipLabel;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [\n    CountryISO.India,\n    CountryISO.UnitedStates,\n    CountryISO.SouthAfrica,\n  ];\n  validCountry = true;\n  cfAdmin: User;\n  cfId: string;\n  spId: string;\n  addManageAdminSuccessSubs: Subscription;\n  addManageAdminFailureSubs: Subscription;\n  updateManageAdminSuccessSubs: Subscription;\n  updateManageAdminFailureSubs: Subscription;\n\n  constructor(\n    private dialogRef: MatDialogRef<AddEditCfaComponent>,\n    private formBuilder: FormBuilder,\n    private spinnerService: SpinnerService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    private authService: AuthenticationService,\n    private snackbar: SnackbarService,\n    private dialog : MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.spId = this.authService.getLoggedUser()?.spId;\n    this.cfAdminData = this.data.cfAdmin;\n    console.log(this.cfAdminData);\n    this.cfId = this.data.cfId;\n    this.createAddEditForm();\n    this.doSubscriptionAddEditCFA();\n  }\n\n  doSubscriptionAddEditCFA() {\n    if (this.cfAdminData === undefined) {\n      this.addManageAdminSuccessSubs = this.store$\n        .select(ManageAdminStoreSelectors.addManageAdminSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.addManageAdminFailureSubs = this.store$\n        .select(ManageAdminStoreSelectors.addManageAdminFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else if (data.errorMessage === 'CFA_ALREADY_EXIST') {\n              this.snackbar.openSnackBar(\"error_message.cfa_already_exists\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    } else {\n      this.updateManageAdminSuccessSubs = this.store$\n        .select(ManageAdminStoreSelectors.updateManageAdminSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.updateManageAdminFailureSubs = this.store$\n        .select(ManageAdminStoreSelectors.updateManageAdminFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    }\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  resetNumber() {\n    this.addAddEditForm.patchValue({\n      phoneNo: {\n        number: undefined,\n        countryCode: CountryISO.India,\n      },\n    });\n  }\n\n  createAddEditForm() {\n    this.addAddEditForm = this.formBuilder.group(\n      {\n        firstName: [\n          this.cfAdminData !== undefined ? this.cfAdminData.firstName : \"\",\n          [\n            Validators.required,\n            Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n            Validators.maxLength(25)\n          ],\n        ],\n        lastName: [\n          this.cfAdminData !== undefined ? this.cfAdminData.lastName : \"\",\n          [\n            Validators.required,\n            Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n            Validators.maxLength(25)\n          ],\n        ],\n        phoneNo: [\n          this.cfAdminData !== undefined ? this.cfAdminData.phoneNo : \"\",\n          [_validatePhoneNumberInput.bind(this)]\n        ],\n        email: [\n          this.cfAdminData !== undefined ? this.cfAdminData.email : \"\",\n        [Validators.email]\n        ],\n      },\n      { validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\n    );\n  }\n\n  charsOnly(control: string, event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  get f() {\n    return this.addAddEditForm.controls;\n  }\n\n  saveServiceProviderAdmin() {\n    this.submitted = true;\n    if (this.addAddEditForm.invalid) {\n      this.addAddEditForm.markAllAsTouched();\n      return;\n    }\n\n    this.spinnerService.show();\n    this.cfAdmin = this.addAddEditForm.value;\n    this.cfAdmin.serviceProviderId = this.spId;\n    this.cfAdmin.facilityId = this.cfId;\n\n    if (\n      this.addAddEditForm.get(\"phoneNo\").value !== null &&\n      this.addAddEditForm.get(\"phoneNo\").value !== \"\"\n    ) {\n      const parsedValue = parsePhoneNumberFromString(this.addAddEditForm\n          .get(\"phoneNo\")\n          .value);\n      this.cfAdmin.phoneNo = parsedValue.number.toString();\n    }\n\n    if (this.cfAdminData === undefined) {\n      this.cfAdmin.isActive = true;\n      this.cfAdmin.createdBy = sessionStorage.getItem(\"user\");\n      this.cfAdmin.createdById = sessionStorage.getItem(\"user_id\");\n      this.cfAdmin.roles = [\"CFA\"];\n      const cDialog = this.dialog.open(CautionBoxComponent,{\n        maxWidth: \"90vw\",\n        width: \"500px\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data: {\n          message_1 : \"clinical_facility.caution.add_user_caution\",\n          message_2 : \"clinical_facility.caution.add_user_caution_1\"\n        }\n      });\n      cDialog.afterClosed().subscribe((boolean)=>{\n        let confirmValue =  boolean;\n        if(confirmValue){\n          this.store$.dispatch(\n            new ManageAdminStoreActions.SaveManageAdminAction(\n              this.cfAdmin,\n              environment.dataApiUrl+'clinical-facilities/users/cfa'\n            )\n          );\n        }\n      });\n     \n    } else {\n      this.cfAdmin.modifiedBy = sessionStorage.getItem(\"user\");\n      this.cfAdmin.modifiedById = sessionStorage.getItem(\"user_id\");\n      this.cfAdmin.id = this.cfAdminData.id;\n      this.cfAdmin.isActive = this.cfAdminData.isActive;\n      this.store$.dispatch(\n        new ManageAdminStoreActions.UpdateManageAdminAction(\n          this.cfAdmin,\n          environment.dataApiUrl+'clinical-facilities/users/cfa'\n        )\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.doUnsubscribeAddEditCFA();\n  }\n\n  doUnsubscribeAddEditCFA() {\n    if (this.cfAdminData === undefined) {\n      if (this.addManageAdminSuccessSubs)\n        this.addManageAdminSuccessSubs.unsubscribe();\n      if (this.addManageAdminFailureSubs)\n        this.addManageAdminFailureSubs.unsubscribe();\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterSaveManageAdminSuccessAction()\n      );\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterSaveManageAdminFailureAction()\n      );\n    } else {\n      if (this.updateManageAdminSuccessSubs)\n        this.updateManageAdminSuccessSubs.unsubscribe();\n      if (this.updateManageAdminFailureSubs)\n        this.updateManageAdminFailureSubs.unsubscribe();\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterUpdateManageAdminSuccessAction()\n      );\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterUpdateManageAdminFailureAction()\n      );\n    }\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.addAddEditForm.controls[controlName].hasError(errorName);\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title *ngIf=\"clinicalFacilityData === undefined; else edit\">\n    {{\n    'clinical_facility.add_clinical_facility.label_add_facility'\n    | translate\n    }}\n  </h1>\n  <ng-template #edit>\n    <h1 mat-dialog-title>\n      {{\n      'clinical_facility.add_clinical_facility.label_edit_facility'\n      | translate\n      }}\n    </h1>\n  </ng-template>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <form [formGroup]=\"facilityForm\" class=\"dialog-form ServiceProviderForm \" id=\"addServiceProviderForm\" autocomplete=\"off\">\n    <fieldset class=\"scheduler-border\">\n      <legend class=\"scheduler-border\">\n        <div>\n          <img src=\"assets/icons/facility-icon.svg\" alt=\"facility\" />\n          <label class=\"facility-details-label\">\n            {{\n            'clinical_facility.add_clinical_facility.label_clicnical_facility'\n            | translate\n            }}\n          </label>\n        </div>\n      </legend>\n      <div *ngIf=\"clinicalFacilityData !== undefined\">\n        <mat-label for=\"facility-name\" [class.disabled]=\"clinicalFacilityData\" class=\"matlabel\">\n          {{ 'shared_label.label_id' | translate }}\n        </mat-label>\n        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"clinicalFacilityData\">\n          <input matInput formControlName=\"user_id\" [readonly]=\"clinicalFacilityData\"/>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-label for=\"facility-name\" [class.disabled]=\"clinicalFacilityData\" class=\"matlabel\">\n          {{ 'shared_label.label_name' | translate }}\n          <span class=\"required-star\">*</span>\n        </mat-label>\n        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"clinicalFacilityData\" [ngClass]=\"facilityForm.get('name').hasError('pattern') && facilityForm.get('name').touched ? 'error-msg': ''\">\n          <input matInput formControlName=\"name\" autocomplete=\"off\" [readonly]=\"clinicalFacilityData\" maxlength=\"64\"/>\n          <mat-error *ngIf=\"hasError('name', 'required') && submitted\"  >\n            {{ 'error_message.err_name_required' | translate }}\n          </mat-error>\n          <mat-error *ngIf=\"hasError('name','pattern')\">\n            {{ 'error_message.err_name_pattern' | translate }}\n          </mat-error>\n          <mat-error *ngIf=\"hasError('name','maxlength') && !hasError('name','pattern')\"  >\n            {{ 'error_message.err_name_range' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-country\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_country'\n              | translate\n              }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <mat-select formControlName=\"country\" (selectionChange)=\"getStatesByCountry($event)\" [placeholder]=\"'placeholders.plc_select' | translate\">\n                <mat-option *ngFor=\"let country of countryArray\" value=\"{{ getCountryValues(country) }}\">\n                  {{ country['name'] }} \n                  ({{ country['flag'] }})</mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"hasError('country', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-state\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_state'\n              | translate\n              }}\n              <span class=\"required-star\" *ngIf=\"statesOfCountry.length > 0\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [hideRequiredMarker]=\"true\">\n              <input matInput formControlName=\"state\" minlength=\"2\" maxlength=\"64\" [matAutocomplete]=\"state\"\n                     [required]=\"statesOfCountry.length > 0\" (ngModelChange)=\"stateChange(facilityForm.value.state)\"/>\n              <mat-autocomplete #state=\"matAutocomplete\" (optionSelected)=\"getCityByStateAndCountry($event)\">\n                <mat-option *ngFor=\"let state of filteredResults(statesOfCountry, 'name', facilityForm.value.state)\" value=\"{{ state['name'] }}\">{{ state['name'] }}\n                </mat-option>\n              </mat-autocomplete>\n<!--              <mat-select formControlName=\"state\" [required]=\"statesOfCountry.length > 0\" (selectionChange)=\"-->\n<!--\t\t\t\t\t\t\t\t\tgetCityByStateAndCountry($event)-->\n<!--\t\t\t\t\t\t\t\t\">-->\n<!--                <mat-option *ngFor=\"let state of statesOfCountry\" value=\"{{ getStateValues(state) }}\">{{ state['name']-->\n<!--                  }}</mat-option>-->\n<!--              </mat-select>-->\n              <mat-error *ngIf=\"hasError('state', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"!hasError('state', 'minlength') && hasError('state', 'pattern')\"  >\n                {{'error_message.invalid_state'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('state', 'minlength')\"  >\n                {{'error_message.city_len_err'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"city-line-1\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_city'\n              | translate\n              }}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [hideRequiredMarker]=\"true\">\n              <input matInput id=\"city-line-1\" formControlName=\"city\" minlength=\"2\" maxlength=\"64\" [matAutocomplete]=\"city\"/>\n              <mat-autocomplete #city=\"matAutocomplete\">\n                <mat-option *ngFor=\"let city of filteredResults(citiesOfStateAndCountry, 'name', facilityForm.value.city)\" value=\"{{ city['name'] }}\">{{ city['name'] }}\n                </mat-option>\n              </mat-autocomplete>\n              <mat-error *ngIf=\"hasError('city', 'required') && submitted\"  >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"!hasError('city', 'minlength') && hasError('city', 'pattern')\"  >\n                {{'error_message.invalid_city'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('city', 'minlength')\"  >\n                {{'error_message.city_len_err'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"zip-code\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_zip_code'\n              | translate\n              }}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <input matInput formControlName=\"zipCode\" autocomplete=\"off\" maxlength=\"12\"/>\n              <mat-error *ngIf=\"(hasError('zipCode', 'maxlength') || hasError('zipCode', 'minlength')) && !hasError('zipCode','pattern') \" >\n                {{'error_message.err_zipcode_range' | translate}}\n              </mat-error>\n              <mat-error\n                *ngIf=\"hasError('zipCode','pattern') \" >\n                {{'error_message.err_zipcode_alphanumeric_only'| translate}}\n              </mat-error>\n            </mat-form-field>\n\n          </div>\n        </div>\n      </div>\n      <div>\n        <mat-label for=\"facility-address-line-1\" class=\"matlabel\">\n          {{ 'shared_label.label_address' | translate }}\n          <span class=\"required-star\">*</span>\n        </mat-label>\n        <mat-form-field appearance=\"fill\" class=\"formfield-control\" [ngClass]=\"facilityForm.get('address').hasError('pattern') && facilityForm.get('address').touched ? 'error-msg': ''\">\n          <mat-label *ngIf=\"!facilityForm.get('address')?.value\">{{\n            'placeholders.plc_enter_here' | translate\n            }}</mat-label>\n          <input matInput formControlName=\"address\" autocomplete=\"off\" maxlength=\"128\"/>\n          <mat-error *ngIf=\"hasError('address','required') && submitted\">\n            {{'error_message.err_field_required'|translate}}\n          </mat-error>\n          <mat-error *ngIf=\"hasError('address','pattern')\">\n            {{'error_message.err_valid_address'|translate}}\n          </mat-error>\n          <mat-error *ngIf=\"(hasError('address','minlength') || hasError('address','maxlength')) && !hasError('address','pattern')\">\n            {{'error_message.err_address_range' | translate}}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-country\" class=\"matlabel\">\n              {{'clinical_facility.add_clinical_facility.label_group_hospital'| translate}}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <mat-select formControlName=\"groupHospital\" [placeholder]=\"'placeholders.plc_select' | translate\">\n                <mat-option [value]=\"true\">\n                  {{ 'clinical_facility.add_clinical_facility.yes'| translate }}\n                </mat-option>\n                <mat-option [value]=\"false\">\n                  {{ 'clinical_facility.add_clinical_facility.no'| translate }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"hasError('groupHospital', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-state\" class=\"matlabel\">\n              {{'clinical_facility.add_clinical_facility.label_no_beds' | translate}}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <input matInput type=\"number\" formControlName=\"numberOfBeds\" [min]=\"bedsMin\" [max]=\"bedsMax\"/>\n              <mat-error *ngIf=\"hasError('numberOfBeds', 'required') && submitted\" >\n                {{'error_message.err_field_required'|translate}}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('numberOfBeds', 'min') || hasError('numberOfBeds', 'max')\"  >\n                {{'error_message.invalid_beds_num'|translate}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"select-state\" class=\"matlabel\">\n              {{\n              'clinical_facility.add_clinical_facility.label_select_storage_type'\n              | translate\n              }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <mat-select formControlName=\"dataStorageMode\" id=\"select-storage\"\n                          [placeholder]=\"'placeholders.plc_select' | translate\">\n                <mat-option value=\"archived\">Archived</mat-option>\n                <mat-option value=\"standard\">Standard</mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"hasError('dataStorageMode', 'required') && submitted\" >\n                {{ 'error_message.err_name_required' | translate }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6 d-flex align-items-end\">\n            <section class=\"example-section check-authentication align-bottom\">\n              <mat-checkbox class=\"example-margin\" formControlName=\"multiFactorAuthEn\">\n                {{'clinical_facility.add_clinical_facility.label_mfa'| translate}}\n              </mat-checkbox>\n            </section>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class=\"scheduler-border\">\n      <legend class=\"scheduler-border\">\n        <div>\n          <mat-icon class=\"material-icons-outlined\">account_circle</mat-icon>\n          <label class=\"facility-details-label\">{{\n            'clinical_facility.add_clinical_facility.label_primary_contact' | translate\n            }}</label>\n        </div>\n      </legend>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-person-fname\" class=\"matlabel\">{{ 'shared_label.label_first_name' | translate }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [ngClass]=\"facilityForm.get('firstName').hasError('pattern') && facilityForm.get('firstName').touched ? 'error-msg': ''\" >\n              <input matInput formControlName=\"firstName\" autocomplete=\"off\" (keypress)=\"charsOnly('firstName', $event)\" />\n              <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\" >\n                {{\n                'error_message.err_first_name_required'\n                | translate\n                }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('firstName','pattern')\">\n                {{ 'error_message.err_first_name_char_only' | translate }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('firstName','maxlength') && !hasError('firstName','pattern')\">\n                {{ 'error_message.err_first_name_range' | translate }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-person-lname\" class=\"matlabel\">{{ 'shared_label.label_last_name' | translate }}\n              <span class=\"required-star\">*</span>\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [ngClass]=\"facilityForm.get('lastName').hasError('pattern') && facilityForm.get('lastName').touched ? 'error-msg': ''\" >\n              <input matInput formControlName=\"lastName\" autocomplete=\"off\" (keypress)=\"charsOnly('lastName', $event)\" />\n              <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\" >\n                {{\n                'error_message.err_last_name_required'\n                | translate\n                }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('lastName','pattern')\">\n                {{ 'error_message.err_last_name_char_only' | translate }}\n              </mat-error>\n              <mat-error *ngIf=\"hasError('lastName','maxlength') && !hasError('lastName','pattern')\" >\n                {{ 'error_message.err_last_name_range' | translate }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-email\" class=\"matlabel pt-email\">{{ 'shared_label.label_email_id' | translate }}\n              <!--<span class=\"required-star\">**</span>-->\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n              <input matInput formControlName=\"email\" autocomplete=\"off\" [maxlength]=\"320\"/>\n              <mat-error *ngIf=\"hasError('email', 'email')\">\n                {{\n                'error_message.err_invalid_email' | translate\n                }}\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md-6\">\n            <mat-label for=\"sp-contact-person-phone\" class=\"matlabel\">{{ 'shared_label.label_phone_no' | translate }}\n              <!--<span class=\"required-star\">**</span>-->\n            </mat-label>\n            <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n            <mat-error class=\"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\" >\n              {{\"errors.err_invalid_phone_no\" | translate}}\n            </mat-error>\n          </div>\n        </div>\n        <!--<mat-error *ngIf=\"submitted && !facilityForm.getRawValue()?.email && !facilityForm.getRawValue()?.phoneNo\">\n          {{ \"manage_users_module.edituser.message1\" | translate }}\n        </mat-error>-->\n      </div>\n    </fieldset>\n    <div class=\"required-text\">\n      <span>* {{ 'error_message.err_mandatory' | translate }}</span>\n    </div>\n\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button type=\"button\" mat-flat-button class=\"fill-btn\" (click)=\"onClose()\" color=\"warn\">\n    {{ 'buttons.btn_cancel' | translate }}\n  </button>\n  <button type=\"button\" color=\"primary\" mat-flat-button class=\"fill-btn\" (click)=\"saveFacility()\" >\n    {{ 'buttons.btn_save' | translate }}\n  </button>\n</mat-dialog-actions>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\r\nimport csc from \"country-state-city\";\r\nimport { ClinicalFacility } from \"../../clinical-facility-management/clinical-facility.interface\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  ClinicalFacilityStoreActions,\r\n  ClinicalFacilityStoreSelectors,\r\n  ClinicalFacilityStoreState,\r\n} from \"../../store/clinical-facility-management\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AuthenticationService } from \"@services/authentication.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SnackbarService } from \"@services/snackbar.service\";\r\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\r\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\r\nimport { CautionBoxComponent } from \"../caution-box/caution-box.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-edit-facility\",\r\n  templateUrl: \"./add-edit-facility.component.html\",\r\n  styleUrls: [\"./add-edit-facility.component.scss\"],\r\n})\r\nexport class AddEditFacilityComponent implements OnInit, OnDestroy {\r\n  facilityForm: FormGroup;\r\n  submitted: boolean;\r\n  // for country code\r\n  separateDialCode = false;\r\n  SearchCountryField = SearchCountryField;\r\n  TooltipLabel;\r\n  CountryISO = CountryISO;\r\n  preferredCountries: CountryISO[] = [\r\n    CountryISO.India,\r\n    CountryISO.UnitedStates,\r\n    CountryISO.SouthAfrica,\r\n  ];\r\n  countryArray = [];\r\n  statesOfCountry = [];\r\n  selectedCountry: string;\r\n  countryCode: string;\r\n  selectedState: string;\r\n  stateCode: string;\r\n  citiesOfStateAndCountry = [];\r\n  clinicalFacility: ClinicalFacility;\r\n  clinicalFacilityData: ClinicalFacility;\r\n  selectedCountryData = [];\r\n  selectedStateData = [];\r\n  selectedCityData = [];\r\n  spId: string;\r\n  noStatesFound: boolean;\r\n  addCfSuccessSubs: Subscription;\r\n  addCfFailureSubs: Subscription;\r\n  updateCfSuccessSubs: Subscription;\r\n  updateCfFailureSubs: Subscription;\r\n  bedsMin = 1;\r\n  bedsMax = 50000;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddEditFacilityComponent>,\r\n    private formBuilder: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private store$: Store<ClinicalFacilityStoreState.ClinicalFacilityState>,\r\n    private authService: AuthenticationService,\r\n    private snackbar: SnackbarService,\r\n    private dialog : MatDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.spId = this.authService.getLoggedUser()?.spId;\r\n    this.clinicalFacilityData = this.data.clinicalFacilityData;\r\n    console.log(this.clinicalFacilityData)\r\n    this.setupCountryStateCity();\r\n    this.createFacilityForm();\r\n    this.doSubscriptionAddEditCF();\r\n  }\r\n\r\n  doSubscriptionAddEditCF() {\r\n    if (this.clinicalFacilityData === undefined) {\r\n      this.addCfSuccessSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.saveClinicalFacilitySuccess)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.dialogRef.close();\r\n          }\r\n        });\r\n      this.addCfFailureSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.saveClinicalFacilityFailure)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.snackbar.openSnackBar(data, \"top\", \"center\");\r\n          }\r\n        });\r\n    } else {\r\n      this.updateCfSuccessSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.updateClinicalFacilitySuccess)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.dialogRef.close();\r\n          }\r\n        });\r\n\r\n      this.updateCfFailureSubs = this.store$\r\n        .select(ClinicalFacilityStoreSelectors.updateClinicalFacilityFailure)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.snackbar.openSnackBar(data, \"top\", \"center\");\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  setupCountryStateCity() {\r\n    this.countryArray = csc.getAllCountries() || [];\r\n    if (this.clinicalFacilityData !== undefined) {\r\n      try {\r\n        this.selectedCountryData = this.countryArray.filter((data) => {\r\n          return data.name === this.clinicalFacilityData.country;\r\n        });\r\n        this.countryCode = this.selectedCountryData[0]?.isoCode;\r\n        this.statesOfCountry =\r\n          csc.getStatesOfCountry(this.selectedCountryData[0]?.isoCode) || [];\r\n        this.selectedStateData = this.statesOfCountry.filter((data) => {\r\n          return data.name === this.clinicalFacilityData.state;\r\n        });\r\n        this.stateCode = this.selectedStateData[0]?.isoCode;\r\n        this.citiesOfStateAndCountry =\r\n          csc.getCitiesOfState(this.countryCode, this.stateCode) || [];\r\n        this.selectedCityData = this.citiesOfStateAndCountry.filter((data) => {\r\n          return data.name === this.clinicalFacilityData.city;\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      // this.countryCode = this.countryArray[0]?.isoCode;\r\n      // this.statesOfCountry = csc.getStatesOfCountry(\r\n      //   this.countryArray[0]?.isoCode\r\n      // );\r\n      // this.stateCode = this.statesOfCountry[0]?.isoCode;\r\n      // this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n      //   this.countryArray[0]?.isoCode,\r\n      //   this.statesOfCountry[0]?.isoCode\r\n      // );\r\n    }\r\n  }\r\n\r\n  createFacilityForm() {\r\n    this.facilityForm = this.formBuilder.group({\r\n      user_id:[this.clinicalFacilityData !== undefined ? this.clinicalFacilityData.id :\"\"],\r\n      name: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.name\r\n          : \"\",\r\n        [Validators.required, Validators.pattern(\"^[a-zA-Z0-9]{1}[a-zA-Z0-9-_ ]*$\"),Validators.maxLength(64)],\r\n      ],\r\n      address: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.address\r\n          : \"\",\r\n        [Validators.required,Validators.pattern(\"^(?!\\\\s+$)[#&()./0-9a-zA-Z\\s ,-]+$\"),Validators.maxLength(128),Validators.minLength(2)],\r\n      ],\r\n      area: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.area\r\n          : \"\",\r\n        Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9_ ]*$\"),\r\n      ],\r\n      country: [\r\n        this.clinicalFacilityData === undefined\r\n          ? \"\"\r\n          : this.selectedCountryData[0]?.isoCode +\r\n            \"|\" +\r\n            this.selectedCountryData[0]?.name,\r\n            Validators.required\r\n      ],\r\n      state: [\r\n        this.clinicalFacilityData === undefined\r\n          ? \"\"\r\n          : this.selectedStateData[0]?.name || this.clinicalFacilityData?.state,\r\n        [Validators.pattern(\"^(?!\\\\s+$)[a-zA-ZÀ-ȕÀ-ÖØ-öø-ÿ-&' ]*$\")]\r\n      ],\r\n      city: [\r\n        this.clinicalFacilityData === undefined\r\n          ? \"\"\r\n          : this.selectedCityData[0]?.name || this.clinicalFacilityData.city,\r\n        [Validators.pattern(\"^(?!\\\\s+$)[a-zA-ZÀ-ȕÀ-ÖØ-öø-ÿ-&' ]*$\")],\r\n      ],\r\n      groupHospital: [this.clinicalFacilityData === undefined\r\n        ? false : this.clinicalFacilityData.groupHospital || false],\r\n      numberOfBeds: [this.clinicalFacilityData === undefined\r\n        ? null : this.clinicalFacilityData?.numberOfBeds, [Validators.required]],\r\n      firstName: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.firstName\r\n          : \"\",\r\n        [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n      ],\r\n      lastName: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.lastName\r\n          : \"\",\r\n        [Validators.required, Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"), Validators.maxLength(25)],\r\n      ],\r\n      email: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.email\r\n          : \"\",\r\n          [ Validators.email]\r\n      ],\r\n      phoneNo: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.phoneNo\r\n          : // ? this.clinicalFacilityData.phoneNo.substring(3)\r\n            // : \"\"\r\n            \"\", [_validatePhoneNumberInput.bind(this)],\r\n      ],\r\n      dataStorageMode: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.dataStorageMode\r\n          : \"archived\",\r\n      ],\r\n      multiFactorAuthEn: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.multiFactorAuthEn\r\n          : false,\r\n      ],\r\n      zipCode: [\r\n        this.clinicalFacilityData !== undefined\r\n          ? this.clinicalFacilityData.zipCode\r\n          : \"\",\r\n        [Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9]*$\"), Validators.minLength(3), Validators.maxLength(12)],\r\n      ],\r\n    },\r\n    //{ validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\r\n    );\r\n  }\r\n\r\n  charsOnly(control: string, event: KeyboardEvent) {\r\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\r\n    let key = event.key;\r\n    if (charsOnlyPattern.test(key)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.facilityForm.controls;\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  resetNumber() {\r\n    this.facilityForm.patchValue({\r\n      contact: {\r\n        number: undefined,\r\n        countryCode: CountryISO.India,\r\n      },\r\n    });\r\n  }\r\n\r\n  saveFacility() {\r\n    this.submitted = true;\r\n    console.log(this.facilityForm);\r\n    if (this.facilityForm.invalid) {\r\n      this.facilityForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.clinicalFacility = this.facilityForm.value;\r\n    console.log(this.clinicalFacility)\r\n    if(this.clinicalFacility.country.includes('|')){\r\n      this.clinicalFacility.country = this.clinicalFacility.country.split(\"|\")[1];\r\n    }\r\n    if(this.clinicalFacility.state.includes('|')){\r\n      this.clinicalFacility.state = this.clinicalFacility.state.split(\"|\")[1];\r\n    }\r\n    this.clinicalFacility.serviceproviderId = this.spId;\r\n    if(this.selectedCountryData[0]?.timezones?.length) {\r\n      this.clinicalFacility.timezone = this.selectedCountryData[0]?.timezones[0]?.zoneName;\r\n    }\r\n    if (\r\n      this.facilityForm.get(\"phoneNo\").value !== null &&\r\n      this.facilityForm.get(\"phoneNo\").value !== \"\"\r\n    ) {\r\n      const parsedValue = parsePhoneNumberFromString(this.facilityForm\r\n          .get(\"phoneNo\")\r\n          .value);\r\n      this.clinicalFacility.phoneNo = parsedValue.number.toString();\r\n    }\r\n\r\n    if (this.clinicalFacilityData === undefined) {\r\n      this.clinicalFacility.isActive = true;\r\n      this.clinicalFacility.createdBy = sessionStorage.getItem(\"user\");\r\n      this.clinicalFacility.createdById = sessionStorage.getItem(\"user_id\");\r\n      const cDialog = this.dialog.open(CautionBoxComponent,{\r\n        maxWidth: \"90vw\",\r\n        width: \"500px\",\r\n        backdropClass: \"backdropBackground\",\r\n        disableClose: true,\r\n        data :{\r\n          message_1 : \"clinical_facility.caution.add_facility_caution_1\",\r\n          message_2 : \"clinical_facility.caution.add_facility_caution_2\"\r\n        } \r\n      });\r\n      cDialog.afterClosed().subscribe((boolean)=>{\r\n        let confirmValue =  boolean;\r\n        if(confirmValue){\r\n          this.store$.dispatch(\r\n            new ClinicalFacilityStoreActions.SaveClinicalFacilityAction(\r\n              this.clinicalFacility\r\n            )\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"editing\");\r\n      this.clinicalFacility.isActive = this.clinicalFacilityData.isActive;\r\n      this.clinicalFacility.modifiedBy = sessionStorage.getItem(\"user\");\r\n      this.clinicalFacility.modifiedById = sessionStorage.getItem(\"user_id\");\r\n      this.clinicalFacility.id = this.clinicalFacilityData.id;\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.UpdateClinicalFacilityAction(\r\n          this.clinicalFacility\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  getStatesByCountry(event) {\r\n    try {\r\n      const domValue = event.value;\r\n      this.countryCode = domValue.split(\"|\")[0];\r\n      this.selectedCountry = domValue.split(\"|\")[1];\r\n      this.selectedCountryData = this.countryArray.filter((data) => {\r\n        return data.name === this.selectedCountry;\r\n      });\r\n      this.statesOfCountry = csc.getStatesOfCountry(this.countryCode);\r\n      if (this.statesOfCountry.length > 0) {\r\n        // this.facilityForm\r\n        //   .get(\"state\")\r\n        //   .patchValue(\r\n        //     this.statesOfCountry[0].isoCode + \"|\" + this.statesOfCountry[0].name\r\n        //   );\r\n        // this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n        //   this.countryCode.trim(),\r\n        //   this.statesOfCountry[0].isoCode\r\n        // );\r\n        // this.facilityForm\r\n        //   .get(\"city\")\r\n        //   .patchValue(this.citiesOfStateAndCountry[0].name);\r\n      } else {\r\n        this.noStatesFound = true;\r\n        this.citiesOfStateAndCountry = [];\r\n        this.facilityForm.get(\"state\").patchValue(\"\");\r\n        this.facilityForm.get(\"city\").patchValue(\"\");\r\n      }\r\n      console.log(this.facilityForm)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  getCityByStateAndCountry(event) {\r\n    this.selectedState = event.option.value;\r\n    this.stateCode = this.statesOfCountry.find(state => state.name === this.selectedState)?.isoCode || '';\r\n    this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n      this.countryCode,\r\n      this.stateCode\r\n    );\r\n    \r\n    if(this.citiesOfStateAndCountry.length > 0 ){\r\n      // this.facilityForm\r\n      // .get(\"city\")\r\n      // .patchValue(this.citiesOfStateAndCountry[0].name);\r\n       \r\n    }else{\r\n      this.facilityForm\r\n      .get(\"city\")\r\n      .patchValue(\"\");\r\n       \r\n    }\r\n    console.log(this.facilityForm)\r\n  }\r\n\r\n  getCountryValues(country) {\r\n    console.log(this.countryArray);\r\n    return country.isoCode + \"|\" + country.name;\r\n  }\r\n\r\n  getStateValues(state) {\r\n    return state.isoCode + \"|\" + state.name;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.doUnsubscribeAddEditCF();\r\n  }\r\n\r\n  doUnsubscribeAddEditCF() {\r\n    if (this.clinicalFacilityData === undefined) {\r\n      if (this.addCfSuccessSubs) this.addCfSuccessSubs.unsubscribe();\r\n      if (this.addCfFailureSubs) this.addCfFailureSubs.unsubscribe();\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterSaveClinicalFacilitySuccess()\r\n      );\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterSaveClinicalFacilityFailure()\r\n      );\r\n    } else {\r\n      if (this.updateCfSuccessSubs) this.updateCfSuccessSubs.unsubscribe();\r\n      if (this.updateCfFailureSubs) this.updateCfFailureSubs.unsubscribe();\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterUpdateClinicalFacilitySuccess()\r\n      );\r\n      this.store$.dispatch(\r\n        new ClinicalFacilityStoreActions.AfterUpdateClinicalFacilityFailure()\r\n      );\r\n    }\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) =>{\r\n    return this.facilityForm.controls[controlName].hasError(errorName);\r\n  }\r\n  filteredResults(items, key, searchTxt) {\r\n    if(!items || !items.length) return items;\r\n    if(!searchTxt || !searchTxt.length) return items;\r\n    return items.filter(item => {\r\n      return item[key].toString().toLowerCase().indexOf(searchTxt.toLowerCase()) > -1\r\n    });\r\n  }\r\n  stateChange(value) {\r\n    let selectedState = this.statesOfCountry.find(state => state.name.toUpperCase() == value.toUpperCase());\r\n    if(selectedState) {\r\n      this.citiesOfStateAndCountry = csc.getCitiesOfState(\r\n          this.countryCode,\r\n          selectedState?.isoCode\r\n      );\r\n    } else {\r\n      this.citiesOfStateAndCountry = [];\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title *ngIf=\"userData === undefined; else edit\">\n        {{ 'user-management.add_user.label_add_user' | translate }}\n    </h1>\n    <ng-template #edit>\n        <h1 mat-dialog-title>\n            {{ 'user-management.add_user.label_edit_user' | translate }}\n        </h1>\n    </ng-template>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n    <form [formGroup]=\"addUserForm\" class=\"dialog-form\" autocomplete=\"off\">\n        <div>\n            <div *ngIf=\"userData !== undefined\">\n                <mat-label for=\"facility-name\" [class.disabled]=\"userData\" class=\"matlabel\">\n                  {{ 'shared_label.label_id' | translate }}\n                </mat-label>\n                <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"userData\">\n                  <input matInput formControlName=\"user_id\" [readonly]=\"userData\"/>\n                </mat-form-field>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <mat-label for=\"sp-contact-person-fname\" [class.disabled]=\"userData\" class=\"matlabel\">{{ 'shared_label.label_first_name' | translate }}\n                        <span class=\"required-star\" *ngIf=\"userData === undefined\">*</span>\n                        <span class=\"required-star cannotEdit\" *ngIf=\"userData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n                    </mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"userData\" [ngClass]=\"addUserForm.get('firstName').hasError('pattern') && addUserForm.get('firstName').touched ? 'error-msg': ''\">\n                        <input matInput formControlName=\"firstName\" autocomplete=\"off\" [readonly]=\"userData\" (keypress)=\"charsOnly('firstName', $event)\" />\n                        <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\" >\n                            {{ 'error_message.err_first_name_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('firstName', 'mustCharsOnly') \">\n                            {{'error_message.err_first_name_char_only' |translate}}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('firstName','maxlength') && !hasError('firstName', 'mustCharsOnly') \" >\n                            {{'error_message.err_first_name_range' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                    <mat-label for=\"sp-contact-person-lname\" [class.disabled]=\"userData\" class=\"matlabel\">{{ 'shared_label.label_last_name' | translate }}\n                        <span class=\"required-star\" *ngIf=\"userData === undefined\">*</span>\n                        <span class=\"required-star cannotEdit\" *ngIf=\"userData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>\n                    </mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"userData\" [ngClass]=\"addUserForm.get('lastName').hasError('pattern') && addUserForm.get('lastName').touched ? 'error-msg': ''\" >\n                        <input matInput formControlName=\"lastName\" autocomplete=\"off\" [readonly]=\"userData\" (keypress)=\"charsOnly('lastName', $event)\" />\n                        <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\" >\n                            {{ 'error_message.err_last_name_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('lastName', 'mustCharsOnly') \">\n                            {{'error_message.err_last_name_char_only' |translate}}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('lastName','maxlength') && !hasError('lastName', 'mustCharsOnly')\" >\n                            {{'error_message.err_last_name_range' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n        <div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <mat-label for=\"sp-contact-email\" class=\"matlabel email-label\">{{ 'shared_label.label_email_id' | translate }}\n                        <span class=\"required-star\">**</span></mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n                        <input matInput formControlName=\"email\" autocomplete=\"off\" [maxlength]=\"320\" />\n                        <mat-error *ngIf=\"hasError('email','email')\">\n                            {{'error_message.err_invalid_email' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                    \n                    <mat-label class=\"matlabel\">{{ 'shared_label.label_phone_no' | translate }}\n                        <span class=\"required-star\">**</span>\n                    </mat-label>\n                    <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n                    <mat-error class=\"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\" >\n                        {{\"errors.err_invalid_phone_no\" | translate}}\n                    </mat-error>\n                </div>\n              \n            </div>\n            <mat-error class=\"email-error\" *ngIf=\"submitted && !addUserForm.getRawValue()?.email && !addUserForm.getRawValue()?.phoneNo\">\n                {{ \"manage_users_module.edituser.message1\" | translate }}\n            </mat-error>\n        </div>\n\n\n        <div>\n            <mat-label for=\"sp-contact-person-fname\" class=\"matlabel mt-3\">{{ 'user-management.add_user.label_select_role' | translate }}\n                <span class=\"required-star\">*</span>\n            </mat-label>\n        </div>\n\n\n\n        <div>\n            <div class=\"mt-2\">\n                <mat-radio-group formControlName=\"roles\" [ngClass]=\"{ 'is-invalid': submitted && f.roles.errors }\" aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\">\n                    <mat-radio-button class=\"d-flex flex-column mt-2\" *ngFor=\"let role of userRoles\" [value]=\"role.value\"\n                                      [disabled]=\"role.value === 'SPP'\">\n                        {{role.name}}\n                    </mat-radio-button>\n                </mat-radio-group>\n                <div *ngIf=\"submitted && f.roles.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.roles.errors.pattern\">\n                        Please select valid role !\n                    </div>\n                </div>\n                <mat-error class=\"my-1\" *ngIf=\"!addUserForm.getRawValue()?.roles && submitted\" >\n                    {{ 'error_message.err_role_required' | translate }}\n                </mat-error>\n            </div>\n        </div>\n        <div>\n            <div class=\"required-text mt-4\">\n                <span>* Mandatory </span>\n            </div>\n            <div class=\"email-phone-info-text mt-2\">\n                **Either Email ID or Phone No. is mandatory\n            </div>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<div mat-dialog-actions align=\"end\">\n    <button type=\"button\" color=\"warn\" mat-flat-button class=\"fill-btn\" (click)=\"onClose()\">\n\t\t{{ 'manage_users_module.cancel' | translate }}\n\t</button>\n    <button type=\"button\" color=\"primary\" mat-flat-button class=\"fill-btn\" (click)=\"saveUser()\">\n\t\t{{ 'manage_users_module.save' | translate }}\n\t</button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA, MatDialogRef , MatDialog} from \"@angular/material/dialog\";\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\nimport { SpinnerService } from \"src/app/shared/_services/spinner.service\";\nimport {User, UserErrors} from \"../../../interfaces/user.interface\";\nimport {\n  UserManagementStoreActions,\n  UserManagementStoreSelectors,\n  UserManagementStoreState,\n} from \"../../store/user-management\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Subscription } from \"rxjs\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\nimport { LSvalidators } from \"src/app/shared/lsValidators/lsvalidators\";\nimport { CautionBoxComponent } from \"../caution-box/caution-box.component\";\n\n@Component({\n  selector: \"app-add-edit-user-management\",\n  templateUrl: \"./add-edit-user-management.component.html\",\n  styleUrls: [\"./add-edit-user-management.component.scss\"],\n})\nexport class AddEditUserManagementComponent implements OnInit, OnDestroy {\n  addUserForm: FormGroup;\n  submitted: boolean;\n  // for country code\n  separateDialCode = false;\n  SearchCountryField = SearchCountryField;\n  TooltipLabel;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [\n    CountryISO.India,\n    CountryISO.UnitedStates,\n    CountryISO.SouthAfrica,\n  ];\n  validCountry = true;\n  user: User;\n  userData: User;\n  isUpdate: any;\n  userRoles = [{name: \"PHYSICIAN\", value: \"SPP\"}];\n  spId: string;\n  saveUserSuccessSub: Subscription;\n  saveUserFailureSub: Subscription;\n  updateUserSuccessSub: Subscription;\n  updateUserFailureSub: Subscription;\n  roles = [];\n\n  constructor(\n    private dialogRef: MatDialogRef<AddEditUserManagementComponent>,\n    private formBuilder: FormBuilder,\n    private spinnerService: SpinnerService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<UserManagementStoreState.UserManagementState>,\n    private authService: AuthenticationService,\n    private snackbar: SnackbarService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.spId = this.authService.getLoggedUser()?.spId;\n    this.userData = this.data.userData;\n    this.createUserForm();\n    this.doSubscriptionAddEditUser();\n    this.roles = this.authService.getRoles();\n    if(this.roles.indexOf('SPA') > -1) {\n      this.userRoles = [{name: \"SPA\", value: \"SPAC\"}, {name: \"PHYSICIAN\", value: \"SPP\"}];\n    }\n  }\n\n  doSubscriptionAddEditUser() {\n    if (this.userData === undefined) {\n      this.saveUserSuccessSub = this.store$\n        .select(UserManagementStoreSelectors.saveUserManagementSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n      this.saveUserFailureSub = this.store$\n        .select(UserManagementStoreSelectors.saveUserManagementFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    } else {\n      this.updateUserSuccessSub = this.store$\n        .select(UserManagementStoreSelectors.updateUserManagementSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.updateUserFailureSub = this.store$\n        .select(UserManagementStoreSelectors.updateUserManagementFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    }\n  }\n\n  createUserForm() {\n    this.addUserForm = this.formBuilder.group(\n      {\n        user_id:[this.userData !== undefined ? this.userData.id : \"\"],\n        firstName: [\n          this.userData !== undefined ? this.userData.firstName : \"\",\n          [\n            Validators.required,\n            LSvalidators.validatePatientName,\n            Validators.maxLength(25)\n            //Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9_ ]*$\"),\n          ],\n        ],\n        lastName: [\n          this.userData !== undefined ? this.userData.lastName : \"\",\n          [\n            Validators.required,\n            LSvalidators.validatePatientName,\n            Validators.maxLength(25)\n            //Validators.pattern(\"^(?!\\\\s+$)[a-zA-Z0-9_ ]*$\"),\n          ],\n        ],\n        phoneNo: [\n          this.userData !== undefined\n            ? this.userData?.phoneNo : \"\",\n          [_validatePhoneNumberInput.bind(this)]\n        ],\n        email: [\n          this.userData !== undefined ? this.userData.email : \"\",\n          [Validators.email]\n        ],\n        roles: [\n          this.userData !== undefined\n            ? this.userData.roles[0] : \"\",\n          Validators.required,\n        ],\n      },\n      { validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\n    );\n  }\n\n  charsOnly(control: string, event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n \n\n  get f() {\n    return this.addUserForm.controls;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  resetNumber() {\n    this.addUserForm.patchValue({\n      phoneNo: {\n        number: undefined,\n        countryCode: CountryISO.India,\n      },\n    });\n  }\n\n  saveUser() {\n    this.submitted = true;\n    if (this.addUserForm.invalid) {\n      this.addUserForm.markAllAsTouched();\n      return;\n    }\n\n    this.spinnerService.show();\n    this.user = this.addUserForm.value;\n    if(!Array.isArray(this.addUserForm.value.roles)) {\n      this.user.roles = [this.addUserForm.value.roles];\n    }\n    this.user.serviceProviderId = this.spId;\n\n    if (\n      this.addUserForm.get(\"phoneNo\").value !== null &&\n      this.addUserForm.get(\"phoneNo\").value !== \"\"\n    ) {\n      const parsedValue = parsePhoneNumberFromString(this.addUserForm\n          .get(\"phoneNo\")\n          .value);\n      this.user.phoneNo = parsedValue.number.toString();\n    }\n    let url = '';\n    if(this.user.roles[0] === 'SPP')\n      url = 'service-providers/users/physician';\n    else\n      url = 'service-providers/users/spac';\n\n    if (this.userData === undefined) {\n      this.user.isActive = true;\n      this.user.createdBy = sessionStorage.getItem(\"user\");\n      this.user.createdById = sessionStorage.getItem(\"user_id\");\n      console.log(this.user);\n      const cDialog = this.dialog.open(CautionBoxComponent,{\n        maxWidth: \"90vw\",\n        width: \"500px\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data:{\n          message_1 :\"clinical_facility.caution.add_user_caution\",\n          message_2 :\"clinical_facility.caution.add_user_caution_1\"\n        } \n      });\n      cDialog.afterClosed().subscribe((boolean)=>{\n        let confirmValue =  boolean;\n        if(confirmValue){\n          this.store$.dispatch(\n            new UserManagementStoreActions.SaveUserManagementAction(this.user, url)\n          );\n        }\n      });\n    } else {\n      this.user.modifiedBy = sessionStorage.getItem(\"user\");\n      this.user.modifiedById = sessionStorage.getItem(\"user_id\");\n      this.user.id = this.userData.id;\n      this.user.isActive = this.userData.isActive;\n      console.log(this.user);\n      this.store$.dispatch(\n        new UserManagementStoreActions.UpdateUserManagementAction(this.user, url)\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.doUnsubscriptionAddEditUser();\n  }\n\n  doUnsubscriptionAddEditUser() {\n    if (this.userData === undefined) {\n      if (this.saveUserSuccessSub) this.saveUserSuccessSub.unsubscribe();\n      if (this.saveUserFailureSub) this.saveUserFailureSub.unsubscribe();\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterSaveUserManagementSuccessAction()\n      );\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterSaveUserManagementFailureAction()\n      );\n    } else {\n      if (this.updateUserSuccessSub) this.updateUserSuccessSub.unsubscribe();\n      if (this.updateUserFailureSub) this.updateUserFailureSub.unsubscribe();\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterUpdateUserManagementSuccessAction()\n      );\n      this.store$.dispatch(\n        new UserManagementStoreActions.AfterUpdateUserManagementFailureAction()\n      );\n    }\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.addUserForm.controls[controlName].hasError(errorName);\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-caution-box',\n  templateUrl: './caution-box.component.html',\n  styleUrls: ['./caution-box.component.scss']\n})\nexport class CautionBoxComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<CautionBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { \n   \n  }\n\n  ngOnInit(): void {\n  }\n\n  submitYes(){\n    this.dialogRef.close(true);\n  }\n\n  submitNo(){\n    this.dialogRef.close(false);\n  }\n\n\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title>\n        {{'clinical_facility.caution.label_caution'|translate}}\n    </h1>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup discharge-dialog\">\n    <div class=\"dialog-form\">\n        <p>{{data.message_1 | translate}}</p>\n        <p>{{data.message_2 | translate}}</p>\n    </div>\n</mat-dialog-content>\n<div mat-dialog-actions>\n    <button mat-flat-button mat-dialog-close color=\"warn\" class=\"fill-btn\" (click)=\"submitNo()\">\n      {{ \"buttons.btn_cancel\" | translate }}\n    </button>\n    <button mat-flat-button color=\"primary\" (click)=\"submitYes()\" class=\"fill-btn\">\n      {{ \"active-patients-module.button.confirm\" | translate }}\n    </button>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { User } from \"../../../interfaces/user.interface\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Store } from \"@ngrx/store\";\nimport {\n  UserManagementStoreActions,\n  UserManagementStoreState,\n} from \"../../store/user-management/index\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-enable-disable\",\n  templateUrl: \"./enable-disable.component.html\",\n  styleUrls: [\"./enable-disable.component.scss\"],\n})\nexport class EnableDisableComponent implements OnInit {\n  userData: User;\n  mode: string;\n  constructor(\n    private dialogRef: MatDialogRef<EnableDisableComponent>,\n    private store$: Store<UserManagementStoreState.UserManagementState>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    this.userData = this.data.userData;\n    this.mode = this.data.mode;\n    console.log(this.userData);\n  }\n\n  onCancel() {\n    if (this.mode === \"DISABLE\") {\n      this.dialogRef.close(true);\n    } else {\n      this.dialogRef.close(false);\n    }\n  }\n\n  onConfirm() {\n    if (this.mode === \"DISABLE\") {\n      const url = environment.dataApiUrl + 'users/' + this.userData.id + '/disable';\n      this.store$.dispatch(\n        new UserManagementStoreActions.DisableUserAction(url, this.userData.id)\n      );\n      this.dialogRef.close(true);\n    } else {\n      const url = environment.dataApiUrl + 'users/'+this.userData.id + '/enable';\n      this.store$.dispatch(\n        new UserManagementStoreActions.EnableUserAction(url, this.userData.id)\n      );\n      this.dialogRef.close(false);\n    }\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ \"shared_label.active_inactive.label_are_you_sure\" | translate }}\n  </h1>\n  <button mat-button mat-dialog-close (click)=\"onCancel()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n  <div class=\"my-4\">\n    <label class=\"info-text\">\n      Are you sure you want to make this User {{ mode }}?\n      <!--                All the Admins created by them will also become INACTIVE.-->\n    </label>\n  </div>\n</mat-dialog-content>\n<div mat-dialog-actions align=\"end\">\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"warn\" (click)=\"onCancel()\">\n    Cancel\n  </button>\n  <button mat-flat-button type=\"button\" class=\"fill-btn\" color=\"primary\" (click)=\"onConfirm()\">\n    Confirm\n  </button>\n</div>","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ clinicalFacilityData[\"id\"] }} &nbsp;|&nbsp;\n    {{ \"clinical_facility.manage_admin_cfa.label_cfa_admin\" | translate }}\n     {{ \"clinical_facility.manage_admin_cfa.for\" | translate }}\n     {{ clinicalFacilityName }}\n  </h1>\n  <button mat-button mat-dialog-close class=\"me-3\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup p-0\">\n  <div class=\"container-fluid\">\n    <app-data-table-manage-admin class=\"manage-admin-table custom-table\"\n      [endUrl]=\"endUrl\"\n      (addAdminCallBack)=\"openAddAdminDialog()\"\n      (editCallBack)=\"openEditAdminDialog($event)\"\n       (sortChange) = \"onSortChange($event)\"\n      source=\"CFA\"\n    ></app-data-table-manage-admin>\n    <app-data-table-cloned-view *ngIf=\"adminClone?.length\" class=\"manage-admin-table manage-cloneview-table custom-table\"\n                                [adminUsers]=\"adminClone\"></app-data-table-cloned-view>\n  </div>\n</mat-dialog-content>\n","import { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { DataTableManageAdminComponent } from \"../../../shared/data-table-manage-admin/data-table-manage-admin.component\";\nimport { ClinicalFacility } from \"../../clinical-facility-management/clinical-facility.interface\";\nimport { AddEditCfaComponent } from \"../add-edit-cfa/add-edit-cfa.component\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from \"@angular/material/dialog\";\nimport { environment } from \"src/environments/environment\";\nimport {ClinicalFacilityService} from \"../../service/clinical-facility.service\";\nimport {Store} from \"@ngrx/store\";\nimport {\n  ClinicalFacilityStoreActions,\n  ClinicalFacilityStoreSelectors,\n  ClinicalFacilityStoreState\n} from \"../../store/clinical-facility-management\";\n\n@Component({\n  selector: \"app-manage-cf-admin\",\n  templateUrl: \"./manage-cf-admin.component.html\",\n  styleUrls: [\"./manage-cf-admin.component.scss\"],\n})\nexport class ManageCfAdminComponent implements OnInit {\n  loadPage: boolean;\n  clinicalFacilityData: ClinicalFacility;\n  endUrl: string;\n  clinicalFacilityName;\n  adminClone = [];\n  adminCloneCopy = [];\n\n  @ViewChild(DataTableManageAdminComponent, { static: false })\n  dataTableManageAdminComponent: DataTableManageAdminComponent;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCfAdminComponent>,\n    private dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<ClinicalFacilityStoreState.ClinicalFacilityState>\n  ) {}\n\n  ngOnInit() {\n    this.clinicalFacilityData = this.data.clinicalFacilityData || {};\n    this.clinicalFacilityName = this.clinicalFacilityData?.name || \"\";\n    this.endUrl = environment.dataApiUrl + 'clinical-facilities/'+ \n      this.clinicalFacilityData?.id +'/users/cfa'\n    this.getAdminCloneUsers();\n    this.store$.select(\n        ClinicalFacilityStoreSelectors.getClinicalFacilityAdminClone\n    ).subscribe(users => {\n      this.adminClone = users.map(x => {\n        return {\n          ...x,\n          adminName: `${x.firstName} ${x.lastName}`,\n        };\n      });\n      this.adminCloneCopy = [...this.adminClone];\n\n    });\n  }\n\n  openAddAdminDialog() {\n    this.dialog.open(AddEditCfaComponent, {\n      width: \"802px\",\n      maxWidth: \"95vw\",\n      data: { cfAdmin: undefined, cfId: this.clinicalFacilityData?.id },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  openEditAdminDialog(data) {\n    this.dialog.open(AddEditCfaComponent, {\n      width: \"802px\",\n      maxWidth: \"95vw\",\n      data: { cfAdmin: data, cfId: this.clinicalFacilityData?.id },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  getAdminCloneUsers() {\n  this.store$.dispatch(\n      new ClinicalFacilityStoreActions.LoadFacilityAdminCloneRequestAction({cfId: this.clinicalFacilityData?.id})\n  );\n\n  }\n  onClose() {\n    this.dialogRef.close();\n  }\n  onSortChange(sortObject) {\n    let sort = JSON.parse(sortObject);\n    if (sort.direction === 'desc') {\n      this.adminClone = this.adminClone.sort((a, b) => {\n        if (a[sort.active] > b[sort.active]) return -1;\n        else if (a[sort.active] < b[sort.active]) return 1;\n        else return 0;\n      });\n    } else if (sort.direction === 'asc') {\n      this.adminClone = this.adminClone.sort((a, b) => {\n        if (a[sort.active] > b[sort.active]) return 1;\n        else if (a[sort.active] < b[sort.active]) return -1;\n        else return 0;\n      });\n    } else {\n      this.adminClone = [...this.adminCloneCopy];\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { UserManagementComponent } from \"./user-management/user-management.component\";\nimport { ClinicalFacilityManagementComponent } from \"./clinical-facility-management/clinical-facility-management.component\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { RootComponent } from \"../shared/root/root.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: RootComponent,\n    children: [\n      {\n        path: \"user-management\",\n        component: UserManagementComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [\"SPA\", \"SPAC\"] },\n      },\n      {\n        path: \"clinical-facility-management\",\n        component: ClinicalFacilityManagementComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [\"SPA\", \"SPAC\"] },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), MatToolbarModule],\n  exports: [RouterModule],\n})\nexport class ServiceProviderAdminRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ServiceProviderAdminRoutingModule } from \"./service-provider-admin-routing.module\";\nimport { UserManagementComponent } from \"./user-management/user-management.component\";\nimport { SortModule } from \"../core/directives/sort.module\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgxIntlTelInputModule } from \"ngx-intl-tel-input\";\nimport { ClinicalFacilityManagementComponent } from \"./clinical-facility-management/clinical-facility-management.component\";\nimport { AddEditFacilityComponent } from \"./dialog/add-edit-facility/add-edit-facility.component\";\nimport { ManageCfAdminComponent } from \"./dialog/manage-cf-admin/manage-cf-admin.component\";\nimport { InactiveActiveComponent } from \"../shared/dialogs/inactive-active/inactive-active.component\";\nimport { DialogsModule } from \"../dialogs/dialogs.module\";\nimport { AddEditCfaComponent } from \"./dialog/add-edit-cfa/add-edit-cfa.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { AddEditUserManagementComponent } from \"./dialog/add-edit-user-management/add-edit-user-management.component\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromClinicalFacilityReducer from \"./store/clinical-facility-management/clinical-facility-management.reducer\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { ClinicalFacilityEffects } from \"./store/clinical-facility-management/clinical-facility-management.effects\";\nimport * as fromUserManagementReducer from \"./store/user-management/user-management.reducer\";\nimport { UserManagementEffects } from \"./store/user-management/user-management.effects\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\nimport { EnableDisableComponent } from \"./dialog/enable-disable/enable-disable.component\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { CautionBoxComponent } from './dialog/caution-box/caution-box.component';\n\n@NgModule({\n  declarations: [\n    UserManagementComponent,\n    ClinicalFacilityManagementComponent,\n    AddEditFacilityComponent,\n    ManageCfAdminComponent,\n    AddEditUserManagementComponent,\n    AddEditCfaComponent,\n    EnableDisableComponent,\n    CautionBoxComponent,\n  ],\n  imports: [\n    CommonModule,\n    ServiceProviderAdminRoutingModule,\n    SortModule,\n    MatIconModule,\n    MatDialogModule,\n    SharedModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    NgxIntlTelInputModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    DialogsModule,\n    MatRadioModule,\n    MatTableModule,\n    MatSortModule,\n    StoreModule.forFeature(\n      fromClinicalFacilityReducer.clinicalFacilityFeatureKey,\n      fromClinicalFacilityReducer.clinicalFacilityReducer\n    ),\n    StoreModule.forFeature(\n      fromUserManagementReducer.userManagementFeatureKey,\n      fromUserManagementReducer.userManagementReducer\n    ),\n    EffectsModule.forFeature([ClinicalFacilityEffects, UserManagementEffects]),\n    MatSelectModule,\n    I18nModule,\n    LifeSignalsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n  ],\n  entryComponents: [\n    AddEditUserManagementComponent,\n    AddEditFacilityComponent,\n    ManageCfAdminComponent,\n    InactiveActiveComponent,\n    AddEditCfaComponent,\n    EnableDisableComponent,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: KeycloakBearerInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class ServiceProviderAdminModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  AddEditClinicalFacilityResponse,\n  ClinicalFacilityResponse,\n} from \"../clinical-facility-management/clinical-facility.interface\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ClinicalFacilityService {\n  spId: string;\n\n  constructor(\n    private httpClient: HttpClient,\n    private authService: AuthenticationService\n  ) {\n    this.spId = this.authService.getLoggedUser().spId;\n  }\n\n  getClinicalFacilityList() {\n    return this.httpClient\n      .get<ClinicalFacilityResponse>(\n        environment.dataApiUrl + 'service-providers/' + this.spId + '/clinical-facilities'\n      );\n  }\n  getClinicalFacilityAdminCloneUsers(cfId) {\n    return this.httpClient\n        .get<ClinicalFacilityResponse>(\n            environment.dataApiUrl + 'clinical-facilities/'+ cfId+'/users/cfac'\n        );\n  }\n\n  addClinicalFacility(requestBody) {\n    return this.httpClient\n      .post<AddEditClinicalFacilityResponse>(\n        environment.dataApiUrl + 'clinical-facilities/',\n        requestBody\n      );\n  }\n\n  updateClinicalFacility(requestBody) {\n    return this.httpClient\n      .put<AddEditClinicalFacilityResponse>(\n        environment.dataApiUrl + 'clinical-facilities/',\n        requestBody\n      );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  AddEditUserResponse,\n  UserResponse,\n} from \"../../interfaces/user.interface\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserManagementService {\n  spId: string;\n\n  constructor(\n    private httpClient: HttpClient,\n    private authService: AuthenticationService\n  ) {\n    this.spId = this.authService.getLoggedUser().spId;\n  }\n\n  getUserList() {\n    return this.httpClient\n      .get<UserResponse>(\n        environment.dataApiUrl + 'service-providers/' + this.spId + '/users'\n      );\n  }\n\n  addUser(requestBody, url) {\n    return this.httpClient\n      .post<AddEditUserResponse>(\n        environment.dataApiUrl + url,\n        requestBody\n      );\n  }\n\n  updateUser(requestBody, url) {\n    return this.httpClient\n      .put<AddEditUserResponse>(\n        environment.dataApiUrl + url,\n        requestBody\n      );\n  }\n\n  enableDisable(endUrl, requestBody) {\n    return this.httpClient\n      .post<any>(endUrl, requestBody);\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport { TableAPIResponse } from \"src/app/models/api.model\";\nimport { ClinicalFacility, ClinicalFacilityResponse } from \"../../clinical-facility-management/clinical-facility.interface\";\n\nexport enum CfActionTypes {\n  LOAD_CLINICAL_FACILITY_ACTION = \"[CLINICALFACILITY] Load Clinical Facility Request\",\n  LOAD_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] Load Clinical Facility Success\",\n  LOAD_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] Load Clinical Facility Failure\",\n  SAVE_CLINICAL_FACILITY_ACTION = \"[CLINICALFACILITY] Save Clinical Facility\",\n  SAVE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] Save Clinical Facility Success\",\n  AFTER_SAVE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] After Save Clinical Facility Success\",\n  SAVE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] Save Clinical Facility Failure\",\n  AFTER_SAVE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] After Save Clinical Facility Failure\",\n  UPDATE_CLINICAL_FACILITY_ACTION = \"[CLINICALFACILITY] Update Clinical Facility\",\n  UPDATE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] Update Clinical Facility Success\",\n  AFTER_UPDATE_CLINICAL_FACILITY_SUCCESS = \"[CLINICALFACILITY] After Update Clinical Facility Success\",\n  UPDATE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] Update Clinical Facility Failure\",\n  AFTER_UPDATE_CLINICAL_FACILITY_FAILURE = \"[CLINICALFACILITY] After Update Clinical Facility Failure\",\n  LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION = \"[CLINICALFACILITY] Load Clinical Facility Admin Clone Request\",\n  LOAD_CLINICAL_FACILITY_ADMIN_CLONE_SUCCESS = \"[CLINICALFACILITY] Load Clinical Facility Admin Clone Success\",\n  LOAD_CLINICAL_FACILITY_ADMIN_CLONE_FAILURE = \"[CLINICALFACILITY] Load Clinical Facility Admin Clone Failure\",\n}\n\nexport class LoadClinicalFacilityRequestAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ACTION;\n}\n\nexport class LoadClinicalFacilitySuccessAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_SUCCESS;\n  constructor(public payload: ClinicalFacilityResponse) {}\n}\n\nexport class LoadClinicalFacilityFailureAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class SaveClinicalFacilityAction implements Action {\n  readonly type = CfActionTypes.SAVE_CLINICAL_FACILITY_ACTION;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class SaveClinicalFacilitySuccessAction implements Action {\n  readonly type = CfActionTypes.SAVE_CLINICAL_FACILITY_SUCCESS;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class SaveClinicalFacilityFailureAction implements Action {\n  readonly type = CfActionTypes.SAVE_CLINICAL_FACILITY_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateClinicalFacilityAction implements Action {\n  readonly type = CfActionTypes.UPDATE_CLINICAL_FACILITY_ACTION;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class UpdateClinicalFacilitySuccessAction implements Action {\n  readonly type = CfActionTypes.UPDATE_CLINICAL_FACILITY_SUCCESS;\n  constructor(public payload: ClinicalFacility) {}\n}\n\nexport class UpdateClinicalFacilityFailureAction implements Action {\n  readonly type = CfActionTypes.UPDATE_CLINICAL_FACILITY_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class AfterSaveClinicalFacilitySuccess implements Action {\n  readonly type = CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterSaveClinicalFacilityFailure implements Action {\n  readonly type = CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_FAILURE;\n  constructor() {}\n}\n\nexport class AfterUpdateClinicalFacilitySuccess implements Action {\n  readonly type = CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterUpdateClinicalFacilityFailure implements Action {\n  readonly type = CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_FAILURE;\n  constructor() {}\n}\nexport class LoadFacilityAdminCloneRequestAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION;\n  constructor(public payload: {cfId: string}) {}\n}\n\nexport class LoadFacilityAdminCloneFailureAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_FAILURE;\n  constructor(public payload: { error: string }) {}\n}\nexport class LoadFacilityAdminCloneSuccessAction implements Action {\n  readonly type = CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_SUCCESS;\n  constructor(public payload: { data:  any}) {}\n}\n\nexport type ClinicalFacilityActions =\n  | LoadClinicalFacilityRequestAction\n  | LoadClinicalFacilitySuccessAction\n  | LoadClinicalFacilityFailureAction\n  | SaveClinicalFacilityAction\n  | SaveClinicalFacilitySuccessAction\n  | SaveClinicalFacilityFailureAction\n  | UpdateClinicalFacilityAction\n  | UpdateClinicalFacilitySuccessAction\n  | UpdateClinicalFacilityFailureAction\n  | AfterSaveClinicalFacilitySuccess\n  | AfterSaveClinicalFacilityFailure\n  | AfterUpdateClinicalFacilitySuccess\n  | AfterUpdateClinicalFacilityFailure\n  | LoadFacilityAdminCloneRequestAction\n  | LoadFacilityAdminCloneFailureAction\n  | LoadFacilityAdminCloneSuccessAction ;\n","import { Injectable } from \"@angular/core\";\nimport {Actions, createEffect, Effect, ofType} from \"@ngrx/effects\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as ClinicalFacilityActions from \"./clinical-facility-management.actions\";\nimport {catchError, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport { of as observableOf } from \"rxjs\";\nimport { ClinicalFacilityService } from \"../../service/clinical-facility.service\";\nimport {\n  LoadClinicalFacilityFailureAction,\n  LoadClinicalFacilitySuccessAction,\n  SaveClinicalFacilityFailureAction,\n  SaveClinicalFacilitySuccessAction,\n  UpdateClinicalFacilityFailureAction,\n  UpdateClinicalFacilitySuccessAction,\n} from \"./clinical-facility-management.actions\";\n\n@Injectable()\nexport class ClinicalFacilityEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private clinicalFacilityService: ClinicalFacilityService\n  ) {}\n\n  loadClinicalFacility = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ClinicalFacilityActions.LoadClinicalFacilityRequestAction>(\n        ClinicalFacilityActions.CfActionTypes.LOAD_CLINICAL_FACILITY_ACTION\n      ),\n      switchMap(\n        (action: ClinicalFacilityActions.LoadClinicalFacilityRequestAction) => {\n          return this.clinicalFacilityService.getClinicalFacilityList().pipe(\n            map(\n              (loadCFRes) =>\n                new LoadClinicalFacilitySuccessAction(loadCFRes)\n            ),\n            catchError((error) =>\n              observableOf(new LoadClinicalFacilityFailureAction(error))\n            )\n          );\n        }\n      )\n    );\n  });\n\n  saveClinicalFacility = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ClinicalFacilityActions.SaveClinicalFacilityAction>(\n        ClinicalFacilityActions.CfActionTypes.SAVE_CLINICAL_FACILITY_ACTION\n      ),\n      switchMap(\n        (\n          addClinicalFacility: ClinicalFacilityActions.SaveClinicalFacilityAction\n        ) => {\n          return this.clinicalFacilityService\n            .addClinicalFacility(addClinicalFacility.payload)\n            .pipe(\n              map(\n                (addAdminRes) =>\n                  new SaveClinicalFacilitySuccessAction(addAdminRes.data)\n              ),\n              catchError((error) =>\n                observableOf(new SaveClinicalFacilityFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n\n  updateClinicalFacility = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ClinicalFacilityActions.UpdateClinicalFacilityAction>(\n        ClinicalFacilityActions.CfActionTypes.UPDATE_CLINICAL_FACILITY_ACTION\n      ),\n      switchMap(\n        (\n          updateClinicalFacility: ClinicalFacilityActions.UpdateClinicalFacilityAction\n        ) => {\n          return this.clinicalFacilityService\n            .updateClinicalFacility(updateClinicalFacility.payload)\n            .pipe(\n              map(\n                (updateClinicalFacilityRes) =>\n                  new UpdateClinicalFacilitySuccessAction(\n                    updateClinicalFacilityRes.data\n                  )\n              ),\n              catchError((error) =>\n                observableOf(new UpdateClinicalFacilityFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n  @Effect()\n  loadAdminCloneUsersRequestEffect$ = this.actions$.pipe(\n      ofType<ClinicalFacilityActions.LoadFacilityAdminCloneRequestAction>(\n          ClinicalFacilityActions.CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION\n      ),\n      mergeMap((action) =>\n          this.clinicalFacilityService.getClinicalFacilityAdminCloneUsers(action.payload.cfId).pipe(\n              map((data) => new ClinicalFacilityActions.LoadFacilityAdminCloneSuccessAction({ data })),\n              catchError((error) =>\n                  observableOf(\n                      new ClinicalFacilityActions.LoadFacilityAdminCloneFailureAction({ error })\n                  )\n              )\n          )\n      )\n  );\n}\n","import {\n  CfActionTypes,\n  ClinicalFacilityActions,\n} from \"./clinical-facility-management.actions\";\nimport { ClinicalFacility } from \"../../clinical-facility-management/clinical-facility.interface\";\nimport { TableState } from \"src/app/life-signals/_models/ls-column.model\";\n\nexport interface ClinicalFacilityState {\n  CLINICAL_FACILITY_DATA: ClinicalFacility[];\n  error: string;\n  save_cf_success: ClinicalFacility;\n  save_cf_error: string;\n  total: number;\n  tableState: string;\n  CLINICAL_FACILITY_ADMIN_CLONE: any[]\n}\n\nconst initialState: ClinicalFacilityState = {\n  CLINICAL_FACILITY_DATA: [],\n  error: \"\",\n  save_cf_success: null,\n  save_cf_error: \"\",\n  total: 0,\n  tableState: TableState.DEFAULT,\n  CLINICAL_FACILITY_ADMIN_CLONE: []\n};\n\nexport const clinicalFacilityFeatureKey = \"clinicalfacility\";\n\nexport function clinicalFacilityReducer(\n  state: ClinicalFacilityState = initialState,\n  action: ClinicalFacilityActions\n) {\n  switch (action.type) {\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ACTION:\n      return {\n        ...state,\n        CLINICAL_FACILITY_DATA: [],\n        tableState: TableState.LOADING\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        CLINICAL_FACILITY_DATA: action.payload.data,\n        total: action.payload.data.length,\n        tableState: TableState.SUCCESS\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        CLINICAL_FACILITY_DATA: [],\n        tableState: TableState.FAILURE,\n        total: 0\n      };\n\n    case CfActionTypes.SAVE_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        save_cf_success: action.payload,\n        save_cf_error: \"\",\n        CLINICAL_FACILITY_DATA: [\n          ...state?.CLINICAL_FACILITY_DATA,\n          action.payload,\n        ],\n      };\n\n    case CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        save_cf_success: null,\n        save_cf_error: \"\",\n      };\n\n    case CfActionTypes.SAVE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: action.payload,\n      };\n\n    case CfActionTypes.AFTER_SAVE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: \"\",\n        save_cf_success: null,\n      };\n\n    case CfActionTypes.UPDATE_CLINICAL_FACILITY_SUCCESS:\n      const updatedCfData = state?.CLINICAL_FACILITY_DATA.map((cfData) => {\n        return cfData.id === action.payload.id ? action.payload : cfData;\n      });\n\n      return {\n        ...state,\n        save_cf_error: \"\",\n        error: \"\",\n        save_cf_success: action.payload,\n        CLINICAL_FACILITY_DATA: updatedCfData,\n      };\n\n    case CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_SUCCESS:\n      return {\n        ...state,\n        save_cf_success: null,\n        save_cf_error: \"\",\n      };\n\n    case CfActionTypes.UPDATE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: action.payload,\n      };\n\n    case CfActionTypes.AFTER_UPDATE_CLINICAL_FACILITY_FAILURE:\n      return {\n        ...state,\n        save_cf_error: \"\",\n        save_cf_success: null,\n      };\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_ACTION:\n      return {\n        ...state,\n        CLINICAL_FACILITY_ADMIN_CLONE: [],\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_SUCCESS:\n      return {\n        ...state,\n        CLINICAL_FACILITY_ADMIN_CLONE: action.payload.data.data,\n      };\n\n    case CfActionTypes.LOAD_CLINICAL_FACILITY_ADMIN_CLONE_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  clinicalFacilityFeatureKey,\n  ClinicalFacilityState,\n} from \"./clinical-facility-management.reducer\";\n\nconst getClinicalFacilityState = createFeatureSelector<ClinicalFacilityState>(\n  clinicalFacilityFeatureKey\n);\n\nexport const selectClinicalFacilityList = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state\n);\n\nexport const selectClinicalFacilityError = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.error\n);\n\nexport const saveClinicalFacilitySuccess = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_success\n);\n\nexport const saveClinicalFacilityFailure = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_error\n);\n\nexport const updateClinicalFacilitySuccess = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_success\n);\n\nexport const updateClinicalFacilityFailure = createSelector(\n  getClinicalFacilityState,\n  (state: ClinicalFacilityState) => state?.save_cf_error\n);\nexport const getClinicalFacilityAdminClone = createSelector(\n    getClinicalFacilityState,\n    (state: ClinicalFacilityState) => state?.CLINICAL_FACILITY_ADMIN_CLONE\n);\n","import { Action } from \"@ngrx/store\";\nimport { User } from \"../../../interfaces/user.interface\";\n\nexport enum UserManagementActionTypes {\n  LOAD_USER_MANAGEMENT_ACTION = \"[USERMANAGEMENT] Load User Management Request\",\n  LOAD_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] Load User Management Success\",\n  LOAD_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] Load User Management Failure\",\n  SAVE_USER_MANAGEMENT_ACTION = \"[USERMANAGEMENT] Save User Management\",\n  SAVE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] Save User Management Success\",\n  AFTER_SAVE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] After Save User Management Success\",\n  SAVE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] Save User Management Failure\",\n  AFTER_SAVE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] After Save User Management Failure\",\n  UPDATE_USER_MANAGEMENT_ACTION = \"[USERMANAGEMENT] Update User Management\",\n  UPDATE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] Update User Management Success\",\n  AFTER_UPDATE_USER_MANAGEMENT_SUCCESS = \"[USERMANAGEMENT] After Update User Management Success\",\n  UPDATE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] Update User Management Failure\",\n  AFTER_UPDATE_USER_MANAGEMENT_FAILURE = \"[USERMANAGEMENT] After Update User Management Failure\",\n  DISABLE_USER = \"[USERMANAGEMENT] Disable User\",\n  DISABLE_USER_SUCCESS = \"[USERMANAGEMENT] Disable User Success\",\n  DISABLE_USER_FAILURE = \"[USERMANAGEMENT] Disable User Failure\",\n  ENABLE_USER = \"[USERMANAGEMENT] Enable User\",\n  ENABLE_USER_SUCCESS = \"[USERMANAGEMENT] Enable User Success\",\n  ENABLE_USER_FAILURE = \"[USERMANAGEMENT] Enable User Failure\",\n}\n\nexport class LoadUserManagementRequestAction implements Action {\n  readonly type = UserManagementActionTypes.LOAD_USER_MANAGEMENT_ACTION;\n}\n\nexport class LoadUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.LOAD_USER_MANAGEMENT_SUCCESS;\n  constructor(public payload: User[]) {}\n}\n\nexport class LoadUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.LOAD_USER_MANAGEMENT_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class SaveUserManagementAction implements Action {\n  readonly type = UserManagementActionTypes.SAVE_USER_MANAGEMENT_ACTION;\n  constructor(public payload: User, public Url: string) {}\n}\n\nexport class SaveUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.SAVE_USER_MANAGEMENT_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class SaveUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.SAVE_USER_MANAGEMENT_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class UpdateUserManagementAction implements Action {\n  readonly type = UserManagementActionTypes.UPDATE_USER_MANAGEMENT_ACTION;\n  constructor(public payload: User,  public Url: string) {}\n}\n\nexport class UpdateUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.UPDATE_USER_MANAGEMENT_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UpdateUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.UPDATE_USER_MANAGEMENT_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class DisableUserAction implements Action {\n  readonly type = UserManagementActionTypes.DISABLE_USER;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class DisableUserSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.DISABLE_USER_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class DisableUserFailureAction implements Action {\n  readonly type = UserManagementActionTypes.DISABLE_USER_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class EnableUserAction implements Action {\n  readonly type = UserManagementActionTypes.ENABLE_USER;\n  constructor(public endUrl: string, public id: string) {}\n}\n\nexport class EnableUserSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.ENABLE_USER_SUCCESS;\n  constructor(public payload: string) {}\n}\n\nexport class EnableUserFailureAction implements Action {\n  readonly type = UserManagementActionTypes.ENABLE_USER_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class AfterSaveUserManagementSuccessAction implements Action {\n  readonly type = UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterSaveUserManagementFailureAction implements Action {\n  readonly type = UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_FAILURE;\n  constructor() {}\n}\n\nexport class AfterUpdateUserManagementSuccessAction implements Action {\n  readonly type =\n    UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterUpdateUserManagementFailureAction implements Action {\n  readonly type =\n    UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_FAILURE;\n  constructor() {}\n}\n\nexport type UserManagementActions =\n  | LoadUserManagementRequestAction\n  | LoadUserManagementSuccessAction\n  | LoadUserManagementFailureAction\n  | SaveUserManagementAction\n  | SaveUserManagementSuccessAction\n  | SaveUserManagementFailureAction\n  | UpdateUserManagementAction\n  | UpdateUserManagementSuccessAction\n  | UpdateUserManagementFailureAction\n  | DisableUserAction\n  | DisableUserSuccessAction\n  | DisableUserFailureAction\n  | EnableUserAction\n  | EnableUserSuccessAction\n  | EnableUserFailureAction\n  | AfterSaveUserManagementSuccessAction\n  | AfterSaveUserManagementFailureAction\n  | AfterUpdateUserManagementSuccessAction\n  | AfterUpdateUserManagementFailureAction;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as UserManagementActions from \"./user-management.actions\";\nimport { catchError, map, switchMap } from \"rxjs/operators\";\nimport { of as observableOf } from \"rxjs\";\nimport { UserManagementService } from \"../../service/user-management.service\";\nimport {\n  DisableUserFailureAction,\n  DisableUserSuccessAction,\n  EnableUserFailureAction,\n  EnableUserSuccessAction,\n  LoadUserManagementFailureAction,\n  LoadUserManagementSuccessAction,\n  SaveUserManagementFailureAction,\n  SaveUserManagementSuccessAction,\n  UpdateUserManagementFailureAction,\n  UpdateUserManagementSuccessAction,\n} from \"./user-management.actions\";\n\n@Injectable()\nexport class UserManagementEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private userManagementService: UserManagementService\n  ) {}\n\n  loadUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.LoadUserManagementRequestAction>(\n        UserManagementActions.UserManagementActionTypes\n          .LOAD_USER_MANAGEMENT_ACTION\n      ),\n      switchMap(\n        (action: UserManagementActions.LoadUserManagementRequestAction) => {\n          return this.userManagementService.getUserList().pipe(\n            map(\n              (loadUserRes) =>\n                new LoadUserManagementSuccessAction(loadUserRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new LoadUserManagementFailureAction(error))\n            )\n          );\n        }\n      )\n    );\n  });\n\n  saveUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.SaveUserManagementAction>(\n        UserManagementActions.UserManagementActionTypes\n          .SAVE_USER_MANAGEMENT_ACTION\n      ),\n      switchMap((addUser: UserManagementActions.SaveUserManagementAction) => {\n        return this.userManagementService.addUser(addUser.payload, addUser.Url).pipe(\n          map(\n            (addUserRes) => new SaveUserManagementSuccessAction(addUserRes.data)\n          ),\n          catchError((error) =>\n            observableOf(new SaveUserManagementFailureAction(error))\n          )\n        );\n      })\n    );\n  });\n\n  updateUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.UpdateUserManagementAction>(\n        UserManagementActions.UserManagementActionTypes\n          .UPDATE_USER_MANAGEMENT_ACTION\n      ),\n      switchMap(\n        (updateUser: UserManagementActions.UpdateUserManagementAction) => {\n          return this.userManagementService.updateUser(updateUser.payload, updateUser.Url).pipe(\n            map(\n              (updateUserRes) =>\n                new UpdateUserManagementSuccessAction(updateUserRes.data)\n            ),\n            catchError((error) =>\n              observableOf(new UpdateUserManagementFailureAction(error))\n            )\n          );\n        }\n      )\n    );\n  });\n\n  disableUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.DisableUserAction>(\n        UserManagementActions.UserManagementActionTypes.DISABLE_USER\n      ),\n      switchMap((disableUser: UserManagementActions.DisableUserAction) => {\n        return this.userManagementService\n          .enableDisable(disableUser.endUrl, {})\n          .pipe(\n            map(\n              (disableUserRes) => new DisableUserSuccessAction(disableUser.id)\n            ),\n            catchError((error) =>\n              observableOf(new DisableUserFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n\n  enableUser = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<UserManagementActions.EnableUserAction>(\n        UserManagementActions.UserManagementActionTypes.ENABLE_USER\n      ),\n      switchMap((enableUser: UserManagementActions.EnableUserAction) => {\n        return this.userManagementService\n          .enableDisable(enableUser.endUrl, {})\n          .pipe(\n            map((enableUserRes) => new EnableUserSuccessAction(enableUser.id)),\n            catchError((error) =>\n              observableOf(new EnableUserFailureAction(error))\n            )\n          );\n      })\n    );\n  });\n}\n","import {User} from \"../../../interfaces/user.interface\";\nimport {UserManagementActions, UserManagementActionTypes,} from \"./user-management.actions\";\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\n\nexport interface UserManagementState {\n  USER_MANAGEMENT_DATA: User[];\n  error: string;\n  save_user_success: User;\n  save_user_error: any;\n  tableState: string;\n}\n\nconst initialState: UserManagementState = {\n  USER_MANAGEMENT_DATA: [],\n  error: \"\",\n  save_user_success: null,\n  save_user_error: \"\",\n  tableState: TableState.DEFAULT\n};\n\nexport const userManagementFeatureKey = \"usermanagement\";\n\nexport function userManagementReducer(\n  state: UserManagementState = initialState,\n  action: UserManagementActions\n) {\n  switch (action.type) {\n    case UserManagementActionTypes.LOAD_USER_MANAGEMENT_ACTION:\n      return {\n        ...state,\n        tableState: TableState.LOADING\n      };\n    case UserManagementActionTypes.LOAD_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        USER_MANAGEMENT_DATA: action.payload,\n        tableState: TableState.SUCCESS\n      };\n\n    case UserManagementActionTypes.LOAD_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        tableState: TableState.FAILURE\n      };\n\n    case UserManagementActionTypes.SAVE_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        save_user_success: action.payload,\n        save_user_error: \"\",\n        USER_MANAGEMENT_DATA: [...state?.USER_MANAGEMENT_DATA, action.payload],\n      };\n\n    case UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.SAVE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_error: action.payload,\n      };\n\n    case UserManagementActionTypes.AFTER_SAVE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.UPDATE_USER_MANAGEMENT_SUCCESS:\n      const updatedUserManagementData = state?.USER_MANAGEMENT_DATA.map(\n        (userManagementData) => {\n          return userManagementData.id === action.payload.id\n            ? action.payload\n            : userManagementData;\n        }\n      );\n\n      return {\n        ...state,\n        save_user_error: \"\",\n        error: \"\",\n        save_user_success: action.payload,\n        USER_MANAGEMENT_DATA: updatedUserManagementData,\n      };\n\n    case UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_SUCCESS:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.UPDATE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_error: action.payload,\n      };\n\n    case UserManagementActionTypes.AFTER_UPDATE_USER_MANAGEMENT_FAILURE:\n      return {\n        ...state,\n        save_user_success: null,\n        save_user_error: \"\",\n      };\n\n    case UserManagementActionTypes.DISABLE_USER_SUCCESS:\n      const updatedDataForDisable = state.USER_MANAGEMENT_DATA.map(\n        (userData) => {\n          console.log(\"action: \" + action.payload);\n          console.log(\"userData: \" + userData.id);\n          if (userData.id === action.payload) {\n            console.log(\"in\");\n            userData.isActive = false;\n          }\n          return userData;\n        }\n      );\n\n      return {\n        ...state,\n        USER_MANAGEMENT_DATA: updatedDataForDisable,\n      };\n    case UserManagementActionTypes.DISABLE_USER_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case UserManagementActionTypes.ENABLE_USER_SUCCESS:\n      const updatedDataForEnable = state.USER_MANAGEMENT_DATA.map(\n        (userData) => {\n          if (userData.id === action.payload) {\n            userData.isActive = true;\n          }\n          return userData;\n        }\n      );\n\n      return {\n        ...state,\n        USER_MANAGEMENT_DATA: updatedDataForEnable,\n      };\n    case UserManagementActionTypes.ENABLE_USER_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  userManagementFeatureKey,\n  UserManagementState,\n} from \"./user-management.reducer\";\n\nconst getUserManagementState = createFeatureSelector<UserManagementState>(\n  userManagementFeatureKey\n);\n\nexport const selectUserManagementList = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state\n);\n\nexport const selectUserManagementError = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.error\n);\n\nexport const saveUserManagementSuccess = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_success\n);\n\nexport const saveUserManagementFailure = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_error\n);\n\nexport const updateUserManagementSuccess = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_success\n);\n\nexport const updateUserManagementFailure = createSelector(\n  getUserManagementState,\n  (state: UserManagementState) => state?.save_user_error\n);\n","<div class=\"table-responsive text-nowrap container-fluid admin-table-layout user-management-table custom-table head-border\">\n    <ls-table [config]=\"config\" [data]=\"userData\" [columns]=\"columns\" [tableSort]=\"true\">\n        <ng-template lsWidgetName=\"actionsHeading\" let-row>\n            <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"openAddUserManagementDialog()\">\n        <mat-icon>add</mat-icon>\n        {{ \"buttons.btn_add_user\" | translate }}\n      </button>\n        </ng-template>\n        <ng-template lsWidgetName=\"isActive\" let-row>\n            <mat-slide-toggle class=\"ms-2\" [checked]=\"row?.isActive\" (change)=\"toggleSwitch(row, $event)\"></mat-slide-toggle>\n        </ng-template>\n        <ng-template lsWidgetName=\"userName\" let-row>\n            <span [matTooltip]=\"row.userName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.userName.length < 40\">\n            {{row.userName}}\n          </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-row>\n            {{row?.email || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"phoneNo\" let-row>\n            {{row?.phoneNo || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"roles\" let-row>\n            <label class=\"spa-label\" *ngIf=\"row['roles'][0] === 'SPAC'\">SPA</label>\n            <label class=\"physician-label\" *ngIf=\"row['roles'][0] === 'SPP'\">PHYSICIAN</label\n      >\n    </ng-template>\n    <ng-template lsWidgetName=\"actions\" let-row>\n      <button\n        mat-mini-fab\n        color=\"primary\"\n        (click)=\"openEditUserManagement(row)\"\n        class=\"d-flex justify-content-center align-items-center btn-boxed btn-no-shadow me-4\"\n      >\n        <mat-icon class=\"justify-content-center\">edit</mat-icon>\n      </button>\n      <button\n        type=\"button\"\n        mat-flat-button\n        color=\"primary\" [disabled]=\"!row?.isActive\"\n        class=\"me-3\"\n        [ngClass]=\"(!row['isActive'])?'':'cursor-pointer'\"\n\n        (click)=\"confirmResetPassword(row)\"\n      >\n        <mat-icon class=\"justify-content-center\">refresh</mat-icon>\n        {{ \"buttons.btn_reset_password\" | translate }}\n      </button>\n    </ng-template>\n  </ls-table>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { AddEditUserManagementComponent } from \"src/app/service-provider-admin/dialog/add-edit-user-management/add-edit-user-management.component\";\nimport {\n  UserManagementStoreActions,\n  UserManagementStoreSelectors,\n  UserManagementStoreState,\n} from \"../store/user-management\";\nimport { Store } from \"@ngrx/store\";\nimport { User } from \"../../interfaces/user.interface\";\nimport { BackendApiService } from \"@services/backendapi.service\";\nimport { EnableDisableComponent } from \"../dialog/enable-disable/enable-disable.component\";\nimport {\n  LSColumn,\n  LSColumnType,\n  LSTableConfig,\n  TableState,\n} from \"../../life-signals/_models/ls-column.model\";\nimport { ConfirmDialogComponent } from \"../../shared/confirm-dialog/confirm-dialog.component\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\nimport {UserManagementState} from \"../store/user-management/user-management.reducer\";\n\n@Component({\n  selector: \"app-user-management\",\n  templateUrl: \"./user-management.component.html\",\n  styleUrls: [\"./user-management.component.scss\"],\n})\nexport class UserManagementComponent implements OnInit, OnDestroy {\n  users$: Observable<UserManagementState>;\n  userData: User[];\n  columns: LSColumn[] = [\n    {\n      id: \"isActive\",\n      label: \"enable\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"id\",\n      label: \"id\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [],\n    },\n    {\n      id: \"userName\",\n      label: \"userName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\", \"bold-name\"],\n      style: \"max-width: 300px; width: 300px;\",\n    },\n    {\n      id: \"email\",\n      label: \"email\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"phoneNo\",\n      label: \"phoneNo\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"roles\",\n      label: \"roles\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n  ];\n  config: LSTableConfig = {\n    id: \"user-management-table\",\n    rowSelectEnabled: false,\n    actions: {\n      header: {\n        class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n      },\n      show: true,\n      headerLabel: \"\",\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n    },\n    translateKey: \"user-management-table\",\n    translate: true,\n    isActive: (row) => {\n      return row.isActive;\n    },\n    tableState: TableState.DEFAULT\n  };\n  usersSub: Subscription;\n\n  constructor(\n    private dialog: MatDialog,\n    private store$: Store<UserManagementStoreState.UserManagementState>,\n    private backendApiService: BackendApiService,\n    private snackbar: SnackbarService\n  ) {}\n\n  ngOnInit() {\n    this.store$.dispatch(\n      new UserManagementStoreActions.LoadUserManagementRequestAction()\n    );\n    this.listUsers();\n  }\n\n  listUsers() {\n    this.users$ = this.store$.select(\n      UserManagementStoreSelectors.selectUserManagementList\n    );\n    this.usersSub = this.users$.subscribe((response) => {\n      this.config.tableState = <TableState>response?.tableState;\n        this.userData = response.USER_MANAGEMENT_DATA.map((x) => {\n          return {\n            ...x,\n            userName: `${x.firstName} ${x.lastName}`,\n          };\n        });\n    });\n  }\n\n  openAddUserManagementDialog() {\n    const dialogRef = this.dialog.open(AddEditUserManagementComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      data: { userData: undefined },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  openEditUserManagement(data) {\n    this.dialog.open(AddEditUserManagementComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      data: { userData: data },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  resetPassword(data) {\n    this.backendApiService\n      .postMapping(\n        environment.dataApiUrl + 'users/' + data.id + '/reset-password',\n        {}\n      )\n      .then((response) => {\n        if (response.status === \"OK\") {\n          this.snackbar.openCustomSnackBar(\"manage_admin.reset_success\", 'bottom', 'center', true);\n        }\n      });\n  }\n\n  toggleSwitch(data, event: MatSlideToggleChange) {\n    if (data.isActive) {\n      event.source.checked = true;\n      const dialogRef = this.dialog.open(EnableDisableComponent, {\n        width: \"auto\",\n        data: { userData: data, mode: \"DISABLE\" },\n\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(event.source.checked);\n        event.source.checked = result;\n      });\n    } else {\n      event.source.checked = false;\n      const dialogRef = this.dialog.open(EnableDisableComponent, {\n        width: \"auto\",\n        data: { userData: data, mode: \"ENABLE\" },\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n        event.source.checked = result;\n      });\n    }\n    // if (event.source.checked === false) {\n    //   event.source.checked = !event.source.checked;\n    //   const dialogRef = this.dialog.open(EnableDisableComponent, {\n    //     width: \"auto\",\n    //     data: { userData: data, mode: \"DISABLE\" },\n    //     backdropClass: \"backdropBackground\",\n    //     disableClose: true,\n    //   });\n    //\n    //   dialogRef.afterClosed().subscribe((result) => {\n    //     event.source.checked = result;\n    //   });\n    // } else {\n    //   event.source.checked = !event.source.checked;\n    //   const dialogRef = this.dialog.open(EnableDisableComponent, {\n    //     width: \"auto\",\n    //     data: { userData: data, mode: \"ENABLE\" },\n    //\n    //     backdropClass: \"backdropBackground\",\n    //     disableClose: true,\n    //   });\n    //\n    //   dialogRef.afterClosed().subscribe((result) => {\n    //     event.source.checked = result;\n    //   });\n    // }\n  }\n\n  confirmResetPassword(rowData) {\n    const confirm = this.dialog.open(ConfirmDialogComponent, {\n      width: \"500px\",\n      //height: \"250px\",\n      maxWidth: \"95vw\",\n      data: {\n        body: {\n          title: \"manage_admin.reset_password\",\n          text: \"manage_admin.reset_password_confirm_message\",\n        },\n      },\n      \n      disableClose: true,\n    });\n    confirm.afterClosed().subscribe((data) => {\n      if (data) {\n        this.resetPassword(rowData);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.usersSub) this.usersSub.unsubscribe();\n  }\n}\n"]}