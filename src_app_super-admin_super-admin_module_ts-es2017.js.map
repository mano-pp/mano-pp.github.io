{"version":3,"file":"src_app_super-admin_super-admin_module_ts-es2017.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACoE;AAEgB;AAChB;AAKvB;AAGR;AAG4C;AACtB;AACsC;;;;;;;;;;;;;;;;;IChB7F,yEAA0E;IACtE,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,4LACJ;;;IAEI,yEAAqB;IACjB,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,6LACJ;;;IAMA,sEAA+C;IAC3C,+EAAyF;IAAA,uDAEzF;;IAAA,4DAAY;IACZ,qFAAmG;IAC/F,uEAA6E;IACjF,4DAAiB;IACrB,4DAAM;;;IANgD,0DAAsC;IAAtC,iGAAsC;IAAC,0DAEzF;IAFyF,mKAEzF;IAC4D,0DAAsC;IAAtC,iGAAsC;IACpD,0DAAgC;IAAhC,gGAAgC;;;IAM1E,2EAAsE;IAAA,6DAAE;IAAA,4DAAO;;;IAQ/E,4EAAoE;IAAA,uDAEpE;;IAAA,4DAAY;;IAFwD,0DAEpE;IAFoE,qLAEpE;;;IACA,4EAAqD;IAAA,uDAErD;;IAAA,4DAAY;;IAFyC,0DAErD;IAFqD,oLAErD;;;IACA,4EAC+H;IAC3H,uDACJ;;IAAA,4DAAY;;IADR,0DACJ;IADI,mLACJ;;;IAUA,4EAAsD;IAClD,uDACJ;;IAAA,4DAAY;;IADR,0DACJ;IADI,8KACJ;;;IACA,4EAC8H;IAC1H,uDACJ;;IAAA,4DAAY;;IADR,0DACJ;IADI,8KACJ;;;IAMA,4EAAsD;IAClD,uDACJ;;IAAA,4DAAY;;IADR,0DACJ;IADI,8KACJ;;;IACA,4EACkI;IAC9H,uDACJ;;IAAA,4DAAY;;IADR,0DACJ;IADI,8KACJ;;;IAuBY,4EAAkE;IAAA,uDAElE;;IAAA,4DAAY;;IAFsD,0DAElE;IAFkE,mLAElE;;;IACA,4EAAmD;IAC/C,uDAAwD;;IAAA,4DAAY;;IAApE,0DAAwD;IAAxD,oLAAwD;;;IAC5D,4EAAyF;IACrF,uDAAoD;;IAAA,4DAAY;;IAAhE,0DAAoD;IAApD,gLAAoD;;;IAYxD,4EAAiE;IAAA,uDAEjE;;IAAA,4DAAY;;IAFqD,0DAEjE;IAFiE,kLAEjE;;;IACA,4EAAkD;IAAA,uDACjC;;IAAA,4DAAY;;IADqB,0DACjC;IADiC,yKACjC;;;IACjB,4EAAuF;IACnF,uDAAmD;;IAAA,4DAAY;;IAA/D,0DAAmD;IAAnD,+KAAmD;;;IAcvD,4EAA8C;IAAA,uDAA+C;;IAAA,4DAAY;;IAA3D,0DAA+C;IAA/C,mKAA+C;;;IASjG,gFAA0E;IACtE,uDACJ;;IAAA,4DAAY;;IADR,0DACJ;IADI,0KACJ;;;;IAuBpB,6EACgC;IADuC,oVAA+B;IAElG,uDACJ;;IAAA,4DAAS;;IADL,0DACJ;IADI,+JACJ;;;;IACA,6EAC8C;IADyB,oVAA+B;IAElG,uDACJ;;IAAA,4DAAS;;IADL,0DACJ;IADI,8JACJ;;ADnJG,MAAM,+BAA+B;IAmB1C,YACY,SAAwD,EACxD,WAAwB,EACA,IAAS,EACjC,MAAkE,EAClE,WAAkC,EAClC,QAAyB,EACzB,MAAkB;QANlB,cAAS,GAAT,SAAS,CAA+C;QACxD,gBAAW,GAAX,WAAW,CAAa;QACA,SAAI,GAAJ,IAAI,CAAK;QACjC,WAAM,GAAN,MAAM,CAA4D;QAClE,gBAAW,GAAX,WAAW,CAAuB;QAClC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAY;QAvB9B,mBAAmB;QACnB,qBAAgB,GAAG,KAAK,CAAC;QACzB,uBAAkB,GAAG,kEAAkB,CAAC;QAExC,eAAU,GAAG,0DAAU,CAAC;QACxB,uBAAkB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACxC,iBAAY,GAAG,IAAI,CAAC;QAIpB,gBAAW,GAAG,EAAE,CAAC;QAgOV,aAAQ,GAAG,CAAC,WAAmB,EAAE,SAAiB,EAAE,EAAE;YAC3D,OAAO,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC/E,CAAC;IApNE,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,yEAAmB,EAAE,IAAI,EAAE,CAAC;QAC/C,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAED,uBAAuB;QACrB,IAAI,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAE;YAC1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM;iBAC9B,MAAM,CAAC,wHAA4D,CAAC;iBACpE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;YACP,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM;iBAC9B,MAAM,CAAC,wHAA4D,CAAC;iBACpE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;iBAChE;YACH,CAAC,CAAC,CAAC;SACR;aAAM;YACL,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM;iBACjC,MAAM,CAAC,2HAA+D,CAAC;iBACvE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;YAEP,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM;iBACjC,MAAM,CAAC,2HAA+D,CAAC;iBACvE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;iBAChE;YACH,CAAC,CAAC,CAAC;SACR;IACH,CAAC;IAED,4BAA4B;QAC1B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAChD;YACE,OAAO,EAAC;gBACN,IAAI,CAAC,mBAAmB,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;aAC1E;YACD,WAAW,EAAE;gBACX,IAAI,CAAC,mBAAmB,KAAK,SAAS;oBAClC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW;oBACtC,CAAC,CAAC,EAAE;gBACR;oBACE,+DAAmB;oBACnB,8DAAkB,CAAC,iCAAiC,CAAC;oBACrD,gEAAoB,CAAC,GAAG,CAAC;oBACzB,gEAAoB,CAAC,CAAC,CAAC;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,CAAC,mBAAmB,KAAK,SAAS;oBAClC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY;oBACvC,CAAC,CAAC,EAAE;gBACR,CAAC,8DAAkB,CAAC,oCAAoC,CAAC,EAAC,gEAAoB,CAAC,GAAG,CAAC,EAAC,gEAAoB,CAAC,CAAC,CAAC,CAAC;aAC7G;YACD,YAAY,EAAE;gBACZ,IAAI,CAAC,mBAAmB,KAAK,SAAS;oBAClC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY;oBACvC,CAAC,CAAC,EAAE;gBACR,CAAC,8DAAkB,CAAC,oCAAoC,CAAC,EAAC,gEAAoB,CAAC,GAAG,CAAC,EAAC,gEAAoB,CAAC,CAAC,CAAC,CAAC;aAC7G;YACD,SAAS,EAAE;gBACT,IAAI,CAAC,mBAAmB,KAAK,SAAS;oBAClC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS;oBACpC,CAAC,CAAC,EAAE;gBACR;oBACE,+DAAmB;oBACnB,8DAAkB,CAAC,yBAAyB,CAAC;oBAC7C,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,CAAC,mBAAmB,KAAK,SAAS;oBAClC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ;oBACnC,CAAC,CAAC,EAAE;gBACR;oBACE,+DAAmB;oBACnB,8DAAkB,CAAC,yBAAyB,CAAC;oBAC7C,gEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,OAAO,EAAE;gBACP,IAAI,CAAC,mBAAmB,KAAK,SAAS;oBAClC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO;oBAClC,CAAC,CAAC,EAAE;gBACR,CAAC,0FAA8B,CAAC,IAAI,CAAC,CAAC;aACvC;YACD,KAAK,EAAE;gBACL,IAAI,CAAC,mBAAmB,KAAK,SAAS;oBAClC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK;oBAChC,CAAC,CAAC,EAAE;gBACR,CAAE,4DAAgB,CAAC;aACpB;SACF,CAEJ,CAAC;IAEJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC;IAC9C,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC;YACrC,OAAO,EAAE;gBACP,MAAM,EAAE,SAAS;gBACjB,WAAW,EAAE,gEAAgB;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE;YACvC,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,CAAC;YAC/C,OAAO;SACR;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QACzD,IACI,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,IAAI;YACzD,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,EAAE,EACzD;YACA,MAAM,WAAW,GAAG,8EAA0B,CAAC,IAAI,CAAC,sBAAsB;iBACrE,GAAG,CAAC,SAAS,CAAC;iBACd,KAAK,CAAC,CAAC;YACZ,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC9D;QAED,IAAI,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAE;YAC1C,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC;YACxE,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC;YACxE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mGAAsB,EAAC;gBACtD,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,OAAO;gBACd,aAAa,EAAE,oBAAoB;gBACnC,YAAY,EAAE,IAAI;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAC;wBACH,KAAK,EAAE,gDAAgD;wBACvD,IAAI,EAAE,sDAAsD;wBAC5D,OAAO,EAAG,sDAAsD;qBACjE;iBACF;aACF,CAAC,CAAC;YACH,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;gBACzC,IAAG,OAAO,EAAC;oBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChB,IAAI,sHAA0D,CAC1D,IAAI,CAAC,eAAe,CACvB,CACJ,CAAC;iBACH;YACH,CAAC,CAAC;SAEH;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC;YACzE,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC;YACzE,IAAI,CAAC,eAAe,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChB,IAAI,wHAA4D,CAC5D,IAAI,CAAC,eAAe,CACvB,CACJ,CAAC;SACH;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,sBAAsB;QACpB,IAAI,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAE;YAC1C,IAAI,IAAI,CAAC,gBAAgB;gBAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;YAC/D,IAAI,IAAI,CAAC,gBAAgB;gBAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChB,IAAI,4HAAgE,EAAE,CACzE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChB,IAAI,4HAAgE,EAAE,CACzE,CAAC;SACH;aAAM;YACL,IAAI,IAAI,CAAC,mBAAmB;gBAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;YACrE,IAAI,IAAI,CAAC,mBAAmB;gBAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;YACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChB,IAAI,8HAAkE,EAAE,CAC3E,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChB,IAAI,8HAAkE,EAAE,CAC3E,CAAC;SACH;IACH,CAAC;IAKD,SAAS,CAAC,OAAe,EAAE,KAAoB;QAC7C,IAAI,gBAAgB,GAAG,aAAa,CAAC;QACrC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACpB,IAAI,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;8GAzPU,+BAA+B,kUAsB9B,sEAAe;6HAtBhB,+BAA+B;QCxB5C,8EAAgC;QAC5B,yHAEK;QACL,uNAIc;QAClB,4DAAW;QAEX,wFAA6C;QACzC,0EAA8G;QAC1G,2HAOM;QACN,sEAAK;QACD,+EAAyF;QAAA,uDAErF;;QAAA,+HAA+E;QAGnF,4DAAY;QACZ,qFACqJ;QACjJ,uEACsB;QACtB,yIAEY;QACZ,yIAEY;QACZ,yIAGY;QAChB,4DAAiB;QACrB,4DAAM;QACN,2EAAkB;QACd,iFAAoD;QAAA,wDACpD;;QAAA,4DAAY;QACZ,qFACuJ;QACnJ,wEACqD;;QACrD,yIAEY;QACZ,yIAGY;QAChB,4DAAiB;QACjB,qFACuJ;QACnJ,wEACqD;;QACrD,yIAEY;QACZ,yIAGY;QAChB,4DAAiB;QACrB,4DAAM;QACN,gFAAmC;QAC/B,8EAAiC;QAC7B,uEAAK;QACD,gFAA+C;QAAA,0EAAc;QAAA,4DAAW;QACxE,6EAAsC;QAAA,wDAEhC;;QAAA,4DAAQ;QAClB,4DAAM;QACV,4DAAS;QACT,uEAAK;QACD,2EAAiB;QACb,2EAAsB;QAClB,iFAA0D;QAAA,wDAEtD;;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QACxC,4DAAY;QACZ,qFACiJ;QAC7I,6EACkD;QAA9C,mKAAY,cAAU,WAAW,SAAS,IAAC;QAD/C,4DACkD;QAClD,yIAEY;QACZ,yIACwE;QACxE,yIACoE;QACxE,4DAAiB;QACrB,4DAAM;QACN,2EAAsB;QAClB,iFAA0D;QAAA,wDAEtD;;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QACxC,4DAAY;QACZ,qFACiJ;QAC7I,6EACiD;QAA7C,mKAAY,cAAU,UAAU,SAAS,IAAC;QAD9C,4DACiD;QACjD,yIAEY;QACZ,yIAC6B;QAC7B,yIACmE;QACvE,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,uEAAK;QACD,2EAAiB;QACb,2EAAsB;QAClB,iFAAmD;QAAA,wDAE/C;;QACJ,4DAAY;QACZ,sFAA4D;QACxD,wEAA+E;QAC/E,yIAAyG;QAC7G,4DAAiB;QACrB,4DAAM;QACN,2EAAsB;QAClB,iFAA0D;QAAA,wDAEtD;;QACJ,4DAAY;QACZ,gFAAyD;QACzD,0IAEY;QAChB,4DAAM;QAEV,4DAAM;QAIV,4DAAM;QAKV,4DAAW;QACX,2EAA2B;QACvB,wEAAM;QAAA,wDAAiD;;QAAA,4DAAO;QAClE,4DAAM;QACV,4DAAO;QACX,4DAAqB;QAErB,0FAAgC;QAC5B,8EAAwF;QAApB,wJAAS,aAAS,IAAC;QACnF,wDACJ;;QAAA,4DAAS;QACT,oIAGS;QACT,oIAGS;QACb,4DAAqB;;;QA3KK,0DAAyC;QAAzC,uGAAyC;QAWzD,0DAAoC;QAApC,iGAAoC;QAChC,0DAAuC;QAAvC,uGAAuC;QASS,0DAAsC;QAAtC,8FAAsC;QAAC,0DAErF;QAFqF,+KAErF;QAA6B,0DAAuC;QAAvC,uGAAuC;QAIZ,0DAAsC;QAAtC,8FAAsC;QAC9F,kNAAgJ;QAC/E,0DAAgC;QAAhC,6FAAgC;QAErF,0DAAsD;QAAtD,0HAAsD;QAGtD,0DAAuC;QAAvC,wGAAuC;QAI9C,0DAAwH;QAAxH,mMAAwH;QAM7E,0DACpD;QADoD,0KACpD;QAEI,0DAAkJ;QAAlJ,oNAAkJ;QAC/G,0DAA2D;QAA3D,kLAA2D;QAElF,0DAAwC;QAAxC,yGAAwC;QAInD,0DAA2H;QAA3H,sMAA2H;QAK5H,0DAAkJ;QAAlJ,oNAAkJ;QAC/G,0DAA2D;QAA3D,kLAA2D;QAElF,0DAAwC;QAAxC,yGAAwC;QAI/C,0DAA2H;QAA3H,sMAA2H;QAStF,0DAEhC;QAFgC,wKAEhC;QAMwD,0DAEtD;QAFsD,6KAEtD;QAGA,0DAA4I;QAA5I,8MAA4I;QAGhI,0DAAoD;QAApD,wHAAoD;QAGpD,0DAAqC;QAArC,sGAAqC;QAErC,0DAA2E;QAA3E,iJAA2E;QAKjC,0DAEtD;QAFsD,4KAEtD;QAGA,0DAA4I;QAA5I,8MAA4I;QAGhI,0DAAmD;QAAnD,uHAAmD;QAGnD,0DAAoC;QAApC,qGAAoC;QAEpC,0DAAyE;QAAzE,+IAAyE;QAStC,0DAE/C;QAF+C,wKAE/C;QAG2D,0DAAiB;QAAjB,0EAAiB;QAChE,0DAA+B;QAA/B,gGAA+B;QAIW,0DAEtD;QAFsD,2KAEtD;QAGqB,0DAA+C;QAA/C,+GAA+C;QAgB9E,0DAAiD;QAAjD,4KAAiD;QAO3D,0DACJ;QADI,mKACJ;QAEK,0DAAyB;QAAzB,yFAAyB;QAIzB,0DAAuC;QAAvC,uGAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxKoB;AACE;AACc;AAEM;AACtB;AAKxB;AAKqC;AACtB;AACsC;AACtC;;;;;;;;;;;;;;;;;IClBvD,0EAAkE;IAC9D,wDACJ;;IAAA,6DAAK;;IADD,2DACJ;IADI,qMACJ;;;IAEI,0EAAqB;IACjB,wDACJ;;IAAA,6DAAK;;IADD,2DACJ;IADI,sMACJ;;;IAcgB,4EAA8D;IAAA,8DAAE;IAAA,6DAAO;;;IACvE,4EAA2D;IAAA,wDAA8C;;IAAA,6DAAO;;IAArD,2DAA8C;IAA9C,oKAA8C;;;IAIzG,6EAAmE;IAAA,wDACnE;;IAAA,6DAAY;;IADuD,2DACnE;IADmE,qLACnE;;;IACA,6EAAoD;IAAA,wDACpD;;IAAA,6DAAY;;IADwC,2DACpD;IADoD,sLACpD;;;IACA,6EAA2F;IAAA,wDAC3F;;IAAA,6DAAY;;IAD+E,2DAC3F;IAD2F,kLAC3F;;;IAMA,4EAA8D;IAAA,8DAAE;IAAA,6DAAO;;;IACvE,4EAA2D;IAAA,wDAA8C;;IAAA,6DAAO;;IAArD,2DAA8C;IAA9C,oKAA8C;;;IAIzG,6EAAiE;IAAA,wDACjE;;IAAA,6DAAY;;IADqD,2DACjE;IADiE,oLACjE;;;IACA,6EAAoD;IAAA,wDACpD;;IAAA,6DAAY;;IADwC,2DACpD;IADoD,qLACpD;;;IACA,6EAA0F;IAAA,wDAC1F;;IAAA,6DAAY;;IAD8E,2DAC1F;IAD0F,iLAC1F;;;IAeA,6EAA6C;IACzC,wDACJ;;IAAA,6DAAY;;IADR,2DACJ;IADI,gLACJ;;;IASJ,iFAA0E;IACtE,wDACJ;;IAAA,6DAAY;;IADR,2DACJ;IADI,4KACJ;;;IAGR,iFAA6H;IACzH,wDACJ;;IAAA,6DAAY;;IADR,2DACJ;IADI,sLACJ;;ADtDL,MAAM,uBAAuB;IAqBlC,YACU,SAAgD,EAChD,WAAwB,EACxB,cAA8B,EACN,IAAS,EACjC,MAAqD,EACrD,WAAkC,EAClC,QAAyB,EACzB,MAAkB;QAPlB,cAAS,GAAT,SAAS,CAAuC;QAChD,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QACN,SAAI,GAAJ,IAAI,CAAK;QACjC,WAAM,GAAN,MAAM,CAA+C;QACrD,gBAAW,GAAX,WAAW,CAAuB;QAClC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAY;QAzB5B,qBAAgB,GAAG,KAAK,CAAC;QACzB,uBAAkB,GAAG,mEAAkB,CAAC;QAExC,eAAU,GAAG,2DAAU,CAAC;QACxB,uBAAkB,GAAiB;YACjC,iEAAgB;YAChB,wEAAuB;YACvB,uEAAsB;SACvB,CAAC;QACF,iBAAY,GAAG,IAAI,CAAC;QAyNb,aAAQ,GAAG,CAAC,WAAmB,EAAE,SAAiB,EAAE,EAAE;YAC3D,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACpE,CAAC;IA1ME,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,wBAAwB;QACtB,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM;iBACzC,MAAM,CAAC,uGAA+C,CAAC;iBACvD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM;iBACzC,MAAM,CAAC,uGAA+C,CAAC;iBACvD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,IAAI,CAAC,YAAY,KAAK,+FAAuC,EAAE;wBACjE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,qCAAqC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;qBAC1F;yBAAM,IAAI,IAAI,CAAC,YAAY,KAAK,mBAAmB,EAAE;wBACpD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,iCAAiC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;qBACtF;yBAAK;wBACJ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAA4B,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;qBACjF;iBACF;YACH,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,MAAM;iBAC5C,MAAM,CAAC,0GAAkD,CAAC;iBAC1D,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,MAAM;iBAC5C,MAAM,CAAC,0GAAkD,CAAC;iBAC1D,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,IAAI,EAAE;oBACR,IAAI,IAAI,CAAC,YAAY,KAAK,+FAAuC,EAAE;wBACjE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,qCAAqC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;qBAC1F;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAA4B,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;qBACjF;iBACF;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,OAAO,EAAE;gBACP,MAAM,EAAE,SAAS;gBACjB,WAAW,EAAE,iEAAgB;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACvC;YACE,SAAS,EAAE;gBACT,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAChE;oBACE,gEAAmB;oBACnB,+DAAkB,CAAC,yBAAyB,CAAC;oBAC7C,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC/D;oBACE,gEAAmB;oBACnB,+DAAkB,CAAC,yBAAyB,CAAC;oBAC7C,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,OAAO,EAAE;gBACP,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBAC9D,CAAC,0FAA8B,CAAC,IAAI,CAAC,CAAC;aACvC;YACD,KAAK,EAAE;gBACL,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC5D,CAAC,6DAAgB,CAAC;aACnB;SACF,EACD,EAAE,SAAS,EAAE,gGAAU,CAAC,gEAAmB,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,EAAE,CACrE,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;YACpC,OAAO;SACR;QAED,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC;QAE3C,IACE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,IAAI;YAC9C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,EAAE,EAC5C;YACA,MAAM,WAAW,GAAG,8EAA0B,CAAC,IAAI,CAAC,WAAW;iBAC1D,GAAG,CAAC,SAAS,CAAC;iBACd,KAAK,CAAC,CAAC;YACZ,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;SACtD;QAED,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC;YAChE,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC;YAChE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mGAAsB,EAAC;gBACtD,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,OAAO;gBACd,aAAa,EAAE,oBAAoB;gBACnC,YAAY,EAAE,IAAI;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAC;wBACH,KAAK,EAAE,gEAAgE;wBACvE,IAAI,EAAE,iEAAiE;wBACvE,OAAO,EAAE,6DAA6D;qBACvE;iBACF;aACF,CAAC,CAAC;YACH,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;gBACzC,IAAI,YAAY,GAAI,OAAO,CAAC;gBAC5B,IAAG,YAAY,EAAC;oBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,qGAA6C,CAC/C,IAAI,CAAC,OAAO,EACZ,gFAAsB,GAAG,6BAA6B,CACvD,CACF,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;SAEJ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,uGAA+C,CACjD,IAAI,CAAC,OAAO,EACZ,gFAAsB,GAAG,6BAA6B,CACvD,CACF,CAAC;SACH;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAED,uBAAuB;QACrB,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,IAAI,IAAI,CAAC,yBAAyB;gBAChC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;YAC/C,IAAI,IAAI,CAAC,yBAAyB;gBAChC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,iHAAyD,EAAE,CAChE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,iHAAyD,EAAE,CAChE,CAAC;SACH;aAAM;YACL,IAAI,IAAI,CAAC,4BAA4B;gBACnC,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;YAClD,IAAI,IAAI,CAAC,4BAA4B;gBACnC,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,mHAA2D,EAAE,CAClE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,mHAA2D,EAAE,CAClE,CAAC;SACH;IACH,CAAC;IAKD,SAAS,CAAC,OAAe,EAAE,KAAoB;QAC7C,IAAI,gBAAgB,GAAG,aAAa,CAAC;QACrC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACpB,IAAI,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;8FAlPU,uBAAuB,6dAyBxB,sEAAe;sHAzBd,uBAAuB;QC1BpC,+EAAgC;QAC5B,kHAEK;QACL,iNAIc;QAIlB,6DAAW;QAEX,yFAA6C;QACzC,2EAAuE;QACnE,uEAAK;QACD,0EAAiB;QACb,0EAAsB;QAClB,gFAA4E;QACxE,yDACA;;QAAA,wHAAuE;QACvE,wHAAgH;QACpH,6DAAY;QACZ,uFAAmN;QAC/M,8EAAsI;QAA9C,4JAAY,cAAU,WAAW,SAAS,IAAC;QAAnI,6DAAsI;QACtI,mIACY;QACZ,mIACY;QACZ,mIACY;QAChB,6DAAiB;QACrB,6DAAM;QACN,2EAAsB;QAClB,kFAA2E;QACvE,yDACA;;QAAA,wHAAuE;QACvE,wHAAgH;QACpH,6DAAY;QACZ,uFAAiN;QAC7M,8EAAoI;QAA7C,4JAAY,cAAU,UAAU,SAAS,IAAC;QAAjI,6DAAoI;QACpI,mIACY;QACZ,mIACY;QACZ,mIACY;QAChB,6DAAiB;QACrB,6DAAM;QACV,6DAAM;QACV,6DAAM;QAEN,wEAAK;QACD,2EAAiB;QACb,2EAAsB;QAClB,kFAA4C;QACxC,yDACA;;QAAA,6EAA4B;QAAA,+DAAE;QAAA,6DAAO;QACzC,6DAAY;QACZ,uFAA4D;QACxD,yEAA+E;QAC/E,mIAEY;QAChB,6DAAiB;QACrB,6DAAM;QACN,2EAAsB;QAClB,kFAA0D;QACtD,yDACA;;QAAA,6EAA4B;QAAA,+DAAE;QAAA,6DAAO;QACzC,6DAAY;QACZ,iFAAyD;QACzD,mIAEY;QAChB,6DAAM;QACV,6DAAM;QACN,mIAEY;QAChB,6DAAM;QACN,4EAAc;QACV,4EAA2F;QACvF,yEAAM;QAAA,yDAAgD;;QAAA,6DAAO;QACjE,6DAAM;QACN,4EAAuE;QACnE,yDACJ;;QAAA,6DAAM;QACV,6DAAM;QACV,6DAAO;QACX,6DAAqB;QAErB,2FAAgC;QAC5B,+EAAwF;QAApB,iJAAS,aAAS,IAAC;QACzF,yDACD;;QAAA,6DAAS;QACN,+EAA4G;QAArC,iJAAS,8BAA0B,IAAC;QAC7G,yDACD;;QAAA,6DAAS;QACV,6DAAqB;;;;QAnGK,2DAAiC;QAAjC,gGAAiC;QAcjD,2DAAyB;QAAzB,uFAAyB;QAI8B,2DAA8B;QAA9B,uFAA8B;QACvE,2DACA;QADA,gLACA;QAA6B,2DAA+B;QAA/B,gGAA+B;QACpB,2DAAiB;QAAjB,kFAAiB;QAED,2DAA8B;QAA9B,uFAA8B;QAAC,yLAAsH;QAC9I,2DAAwB;QAAxB,sFAAwB;QAC3E,2DAAoD;QAApD,yHAAoD;QAEpD,2DAAsC;QAAtC,uGAAsC;QAEtC,2DAA6E;QAA7E,kJAA6E;QAKjD,2DAA8B;QAA9B,uFAA8B;QACtE,2DACA;QADA,+KACA;QAA6B,2DAA+B;QAA/B,gGAA+B;QACpB,2DAAiB;QAAjB,kFAAiB;QAED,2DAA8B;QAA9B,uFAA8B;QAAC,uLAAoH;QAC7I,2DAAwB;QAAxB,sFAAwB;QAC1E,2DAAmD;QAAnD,wHAAmD;QAEnD,2DAAqC;QAArC,sGAAqC;QAErC,2DAA2E;QAA3E,gJAA2E;QAWvF,2DACA;QADA,8KACA;QAG2D,2DAAiB;QAAjB,2EAAiB;QAChE,2DAA+B;QAA/B,iGAA+B;QAO3C,2DACA;QADA,8KACA;QAGqB,2DAA+C;QAA/C,gHAA+C;QAKhD,2DAA2F;QAA3F,oPAA2F;QAMjH,2DAAgD;QAAhD,6KAAgD;QAGtD,2DACJ;QADI,4LACJ;QAOV,2DACD;QADC,qKACD;QAEC,2DACD;QADC,mKACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGyH;AAKxF;AACyD;AAI/C;AACA;AAGe;;;;;;;;;;;;;;ICCvD,2FACmF;;;IAAvD,yFAAyB;;ADMlD,MAAM,oBAAoB;IAa/B,YACU,SAA6C,EAC7C,MAAiB,EACO,IAAS,EACjC,MAAqD,EACrD,QAAyB,EACzB,OAA0B;QAL1B,cAAS,GAAT,SAAS,CAAoC;QAC7C,WAAM,GAAN,MAAM,CAAW;QACO,SAAI,GAAJ,IAAI,CAAK;QACjC,WAAM,GAAN,MAAM,CAA+C;QACrD,aAAQ,GAAR,QAAQ,CAAiB;QACzB,YAAO,GAAP,OAAO,CAAmB;QATpC,eAAU,GAAG,EAAE,CAAC;QAChB,mBAAc,GAAG,EAAE,CAAC;IASjB,CAAC;IAEJ,QAAQ;;QACN,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QAClD,IAAI,CAAC,mBAAmB,GAAG,UAAI,CAAC,mBAAmB,0CAAE,WAAW,CAAC;QAEjE,IAAI,CAAC,MAAM,GAAG,gFAAsB,GAAG,oBAAoB;aACzD,UAAI,CAAC,mBAAmB,0CAAE,EAAE,IAAG,YAAY,CAAC;QAC9C,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,0BAA0B;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM;aAC1B,IAAI,CAAC,mDAAM,CAAC,oGAA4C,CAAC,CAAC;aAC1D,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;YAClB,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,uCAAuC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC5F;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mGAAuB,EAAE;oBACxC,KAAK,EAAE,OAAO;oBACd,QAAQ,EAAE,MAAM;oBAChB,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,UAAI,CAAC,mBAAmB,0CAAE,EAAE,EAAE;oBAChE,aAAa,EAAE,oBAAoB;oBACnC,YAAY,EAAE,IAAI;iBACnB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IACD,mBAAmB,CAAC,IAAI;;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mGAAuB,EAAE;YACxC,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,MAAM;YAChB,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,UAAI,CAAC,mBAAmB,0CAAE,EAAE,EAAE;YAC3D,aAAa,EAAE,oBAAoB;YACnC,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,YAAY;;QACV,IAAI,GAAG,GAAG,gFAAsB,GAAG,oBAAoB;aACvD,UAAI,CAAC,mBAAmB,0CAAE,EAAE,IAAG,aAAa,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC;aAC7B,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YACrB,IAAG,GAAG,CAAC,MAAM,KAAK,IAAI,EAAE;gBACtB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBAC3C,uCACK,IAAI,KACP,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE,EAC/C,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,EACvB,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE,IAC3B;gBACJ,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;aAC5C;QACP,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,YAAY,CAAC,UAAU;QACrB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;oBAAE,OAAO,CAAC,CAAC,CAAC;qBAC1C,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;oBAAE,OAAO,CAAC,CAAC;;oBAC9C,OAAO,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;oBAAE,OAAO,CAAC,CAAC;qBACzC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;oBAAE,OAAO,CAAC,CAAC,CAAC;;oBAC/C,OAAO,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IACrD,CAAC;;wFA3GU,oBAAoB,yUAgBrB,qEAAe;kHAhBd,oBAAoB;kEAMpB,4HAA6B;;;;;QC9B1C,8EAAgC;QAC9B,wEAAqB;QACnB,uDAIF;;;QAAA,4DAAK;QACL,4EAAiD;QAC/C,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC5B,4DAAS;QACX,4DAAW;QAEX,wFAAiC;QAC/B,yEAA6B;QAC3B,kGAEoD;QADlD,wLAAoB,wBAAoB,IAAC,8HAAiB,+BAA2B,IAA5C,0HACb,wBAAoB,IADP;QACS,4DAA8B;QAClF,gKACmF;QACrF,4DAAM;QACR,4DAAqB;;QAlBjB,0DAIF;QAJE,uXAIF;QAQuE,0DAAiB;QAAjB,8EAAiB;QAGzD,0DAAwB;QAAxB,uHAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfgF;AACrC;AAM1D;AAGoE;;;;;;;;;;;ICTlG,0EAAiJ;IAClJ,uDACL;IAAA,4DAAO;;;IAFK,0FAA8B;IACrC,0DACL;IADK,8FACL;;;IAGM,0EAAqJ;IACvJ,uDACJ;IAAA,4DAAO;;;IAFK,4FAAgC;IACxC,0DACJ;IADI,gGACJ;;;IAGM,uDACJ;;;IADI,yHACJ;;;IAEI,uDACJ;;;IADI,2HACJ;;;;IAEI,4EAA8F;IAAzC,gWAAwC;IACjG,+EAAyC;IAAA,8DAAG;IAAA,4DAAW;IACvD,uDACF;;IAAA,4DAAS;;IADP,0DACF;IADE,iKACF;;;;IAGM,6EAAkK;IAA7H,6ZAAsC;IAC/E,+EAAyC;IAAC,gEAAI;IAAA,4DAAW;IAC3D,4DAAS;IACH,6EAAiH;IAA/B,qZAA8B;IACpH,uDACF;;IAAA,4DAAS;;IADP,0DACF;IADE,uKACF;;ADVC,MAAM,8BAA8B;IAiFzC,YACU,MAAiB,EACjB,MAAkE;QADlE,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAA4D;QAlF5E,uBAAkB,GAAG,IAAI,CAAC;QAC1B,6BAAwB,GAAG,KAAK,CAAC;QAKjC,YAAO,GAAe;YACpB;gBACE,EAAE,EAAE,IAAI;gBACR,KAAK,EAAE,IAAI;gBACX,WAAW,EAAE,CAAC,YAAY,CAAC;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,mFAAiB;gBACvB,wBAAwB;gBACxB,SAAS,EAAE,EAAE;aACd;YACD;gBACE,EAAE,EAAE,aAAa;gBACjB,KAAK,EAAE,aAAa;gBACpB,WAAW,EAAE,CAAC,YAAY,CAAC;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,mFAAiB;gBACvB,SAAS,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC;gBACtC,KAAK,EAAE,iCAAiC;aAEzC;YACD;gBACE,EAAE,EAAE,eAAe;gBACnB,KAAK,EAAE,eAAe;gBACtB,WAAW,EAAE,CAAC,YAAY,CAAC;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,mFAAiB;gBACvB,UAAU,EAAE,SAAS;gBACrB,SAAS,EAAE,CAAC,WAAW,CAAC;gBACxB,KAAK,EAAE,iCAAiC;aACzC;YACD;gBACE,EAAE,EAAE,OAAO;gBACX,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,CAAC,YAAY,CAAC;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,mFAAiB;gBACvB,UAAU,EAAE,SAAS;gBACrB,SAAS,EAAE,EAAE;aACd;YACD;gBACE,EAAE,EAAE,SAAS;gBACb,KAAK,EAAE,SAAS;gBAChB,WAAW,EAAE,CAAC,YAAY,CAAC;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,mFAAiB;gBACvB,UAAU,EAAE,SAAS;gBACrB,SAAS,EAAE,EAAE;aACd;SACF,CAAC;QACF,WAAM,GAAkB;YACtB,EAAE,EAAE,+BAA+B;YACnC,gBAAgB,EAAE,KAAK;YACvB,OAAO,EAAE;gBACP,MAAM,EAAE;oBACN,KAAK,EAAE,CAAC,QAAQ,EAAE,oBAAoB,EAAE,qBAAqB,CAAC;iBAC/D;gBACD,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,EAAE;gBACf,KAAK,EAAE,CAAC,QAAQ,EAAE,oBAAoB,EAAE,qBAAqB,CAAC;aAC/D;YACD,IAAI,EAAE;gBACJ,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC;aACb;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,KAAK;gBACX,OAAO,EAAE,IAAI;aACd;YACD,YAAY,EAAE,+BAA+B;YAC7C,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,oFAAkB;SAC/B,CAAC;IAMC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChB,IAAI,6HAAiE,EAAE,CAC1E,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CACxC,8HAAkE,CACnE,CAAC;QACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;;YACrE,IAAI,CAAC,MAAM,CAAC,UAAU,GAAe,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,qBAAqB,0CAAE,MAAM,CAAC;YAClE,IAAI,CAAC,mBAAmB,GAAG,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,qBAAqB,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;gBACpE,uCACK,CAAC,KACJ,aAAa,EAAE,GAAG,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAC7C;YACJ,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,CAAS,EAAE,eAAgC;QACjD,OAAO,eAAe,CAAC,WAAW,CAAC;IACrC,CAAC;IAED,4BAA4B;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qJAA+B,EAAE;YAChD,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,MAAM;YAChB,oBAAoB;YACpB,IAAI,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE;YAE3B,aAAa,EAAE,oBAAoB;YACnC,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IACD,uBAAuB,CAAC,IAAI;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qJAA+B,EAAE;YAChD,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,MAAM;YAChB,mBAAmB;YACnB,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;YAEtB,aAAa,EAAE,oBAAoB;YACnC,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,IAAI,CAAC,CAAC;QACrD,CAAC,CAAC;IACJ,CAAC;IACD,eAAe,CAAC,IAAI;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gHAAoB,EAAE;YACrC,QAAQ,EAAE,OAAO;YACjB,uBAAuB;YACvB,kBAAkB;YAClB,KAAK,EAAE,MAAM;YACb,mBAAmB;YACnB,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;YAEtB,aAAa,EAAE,oBAAoB;YACnC,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,kBAAkB;YAAE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACrE,CAAC;;4GA7JU,8BAA8B;4HAA9B,8BAA8B;QCpB3C,yEAA4F;QACxF,8EAAgG;QAC5F,0IAIc;QACd,0IAIc;QACd,0IAEc;QACd,0IAEc;QACd,0IAKc;QACd,0IAOc;QAClB,4DAAW;QACf,4DAAM;;QAhCQ,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;;;;;;;;ACAgC;AAKJ;AAEjB;AACV;;;AAGzB,MAAM,iBAAiB;IAC5B,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC7B,CAAC;IAEJ,qBAAqB;QACnB,MAAM,WAAW,GAAG,IAAI,6DAAW,CAAC;YAClC,oBAAoB,EAAE,EAAE;YACxB,6BAA6B,EAAE,GAAG;SACnC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CACF,gFAAsB,GAAG,oBAAoB,EAC7C,EAAE,OAAO,EAAE,WAAW,EAAE,CACzB,CAAC;IACN,CAAC;IAED,kBAAkB,CAAC,WAAW;QAC5B,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CACH,gFAAsB,GAAG,oBAAoB,EAC7C,WAAW,CACZ,CAAC;IACN,CAAC;IAED,qBAAqB,CAAC,WAAW;QAC/B,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CACF,gFAAsB,GAAG,oBAAoB,EAC7C,WAAW,CACZ,CAAC;IACN,CAAC;IACD,gBAAgB,CAAC,GAAG;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACrE,CAAC;IACD,WAAW,CAAC,KAAU;QACpB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,YAAY,GAAG,UAAU,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAChD;aAAM;YACL,YAAY,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SACzE;QACD,OAAO,gDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;;kFA3CU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB;;;;;;;;;;;;;;;;;;;;ACZwD;AACG;AACL;AAMlF;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLF,IAAY,mBAcX;AAdD,WAAY,mBAAmB;IAC7B,uGAAgF;IAChF,wGAAiF;IACjF,wGAAiF;IACjF,+FAAwE;IACxE,wGAAiF;IACjF,oHAA6F;IAC7F,wGAAiF;IACjF,oHAA6F;IAC7F,mGAA4E;IAC5E,4GAAqF;IACrF,wHAAiG;IACjG,4GAAqF;IACrF,wHAAiG;AACnG,CAAC,EAdW,mBAAmB,KAAnB,mBAAmB,QAc9B;AAEM,MAAM,gCAAgC;IAA7C;QACW,SAAI,GAAG,mBAAmB,CAAC,4BAA4B,CAAC;IACnE,CAAC;CAAA;AAEM,MAAM,gCAAgC;IAE3C,YAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QADpC,SAAI,GAAG,mBAAmB,CAAC,6BAA6B,CAAC;IAClB,CAAC;CAClD;AAEM,MAAM,gCAAgC;IAE3C,YAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QADzB,SAAI,GAAG,mBAAmB,CAAC,6BAA6B,CAAC;IAC7B,CAAC;CACvC;AAEM,MAAM,yBAAyB;IAEpC,YAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QADlC,SAAI,GAAG,mBAAmB,CAAC,4BAA4B,CAAC;IACnB,CAAC;CAChD;AAEM,MAAM,gCAAgC;IAE3C,YAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QADlC,SAAI,GAAG,mBAAmB,CAAC,6BAA6B,CAAC;IACpB,CAAC;CAChD;AAEM,MAAM,gCAAgC;IAE3C,YAAmB,OAAY;QAAZ,YAAO,GAAP,OAAO,CAAK;QADtB,SAAI,GAAG,mBAAmB,CAAC,6BAA6B,CAAC;IAChC,CAAC;CACpC;AAEM,MAAM,2BAA2B;IAEtC,YAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QADlC,SAAI,GAAG,mBAAmB,CAAC,8BAA8B,CAAC;IACrB,CAAC;CAChD;AAEM,MAAM,kCAAkC;IAE7C,YAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QADlC,SAAI,GAAG,mBAAmB,CAAC,+BAA+B,CAAC;IACtB,CAAC;CAChD;AAEM,MAAM,kCAAkC;IAE7C,YAAmB,OAAY;QAAZ,YAAO,GAAP,OAAO,CAAK;QADtB,SAAI,GAAG,mBAAmB,CAAC,+BAA+B,CAAC;IAClC,CAAC;CACpC;AAEM,MAAM,+BAA+B;IAE1C;QADS,SAAI,GAAG,mBAAmB,CAAC,mCAAmC,CAAC;IACzD,CAAC;CACjB;AAEM,MAAM,+BAA+B;IAE1C;QADS,SAAI,GAAG,mBAAmB,CAAC,mCAAmC,CAAC;IACzD,CAAC;CACjB;AAEM,MAAM,iCAAiC;IAE5C;QADS,SAAI,GAAG,mBAAmB,CAAC,qCAAqC,CAAC;IAC3D,CAAC;CACjB;AAEM,MAAM,iCAAiC;IAE5C;QADS,SAAI,GAAG,mBAAmB,CAAC,qCAAqC,CAAC;IAC3D,CAAC;CACjB;;;;;;;;;;;;;;;;;;;;;;;;;;AChF6D;AAQtC;AAE0D;AACxC;AAQC;;;;;AAGpC,MAAM,4BAA4B;IACvC,YACU,QAAiB,EACjB,IAAgB,EAChB,iBAAoC;QAFpC,aAAQ,GAAR,QAAQ,CAAS;QACjB,SAAI,GAAJ,IAAI,CAAY;QAChB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAG9C,wBAAmB,GAAG,2DAAY,CAAC,GAAG,EAAE;YACtC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACvB,qDAAM,CACJ,8GAC+B,CAChC,EACD,yDAAS,CACP,IAAI,8FAA6D,EAAE,CACpE,EACD,wDAAQ,CAAC,CAAC,MAAM,EAAE,EAAE,CAClB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC,IAAI,CACjD,mDAAG,CACD,CAAC,kBAAkB,EAAE,EAAE,CACrB,IAAI,8FAAgC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAChE,EACD,0DAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CACnB,wCAAY,CAAC,IAAI,8FAAgC,CAAC,KAAK,CAAC,CAAC,CAC1D,CACF,CACF,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,wBAAmB,GAAG,2DAAY,CAAC,GAAG,EAAE;YACtC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACvB,qDAAM,CACJ,8GAC+B,CAChC,EACD,yDAAS,CACP,CACE,kBAA0E,EAC1E,EAAE;gBACF,OAAO,IAAI,CAAC,iBAAiB;qBAC1B,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC;qBAC9C,IAAI,CACH,mDAAG,CACD,CAAC,qBAAqB,EAAE,EAAE,CACxB,IAAI,8FAAgC,CAClC,qBAAqB,CAAC,IAAI,CAC3B,CACJ,EACD,0DAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CACnB,wCAAY,CAAC,IAAI,8FAAgC,CAAC,KAAK,CAAC,CAAC,CAC1D,CACF,CAAC;YACN,CAAC,CACF,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,0BAAqB,GAAG,2DAAY,CAAC,GAAG,EAAE;YACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACvB,qDAAM,CACJ,gHACiC,CAClC,EACD,yDAAS,CACP,CACE,qBAA+E,EAC/E,EAAE;gBACF,OAAO,IAAI,CAAC,iBAAiB;qBAC1B,qBAAqB,CAAC,qBAAqB,CAAC,OAAO,CAAC;qBACpD,IAAI,CACH,mDAAG,CACD,CAAC,wBAAwB,EAAE,EAAE,CAC3B,IAAI,gGAAkC,CACpC,wBAAwB,CAAC,IAAI,CAC9B,CACJ,EACD,0DAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CACnB,wCAAY,CAAC,IAAI,gGAAkC,CAAC,KAAK,CAAC,CAAC,CAC5D,CACF,CAAC;YACN,CAAC,CACF,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IA/EA,CAAC;;wGALO,4BAA4B;6HAA5B,4BAA4B,WAA5B,4BAA4B;;;;;;;;;;;;;;;;;;ACnBE;AAC8B;AAWzE,MAAM,YAAY,GAAyB;IACzC,qBAAqB,EAAE,EAAE;IACzB,KAAK,EAAE,EAAE;IACT,6BAA6B,EAAE,IAAI;IACnC,2BAA2B,EAAE,EAAE;IAC/B,UAAU,EAAE,oFAAkB;CAC/B,CAAC;AAEK,MAAM,yBAAyB,GAAG,iBAAiB,CAAC;AAEpD,SAAS,sBAAsB,CACpC,QAA8B,YAAY,EAC1C,MAA8B;IAE9B,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,8GAAgD,CAAC,CAAC;YACrD,uCACK,KAAK,KACR,KAAK,EAAE,IAAI,EACX,UAAU,EAAE,oFAAkB,IAC9B;SACH;QACD,KAAK,+GAAiD;YACpD,uCACK,KAAK,KACR,UAAU,EAAE,oFAAkB,EAC9B,qBAAqB,EAAE,MAAM,CAAC,OAAO,IACrC;QAEJ,KAAK,+GAAiD;YACpD,uCACK,KAAK,KACR,UAAU,EAAE,oFAAkB,EAC9B,KAAK,EAAE,MAAM,CAAC,OAAO,IACrB;QACJ,KAAK,8GAAgD;YACnD,uCACK,KAAK,KACR,6BAA6B,EAAE,IAAI,IACnC;QACJ,KAAK,+GAAiD;YACpD,uCACK,KAAK,KACR,6BAA6B,EAAE,MAAM,CAAC,OAAO,EAC7C,2BAA2B,EAAE,EAAE,EAC/B,qBAAqB,EAAE;oBACrB,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,qBAAqB;oBAC/B,MAAM,CAAC,OAAO;iBACf,IACD;QAEJ,KAAK,qHAAuD,CAAC,CAAC;YAC5D,uCACK,KAAK,KACR,6BAA6B,EAAE,IAAI,EACnC,2BAA2B,EAAE,EAAE,IAC/B;SACH;QAED,KAAK,+GAAiD;YACpD,uCACK,KAAK,KACR,2BAA2B,EAAE,MAAM,CAAC,OAAO,IAC3C;QAEJ,KAAK,qHAAuD;YAC1D,uCACK,KAAK,KACR,2BAA2B,EAAE,EAAE,EAC/B,6BAA6B,EAAE,IAAI,IACnC;QAEJ,KAAK,iHAAmD;YACtD,MAAM,aAAa,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,qBAAqB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBAChE,OAAO,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;YACnE,CAAC,CAAC,CAAC;YAEH,uCACK,KAAK,KACR,2BAA2B,EAAE,EAAE,EAC/B,KAAK,EAAE,EAAE,EACT,6BAA6B,EAAE,MAAM,CAAC,OAAO,EAC7C,qBAAqB,EAAE,aAAa,IACpC;QAEJ,KAAK,uHAAyD;YAC5D,uCACK,KAAK,KACR,6BAA6B,EAAE,IAAI,EACnC,2BAA2B,EAAE,EAAE,IAC/B;QAEJ,KAAK,iHAAmD;YACtD,uCACK,KAAK,KACR,2BAA2B,EAAE,MAAM,CAAC,OAAO,IAC3C;QAEJ,KAAK,uHAAyD;YAC5D,uCACK,KAAK,KACR,2BAA2B,EAAE,EAAE,EAC/B,6BAA6B,EAAE,IAAI,IACnC;QAEJ;YACE,yBACK,KAAK,EACR;KACL;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;AC9HmE;AAIzB;AAE3C,MAAM,6BAA6B,GACjC,kEAAqB,CAAuB,uFAAyB,CAAC,CAAC;AAElE,MAAM,+BAA+B,GAAG,2DAAc,CAC3D,6BAA6B,EAC7B,CAAC,KAA2B,EAAE,EAAE,CAAC,KAAK,CACvC,CAAC;AAEK,MAAM,gCAAgC,GAAG,2DAAc,CAC5D,6BAA6B,EAC7B,CAAC,KAA2B,EAAE,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAC9C,CAAC;AAEK,MAAM,yBAAyB,GAAG,2DAAc,CACrD,6BAA6B,EAC7B,CAAC,KAA2B,EAAE,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,6BAA6B,CACtE,CAAC;AAEK,MAAM,yBAAyB,GAAG,2DAAc,CACrD,6BAA6B,EAC7B,CAAC,KAA2B,EAAE,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,2BAA2B,CACpE,CAAC;AAEK,MAAM,4BAA4B,GAAG,2DAAc,CACxD,6BAA6B,EAC7B,CAAC,KAA2B,EAAE,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,6BAA6B,CACtE,CAAC;AAEK,MAAM,4BAA4B,GAAG,2DAAc,CACxD,6BAA6B,EAC7B,CAAC,KAA2B,EAAE,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,2BAA2B,CACpE,CAAC;;;;;;;;;;;;;;;;;;;;ACpCqD;AACN;AACa;AAC+C;;;AAE7G,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,WAAW,EAAE,CAAC,yDAAS,CAAC;QACxB,SAAS,EAAE,sEAAa;QACxB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,sHAA8B;gBACzC,WAAW,EAAE,CAAC,yDAAS,CAAC;gBACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;aACxB;SACF;KACF;CACF,CAAC;AAMK,MAAM,uBAAuB;;8FAAvB,uBAAuB;oHAAvB,uBAAuB;wHAHzB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,uBAAuB,oFAFxB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBuB;AACwB;AACsC;AACjD;AAC6D;AAElE;AACW;AACP;AACD;AACuC;AAC1C;AACI;AACA;AACQ;AACD;AACL;AACJ;AACc;AACR;AACd;AACQ;AACF;AACb;AACyE;AACrE;AACiE;AAC7C;AACkB;AAC3B;AACI;AACI;AACO;AACb;AACJ;AACY;;;;AAkD5D,MAAM,gBAAgB;;gFAAhB,gBAAgB;8GAAhB,gBAAgB;mHAVhB;QACT;YACE,OAAO,EAAE,oEAAiB;YAC1B,QAAQ,EAAE,wEAAyB;YACnC,KAAK,EAAE,IAAI;SACZ;QACD,4EAAiB;QACjB,EAAE,OAAO,EAAE,oEAAiB,EAAE,QAAQ,EAAE,8EAAgB,EAAE,KAAK,EAAE,IAAI,EAAC;KACvE,YAvCQ;YACP,0DAAY;YACZ,gFAAuB;YACvB,oEAAU;YACV,kEAAa;YACb,sEAAe;YACf,+DAAY;YACZ,wDAAW;YACX,gEAAmB;YACnB,8EAAmB;YACnB,6EAAkB;YAClB,wEAAmB;YACnB,wEAAgB;YAChB,oEAAc;YACd,kFAAqB;YACrB,sEAAqB;YACrB,0EAAiB;YACjB,kEAAa;YACb,yDAAU;YACV,oEAAc;YACd,kEAAa;YACb,gEAAsB,CACpB,qHAAyD,EACzD,kHAAsD,CACvD;YACD,oEAAwB,CAAC,CAAC,wHAA4B,CAAC,CAAC;YACxD,4EAAkB;YAClB,iFAAiB;YACjB,sEAAe;YACf,kEAAa;SACd;oIAWU,gBAAgB,mBA9CzB,sHAA8B;QAC9B,kIAA+B;QAC/B,0GAAuB;QACvB,8FAAoB,aAGpB,0DAAY;QACZ,gFAAuB;QACvB,oEAAU;QACV,kEAAa;QACb,sEAAe;QACf,+DAAY;QACZ,wDAAW;QACX,gEAAmB;QACnB,8EAAmB;QACnB,6EAAkB;QAClB,wEAAmB;QACnB,wEAAgB;QAChB,oEAAc;QACd,kFAAqB;QACrB,sEAAqB;QACrB,0EAAiB;QACjB,kEAAa;QACb,yDAAU;QACV,oEAAc;QACd,kEAAa,kIAMb,4EAAkB;QAClB,iFAAiB;QACjB,sEAAe;QACf,kEAAa","sources":["./src/app/super-admin/dialog/add-edit-service-provider/add-edit-service-provider.component.ts","./src/app/super-admin/dialog/add-edit-service-provider/add-edit-service-provider.component.html","./src/app/super-admin/dialog/add-edit-sp-admin/add-edit-sp-admin.component.ts","./src/app/super-admin/dialog/add-edit-sp-admin/add-edit-sp-admin.component.html","./src/app/super-admin/dialog/manage-admin/manage-admin.component.ts","./src/app/super-admin/dialog/manage-admin/manage-admin.component.html","./src/app/super-admin/manage-service-provider/manage-service-provider.component.ts","./src/app/super-admin/manage-service-provider/manage-service-provider.component.html","./src/app/super-admin/service/super-admin.service.ts","./src/app/super-admin/store/manage-service-provider/index.ts","./src/app/super-admin/store/manage-service-provider/manage-service-provider.actions.ts","./src/app/super-admin/store/manage-service-provider/manage-service-provider.effects.ts","./src/app/super-admin/store/manage-service-provider/manage-service-provider.reducer.ts","./src/app/super-admin/store/manage-service-provider/manage-service-provider.selector.ts","./src/app/super-admin/super-admin-routing.module.ts","./src/app/super-admin/super-admin.module.ts"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ServiceProvider } from \"../../manage-service-provider/service-provider.interface\";\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material/dialog\";\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\nimport {\n  ManageServiceProvideStoreActions,\n  ManageServiceProvideStoreSelectors,\n  ManageServiceProvideStoreState,\n} from \"../../store/manage-service-provider\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport csc from \"country-state-city\";\nimport { Subscription } from \"rxjs\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n  selector: \"app-add-edit-service-provider\",\n  templateUrl: \"./add-edit-service-provider.component.html\",\n  styleUrls: [\"./add-edit-service-provider.component.scss\"],\n})\nexport class AddEditServiceProviderComponent implements OnInit, OnDestroy {\n  addServiceProviderForm: FormGroup;\n  submitted: boolean;\n  // for country code\n  separateDialCode = false;\n  SearchCountryField = SearchCountryField;\n  TooltipLabel;\n  CountryISO = CountryISO;\n  preferredCountries = [\"in\", \"us\", \"za\"];\n  validCountry = true;\n  selectedCountry: string;\n  serviceProvider: ServiceProvider;\n  serviceProviderData: ServiceProvider;\n  countryCode = [];\n  addSpSuccessSubs: Subscription;\n  addSpFailureSubs: Subscription;\n  updateSpSuccessSubs: Subscription;\n  updateSpFailureSubs: Subscription;\n\n  constructor(\n      private dialogRef: MatDialogRef<AddEditServiceProviderComponent>,\n      private formBuilder: FormBuilder,\n      @Inject(MAT_DIALOG_DATA) public data: any,\n      private store$: Store<ManageServiceProvideStoreState.ServiceProviderState>,\n      private authService: AuthenticationService,\n      private snackbar: SnackbarService,\n      private dialog : MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.serviceProviderData = this.data.spData;\n    this.createAddServiceProviderForm();\n    this.countryCode = csc.getAllCountries() || [];\n    this.doSubscriptionAddEditSP();\n  }\n\n  doSubscriptionAddEditSP() {\n    if (this.serviceProviderData === undefined) {\n      this.addSpSuccessSubs = this.store$\n          .select(ManageServiceProvideStoreSelectors.addServiceProviderSuccess)\n          .subscribe((data) => {\n            if (data) {\n              this.dialogRef.close();\n            }\n          });\n      this.addSpFailureSubs = this.store$\n          .select(ManageServiceProvideStoreSelectors.addServiceProviderFailure)\n          .subscribe((data) => {\n            if (data) {\n              this.snackbar.openSnackBar(data.errorMessage, \"top\", \"center\");\n            }\n          });\n    } else {\n      this.updateSpSuccessSubs = this.store$\n          .select(ManageServiceProvideStoreSelectors.updateServiceProviderSuccess)\n          .subscribe((data) => {\n            if (data) {\n              this.dialogRef.close();\n            }\n          });\n\n      this.updateSpFailureSubs = this.store$\n          .select(ManageServiceProvideStoreSelectors.updateServiceProviderFailure)\n          .subscribe((data) => {\n            if (data) {\n              this.snackbar.openSnackBar(data.errorMessage, \"top\", \"center\");\n            }\n          });\n    }\n  }\n\n  createAddServiceProviderForm() {\n    this.addServiceProviderForm = this.formBuilder.group(\n        {\n          user_id:[\n            this.serviceProviderData !== undefined ? this.serviceProviderData.id : \"\",\n          ],\n          companyName: [\n            this.serviceProviderData !== undefined\n                ? this.serviceProviderData.companyName\n                : \"\",\n            [\n              Validators.required,\n              Validators.pattern(\"^[a-zA-Z0-9]{1}[a-zA-Z0-9-_ ]*$\"),\n              Validators.maxLength(128),\n              Validators.minLength(2)\n            ],\n          ],\n          addressLine1: [\n            this.serviceProviderData !== undefined\n                ? this.serviceProviderData.addressLine1\n                : \"\",\n            [Validators.pattern(\"^(?!\\\\s+$)[#&()./0-9a-zA-Z\\s ,-]+$\"),Validators.maxLength(128),Validators.minLength(2)],\n          ],\n          addressLine2: [\n            this.serviceProviderData !== undefined\n                ? this.serviceProviderData.addressLine2\n                : \"\",\n            [Validators.pattern(\"^(?!\\\\s+$)[#&()./0-9a-zA-Z\\s ,-]+$\"),Validators.maxLength(128),Validators.minLength(2)],\n          ],\n          firstName: [\n            this.serviceProviderData !== undefined\n                ? this.serviceProviderData.firstName\n                : \"\",\n            [\n              Validators.required,\n              Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n              Validators.maxLength(25)\n            ],\n          ],\n          lastName: [\n            this.serviceProviderData !== undefined\n                ? this.serviceProviderData.lastName\n                : \"\",\n            [\n              Validators.required,\n              Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n              Validators.maxLength(25)\n            ],\n          ],\n          phoneNo: [\n            this.serviceProviderData !== undefined\n                ? this.serviceProviderData.phoneNo\n                : \"\",\n            [_validatePhoneNumberInput.bind(this)]\n          ],\n          email: [\n            this.serviceProviderData !== undefined\n                ? this.serviceProviderData.email\n                : \"\",\n            [ Validators.email],\n          ],\n        },\n          /*{ validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }*/\n    );\n  \n  }\n\n  get f() {\n    return this.addServiceProviderForm.controls;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  resetNumber() {\n    this.addServiceProviderForm.patchValue({\n      phoneNo: {\n        number: undefined,\n        countryCode: CountryISO.India,\n      },\n    });\n  }\n\n  saveServiceProvider() {\n    this.submitted = true;\n    if (this.addServiceProviderForm.invalid) {\n      this.addServiceProviderForm.markAllAsTouched();\n      return;\n    }\n    this.serviceProvider = this.addServiceProviderForm.value;\n    if (\n        this.addServiceProviderForm.get(\"phoneNo\").value !== null &&\n        this.addServiceProviderForm.get(\"phoneNo\").value !== \"\"\n    ) {\n      const parsedValue = parsePhoneNumberFromString(this.addServiceProviderForm\n          .get(\"phoneNo\")\n          .value);\n      this.serviceProvider.phoneNo = parsedValue.number.toString();\n    }\n\n    if (this.serviceProviderData === undefined) {\n      this.serviceProvider.isActive = true;\n      this.serviceProvider.createdBy = this.authService.getLoggedUser().email;\n      this.serviceProvider.createdById = this.authService.getLoggedUser().uId;\n      const cDialog = this.dialog.open(ConfirmDialogComponent,{\n        maxWidth: \"90vw\",\n        width: \"500px\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data: {\n          body:{\n            title: \"super_admin.add_service_provider.label_caution\",\n            text :\"super_admin.add_service_provider.label_confirm_spa_1\",\n            message : \"super_admin.add_service_provider.label_confirm_spa_2\"\n          }\n        }\n      });\n      cDialog.afterClosed().subscribe((confirm)=>{\n        if(confirm){\n          this.store$.dispatch(\n              new ManageServiceProvideStoreActions.SaveServiceProviderAction(\n                  this.serviceProvider\n              )\n          );\n        }\n      })\n\n    } else {\n      this.serviceProvider.modifiedBy = this.authService.getLoggedUser().email;\n      this.serviceProvider.modifiedById = this.authService.getLoggedUser().uId;\n      this.serviceProvider.id = this.serviceProviderData.id;\n      this.store$.dispatch(\n          new ManageServiceProvideStoreActions.UpdateServiceProviderAction(\n              this.serviceProvider\n          )\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.doUnsubscribeAddEditSP();\n  }\n\n  doUnsubscribeAddEditSP() {\n    if (this.serviceProviderData === undefined) {\n      if (this.addSpSuccessSubs) this.addSpSuccessSubs.unsubscribe();\n      if (this.addSpFailureSubs) this.addSpFailureSubs.unsubscribe();\n      this.store$.dispatch(\n          new ManageServiceProvideStoreActions.AfterSaveServiceProviderSuccess()\n      );\n      this.store$.dispatch(\n          new ManageServiceProvideStoreActions.AfterSaveServiceProviderFailure()\n      );\n    } else {\n      if (this.updateSpSuccessSubs) this.updateSpSuccessSubs.unsubscribe();\n      if (this.updateSpFailureSubs) this.updateSpFailureSubs.unsubscribe();\n      this.store$.dispatch(\n          new ManageServiceProvideStoreActions.AfterUpdateServiceProviderSuccess()\n      );\n      this.store$.dispatch(\n          new ManageServiceProvideStoreActions.AfterUpdateServiceProviderFailure()\n      );\n    }\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.addServiceProviderForm.controls[controlName].hasError(errorName);\n  }\n  charsOnly(control: string, event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title *ngIf=\"serviceProviderData === undefined; else edit\">\n        {{ 'super_admin.add_service_provider.label_add_sp' | translate }}\n    </h1>\n    <ng-template #edit>\n        <h1 mat-dialog-title>\n            {{ 'super_admin.add_service_provider.label_edit_sp' | translate }}\n        </h1>\n    </ng-template>\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n    <form [formGroup]=\"addServiceProviderForm\" class=\"dialog-form\" autocomplete=\"off\" id=\"addServiceProviderForm\">\n        <div *ngIf=\"serviceProviderData !== undefined\">\n            <mat-label for=\"sp-company-name\" class=\"matlabel\" [class.disabled]=\"serviceProviderData\">{{\n                'shared_label.label_id' | translate }}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"serviceProviderData\">\n                <input matInput formControlName=\"user_id\" [readonly]=\"serviceProviderData\" />\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-label for=\"sp-company-name\" class=\"matlabel\" [class.disabled]=\"serviceProviderData\">{{\n                'shared_label.label_company_name' | translate }}\n                <span class=\"required-star\" *ngIf=\"serviceProviderData === undefined\">* </span>\n                <!--<span class=\"required-star cannotEdit\" *ngIf=\"serviceProviderData === undefined\">{{ 'shared_label.label_company_name_change' | translate }}</span>\n                <span class=\"required-star cannotEdit\" *ngIf=\"serviceProviderData\">{{ 'shared_label.label_cannot_edit' | translate }}</span>-->\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"serviceProviderData\"\n                [ngClass]=\"addServiceProviderForm.get('companyName').hasError('pattern') && addServiceProviderForm.get('companyName').touched ? 'error-msg': ''\">\n                <input matInput autocomplete=\"off\" formControlName=\"companyName\" [readonly]=\"serviceProviderData\"\n                    maxlength=\"128\" />\n                <mat-error *ngIf=\"hasError('companyName', 'required') && submitted\">{{\n                    'error_message.err_company_name_required' | translate }}\n                </mat-error>\n                <mat-error *ngIf=\"hasError('companyName','pattern')\">{{ 'error_message.err_company_name_pattern' |\n                    translate }}\n                </mat-error>\n                <mat-error\n                    *ngIf=\"(hasError('companyName','minlength') || hasError('companyName','maxlength')) && !hasError('companyName','pattern')\">\n                    {{ 'error_message.err_company_name_range' | translate }}\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"mb-1\">\n            <mat-label for=\"sp-address-line-1\" class=\"matlabel\">{{ 'shared_label.label_address' | translate }}\n            </mat-label>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\"\n                [ngClass]=\"addServiceProviderForm.get('addressLine1').hasError('pattern') && addServiceProviderForm.get('addressLine1').touched ? 'error-msg': ''\">\n                <input matInput autocomplete=\"off\" placeholder=\"{{ 'shared_label.label_line_1' | translate }}\"\n                    formControlName=\"addressLine1\" maxlength=\"128\" />\n                <mat-error *ngIf=\"hasError('addressLine1','pattern')\">\n                    {{'error_message.err_valid_address'|translate}}\n                </mat-error>\n                <mat-error\n                *ngIf=\"(hasError('addressLine1','minlength') || hasError('addressLine1','maxlength')) && !hasError('addressLine1','pattern')\">\n                    {{'error_message.err_address_range' | translate}}\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\" class=\"formfield-control\"\n                [ngClass]=\"addServiceProviderForm.get('addressLine2').hasError('pattern') && addServiceProviderForm.get('addressLine2').touched ? 'error-msg': ''\">\n                <input matInput autocomplete=\"off\" placeholder=\"{{ 'shared_label.label_line_2' | translate }}\"\n                    formControlName=\"addressLine2\" maxlength=\"128\" />\n                <mat-error *ngIf=\"hasError('addressLine2','pattern')\">\n                    {{'error_message.err_valid_address'|translate}}\n                </mat-error>\n                <mat-error\n                    *ngIf=\"(hasError('addressLine2','minlength') || hasError('addressLine2','maxlength')) && !hasError('addressLine2','pattern')\">\n                    {{'error_message.err_address_range' | translate}}\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <fieldset class=\"scheduler-border\">\n            <legend class=\"scheduler-border\">\n                <div>\n                    <mat-icon class=\"me-2 material-icons-outlined\">account_circle</mat-icon>\n                    <label class=\"facility-details-label\">{{\n                        'shared_label.label_contact_details' | translate\n                        }}</label>\n                </div>\n            </legend>\n            <div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-label for=\"sp-contact-person-fname\" class=\"matlabel\">{{ 'shared_label.label_first_name' |\n                            translate }}\n                            <span class=\"required-star\">*</span>\n                        </mat-label>\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\"\n                            [ngClass]=\"addServiceProviderForm.get('firstName').hasError('pattern') && addServiceProviderForm.get('firstName').touched ? 'error-msg': ''\">\n                            <input matInput autocomplete=\"off\" formControlName=\"firstName\"\n                                (keypress)=\"charsOnly('firstName', $event)\" />\n                            <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\">{{\n                                'error_message.err_first_name_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"hasError('firstName','pattern')\">\n                                {{'error_message.err_first_name_char_only' | translate}}</mat-error>\n                            <mat-error *ngIf=\"hasError('firstName','maxlength') && !hasError('firstName','pattern')\">\n                                {{'error_message.err_first_name_range' | translate}}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-label for=\"sp-contact-person-lname\" class=\"matlabel\">{{ 'shared_label.label_last_name' |\n                            translate }}\n                            <span class=\"required-star\">*</span>\n                        </mat-label>\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\"\n                            [ngClass]=\"addServiceProviderForm.get('firstName').hasError('pattern') && addServiceProviderForm.get('firstName').touched ? 'error-msg': ''\">\n                            <input matInput autocomplete=\"off\" formControlName=\"lastName\"\n                                (keypress)=\"charsOnly('lastName', $event)\" />\n                            <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\">{{\n                                'error_message.err_last_name_required' | translate }}\n                            </mat-error>\n                            <mat-error *ngIf=\"hasError('lastName','pattern')\">{{'error_message.err_last_name_char_only'\n                                | translate}}</mat-error>\n                            <mat-error *ngIf=\"hasError('lastName','maxlength') && !hasError('lastName','pattern')\">\n                                {{'error_message.err_last_name_range' | translate}}</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-label for=\"sp-contact-email\" class=\"matlabel\">{{ 'shared_label.label_email' |\n                            translate }}\n                            <!--<<span class=\"required-star\">**</span>-->\n                        </mat-label>\n                        <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n                            <input matInput autocomplete=\"off\" formControlName=\"email\" [maxLength]=\"320\" />\n                            <mat-error *ngIf=\"hasError('email','email')\" >{{'error_message.err_invalid_email'|translate}}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-label for=\"sp-contact-person-phone\" class=\"matlabel\">{{ 'shared_label.label_phone_no' |\n                            translate }}\n                            <!--<span class=\"required-star\">**</span>-->\n                        </mat-label>\n                        <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n                        <mat-error class=\"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\">\n                            {{\"errors.err_invalid_phone_no\" | translate}}\n                        </mat-error>\n                    </div>\n\n                </div>\n                <!--                <mat-error *ngIf=\"submitted && !addServiceProviderForm.getRawValue()?.email && !addServiceProviderForm.getRawValue()?.phoneNo\">-->\n                <!--                    {{ \"manage_users_module.edituser.message1\" | translate }}-->\n                <!--                </mat-error>-->\n            </div>\n\n            <!--<div class=\"email-phone-info-text\">\n                **{{ 'error_message.err_email_phone_mandatory' | translate }}\n            </div>-->\n        </fieldset>\n        <div class=\"required-text\">\n            <span>* {{ 'error_message.err_mandatory' | translate }}</span>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button color=\"warn\" mat-flat-button type=\"button\" class=\"fill-btn\" (click)=\"onClose()\">\n        {{ 'buttons.btn_cancel' | translate }}\n    </button>\n    <button type=\"button\" mat-flat-button color=\"primary\" class=\"fill-btn\" (click)=\"saveServiceProvider()\"\n        *ngIf=\"serviceProviderData\">\n        {{ 'buttons.btn_save' | translate }}\n    </button>\n    <button type=\"button\" color=\"primary\" mat-flat-button class=\"fill-btn\" (click)=\"saveServiceProvider()\"\n        *ngIf=\"serviceProviderData === undefined\">\n        {{ 'buttons.btn_add' | translate }}\n    </button>\n</mat-dialog-actions>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { User, UserErrors } from \"../../../interfaces/user.interface\";\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material/dialog\";\nimport { SpinnerService } from \"src/app/shared/_services/spinner.service\";\nimport { atLeastOne } from \"../../../validators/custom-validator-at-least-once.validator\";\nimport { SearchCountryField, CountryISO } from \"ngx-intl-tel-input\";\nimport {\n  ManageAdminStoreActions,\n  ManageAdminStoreSelectors,\n  ManageAdminStoreState,\n} from \"../../../shared/store/manage-admin\";\nimport { Store } from \"@ngrx/store\";\nimport { AuthenticationService } from \"@services/authentication.service\";\nimport { Subscription } from \"rxjs\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport {_validatePhoneNumberInput} from \"../../../validators/phone-no.validator\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\nimport { ConfirmDialogComponent } from \"../../../shared/confirm-dialog/confirm-dialog.component\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: \"app-add-edit-sp-admin\",\n  templateUrl: \"./add-edit-sp-admin.component.html\",\n  styleUrls: [\"./add-edit-sp-admin.component.scss\"],\n})\nexport class AddEditSpAdminComponent implements OnInit, OnDestroy {\n  addEditForm: FormGroup;\n  submitted: boolean;\n  spAdminData: User;\n  separateDialCode = false;\n  SearchCountryField = SearchCountryField;\n  TooltipLabel;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [\n    CountryISO.India,\n    CountryISO.UnitedStates,\n    CountryISO.SouthAfrica,\n  ];\n  validCountry = true;\n  spAdmin: User;\n  spId: string;\n  addManageAdminSuccessSubs: Subscription;\n  addManageAdminFailureSubs: Subscription;\n  updateManageAdminSuccessSubs: Subscription;\n  updateManageAdminFailureSubs: Subscription;\n\n  constructor(\n    private dialogRef: MatDialogRef<AddEditSpAdminComponent>,\n    private formBuilder: FormBuilder,\n    private spinnerService: SpinnerService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    private authService: AuthenticationService,\n    private snackbar: SnackbarService,\n    private dialog : MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.spAdminData = this.data.spAdmin;\n    console.log(this.spAdminData);\n    this.spId = this.data.spId;\n    this.createAddEditForm();\n    this.doSubscriptionAddEditSPA();\n  }\n\n  doSubscriptionAddEditSPA() {\n    if (this.spAdminData === undefined) {\n      this.addManageAdminSuccessSubs = this.store$\n        .select(ManageAdminStoreSelectors.addManageAdminSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.addManageAdminFailureSubs = this.store$\n        .select(ManageAdminStoreSelectors.addManageAdminFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else if (data.errorMessage === 'SPA_ALREADY_EXIST') {\n              this.snackbar.openSnackBar(\"error_message.spa_already_exist\", \"top\", \"center\", true);\n            }else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    } else {\n      this.updateManageAdminSuccessSubs = this.store$\n        .select(ManageAdminStoreSelectors.updateManageAdminSuccess)\n        .subscribe((data) => {\n          if (data) {\n            this.dialogRef.close();\n          }\n        });\n\n      this.updateManageAdminFailureSubs = this.store$\n        .select(ManageAdminStoreSelectors.updateManageAdminFailure)\n        .subscribe((data) => {\n          if (data) {\n            if (data.errorMessage === UserErrors.EMAIL_OR_PHONE_ALREADY_EXIST) {\n              this.snackbar.openSnackBar(\"error_message.err_email_phone_exist\", \"top\", \"center\", true);\n            } else {\n              this.snackbar.openSnackBar(\"errors.err_generic_message\", \"top\", \"center\", true);\n            }\n          }\n        });\n    }\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  resetNumber() {\n    this.addEditForm.patchValue({\n      phoneNo: {\n        number: undefined,\n        countryCode: CountryISO.India,\n      },\n    });\n  }\n\n  createAddEditForm() {\n    this.addEditForm = this.formBuilder.group(\n      {\n        firstName: [\n          this.spAdminData !== undefined ? this.spAdminData.firstName : \"\",\n          [\n            Validators.required,\n            Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n            Validators.maxLength(25)\n          ],\n        ],\n        lastName: [\n          this.spAdminData !== undefined ? this.spAdminData.lastName : \"\",\n          [\n            Validators.required,\n            Validators.pattern(\"^[a-zA-Z]{1}[a-zA-Z ]*$\"),\n            Validators.maxLength(25)\n          ],\n        ],\n        phoneNo: [\n          this.spAdminData !== undefined ? this.spAdminData.phoneNo : \"\",\n          [_validatePhoneNumberInput.bind(this)]\n        ],\n        email: [\n          this.spAdminData !== undefined ? this.spAdminData.email : \"\",\n          [Validators.email]\n        ],\n      },\n      { validator: atLeastOne(Validators.required, [\"email\", \"phoneNo\"]) }\n    );\n  }\n\n  get f() {\n    return this.addEditForm.controls;\n  }\n\n  saveServiceProviderAdmin() {\n    this.submitted = true;\n    if (this.addEditForm.invalid) {\n      this.addEditForm.markAllAsTouched();\n      return;\n    }\n\n    this.spinnerService.show();\n    this.spAdmin = this.addEditForm.value;\n    this.spAdmin.serviceProviderId = this.spId;\n\n    if (\n      this.addEditForm.get(\"phoneNo\").value !== null &&\n      this.addEditForm.get(\"phoneNo\").value !== \"\"\n    ) {\n      const parsedValue = parsePhoneNumberFromString(this.addEditForm\n          .get(\"phoneNo\")\n          .value);\n      this.spAdmin.phoneNo = parsedValue.number.toString();\n    }\n\n    if (this.spAdminData === undefined) {\n      this.spAdmin.isActive = true;\n      this.spAdmin.roles = ['SPA'];\n      this.spAdmin.createdBy = this.authService.getLoggedUser().email;\n      this.spAdmin.createdById = this.authService.getLoggedUser().uId;\n      const cDialog = this.dialog.open(ConfirmDialogComponent,{\n        maxWidth: \"90vw\",\n        width: \"500px\",\n        backdropClass: \"backdropBackground\",\n        disableClose: true,\n        data: {\n          body:{\n            title: \"super_admin.add_service_provider_admin.label_add_administrator\",\n            text :\"super_admin.add_service_provider_admin.label_name_cannot_edited\",\n            message :\"super_admin.add_service_provider_admin.label_confirm_adding\",\n          }\n        }\n      });\n      cDialog.afterClosed().subscribe((boolean)=>{\n        let confirmValue =  boolean;\n        if(confirmValue){\n          this.store$.dispatch(\n            new ManageAdminStoreActions.SaveManageAdminAction(\n              this.spAdmin,\n              environment.dataApiUrl + 'service-providers/users/spa'\n            )\n          );\n        }\n      });\n      \n    } else {\n      this.spAdmin.modifiedBy = this.authService.getLoggedUser().email;\n      this.spAdmin.modifiedById = this.authService.getLoggedUser().uId;\n      this.spAdmin.id = this.spAdminData.id;\n      this.spAdmin.isActive = this.spAdminData.isActive;\n      this.store$.dispatch(\n        new ManageAdminStoreActions.UpdateManageAdminAction(\n          this.spAdmin,\n          environment.dataApiUrl + 'service-providers/users/spa'\n        )\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.doUnsubscribeAddEditSPA();\n  }\n\n  doUnsubscribeAddEditSPA() {\n    if (this.spAdminData === undefined) {\n      if (this.addManageAdminSuccessSubs)\n        this.addManageAdminSuccessSubs.unsubscribe();\n      if (this.addManageAdminFailureSubs)\n        this.addManageAdminFailureSubs.unsubscribe();\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterSaveManageAdminSuccessAction()\n      );\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterSaveManageAdminFailureAction()\n      );\n    } else {\n      if (this.updateManageAdminSuccessSubs)\n        this.updateManageAdminSuccessSubs.unsubscribe();\n      if (this.updateManageAdminFailureSubs)\n        this.updateManageAdminFailureSubs.unsubscribe();\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterUpdateManageAdminSuccessAction()\n      );\n      this.store$.dispatch(\n        new ManageAdminStoreActions.AfterUpdateManageAdminFailureAction()\n      );\n    }\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.addEditForm.controls[controlName].hasError(errorName);\n  }\n  charsOnly(control: string, event: KeyboardEvent) {\n    let charsOnlyPattern = /^[a-zA-Z ]$/;\n    let key = event.key;\n    if (charsOnlyPattern.test(key)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n}\n","<mat-card class=\"dialog-header\">\n    <h1 mat-dialog-title *ngIf=\"spAdminData === undefined; else edit\">\n        {{ 'super_admin.add_service_provider_admin.label_add_spa' | translate }}\n    </h1>\n    <ng-template #edit>\n        <h1 mat-dialog-title>\n            {{ 'super_admin.add_service_provider_admin.label_edit_spa' | translate }}\n        </h1>\n    </ng-template>\n    <!--<button mat-button mat-dialog-close>\n\t\t<mat-icon>close</mat-icon>\n\t</button>-->\n</mat-card>\n\n<mat-dialog-content class=\"mat-dialog-popup\">\n    <form [formGroup]=\"addEditForm\" class=\"dialog-form\" autocomplete=\"off\">\n        <div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <mat-label for=\"first-name\" class=\"matlabel\" [class.disabled]=\"spAdminData\">\n                        {{ 'shared_label.label_first_name' | translate }}\n                        <span class=\"required-star\" *ngIf=\"spAdminData === undefined\">* </span>\n                        <span class=\"required-star cannotEdit\" *ngIf=\"spAdminData\">{{\"shared_label.label_cannot_edit\"|translate}}</span>\n                    </mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"spAdminData\" [ngClass]=\"addEditForm.get('firstName').hasError('pattern') && addEditForm.get('firstName').touched ? 'error-msg': ''\" >\n                        <input matInput autocomplete=\"off\" formControlName=\"firstName\" [readonly]=\"spAdminData\" (keypress)=\"charsOnly('firstName', $event)\" />\n                        <mat-error *ngIf=\"hasError('firstName', 'required') && submitted\" >{{ 'error_message.err_first_name_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('firstName', 'pattern')\">{{ 'error_message.err_first_name_char_only' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('firstName', 'maxlength') && !hasError('firstName', 'pattern')\">{{ 'error_message.err_first_name_range' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                    <mat-label for=\"last-name\" class=\"matlabel\" [class.disabled]=\"spAdminData\">\n                        {{ 'shared_label.label_last_name' | translate }}\n                        <span class=\"required-star\" *ngIf=\"spAdminData === undefined\">* </span>\n                        <span class=\"required-star cannotEdit\" *ngIf=\"spAdminData\">{{\"shared_label.label_cannot_edit\"|translate}}</span>\n                    </mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\" [class.disabled]=\"spAdminData\" [ngClass]=\"addEditForm.get('lastName').hasError('pattern') && addEditForm.get('lastName').touched ? 'error-msg': ''\" >\n                        <input matInput autocomplete=\"off\" formControlName=\"lastName\" [readonly]=\"spAdminData\" (keypress)=\"charsOnly('lastName', $event)\" />\n                        <mat-error *ngIf=\"hasError('lastName', 'required') && submitted\">{{ 'error_message.err_last_name_required' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('lastName', 'pattern')\" >{{ 'error_message.err_last_name_char_only' | translate }}\n                        </mat-error>\n                        <mat-error *ngIf=\"hasError('lastName', 'maxlength') && !hasError('lastName', 'pattern')\" >{{ 'error_message.err_last_name_range' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <mat-label for=\"spa-email\" class=\"matlabel\">\n                        {{ 'shared_label.label_email_id' | translate }}\n                        <span class=\"required-star\">**</span>\n                    </mat-label>\n                    <mat-form-field appearance=\"fill\" class=\"formfield-control\">\n                        <input matInput autocomplete=\"off\" formControlName=\"email\" [maxLength]=\"320\" />\n                        <mat-error *ngIf=\"hasError('email','email')\">\n                            {{'error_message.err_invalid_email'|translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                    <mat-label for=\"sp-contact-person-phone\" class=\"matlabel\">\n                        {{ 'shared_label.label_phone_no' | translate }}\n                        <span class=\"required-star\">**</span>\n                    </mat-label>\n                    <app-tel-input formControlName=\"phoneNo\"></app-tel-input>\n                    <mat-error class=\"mt-2\" *ngIf=\"hasError('phoneNo', 'phoneNumberInvalid')\">\n                        {{\"errors.err_invalid_phone_no\" | translate}}\n                    </mat-error>\n                </div>\n            </div>\n            <mat-error class=\"email-error\" *ngIf=\"submitted && !addEditForm.getRawValue()?.email && !addEditForm.getRawValue()?.phoneNo\">\n                {{ \"manage_users_module.edituser.message1\" | translate }}\n            </mat-error>\n        </div>\n        <div class=\"\">\n            <div class=\"required-text\" style=\"margin-top: 0px !important; margin-left: 0px !important\">\n                <span>* {{ 'error_message.err_required' | translate }}</span>\n            </div>\n            <div style=\"margin-top: 10px !important\" class=\"email-phone-info-text\">\n                **{{ 'error_message.err_email_phone_mandatory' | translate }}\n            </div>\n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button type=\"button\" color=\"warn\" mat-flat-button class=\"fill-btn\" (click)=\"onClose()\">\n\t\t{{ 'buttons.btn_cancel' | translate }}\n\t</button>\n    <button type=\"button\" color=\"primary\" mat-flat-button class=\"fill-btn\" (click)=\"saveServiceProviderAdmin()\">\n\t\t{{ 'buttons.btn_save' | translate }}\n\t</button>\n</mat-dialog-actions>\n","import { Component, Inject, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { ServiceProvider } from \"../../manage-service-provider/service-provider.interface\";\nimport { DataTableManageAdminComponent } from \"../../../shared/data-table-manage-admin/data-table-manage-admin.component\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { AddEditSpAdminComponent } from \"../add-edit-sp-admin/add-edit-sp-admin.component\";\nimport {\n  ManageAdminStoreSelectors,\n  ManageAdminStoreState,\n} from \"../../../shared/store/manage-admin\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Subscription } from \"rxjs\";\nimport { SnackbarService } from \"@services/snackbar.service\";\nimport { environment } from \"src/environments/environment\";\nimport {SuperAdminService} from \"../../service/super-admin.service\";\n\n@Component({\n  selector: \"app-manage-admin\",\n  templateUrl: \"./manage-admin.component.html\",\n  styleUrls: [\"./manage-admin.component.scss\"],\n})\nexport class ManageAdminComponent implements OnInit, OnDestroy {\n  loadPage: boolean;\n  serviceProviderData: ServiceProvider;\n  endUrl: string;\n  idToShow: string;\n\n  @ViewChild(DataTableManageAdminComponent)\n  dataTableManageAdminComponent: DataTableManageAdminComponent;\n  activeUser: Subscription;\n  serviceProviderName;\n  adminClone = [];\n  adminCloneCopy = [];\n\n  constructor(\n    private dialogRef: MatDialogRef<ManageAdminComponent>,\n    private dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store$: Store<ManageAdminStoreState.ManageAdminState>,\n    private snackbar: SnackbarService,\n    private service: SuperAdminService\n  ) {}\n\n  ngOnInit() {\n    this.serviceProviderData = this.data.spData || {};\n    this.serviceProviderName = this.serviceProviderData?.companyName;\n    \n    this.endUrl = environment.dataApiUrl + 'service-providers/' +\n      this.serviceProviderData?.id + '/users/spa';\n    this.getSPACUsers();\n  }\n\n  doSubscriptionFormSelector() {\n    this.activeUser = this.store$\n      .pipe(select(ManageAdminStoreSelectors.selectActiveAdmins))\n      .subscribe((data) => {\n        if (data === 1) {\n          this.snackbar.openSnackBar(\"error_message.err_already_enabled_spa\", \"top\", \"center\", true);\n        } else {\n          this.dialog.open(AddEditSpAdminComponent, {\n            width: \"802px\",\n            maxWidth: \"95vw\",\n            data: { spAdmin: undefined, spId: this.serviceProviderData?.id },\n            backdropClass: \"backdropBackground\",\n            disableClose: true\n          });\n        }\n      });\n    this.activeUser.unsubscribe();\n  }\n\n  openAddAdminDialog() {\n    this.doSubscriptionFormSelector();\n  }\n  openEditAdminDialog(data) {\n    this.dialog.open(AddEditSpAdminComponent, {\n      width: \"802px\",\n      maxWidth: \"95vw\",\n      data: { spAdmin: data, spId: this.serviceProviderData?.id },\n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n  getSPACUsers() {\n    let url = environment.dataApiUrl + 'service-providers/' +\n    this.serviceProviderData?.id + '/users/spac';\n    this.service.getSPACloneUsers(url)\n        .subscribe((res:any) => {\n          if(res.status === 'OK') {\n            this.adminClone = res.data;\n            this.adminClone = this.adminClone.map(user => {\n              return {\n                ...user,\n                adminName: `${user.firstName} ${user.lastName}`,\n                email: user.email || \"\",\n                phoneNo: user.phoneNo || \"\"\n              };\n            });\n            this.adminCloneCopy = [...this.adminClone];\n          }\n    });\n\n  }\n  onSortChange(sortObject) {\n    let sort = JSON.parse(sortObject);\n    if (sort.direction === 'desc') {\n      this.adminClone = this.adminClone.sort((a, b) => {\n        if (a[sort.active] > b[sort.active]) return -1;\n        else if (a[sort.active] < b[sort.active]) return 1;\n        else return 0;\n      });\n    } else if (sort.direction === 'asc') {\n      this.adminClone = this.adminClone.sort((a, b) => {\n        if (a[sort.active] > b[sort.active]) return 1;\n        else if (a[sort.active] < b[sort.active]) return -1;\n        else return 0;\n      });\n    } else {\n      this.adminClone = [...this.adminCloneCopy];\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.activeUser) this.activeUser.unsubscribe();\n  }\n}\n","<mat-card class=\"dialog-header\">\n  <h1 mat-dialog-title>\n    {{ serviceProviderData[\"id\"] }} &nbsp;|&nbsp;\n    {{ \"super_admin.manage_admin.label_spa\" | translate }}\n    &nbsp;{{ \"super_admin.manage_admin.label_for_spa\" | translate }}\n    {{serviceProviderName}}\n  </h1>\n  <button mat-button mat-dialog-close class=\"me-3\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n\n<mat-dialog-content class=\"px-0\">\n  <div class=\"container-fluid\">\n    <app-data-table-manage-admin class=\"manage-admin-table custom-table\" [endUrl]=\"endUrl\"\n      (addAdminCallBack)=\"openAddAdminDialog()\" (editCallBack)=\"openEditAdminDialog($event)\"\n      source=\"SPA\"  (sortChange)=\"onSortChange($event)\"></app-data-table-manage-admin>\n    <app-data-table-cloned-view *ngIf=\"adminClone?.length\" class=\"manage-admin-table manage-cloneview-table custom-table\"\n                                [adminUsers]=\"adminClone\"></app-data-table-cloned-view>\n  </div>\n</mat-dialog-content>\n","import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {AddEditServiceProviderComponent} from \"src/app/super-admin/dialog/add-edit-service-provider/add-edit-service-provider.component\";\nimport {ManageAdminComponent} from \"src/app/super-admin/dialog/manage-admin/manage-admin.component\";\nimport {Store} from \"@ngrx/store\";\nimport {\n  ManageServiceProvideStoreActions,\n  ManageServiceProvideStoreSelectors,\n  ManageServiceProvideStoreState,\n} from \"../store/manage-service-provider\";\nimport {ServiceProvider} from \"./service-provider.interface\";\nimport {Observable, Subscription} from \"rxjs\";\nimport {LSColumn, LSColumnType, LSTableConfig, TableState,} from \"../../life-signals/_models/ls-column.model\";\nimport {ServiceProviderState} from \"../store/manage-service-provider/manage-service-provider.reducer\";\n\n@Component({\n  selector: \"app-manage-service-provider\",\n  templateUrl: \"./manage-service-provider.component.html\",\n  styleUrls: [\"./manage-service-provider.component.scss\"],\n})\nexport class ManageServiceProviderComponent implements OnInit, OnDestroy {\n  companySortEnabled = true;\n  contactPersonSortEnabled = false;\n  dataLength;\n  serviceProvider$: Observable<ServiceProviderState>;\n  serviceProviderData: ServiceProvider[];\n\n  columns: LSColumn[] = [\n    {\n      id: \"id\",\n      label: \"id\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      //labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"companyName\",\n      label: \"companyName\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      cellClass: [\"fw-bold\" ,\"font-size-16\"],\n      style: \"max-width: 450px; width: 450px;\",\n     \n    },\n    {\n      id: \"contactPerson\",\n      label: \"contactPerson\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [\"bold-name\"],\n      style: \"max-width: 300px; width: 300px;\",\n    },\n    {\n      id: \"email\",\n      label: \"email\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n    {\n      id: \"phoneNo\",\n      label: \"phoneNo\",\n      headerClass: [\"text-start\"],\n      sortable: true,\n      type: LSColumnType.TEXT,\n      labelClass: \"fw-bold\",\n      cellClass: [],\n    },\n  ];\n  config: LSTableConfig = {\n    id: \"manage-service-provider-table\",\n    rowSelectEnabled: false,\n    actions: {\n      header: {\n        class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n      },\n      show: true,\n      headerLabel: \"\",\n      class: [\"d-flex\", \"align-items-center\", \"justify-content-end\"],\n    },\n    page: {\n      pageSize: 10,\n      pageIndex: 0,\n    },\n    paginator: {\n      hide: false,\n      offline: true,\n    },\n    translateKey: \"manage-service-provider-table\",\n    translate: true,\n    tableState: TableState.DEFAULT\n  };\n  serviceProviderSub: Subscription;\n\n  constructor(\n    private dialog: MatDialog,\n    private store$: Store<ManageServiceProvideStoreState.ServiceProviderState>\n  ) {}\n\n  ngOnInit() {\n    this.getServiceProviders();\n    this.listServiceProviders();\n  }\n\n  getServiceProviders() {\n    this.store$.dispatch(\n        new ManageServiceProvideStoreActions.LoadServiceProviderRequestAction()\n    );\n  }\n\n  listServiceProviders() {\n    this.serviceProvider$ = this.store$.select(\n      ManageServiceProvideStoreSelectors.selectManageServiceProviderList\n    );\n    this.serviceProviderSub = this.serviceProvider$.subscribe((response) => {\n      this.config.tableState = <TableState>response?.tableState;\n        this.config.page.length = response?.SERVICE_PROVIDER_DATA?.length;\n        this.serviceProviderData = response?.SERVICE_PROVIDER_DATA?.map((x) => {\n          return {\n            ...x,\n            contactPerson: `${x.firstName} ${x.lastName}`,\n          };\n        });\n    });\n  }\n\n  trackBy(_: number, serviceProvider: ServiceProvider) {\n    return serviceProvider.companyName;\n  }\n\n  openAddServiceProviderDialog() {\n    this.dialog.open(AddEditServiceProviderComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      //  height: '650px',\n      data: { spData: undefined },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n  openEditServiceProvider(data) {\n    this.dialog.open(AddEditServiceProviderComponent, {\n      width: \"800px\",\n      maxWidth: \"95vw\",\n      // height: '550px',\n      data: { spData: data },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    }).afterClosed().subscribe((data) => {\n      setTimeout(() => this.getServiceProviders(), 2000);\n    })\n  }\n  openManageAdmin(data) {\n    this.dialog.open(ManageAdminComponent, {\n      maxWidth: \"100vw\",\n      //  maxHeight: '100vh',\n      // height: '100%',\n      width: \"95vw\",\n      //  height: '50vw',\n      data: { spData: data },\n      \n      backdropClass: \"backdropBackground\",\n      disableClose: true,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.serviceProviderSub) this.serviceProviderSub.unsubscribe();\n  }\n}\n","<div class=\"mt-3 mx-2 service-table admin-table-layout-pagination custom-table head-border\">\n    <ls-table [config]=\"config\" [data]=\"serviceProviderData\" [columns]=\"columns\" [tableSort]=\"true\">\n        <ng-template lsWidgetName=\"companyName\" let-row>\n            <span [matTooltip]=\"row.companyName\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.companyName.length < 40\">\n           {{row.companyName}}\n      </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"contactPerson\" let-row>\n            <span [matTooltip]=\"row.contactPerson\" matTooltipPosition=\"below\" class=\"text-truncate d-block\" [matTooltipDisabled]=\"row.contactPerson.length < 40\">\n          {{row.contactPerson}}\n      </span>\n        </ng-template>\n        <ng-template lsWidgetName=\"email\" let-row>\n            {{row?.email || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"phoneNo\" let-row>\n            {{row?.phoneNo || \"-\"}}\n        </ng-template>\n        <ng-template lsWidgetName=\"actionsHeading\" let-row>\n            <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"openAddServiceProviderDialog()\">\n        <mat-icon class=\"justify-content-center\">add</mat-icon>\n        {{ \"buttons.btn_add_sp\" | translate }}\n      </button>\n        </ng-template>\n        <ng-template lsWidgetName=\"actions\" let-row>\n            <button mat-mini-fab color=\"primary\" (click)=\"openEditServiceProvider(row)\" class=\"d-flex justify-content-center align-items-center btn-boxed btn-no-shadow me-4\">\n        <mat-icon class=\"justify-content-center\"> edit</mat-icon>\n      </button>\n            <button type=\"button\" mat-flat-button color=\"primary\" class=\"cursor-pointer me-3\" (click)=\"openManageAdmin(row)\">\n        {{ \"buttons.btn_manage_admin\" | translate }}\n      </button>\n        </ng-template>\n    </ls-table>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport {\n  AddEditServiceProviderResponse,\n  ServiceProviderResponse,\n} from \"../manage-service-provider/service-provider.interface\";\nimport { environment } from \"src/environments/environment\";\nimport {UserResponse} from \"../../interfaces/user.interface\";\nimport {catchError} from \"rxjs/operators\";\nimport {throwError} from \"rxjs\";\n\n@Injectable()\nexport class SuperAdminService {\n  constructor(\n    private httpClient: HttpClient,\n  ) {}\n\n  getAllServiceProvider() {\n    const authHeaders = new HttpHeaders({\n      \"X-Skip-Interceptor\": \"\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    });\n    return this.httpClient\n      .get<ServiceProviderResponse>(\n        environment.dataApiUrl + 'service-providers/',\n        { headers: authHeaders }\n      );\n  }\n\n  addServiceProvider(requestBody) {\n    return this.httpClient\n      .post<AddEditServiceProviderResponse>(\n        environment.dataApiUrl + 'service-providers/',\n        requestBody\n      );\n  }\n\n  updateServiceProvider(requestBody) {\n    return this.httpClient\n      .put<AddEditServiceProviderResponse>(\n        environment.dataApiUrl + 'service-providers/',\n        requestBody\n      );\n  }\n  getSPACloneUsers(url) {\n    return this.httpClient.get(url).pipe(catchError(this.handleError));\n  }\n  handleError(error: any) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import * as ManageServiceProvideStoreActions from \"./manage-service-provider.actions\";\nimport * as ManageServiceProvideStoreSelectors from \"./manage-service-provider.selector\";\nimport * as ManageServiceProvideStoreState from \"./manage-service-provider.reducer\";\n\nexport {\n  ManageServiceProvideStoreActions,\n  ManageServiceProvideStoreSelectors,\n  ManageServiceProvideStoreState,\n};\n","import { Action } from \"@ngrx/store\";\nimport { ServiceProvider } from \"../../manage-service-provider/service-provider.interface\";\n\nexport enum ManageSpActionTypes {\n  LOAD_SERVICE_PROVIDER_ACTION = \"[SERVICEPROVIDER] Load Service Provider Request\",\n  LOAD_SERVICE_PROVIDER_SUCCESS = \"[SERVICEPROVIDER] Load Service Provider Success\",\n  LOAD_SERVICE_PROVIDER_FAILURE = \"[SERVICEPROVIDER] Load Service Provider Failure\",\n  SAVE_SERVICE_PROVIDER_ACTION = \"[SERVICEPROVIDER] Save Service Provider\",\n  SAVE_SERVICE_PROVIDER_SUCCESS = \"[SERVICEPROVIDER] Save Service Provider Success\",\n  AFTER_SAVE_SERVICE_PROVIDER_SUCCESS = \"[SERVICEPROVIDER] After Save Service Provider Success\",\n  SAVE_SERVICE_PROVIDER_FAILURE = \"[SERVICEPROVIDER] Save Service Provider Failure\",\n  AFTER_SAVE_SERVICE_PROVIDER_FAILURE = \"[SERVICEPROVIDER] After Save Service Provider Failure\",\n  UPDATE_SERVICE_PROVIDER_ACTION = \"[SERVICEPROVIDER] Update Service Provider\",\n  UPDATE_SERVICE_PROVIDER_SUCCESS = \"[SERVICEPROVIDER] Update Service Provider Success\",\n  AFTER_UPDATE_SERVICE_PROVIDER_SUCCESS = \"[SERVICEPROVIDER] After Update Service Provider Success\",\n  UPDATE_SERVICE_PROVIDER_FAILURE = \"[SERVICEPROVIDER] Update Service Provider Failure\",\n  AFTER_UPDATE_SERVICE_PROVIDER_FAILURE = \"[SERVICEPROVIDER] After Update Service Provider Failure\",\n}\n\nexport class LoadServiceProviderRequestAction implements Action {\n  readonly type = ManageSpActionTypes.LOAD_SERVICE_PROVIDER_ACTION;\n}\n\nexport class LoadServiceProviderSuccessAction implements Action {\n  readonly type = ManageSpActionTypes.LOAD_SERVICE_PROVIDER_SUCCESS;\n  constructor(public payload: ServiceProvider[]) {}\n}\n\nexport class LoadServiceProviderFailureAction implements Action {\n  readonly type = ManageSpActionTypes.LOAD_SERVICE_PROVIDER_FAILURE;\n  constructor(public payload: string) {}\n}\n\nexport class SaveServiceProviderAction implements Action {\n  readonly type = ManageSpActionTypes.SAVE_SERVICE_PROVIDER_ACTION;\n  constructor(public payload: ServiceProvider) {}\n}\n\nexport class SaveServiceProviderSuccessAction implements Action {\n  readonly type = ManageSpActionTypes.SAVE_SERVICE_PROVIDER_SUCCESS;\n  constructor(public payload: ServiceProvider) {}\n}\n\nexport class SaveServiceProviderFailureAction implements Action {\n  readonly type = ManageSpActionTypes.SAVE_SERVICE_PROVIDER_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class UpdateServiceProviderAction implements Action {\n  readonly type = ManageSpActionTypes.UPDATE_SERVICE_PROVIDER_ACTION;\n  constructor(public payload: ServiceProvider) {}\n}\n\nexport class UpdateServiceProviderSuccessAction implements Action {\n  readonly type = ManageSpActionTypes.UPDATE_SERVICE_PROVIDER_SUCCESS;\n  constructor(public payload: ServiceProvider) {}\n}\n\nexport class UpdateServiceProviderFailureAction implements Action {\n  readonly type = ManageSpActionTypes.UPDATE_SERVICE_PROVIDER_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class AfterSaveServiceProviderSuccess implements Action {\n  readonly type = ManageSpActionTypes.AFTER_SAVE_SERVICE_PROVIDER_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterSaveServiceProviderFailure implements Action {\n  readonly type = ManageSpActionTypes.AFTER_SAVE_SERVICE_PROVIDER_FAILURE;\n  constructor() {}\n}\n\nexport class AfterUpdateServiceProviderSuccess implements Action {\n  readonly type = ManageSpActionTypes.AFTER_UPDATE_SERVICE_PROVIDER_SUCCESS;\n  constructor() {}\n}\n\nexport class AfterUpdateServiceProviderFailure implements Action {\n  readonly type = ManageSpActionTypes.AFTER_UPDATE_SERVICE_PROVIDER_FAILURE;\n  constructor() {}\n}\n\nexport type ServiceProviderActions =\n  | LoadServiceProviderRequestAction\n  | LoadServiceProviderSuccessAction\n  | LoadServiceProviderFailureAction\n  | SaveServiceProviderAction\n  | SaveServiceProviderSuccessAction\n  | SaveServiceProviderFailureAction\n  | UpdateServiceProviderAction\n  | UpdateServiceProviderSuccessAction\n  | UpdateServiceProviderFailureAction\n  | AfterSaveServiceProviderSuccess\n  | AfterSaveServiceProviderFailure\n  | AfterUpdateServiceProviderSuccess\n  | AfterUpdateServiceProviderFailure;\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  catchError,\n  map,\n  mergeMap,\n  startWith,\n  switchMap,\n} from \"rxjs/operators\";\nimport { SuperAdminService } from \"../../service/super-admin.service\";\nimport * as ManageServiceProviderActions from \"./manage-service-provider.actions\";\nimport { of as observableOf } from \"rxjs\";\nimport {\n  SaveServiceProviderFailureAction,\n  SaveServiceProviderSuccessAction,\n  LoadServiceProviderFailureAction,\n  LoadServiceProviderSuccessAction,\n  UpdateServiceProviderFailureAction,\n  UpdateServiceProviderSuccessAction,\n} from \"./manage-service-provider.actions\";\n\n@Injectable()\nexport class ManageServiceProviderEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private superAdminService: SuperAdminService\n  ) {}\n\n  loadServiceProvider = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageServiceProviderActions.LoadServiceProviderRequestAction>(\n        ManageServiceProviderActions.ManageSpActionTypes\n          .LOAD_SERVICE_PROVIDER_ACTION\n      ),\n      startWith(\n        new ManageServiceProviderActions.LoadServiceProviderRequestAction()\n      ),\n      mergeMap((action) =>\n        this.superAdminService.getAllServiceProvider().pipe(\n          map(\n            (serviceProviderRes) =>\n              new LoadServiceProviderSuccessAction(serviceProviderRes.data)\n          ),\n          catchError((error) =>\n            observableOf(new LoadServiceProviderFailureAction(error))\n          )\n        )\n      )\n    );\n  });\n\n  saveServiceProvider = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageServiceProviderActions.SaveServiceProviderAction>(\n        ManageServiceProviderActions.ManageSpActionTypes\n          .SAVE_SERVICE_PROVIDER_ACTION\n      ),\n      switchMap(\n        (\n          addServiceProvider: ManageServiceProviderActions.SaveServiceProviderAction\n        ) => {\n          return this.superAdminService\n            .addServiceProvider(addServiceProvider.payload)\n            .pipe(\n              map(\n                (addServiceProviderRes) =>\n                  new SaveServiceProviderSuccessAction(\n                    addServiceProviderRes.data\n                  )\n              ),\n              catchError((error) =>\n                observableOf(new SaveServiceProviderFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n\n  updateServiceProvider = createEffect(() => {\n    return this.actions$.pipe(\n      ofType<ManageServiceProviderActions.UpdateServiceProviderAction>(\n        ManageServiceProviderActions.ManageSpActionTypes\n          .UPDATE_SERVICE_PROVIDER_ACTION\n      ),\n      switchMap(\n        (\n          updateServiceProvider: ManageServiceProviderActions.UpdateServiceProviderAction\n        ) => {\n          return this.superAdminService\n            .updateServiceProvider(updateServiceProvider.payload)\n            .pipe(\n              map(\n                (updateServiceProviderRes) =>\n                  new UpdateServiceProviderSuccessAction(\n                    updateServiceProviderRes.data\n                  )\n              ),\n              catchError((error) =>\n                observableOf(new UpdateServiceProviderFailureAction(error))\n              )\n            );\n        }\n      )\n    );\n  });\n}\n","import { ServiceProvider } from \"../../manage-service-provider/service-provider.interface\";\nimport {\n  ManageSpActionTypes,\n  ServiceProviderActions,\n} from \"./manage-service-provider.actions\";\nimport {TableState} from \"../../../life-signals/_models/ls-column.model\";\nimport {ActionTypes} from \"../../../active-patients/store/active-patients.actions\";\n\nexport interface ServiceProviderState {\n  SERVICE_PROVIDER_DATA: ServiceProvider[];\n  error: string;\n  save_service_provider_success: ServiceProvider;\n  save_service_provider_error: any;\n  tableState?: string;\n}\n\nconst initialState: ServiceProviderState = {\n  SERVICE_PROVIDER_DATA: [],\n  error: \"\",\n  save_service_provider_success: null,\n  save_service_provider_error: \"\",\n  tableState: TableState.DEFAULT\n};\n\nexport const serviceProviderFeatureKey = \"serviceprovider\";\n\nexport function serviceProviderReducer(\n  state: ServiceProviderState = initialState,\n  action: ServiceProviderActions\n) {\n  switch (action.type) {\n    case ManageSpActionTypes.LOAD_SERVICE_PROVIDER_ACTION: {\n      return {\n        ...state,\n        error: null,\n        tableState: TableState.LOADING,\n      };\n    }\n    case ManageSpActionTypes.LOAD_SERVICE_PROVIDER_SUCCESS:\n      return {\n        ...state,\n        tableState: TableState.SUCCESS,\n        SERVICE_PROVIDER_DATA: action.payload,\n      };\n\n    case ManageSpActionTypes.LOAD_SERVICE_PROVIDER_FAILURE:\n      return {\n        ...state,\n        tableState: TableState.FAILURE,\n        error: action.payload,\n      };\n    case ManageSpActionTypes.SAVE_SERVICE_PROVIDER_ACTION:\n      return {\n        ...state,\n        save_service_provider_success: null,\n      };\n    case ManageSpActionTypes.SAVE_SERVICE_PROVIDER_SUCCESS:\n      return {\n        ...state,\n        save_service_provider_success: action.payload,\n        save_service_provider_error: \"\",\n        SERVICE_PROVIDER_DATA: [\n          ...state?.SERVICE_PROVIDER_DATA,\n          action.payload,\n        ],\n      };\n\n    case ManageSpActionTypes.AFTER_SAVE_SERVICE_PROVIDER_SUCCESS: {\n      return {\n        ...state,\n        save_service_provider_success: null,\n        save_service_provider_error: \"\",\n      };\n    }\n\n    case ManageSpActionTypes.SAVE_SERVICE_PROVIDER_FAILURE:\n      return {\n        ...state,\n        save_service_provider_error: action.payload,\n      };\n\n    case ManageSpActionTypes.AFTER_SAVE_SERVICE_PROVIDER_FAILURE:\n      return {\n        ...state,\n        save_service_provider_error: \"\",\n        save_service_provider_success: null,\n      };\n\n    case ManageSpActionTypes.UPDATE_SERVICE_PROVIDER_SUCCESS:\n      const updatedSpData = state?.SERVICE_PROVIDER_DATA.map((spData) => {\n        return spData.id === action.payload.id ? action.payload : spData;\n      });\n\n      return {\n        ...state,\n        save_service_provider_error: \"\",\n        error: \"\",\n        save_service_provider_success: action.payload,\n        SERVICE_PROVIDER_DATA: updatedSpData,\n      };\n\n    case ManageSpActionTypes.AFTER_UPDATE_SERVICE_PROVIDER_SUCCESS:\n      return {\n        ...state,\n        save_service_provider_success: null,\n        save_service_provider_error: \"\",\n      };\n\n    case ManageSpActionTypes.UPDATE_SERVICE_PROVIDER_FAILURE:\n      return {\n        ...state,\n        save_service_provider_error: action.payload,\n      };\n\n    case ManageSpActionTypes.AFTER_UPDATE_SERVICE_PROVIDER_FAILURE:\n      return {\n        ...state,\n        save_service_provider_error: \"\",\n        save_service_provider_success: null,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport {\n  serviceProviderFeatureKey,\n  ServiceProviderState,\n} from \"./manage-service-provider.reducer\";\n\nconst getManageServiceProviderState =\n  createFeatureSelector<ServiceProviderState>(serviceProviderFeatureKey);\n\nexport const selectManageServiceProviderList = createSelector(\n  getManageServiceProviderState,\n  (state: ServiceProviderState) => state\n);\n\nexport const selectManageServiceProviderError = createSelector(\n  getManageServiceProviderState,\n  (state: ServiceProviderState) => state?.error\n);\n\nexport const addServiceProviderSuccess = createSelector(\n  getManageServiceProviderState,\n  (state: ServiceProviderState) => state?.save_service_provider_success\n);\n\nexport const addServiceProviderFailure = createSelector(\n  getManageServiceProviderState,\n  (state: ServiceProviderState) => state?.save_service_provider_error\n);\n\nexport const updateServiceProviderSuccess = createSelector(\n  getManageServiceProviderState,\n  (state: ServiceProviderState) => state?.save_service_provider_success\n);\n\nexport const updateServiceProviderFailure = createSelector(\n  getManageServiceProviderState,\n  (state: ServiceProviderState) => state?.save_service_provider_error\n);\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { RootComponent } from \"../shared/root/root.component\";\nimport { ManageServiceProviderComponent } from \"./manage-service-provider/manage-service-provider.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: RootComponent,\n    children: [\n      {\n        path: \"\",\n        component: ManageServiceProviderComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [\"SA\"] },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SuperAdminRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuperAdminRoutingModule } from \"./super-admin-routing.module\";\nimport { ManageServiceProviderComponent } from \"./manage-service-provider/manage-service-provider.component\";\nimport { SortModule } from \"../core/directives/sort.module\";\nimport { AddEditServiceProviderComponent } from \"./dialog/add-edit-service-provider/add-edit-service-provider.component\";\n\nimport { SharedModule } from \"../shared/shared.module\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgxIntlTelInputModule } from \"ngx-intl-tel-input\";\nimport { DialogsModule } from \"../dialogs/dialogs.module\";\nimport { AddEditSpAdminComponent } from \"./dialog/add-edit-sp-admin/add-edit-sp-admin.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { I18nModule } from \"../i18n/i18n.module\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromManageServiceProvideReducer from \"./store/manage-service-provider/manage-service-provider.reducer\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { ManageServiceProviderEffects } from \"./store/manage-service-provider/manage-service-provider.effects\";\nimport { SuperAdminService } from \"./service/super-admin.service\";\nimport { ManageAdminComponent } from \"./dialog/manage-admin/manage-admin.component\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { KeycloakBearerInterceptor } from \"keycloak-angular\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { LifeSignalsModule } from \"../life-signals/life-signals.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport {ErrorInterceptor} from \"../interceptors/error.interceptor\";\n\n@NgModule({\n  declarations: [\n    ManageServiceProviderComponent,\n    AddEditServiceProviderComponent,\n    AddEditSpAdminComponent,\n    ManageAdminComponent,\n  ],\n  imports: [\n    CommonModule,\n    SuperAdminRoutingModule,\n    SortModule,\n    MatIconModule,\n    MatDialogModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    NgxIntlTelInputModule,\n    MatCheckboxModule,\n    DialogsModule,\n    I18nModule,\n    MatTableModule,\n    MatSortModule,\n    StoreModule.forFeature(\n      fromManageServiceProvideReducer.serviceProviderFeatureKey,\n      fromManageServiceProvideReducer.serviceProviderReducer\n    ),\n    EffectsModule.forFeature([ManageServiceProviderEffects]),\n    MatPaginatorModule,\n    LifeSignalsModule,\n    MatButtonModule,\n    MatCardModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: KeycloakBearerInterceptor,\n      multi: true,\n    },\n    SuperAdminService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ],\n})\nexport class SuperAdminModule {}\n"],"names":[],"sourceRoot":"webpack:///"}